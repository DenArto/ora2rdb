stages:
  - prepare
  - build_docs
  - build_and_test
  - deploy_docs
  - deploy
  - publish

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
  paths:
    - .m2/repository/
    - target/

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  RELEASE_HUB_PROJECT: ora2rdb
  CI_URL: ${CI_PROJECT_URL}/pipelines/${CI_PIPELINE_ID}
  TAG_BRANCH: master
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode -U"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  http_proxy: http://git.red-soft.biz:3128
  https_proxy: http://git.red-soft.biz:3128
  no_proxy: localhost,172.0.0.0/8,127.0.0.0/8,.red-soft.biz

.prepare_template: &prepare_template
  tags:
    - docker
    - builder
    - x86_64
  stage: prepare
  image: openjdk:8-jdk-alpine
  script:
    - mkdir .ci
    - echo ${VERSION} > .ci/version
    - echo ${BRANCH} > .ci/branch
    - echo ${CONTEXT} > .ci/context
    - mvn $MAVEN_CLI_OPTS releasehub-build:register -Pdeploy-internal -DreleaseHubBuildOnlyCreate -DreleaseHubBuildVersion=$VERSION -DreleaseHubBuildContext=${CONTEXT} -DreleaseHubBuildBranch=${BRANCH} -DreleaseHubBuildCommit=${CI_COMMIT_SHA} -DreleaseHubBuildCIURL=${CI_URL}
  artifacts:
    expire_in: 1 day
    paths:
      - .ci/

prepare:snapshot:
  <<: *prepare_template
  before_script:
    - apk --update add maven
    - REAL_VERSION=$(mvn $MAVEN_CLI_OPTS -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)
    - VERSION=$(mvn $MAVEN_CLI_OPTS -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec|sed 's/\(.*\)-.*/\1/')
    - "[ \"$REAL_VERSION\" = \"${VERSION}-SNAPSHOT\" ] || (echo Stopping build. Expected ${VERSION}-SNAPSHOT version. Create tag for this commit!; exit 1)"
    - mvn $MAVEN_CLI_OPTS -q --non-recursive releasehub-build:buildno -Pdeploy-internal -DreleaseHubBuildVersion=${VERSION}-SNAPSHOT
    - export BUILDNO=$(mvn $MAVEN_CLI_OPTS -q --non-recursive releasehub-build:buildno -Pdeploy-internal -DreleaseHubBuildVersion=${VERSION}-SNAPSHOT)
    - export VERSION=${VERSION}-SNAPSHOT.${BUILDNO}
    - export BRANCH=${CI_COMMIT_REF_NAME}
    - export CONTEXT=commit
  except:
    - tags

prepare:release:
  <<: *prepare_template
  before_script:
    - apk --update add maven
    - VERSION_IN_POM=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)
    - export VERSION=$(echo ${CI_COMMIT_TAG}|sed 's/v//')
    - export BRANCH=${TAG_BRANCH}
    - export CONTEXT=tag
    - "[ \"$VERSION\" = \"$VERSION_IN_POM\" ] || (echo Project version in pom.xml and tag do not match!; exit 1)"
  only:
    - tags

build_docs:
  tags:
    - docker
    - builder
    - x86_64
  stage: build_docs
  artifacts:
    expire_in: 1 day
    paths:
      - dist/
  variables:
    SPHINXBUILD: sphinx-build
  image: registry.red-soft.biz:5000/docker-images/3rdparty/texlive:TL2024-2024-11-17-full-sphinx
  before_script:
    - /venv/bin/pip3 install sphinxnotes-any sphinxnotes.comboroles
    - mkdir -p dist/guide
  script:
    - cd guide/ORA2RDB_Guide
    - make latexpdf
    - cp build/latex/ORA2RDB_Guide.pdf ../../dist/guide/ORA2RDB_Guide.pdf

build_and_test:
  tags:
    - docker
    - tester
    - x86_64
  stage: build_and_test
  variables:
    JAVA_HOME: /usr/java11
    MAVEN_VERSION: 3.8.8
    M2_HOME: /opt/apache-maven-${MAVEN_VERSION}/
  image:
    name: registry.red-soft.biz:5000/docker-images/rdbbuildenv:rdb5-8
  before_script:
    - echo proxy=$http_proxy >> /etc/yum.conf
    - yum install -y expect java-11-openjdk git $EXTRA_DEPENDENCIES
    - yum install -y https://dl.min.io/client/mc/release/linux-amd64/archive/mcli-20210613174822.0.0.x86_64.rpm
    - pushd /opt
    - wget https://dlcdn.apache.org/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz
    - tar xzf apache-maven-${MAVEN_VERSION}-bin.tar.gz
    - popd
    - export PATH=${M2_HOME}/bin:${PATH}
    - export VERSION=`cat .ci/version`
    - ln -s `update-alternatives --display jre_11_openjdk | sed -n '2p;3q' | awk -F\" '{split($1, v, " ");printf("%s", v[5])}'` /usr/java11
  script:
    - git submodule update --init
    - mvn $MAVEN_CLI_OPTS -f "${CI_PROJECT_DIR}"/pom.xml test -Pdeploy-internal -DreleaseHubBuildVersion=$VERSION  -DfailIfNoTests=false

deploy_docs:
  tags:
    - docker
    - builder
    - x86_64
  stage: deploy_docs
  image: registry.red-soft.biz:5000/utils/red-release-manager/client:master
  before_script:
    - export VERSION=`cat .ci/version`
  script:
    - TS=$(date '+%Y%M%d%H%M%S')
    - relmanager_client -1 addartifact ${RELEASE_HUB_PROJECT} ${VERSION} ru.redsoft.ora2rdb:ORA2RDB_Guide:${VERSION}-${TS}:pdf dist/guide/ORA2RDB_Guide.pdf

.deploy_template_jdk11: &deploy_template_jdk11
  tags:
    - docker
    - builder
    - x86_64
  stage: deploy
  variables:
    MAVEN_VERSION: 3.8.8
    M2_HOME: /opt/apache-maven-${MAVEN_VERSION}/
  image:
    name: openjdk:11-jdk-buster
    entrypoint: []
  before_script:
    - apt update -y
    - apt install ca-certificates-java -y
    - apt update -y
    - pushd /opt
    - wget https://dlcdn.apache.org/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz
    - tar xzf apache-maven-${MAVEN_VERSION}-bin.tar.gz
    - popd
    - export PATH=${M2_HOME}/bin:${PATH}
    - export VERSION=`cat .ci/version`
    - export BRANCH=`cat .ci/branch`
    - export CONTEXT=`cat .ci/context`

deploy_jdk11:internal:
  <<: *deploy_template_jdk11
  stage: deploy
  script:
    - mvn $MAVEN_CLI_OPTS deploy -Pdeploy-internal -Dmaven.test.skip.exec -DreleaseHubBuildVersion=$VERSION

publish:
  tags:
    - docker
    - builder
    - x86_64
  stage: publish
  variables:
    MAVEN_VERSION: 3.8.8
    M2_HOME: /opt/apache-maven-${MAVEN_VERSION}/
  image:
    name: openjdk:11-jdk-buster
    entrypoint: []
  before_script:
    - apt update -y
    - apt install ca-certificates-java -y
    - apt update -y
    - pushd /opt
    - wget https://dlcdn.apache.org/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz
    - tar xzf apache-maven-${MAVEN_VERSION}-bin.tar.gz
    - popd
    - export PATH=${M2_HOME}/bin:${PATH}
    - export VERSION=`cat .ci/version`
    - export BRANCH=`cat .ci/branch`
    - export CONTEXT=`cat .ci/context`
  script:
    - mvn $MAVEN_CLI_OPTS --non-recursive releasehub-build:publish -Pdeploy-internal -DreleaseHubBuildVersion=$VERSION
