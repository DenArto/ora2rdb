--------------------------------------------------------
--  DDL for Sequence ABANDONEDREASON_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ABANDONEDREASON_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 281 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ACTIVITY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ACTIVITY_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ALTGOODSGROUP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ALTGOODSGROUP_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ALTGOODSGROUPTYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ALTGOODSGROUPTYPE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ANYDATA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ANYDATA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 75831 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence APPMODULE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."APPMODULE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence APPOBJPROP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."APPOBJPROP_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1981 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence APPOBJ_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."APPOBJ_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 481 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence APPOINTMENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."APPOINTMENT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence AUCTIONBID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."AUCTIONBID_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 8391 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence AUCTIONLOG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."AUCTIONLOG_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BANKGUARANTEEDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."BANKGUARANTEEDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BANKGUARANTEEREFDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."BANKGUARANTEEREFDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BANKGUARANTEEREFREASON_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."BANKGUARANTEEREFREASON_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BANK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."BANK_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 4461 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BUDGCODE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."BUDGCODE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 11881 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BUDGETLINE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."BUDGETLINE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 64431 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BUDGET_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."BUDGET_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BUDGETSTAGE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."BUDGETSTAGE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CACHE_LIST_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CACHE_LIST_SEQ"  MINVALUE 1 MAXVALUE 999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CAVILDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CAVILDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CAVILTYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CAVILTYPE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CERTINTERCHANGEREQUEST_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CERTINTERCHANGEREQUEST_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CERTREQUEST_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CERTREQUEST_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CERTREVOKEREQUEST_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CERTREVOKEREQUEST_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CLAIMDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CLAIMDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 241 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CLAIMPAYFACT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CLAIMPAYFACT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CLAIMPENALTYCHANGEDOCINFO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CLAIMPENALTYCHANGEDOCINFO_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CLASSOPER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CLASSOPER_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CLIENTOBJECTCOMMENTS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CLIENTOBJECTCOMMENTS_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CLIENTOBJECT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CLIENTOBJECT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1041 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CLNDDAY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CLNDDAY_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 2201 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CLNDTYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CLNDTYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CMPDISCUSSION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CMPDISCUSSION_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 291 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CMPQUALREQ_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CMPQUALREQ_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CODETYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CODETYPE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence COMMEMBER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."COMMEMBER_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 24541 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence COMMISSION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."COMMISSION_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 4421 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence COMPLAINTDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."COMPLAINTDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CONFCONCLUSIONCONTRACT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CONFCONCLUSIONCONTRACT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CONPAYFACT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CONPAYFACT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 92681 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CONSOLIDDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CONSOLIDDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 261 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CONSTRUCTION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CONSTRUCTION_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CONTRACTCARDDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CONTRACTCARDDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 281 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CONTRACTDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CONTRACTDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 86121 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CONTRACTEXECDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CONTRACTEXECDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 8221 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CONTRACTREASON_DOCLINES_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CONTRACTREASON_DOCLINES_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CONTRACTREASON_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CONTRACTREASON_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 801 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CONTRACTTEMPLATEDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CONTRACTTEMPLATEDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 17361 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CONTYPEATTACH_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CONTYPEATTACH_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CONTYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CONTYPE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CRLFILE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CRLFILE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CRLPOINT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CRLPOINT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CURHISTORY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."CURHISTORY_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DATAOBJECTCHANGELOG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DATAOBJECTCHANGELOG_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DATASOURCE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DATASOURCE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DAYVERSION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DAYVERSION_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DBCONNECT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DBCONNECT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DBCONSTRAINT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DBCONSTRAINT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 321 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DECREASON_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DECREASON_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DELIVERYBASIS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DELIVERYBASIS_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DESCGROUP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DESCGROUP_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DESCRIPTIONCACHE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DESCRIPTIONCACHE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 22241 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DESCRIPTION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DESCRIPTION_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 281 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEVIATIONFACTFOUNDATION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DEVIATIONFACTFOUNDATION_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DIGEST_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DIGEST_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DIGESTSIGN_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DIGESTSIGN_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCACTION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCACTION_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1921 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCATTACHEX_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCATTACHEX_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 330981 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCATTACH_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCATTACH_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCCATEGORY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCCATEGORY_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCCLASS_DISPSTATUS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCCLASS_DISPSTATUS_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCCOMMENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCCOMMENT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 367791 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCCUSTOMFIELDS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCCUSTOMFIELDS_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCDIGESTRULE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCDIGESTRULE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 141 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCEVENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCEVENT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 5021 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCEVERRLOG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCEVERRLOG_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCGROUP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCGROUP_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 70 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCJOURNAL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCJOURNAL_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 3216711 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCREQ_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCREQ_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCRETENTION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCRETENTION_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCRETENTIONSTATITEMS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCRETENTIONSTATITEMS_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCSELECT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCSELECT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 261 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCSTATUS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCSTATUS_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 781 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCUMENTREPORTS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCUMENTREPORTS_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 161 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOCUMENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOCUMENT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 308041 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOMEN_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."DOMEN_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence EQUALITYCODES_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."EQUALITYCODES_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence EQUALITY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."EQUALITY_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ESCHECKRULE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ESCHECKRULE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ESTIMATE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ESTIMATE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 4161 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ETPATTACH_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ETPATTACH_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 9551 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ETP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ETP_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ETPTYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ETPTYPE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence FACTDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."FACTDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 31891 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence FACTDOCTYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."FACTDOCTYPE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence FETCHMODE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."FETCHMODE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence FGROUPATTACH_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."FGROUPATTACH_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence FGROUPHEADER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."FGROUPHEADER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 261 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence FGROUP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."FGROUP_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 581 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence FINSRCSATISFY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."FINSRCSATISFY_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence FINSRC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."FINSRC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 161 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence FORMATCONVERTER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."FORMATCONVERTER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence FUNCAT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."FUNCAT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence FUNUNIT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."FUNUNIT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 681 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GCREGISTER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GCREGISTER_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GENERATION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GENERATION_SEQ"  MINVALUE 1 MAXVALUE 999999999999999 INCREMENT BY 1 START WITH 1447443 CACHE 100 ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GOODSBANGOODSOKPD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GOODSBANGOODSOKPD_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GOODSBANPURCHASEMODE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GOODSBANPURCHASEMODE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GOODSBAN_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GOODSBAN_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GOODSBRANCH_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GOODSBRANCH_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GOODSDOCDETAIL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GOODSDOCDETAIL_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 301741 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GOODSGROUPPURCHASEMODE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GOODSGROUPPURCHASEMODE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 201 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GOODSGROUP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GOODSGROUP_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 48901 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GOODSOKDPCOUNTRYPREF_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GOODSOKDPCOUNTRYPREF_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GOODSOKDPPURCHASEMODE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GOODSOKDPPURCHASEMODE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GOODSOKDP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GOODSOKDP_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GOODSOKPDCOUNTRYPREF_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GOODSOKPDCOUNTRYPREF_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GOODSOKPDPURCHASEMODE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GOODSOKPDPURCHASEMODE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GOODSOKPD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GOODSOKPD_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 56521 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GOODSOKVED_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GOODSOKVED_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 4861 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GOODSPRICE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GOODSPRICE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GOODS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GOODS_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GRANTINVESTMENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GRANTINVESTMENT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GROUPPROP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."GROUPPROP_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence HISTORYMODIFY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."HISTORYMODIFY_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence INDUSTRYCODE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."INDUSTRYCODE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence INSTITUTIONLINE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."INSTITUTIONLINE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence INTERBUDGET_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."INTERBUDGET_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence INVOICEDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."INVOICEDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 201 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence JAVACLASS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."JAVACLASS_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KBKLINEFIT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."KBKLINEFIT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KLADR_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."KLADR_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence KLADRSTREET_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."KLADRSTREET_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence LEDGER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."LEDGER_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence LIABILITYCREDENTIAL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."LIABILITYCREDENTIAL_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence LIABILITYEXPENSE_DOCLINES_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."LIABILITYEXPENSE_DOCLINES_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 111196211 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence LIABILITYEXPENSE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."LIABILITYEXPENSE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence LIABILITYGROUP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."LIABILITYGROUP_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence LICTYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."LICTYPE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MAILATTACH_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."MAILATTACH_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 49441 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MAILRECEIVERGROUP_RECEIVER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."MAILRECEIVERGROUP_RECEIVER_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MAILRECEIVERGROUP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."MAILRECEIVERGROUP_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MAIL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."MAIL_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 226261 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MENUITEM_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."MENUITEM_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 901 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MENUITEMWEB_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."MENUITEMWEB_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MENU_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."MENU_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence METACONSTRAINT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."METACONSTRAINT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 161 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence METAOBJECT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."METAOBJECT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 181 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MSGQUEUE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."MSGQUEUE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 193821 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MSG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."MSG_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 2580921 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence NECESSITY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."NECESSITY_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence NOTICEDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."NOTICEDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence NOTICEEMAILORG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."NOTICEEMAILORG_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence NOTIFYMSGGROUP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."NOTIFYMSGGROUP_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence NOTIFYMSGRULE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."NOTIFYMSGRULE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence NOTIFYMSG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."NOTIFYMSG_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence NUMGENERATOR_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."NUMGENERATOR_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence NUMPREFIX_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."NUMPREFIX_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence NUMSEQUENCE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."NUMSEQUENCE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1061 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence OFFERDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."OFFERDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 13921 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence OFRREQREASON_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."OFRREQREASON_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence OFRRETREASON_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."OFRRETREASON_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence OIDREF_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."OIDREF_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence OKTMO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."OKTMO_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 177941 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence OLAPQUERY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."OLAPQUERY_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence OOSORGROLE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."OOSORGROLE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence OOS223PURCHASENOTICEINFO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."OOS223PURCHASENOTICEINFO_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence OOS223PURCHNOTICELOTINFO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."OOS223PURCHNOTICELOTINFO_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORDERDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ORDERDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 10931 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORDERSUMMARY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ORDERSUMMARY_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 468151 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORGACCOUNT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ORGACCOUNT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 56941 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORGADDKPP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ORGADDKPP_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 561 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORGATTACH_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ORGATTACH_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORGCONCCONT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ORGCONCCONT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORGETP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ORGETP_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 401 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORGFORM_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ORGFORM_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 201 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORGOOS223FZUSER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ORGOOS223FZUSER_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORGROLES_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ORGROLES_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ORG_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 36961 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORGUNFAIR_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ORGUNFAIR_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PACKTYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PACKTYPE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PANELITEM_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PANELITEM_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PANEL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PANEL_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PAYCONDITION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PAYCONDITION_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PERSONAL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PERSONAL_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 2941 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PERSON_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PERSON_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLACEMENTFEATUREPM_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLACEMENTFEATUREPM_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 181 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLACEMENTFEATURE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLACEMENTFEATURE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLACINGWAY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLACINGWAY_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 261 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLANDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLANDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLANPOSITIONCHANGEREASON_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLANPOSITIONCHANGEREASON_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLAN2ARRANGEMENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLAN2ARRANGEMENT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLAN2CHANGEREASON_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLAN2CHANGEREASON_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLAN2DAILYTOTALS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLAN2DAILYTOTALS_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLAN2DOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLAN2DOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLAN2GOODS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLAN2GOODS_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLAN2LEDGER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLAN2LEDGER_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLAN2OOSEXTNUMBER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLAN2OOSEXTNUMBER_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 15521 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLAN2OOSFEATURE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLAN2OOSFEATURE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 156041 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLAN2OOSKBK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLAN2OOSKBK_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 185781 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLAN2OOSKBKYEAR_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLAN2OOSKBKYEAR_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 156581 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLAN2OOSOKVED_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLAN2OOSOKVED_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 160301 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLAN2OOSPOSITION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLAN2OOSPOSITION_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 334441 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLAN2OOSPRODUCT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLAN2OOSPRODUCT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 657441 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLAN3DOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLAN3DOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 10381 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLAN3PURCHASEDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLAN3PURCHASEDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 39941 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLGOODS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PLGOODS_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PREFERENCEGROUPFEATURE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PREFERENCEGROUPFEATURE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PREFERENCEGROUP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PREFERENCEGROUP_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PROCTREE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PROCTREE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 19301 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PROCUREMENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PROCUREMENT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PURCHASECARRY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PURCHASECARRY_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 231321 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PURCHASEMETHOD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PURCHASEMETHOD_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PURCHASEMODE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PURCHASEMODE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PURCHASEPLANDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PURCHASEPLANDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PURCHASEPLAN_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."PURCHASEPLAN_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence QUALIFYSELECT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."QUALIFYSELECT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 48571 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence QUALREQ_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."QUALREQ_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RECOILDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."RECOILDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REFATTACH_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."REFATTACH_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REFERENCECLASS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."REFERENCECLASS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 321 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REFINANCINGRATE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."REFINANCINGRATE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REFJOURNAL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."REFJOURNAL_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 34591 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REFUSALFACTFOUNDATION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."REFUSALFACTFOUNDATION_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REPDOCUMENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."REPDOCUMENT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REPFIELD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."REPFIELD_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 301 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REPFORM_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."REPFORM_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 141 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REPFRAGMENTCHILD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."REPFRAGMENTCHILD_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REPFRAGMENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."REPFRAGMENT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REPORT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."REPORT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REPPROFILE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."REPPROFILE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REPSOURCE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."REPSOURCE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REPTEMPLATEATTACH_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."REPTEMPLATEATTACH_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REQUESTDOC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."REQUESTDOC_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 14801 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REQUIREMENTTYPEPM_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."REQUIREMENTTYPEPM_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 187 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REQUIREMENTTYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."REQUIREMENTTYPE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 35 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RESERVEDBUDGETLINE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."RESERVEDBUDGETLINE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 5441 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RESPONSIBILITY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."RESPONSIBILITY_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RNP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."RNP_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ROLEREGISTER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."ROLEREGISTER_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 25431 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RPL$CONSTRAINTFIELDS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."RPL$CONSTRAINTFIELDS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RPL$CONSTRAINTS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."RPL$CONSTRAINTS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RPLOBJECT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."RPLOBJECT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RPLRULE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."RPLRULE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RPL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."RPL_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RPLSITE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."RPLSITE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RPLTABLEPLUGIN_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."RPLTABLEPLUGIN_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RPLTABLE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."RPLTABLE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 421 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RQQUALREQ_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."RQQUALREQ_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RULEREQUISITE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."RULEREQUISITE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RULESCRIPT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."RULESCRIPT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SCHEXPDOCS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."SCHEXPDOCS_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SCHPLAN_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."SCHPLAN_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 261 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SCHTASK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."SCHTASK_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 161 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_DOCEXCHANGESCHEME
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."SEQ_DOCEXCHANGESCHEME"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SERVERACTION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."SERVERACTION_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1621 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SERVERPROCESSOR_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."SERVERPROCESSOR_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 561 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SERVERPROVIDER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."SERVERPROVIDER_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 381 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SIGNEXPORTLOG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."SIGNEXPORTLOG_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence STATISTICSSOURCE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."STATISTICSSOURCE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence STOREDDOCUMENTS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."STOREDDOCUMENTS_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SYSEVENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."SYSEVENT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1396191 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SYSPARAM_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."SYSPARAM_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1401 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SYSRIGHT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."SYSRIGHT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 561 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SYSUSER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."SYSUSER_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 4141 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TASKJOURNAL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."TASKJOURNAL_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10259631 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TENDERCRITERIONCHILD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."TENDERCRITERIONCHILD_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TENDERCRITERIONPM_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."TENDERCRITERIONPM_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TENDERCRITERION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."TENDERCRITERION_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TENDERLINECOMM_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."TENDERLINECOMM_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TENDERLINE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."TENDERLINE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 461 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TENDER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."TENDER_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 501 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TERRITORY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."TERRITORY_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 29921 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TERTYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."TERTYPE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TYPEDOCREQGROUP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."TYPEDOCREQGROUP_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TYPEREQCRIT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."TYPEREQCRIT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence UNIT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."UNIT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 601 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence UPDPACKAGE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."UPDPACKAGE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence USERBUDGET_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."USERBUDGET_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 301 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence USERCERT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."USERCERT_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence USERORG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."USERORG_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1441 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence USERROLE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."USERROLE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 941 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence USERROLES_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."USERROLES_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence USERSESSION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."USERSESSION_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1093271 CACHE 20 NOORDER  CYCLE ;
--------------------------------------------------------
--  DDL for Sequence USESCRYPTOLIBPARAM_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."USESCRYPTOLIBPARAM_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 214 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence USESCRYPTOLIB_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."USESCRYPTOLIB_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 3 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence WEBSTATCACHE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."WEBSTATCACHE_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence WEBSTATCACHEVAL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GZVLG"."WEBSTATCACHEVAL_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table ABANDONEDREASON
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ABANDONEDREASON" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"CODE" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(350 BYTE), 
	"OBJECTNAME" VARCHAR2(350 BYTE), 
	"REASONTYPE" VARCHAR2(4 BYTE), 
	"DOCTYPECODE" VARCHAR2(50 BYTE), 
	"DOCTYPENAME" VARCHAR2(350 BYTE), 
	"PLACINGWAYCODE" VARCHAR2(7 BYTE), 
	"PLACINGWAYNAME" VARCHAR2(500 BYTE), 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"ACTUAL" NUMBER(1,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ALTGOODSGROUP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ALTGOODSGROUP" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(500 BYTE), 
	"TYPE_ID" NUMBER(15,0), 
	"PARENT_ID" NUMBER(15,0), 
	"OKP" VARCHAR2(16 BYTE), 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ALTGOODSGROUPLINK
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ALTGOODSGROUPLINK" 
   (	"TYPE_ID" NUMBER(15,0), 
	"GOODSGROUP_ID" NUMBER(15,0), 
	"ALTGOODSGROUP_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ALTGOODSGROUPTYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ALTGOODSGROUPTYPE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ALTUNITFACTOR
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ALTUNITFACTOR" 
   (	"UNIT_ID" NUMBER(15,0), 
	"ALTGOODSGROUP_ID" NUMBER(15,0), 
	"FACTOR" FLOAT(126)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ANYDATA
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ANYDATA" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DATA" BLOB, 
	"DATA_KEY" VARCHAR2(120 BYTE), 
	"STORAGE" VARCHAR2(25 BYTE), 
	"DEVICE" VARCHAR2(25 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("DATA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table APPMODULE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."APPMODULE" 
   (	"ID" NUMBER(18,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(32 BYTE), 
	"DESCRIPTION" VARCHAR2(256 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table APPMODULEDEPENDENCY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."APPMODULEDEPENDENCY" 
   (	"ID" NUMBER(18,0), 
	"DEPENDID" NUMBER(18,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table APPOBJ
--------------------------------------------------------

  CREATE TABLE "GZVLG"."APPOBJ" 
   (	"ID" NUMBER(18,0), 
	"VERSION" NUMBER(15,0), 
	"MODULEID" NUMBER(18,0), 
	"PARENTNAME" VARCHAR2(128 BYTE), 
	"NAME" VARCHAR2(128 BYTE), 
	"CAPTION" VARCHAR2(128 BYTE), 
	"DESCRIPTION" VARCHAR2(256 BYTE), 
	"ICON" VARCHAR2(256 BYTE), 
	"OPENICON" VARCHAR2(256 BYTE), 
	"STYPE" NUMBER(*,0), 
	"SHOWORDER" NUMBER(15,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table APPOBJPROP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."APPOBJPROP" 
   (	"ID" NUMBER(18,0), 
	"VERSION" NUMBER(15,0), 
	"APPOBJID" NUMBER(18,0), 
	"NAME" VARCHAR2(32 BYTE), 
	"VAL" VARCHAR2(1024 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table APPOINTMENT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."APPOINTMENT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ATTACHCATEGORIES
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ATTACHCATEGORIES" 
   (	"DOCATTACHEX_ID" NUMBER(15,0), 
	"DOCCATEGORY_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ATTACHEDPLANDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ATTACHEDPLANDOC" 
   (	"DOC_ID" NUMBER(15,0), 
	"PURCHASEPLANDOC_ID" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table AUCTIONBID
--------------------------------------------------------

  CREATE TABLE "GZVLG"."AUCTIONBID" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"BUDGET_ID" NUMBER(15,0), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"AMOUNT" NUMBER(15,2), 
	"REMARK" VARCHAR2(255 BYTE), 
	"ORDER_ID" NUMBER(15,0), 
	"RECEIPTTIME" DATE DEFAULT '1900-01-01', 
	"AUCTIONSTEP" NUMBER(15,2), 
	"COMPETITORPOS" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table AUCTIONLOG
--------------------------------------------------------

  CREATE TABLE "GZVLG"."AUCTIONLOG" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"ORDER_ID" NUMBER(15,0), 
	"LOTPOS" NUMBER(15,0), 
	"EVENTTIME" DATE, 
	"STATE" NUMBER(3,0), 
	"DEADLINE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table BANK
--------------------------------------------------------

  CREATE TABLE "GZVLG"."BANK" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"BIC" VARCHAR2(9 BYTE), 
	"CORACCOUNT" VARCHAR2(20 BYTE), 
	"BANK_TYPE" VARCHAR2(10 BYTE), 
	"CITY_TYPE" VARCHAR2(10 BYTE), 
	"CITY_NAME" VARCHAR2(30 BYTE), 
	"FOREIGNKEY" VARCHAR2(50 BYTE), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"IS_ACTUAL" NUMBER(1,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table BANKGUARANTEEDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."BANKGUARANTEEDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"AMOUNT" NUMBER(15,2), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"VERSIONNUMBER" NUMBER(15,0), 
	"REGNUMBER" VARCHAR2(20 BYTE), 
	"DOCPUBLISHDATE" DATE, 
	"BANKINN" VARCHAR2(20 BYTE), 
	"BANKFULLNAME" VARCHAR2(2000 BYTE), 
	"BANKFACTADDRESS" VARCHAR2(2000 BYTE), 
	"SUPPLIERINN" VARCHAR2(20 BYTE), 
	"SUPPLIERKPP" VARCHAR2(20 BYTE), 
	"SUPPLIEROGRN" VARCHAR2(20 BYTE), 
	"SUPPLIERORGANIZATIONNAME" VARCHAR2(2000 BYTE), 
	"SUPPLIERFIRMNAME" VARCHAR2(2000 BYTE), 
	"SUPPLIERFACTUALADDRESS" VARCHAR2(2000 BYTE), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"CUSTOMERINN" VARCHAR2(20 BYTE), 
	"CUSTOMERKPP" VARCHAR2(20 BYTE), 
	"CUSTOMERFULLNAME" VARCHAR2(2000 BYTE), 
	"CUSTOMERSHORTNAME" VARCHAR2(2000 BYTE), 
	"CUSTOMERFACTADDRESS" VARCHAR2(2000 BYTE), 
	"PURCHASENUMBER" VARCHAR2(100 BYTE), 
	"LOTNUMBER" NUMBER(15,0), 
	"REGNUM" VARCHAR2(100 BYTE), 
	"GUARANTEEDATE" DATE, 
	"GUARANTEENUMBER" VARCHAR2(100 BYTE), 
	"GUARANTEEAMOUNT" NUMBER(15,2), 
	"EXPIREDATE" DATE, 
	"MODIFICATIONREASON" CHAR(1 BYTE), 
	"MODIFICATIONINFO" VARCHAR2(2000 BYTE), 
	"HREF" VARCHAR2(1024 BYTE), 
	"PRINTFORMHREF" VARCHAR2(1024 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table BANKGUARANTEEREFDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."BANKGUARANTEEREFDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"AMOUNT" NUMBER(15,2), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"REGNUMBER" VARCHAR2(20 BYTE), 
	"DOCPUBLISHDATE" DATE, 
	"HREF" VARCHAR2(1024 BYTE), 
	"PRINTFORMHREF" VARCHAR2(1024 BYTE), 
	"REFUSALINFODOCDATE" DATE, 
	"REFUSALINFODOCNAME" VARCHAR2(250 BYTE), 
	"REFUSALINFODOCNUMBER" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table BANKGUARANTEEREFDOCREASON
--------------------------------------------------------

  CREATE TABLE "GZVLG"."BANKGUARANTEEREFDOCREASON" 
   (	"BANKGUARANTEEREF_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"CODE" NUMBER(15,0), 
	"NAME" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table BANKGUARANTEEREFREASON
--------------------------------------------------------

  CREATE TABLE "GZVLG"."BANKGUARANTEEREFREASON" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"NAME" VARCHAR2(2000 BYTE), 
	"ACTUAL" NUMBER(1,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table BUDGCODE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."BUDGCODE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"SEQORDER" NUMBER(2,0), 
	"CODE" VARCHAR2(100 BYTE), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"FOREIGNKEY" VARCHAR2(50 BYTE), 
	"FINYEAR" NUMBER(4,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table BUDGET
--------------------------------------------------------

  CREATE TABLE "GZVLG"."BUDGET" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"ISLOCAL" NUMBER(1,0) DEFAULT 0, 
	"ISRURALVILLAGE" NUMBER(1,0) DEFAULT 0, 
	"ISBUDGETINSTITUTION" NUMBER(1,0) DEFAULT 0, 
	"FINSRC_ID" NUMBER(15,0), 
	"TERRITORY_ID" NUMBER(15,0), 
	"PARENT_ID" NUMBER(15,0), 
	"RELATIONBUDGET_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table BUDGETLINE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."BUDGETLINE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"ESTIMATE_ID" NUMBER(15,0), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"CODE1" VARCHAR2(100 BYTE), 
	"CODE2" VARCHAR2(100 BYTE), 
	"CODE3" VARCHAR2(100 BYTE), 
	"CODE4" VARCHAR2(100 BYTE), 
	"CODE5" VARCHAR2(100 BYTE), 
	"CODE6" VARCHAR2(100 BYTE), 
	"CODE7" VARCHAR2(100 BYTE), 
	"CODE8" VARCHAR2(100 BYTE), 
	"CODE9" VARCHAR2(100 BYTE), 
	"CODE10" VARCHAR2(100 BYTE), 
	"FOREIGNKEY" VARCHAR2(50 BYTE), 
	"FINYEAR" NUMBER(4,0), 
	"ASSIGN_AMT1" NUMBER(15,2) DEFAULT 0, 
	"REST_ASSIGN_AMT1" NUMBER(15,2) DEFAULT 0, 
	"ASSIGN_AMT2" NUMBER(15,2) DEFAULT 0, 
	"REST_ASSIGN_AMT2" NUMBER(15,2) DEFAULT 0, 
	"ASSIGN_AMT3" NUMBER(15,2) DEFAULT 0, 
	"REST_ASSIGN_AMT3" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table BUDGETSTAGE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."BUDGETSTAGE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"STAGECODE" VARCHAR2(2 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CACHELIST
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CACHELIST" 
   (	"ID" NUMBER(15,0), 
	"STORAGE_NAME" VARCHAR2(32 BYTE), 
	"USERSESSION_ID" NUMBER(15,0), 
	"CACHE_KEY" VARCHAR2(64 BYTE), 
	"HASH_CODE" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"INDEX_HASH_CODE" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CACHEMAN
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CACHEMAN" 
   (	"GUID" VARCHAR2(38 BYTE), 
	"LAST_ACCESS" DATE, 
	"USERNAME" VARCHAR2(30 BYTE), 
	"CLIENT_HOST" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CAVILDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CAVILDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"AMOUNT" NUMBER(15,2), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"PUBLISH_DATE" DATE, 
	"CMPORG_ID" NUMBER(15,0), 
	"PURCHASENUMBER" VARCHAR2(50 BYTE), 
	"VIOLATION_DESCRIPTION" CLOB, 
	"PORTALSTATUS" NUMBER(2,0), 
	"RESPPERSON_ID" NUMBER(15,0), 
	"EMAIL" VARCHAR2(256 BYTE), 
	"ANSWER" VARCHAR2(2000 BYTE), 
	"BUDGET_ID" NUMBER(15,0), 
	"WEBLINK" VARCHAR2(512 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("VIOLATION_DESCRIPTION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table CAVILTYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CAVILTYPE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(256 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CDCAVILTYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CDCAVILTYPE" 
   (	"CAVILDOC_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"CAVILTYPE_ID" NUMBER(15,0), 
	"COMMENTS" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("COMMENTS") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table CEEXECUTIONLINE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CEEXECUTIONLINE" 
   (	"CONTRACTEXECDOC_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"TYPE" NUMBER(1,0) DEFAULT 0, 
	"DOCUMENT_NUM" VARCHAR2(100 BYTE), 
	"DOCUMENT_DATE" DATE, 
	"EXEC_DATE" DATE, 
	"PAIDAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"DOCUMENTNAME" VARCHAR2(1000 BYTE), 
	"PRODUCT" VARCHAR2(4000 BYTE), 
	"CONTRACTEXECDOCTYPE_ID" NUMBER(15,0), 
	"CONTRACTEXECDOCTYPE_CODE" VARCHAR2(4 BYTE), 
	"FACTDOC_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CEPAYMENTPENALTY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CEPAYMENTPENALTY" 
   (	"CONTRACTEXECDOC_ID" NUMBER(15,0), 
	"PENALTYPOS" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"DOCNAME" VARCHAR2(1000 BYTE), 
	"DOCNUMBER" VARCHAR2(100 BYTE), 
	"DOCDATE" DATE, 
	"AMOUNT" NUMBER(15,2)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CEPENALTY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CEPENALTY" 
   (	"CONTRACTEXECDOC_ID" NUMBER(15,0), 
	"DOC_ID" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"CLAIM_DOCUMENTCLASS_ID" NUMBER(15,0), 
	"CLAIM_DOC_NUMBER" VARCHAR2(20 BYTE), 
	"CLAIM_DOC_DATE" DATE, 
	"CONTRACTPARTY" NUMBER(1,0), 
	"PENALTYTYPE" NUMBER(1,0), 
	"PENALTYREASON" NUMBER(1,0) DEFAULT 0, 
	"PAYMENT_DOCNAME" VARCHAR2(1000 BYTE), 
	"PAYMENT_DOCNUMBER" VARCHAR2(100 BYTE), 
	"PAYMENT_DOCDATE" DATE, 
	"PAYMENT_AMOUNT" NUMBER(15,2), 
	"RETURN_DOCNAME" VARCHAR2(1000 BYTE), 
	"RETURN_DOCNUMBER" VARCHAR2(100 BYTE), 
	"RETURN_DOCDATE" DATE, 
	"RETURN_AMOUNT" NUMBER(15,2)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CEREPARATIONLINE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CEREPARATIONLINE" 
   (	"CONTRACTEXECDOC_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"CONTRACTREPARATIONDOC_ID" NUMBER(15,0), 
	"DOCUMENTNAME" VARCHAR2(1000 BYTE), 
	"DOCUMENTDATE" DATE, 
	"DOCUMENTNUMBER" VARCHAR2(100 BYTE), 
	"REPARATIONAMOUNT" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CERETURNPENALTY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CERETURNPENALTY" 
   (	"CONTRACTEXECDOC_ID" NUMBER(15,0), 
	"PENALTYPOS" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"DOCNAME" VARCHAR2(1000 BYTE), 
	"DOCNUMBER" VARCHAR2(100 BYTE), 
	"DOCDATE" DATE, 
	"AMOUNT" NUMBER(15,2)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CERTINTERCHANGEREQUEST
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CERTINTERCHANGEREQUEST" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"REMARK" VARCHAR2(255 BYTE), 
	"USERCERT_ID" NUMBER(15,0), 
	"EXPORTABLE" NUMBER(1,0) DEFAULT 0, 
	"COMMENTS" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CERTREQUEST
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CERTREQUEST" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"REMARK" VARCHAR2(255 BYTE), 
	"COUNTRY" VARCHAR2(2 BYTE), 
	"CITY" VARCHAR2(128 BYTE), 
	"STATE" VARCHAR2(128 BYTE), 
	"USER_ORG" VARCHAR2(255 BYTE), 
	"USER_FIO" VARCHAR2(64 BYTE), 
	"USER_EMAIL" VARCHAR2(128 BYTE), 
	"INSURANCE_NUMBER" NUMBER(11,0), 
	"JOB_POSITION" VARCHAR2(128 BYTE), 
	"STATUS_OWNER" NUMBER(1,0) DEFAULT 0, 
	"ADDRESS" VARCHAR2(128 BYTE), 
	"USER_ORG_ID" NUMBER(15,0), 
	"DEPARTMENT" VARCHAR2(64 BYTE), 
	"EXPORTABLE" NUMBER(1,0) DEFAULT 0, 
	"COMMENTS" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CERTREQUESTOID
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CERTREQUESTOID" 
   (	"CERTREQUEST_ID" NUMBER(15,0), 
	"OIDREF_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CERTREVOKEREQUEST
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CERTREVOKEREQUEST" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"REMARK" VARCHAR2(255 BYTE), 
	"USERCERT_ID" NUMBER(15,0), 
	"COMMENTS" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CETERMINATIONLINE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CETERMINATIONLINE" 
   (	"CONTRACTEXECDOC_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"TERMINATION_DATE" DATE, 
	"PAIDAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"REASON" VARCHAR2(4000 BYTE), 
	"TERMINATIONREASON_ID" NUMBER(15,0), 
	"TERMINATIONREASONDOC_ID" NUMBER(15,0), 
	"TERMINATIONREASONDOC_DATE" DATE, 
	"TERMINATIONREASONDOC_NUMBER" VARCHAR2(100 BYTE), 
	"TERMINATIONREASONDOC_REFDATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CLAIMDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CLAIMDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"BUDGET_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"CUSTOMERNAME" VARCHAR2(2000 BYTE), 
	"SHORT_DESCRIPTION" CLOB, 
	"COMPLETE_DATE" DATE, 
	"ANSWER" NUMBER(1,0) DEFAULT 0, 
	"ANSWER_TEXT" CLOB, 
	"REMARK" VARCHAR2(255 BYTE), 
	"REASON" NUMBER(1,0) DEFAULT 0, 
	"PARENT_CONTRACT_ID" NUMBER(15,0), 
	"PENALTY_DATE" DATE, 
	"PENALTY_AMOUNT" NUMBER(15,2), 
	"VIOLATION_NAME" CLOB, 
	"VIOLATION_DESCRIPTION" CLOB, 
	"VIOLATION_REASON" CLOB, 
	"PENALTY_TYPE" NUMBER(1,0) DEFAULT 0, 
	"PENALTY_CHANGE_DATE" DATE, 
	"PENALTY_CHANGE_TYPE" NUMBER(1,0), 
	"OUTSTANDINGAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"DELAYDAYS" NUMBER(15,0) DEFAULT 0, 
	"EXECUTIONDAYS" NUMBER(15,0) DEFAULT 0, 
	"PENALTY_DOCNAME" VARCHAR2(1000 BYTE), 
	"PENALTY_DOCNUMBER" VARCHAR2(100 BYTE), 
	"PENALTY_DOCDATE" DATE, 
	"PENALTY_RETURN_AMOUNT" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("SHORT_DESCRIPTION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("ANSWER_TEXT") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("VIOLATION_NAME") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("VIOLATION_DESCRIPTION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("VIOLATION_REASON") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table CLAIMPAYFACT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CLAIMPAYFACT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CLAIM_ID" NUMBER(15,0), 
	"PAYDATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"NUM" VARCHAR2(100 BYTE), 
	"CAPTION" VARCHAR2(500 BYTE), 
	"DOCDATE" DATE, 
	"DOCTYPE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CLAIMPENALTYCHANGEDOCINFO
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CLAIMPENALTYCHANGEDOCINFO" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CLAIM_ID" NUMBER(15,0), 
	"DOCDATE" DATE, 
	"DOCNUMBER" VARCHAR2(100 BYTE), 
	"CAPTION" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CLASSOPER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CLASSOPER" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"CAPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CLIENTOBJECT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CLIENTOBJECT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"OBJ_TYPE" NUMBER(1,0), 
	"SYSTEM_FLAG" NUMBER(1,0) DEFAULT 0, 
	"REPORT_FLAG" NUMBER(1,0) DEFAULT 0, 
	"CLASS_GUID" VARCHAR2(100 BYTE), 
	"PARAMS" VARCHAR2(300 BYTE), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"SUBSYSTEM" NUMBER(15,0) DEFAULT 0, 
	"XML_PARAMS" CLOB, 
	"BUDGET_REQUIRED" NUMBER(1,0) DEFAULT 1, 
	"HELPFILE" VARCHAR2(256 BYTE), 
	"HELPKEYWORD" VARCHAR2(256 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("XML_PARAMS") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table CLIENTOBJECTCOMMENTS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CLIENTOBJECTCOMMENTS" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CLIENTOBJECT_ID" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"COMMENT_FIELD" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("COMMENT_FIELD") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table CLNDDAY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CLNDDAY" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CLNDTYPE_ID" NUMBER(15,0), 
	"CLNDDAYTYPE_ID" NUMBER(15,0), 
	"CLND_DAY" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CLNDDAYTYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CLNDDAYTYPE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CLNDTYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CLNDTYPE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(255 BYTE), 
	"CLND_YEAR" NUMBER(4,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPCOMMEMBER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPCOMMEMBER" 
   (	"ORDER_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"COMMEMBER_ID" NUMBER(15,0), 
	"COMMEMBER_NAME" VARCHAR2(255 BYTE), 
	"COMMEMBER_ROLE" VARCHAR2(255 BYTE), 
	"COMROLE" NUMBER(1,0), 
	"ABSENT" NUMBER(1,0), 
	"PRESIDENT_VACATION" NUMBER(1,0) DEFAULT 0, 
	"NOTE" VARCHAR2(100 BYTE), 
	"PHASEPOS" NUMBER(15,0), 
	"OOS_NUMBER" VARCHAR2(100 BYTE), 
	"ISACTINGFORSECRETARY" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPCOMPETITOR
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPCOMPETITOR" 
   (	"ORDER_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"LOTPOS" NUMBER(15,0), 
	"VENDOR_ID" NUMBER(15,0), 
	"TAXCODE" VARCHAR2(20 BYTE), 
	"KPP" VARCHAR2(20 BYTE), 
	"VENDORNAME" VARCHAR2(2000 BYTE), 
	"ORDINALNUMBER" NUMBER(15,0), 
	"SCORE" NUMBER(15,4), 
	"ISSATISFY" NUMBER(1,0), 
	"ISQUALIFY" NUMBER(1,0), 
	"VENDORCARDNUMBER" NUMBER(15,0), 
	"AUCTIONCODE" VARCHAR2(20 BYTE), 
	"PREFERENCE" NUMBER(1,0) DEFAULT 0, 
	"PREV_SCORE" NUMBER(15,4), 
	"PREV_ORDINALNUMBER" NUMBER(15,0), 
	"DISCUSSION" VARCHAR2(4000 BYTE), 
	"ABSENT" NUMBER(1,0) DEFAULT 0, 
	"EXPLANATION" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPCONDEALRESP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPCONDEALRESP" 
   (	"ORDER_ID" NUMBER(15,0), 
	"CMPCUSTOMERPOS" NUMBER(15,0), 
	"PERSONAL_ID" NUMBER(15,0), 
	"PERSONAL_NAME" VARCHAR2(256 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPCRITERION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPCRITERION" 
   (	"ORDER_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"NAME" VARCHAR2(512 BYTE), 
	"CTYPE" NUMBER(2,0), 
	"CALCMODE" NUMBER(1,0), 
	"BESTPARAM" NUMBER(1,0), 
	"WEIGHT" NUMBER(15,2), 
	"ACTUAL_WEIGHT" NUMBER(15,2), 
	"LOTPOS" NUMBER(15,0), 
	"TENDERCRITERION_ID" NUMBER(15,0), 
	"MINWEIGHT" NUMBER(15,2), 
	"MAXWEIGHT" NUMBER(15,2), 
	"VAL" NUMBER(15,2), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"FORMULA" VARCHAR2(2000 BYTE), 
	"OOSCODE" VARCHAR2(2 BYTE) DEFAULT '0', 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPCRITERIONLINE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPCRITERIONLINE" 
   (	"ORDER_ID" NUMBER(15,0), 
	"CMPCRITERIONPOS" NUMBER(15,0), 
	"SEQORDER" NUMBER(15,0), 
	"CAPTION" VARCHAR2(2000 BYTE), 
	"MINVALUE" NUMBER(15,2), 
	"MAXVALUE" NUMBER(15,2), 
	"WEIGHT" NUMBER(15,2), 
	"LIMITDESCRIPTION" VARCHAR2(2000 BYTE), 
	"DESCRIPTION" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPCUSTOMER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPCUSTOMER" 
   (	"ORDER_ID" NUMBER(15,0), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"CUSTOMERNAME" VARCHAR2(2000 BYTE), 
	"REFCOUNT" NUMBER(4,0), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"CUSTOMERTAXCODE" VARCHAR2(20 BYTE), 
	"CUSTOMERKPP" VARCHAR2(20 BYTE), 
	"CUSTOMERFACTCOUNTRY_ID" NUMBER(15,0), 
	"CUSTOMERFACTPOSTINDEX" VARCHAR2(10 BYTE), 
	"CUSTOMERFACTTERRITORYCODE" VARCHAR2(20 BYTE), 
	"CUSTOMERFACTADDRESS" VARCHAR2(300 BYTE), 
	"CUSTOMERPOSTCOUNTRY_ID" NUMBER(15,0), 
	"CUSTOMERPOSTPOSTINDEX" VARCHAR2(10 BYTE), 
	"CUSTOMERPOSTTERRITORYCODE" VARCHAR2(20 BYTE), 
	"CUSTOMERPOSTADDRESS" VARCHAR2(300 BYTE), 
	"CUSTOMERFAX" VARCHAR2(100 BYTE), 
	"CUSTOMERPHONE" VARCHAR2(100 BYTE), 
	"CUSTOMEREMAIL" VARCHAR2(256 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPCUSTOMERLOT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPCUSTOMERLOT" 
   (	"POS" NUMBER(15,0), 
	"ORDER_ID" NUMBER(15,0), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"LOTPOS" NUMBER(15,0), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"QUANTITY" VARCHAR2(4000 BYTE), 
	"DELIVERYPLACE" VARCHAR2(4000 BYTE), 
	"DELIVERYTERM" VARCHAR2(1024 BYTE), 
	"PAYMENTCONDITION" VARCHAR2(4000 BYTE), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"QUANTITYCONTRACTSPNIR" NUMBER(15,0), 
	"ADDITIONALINFO" VARCHAR2(4000 BYTE), 
	"ISGUARANTEEAPP" NUMBER(1,0) DEFAULT 0, 
	"GUARANTEEAPPAMOUNT" NUMBER(15,2), 
	"GUARAPPSETTLEMENTACC_ID" NUMBER(15,0), 
	"GUARAPPPERSONALACC_ID" NUMBER(15,0), 
	"GUARAPPBIC" VARCHAR2(15 BYTE), 
	"GUARANTEEAPPPROCEDURE" VARCHAR2(4000 BYTE), 
	"ISGUARANTEECONTRACT" NUMBER(1,0) DEFAULT 0, 
	"GUARANTEECONTRACTAMOUNT" NUMBER(15,2), 
	"GUARCONTRSETTLEMENTACC_ID" NUMBER(15,0), 
	"GUARCONTRPERSONALACC_ID" NUMBER(15,0), 
	"GUARANTEECONTRACTBIC" VARCHAR2(15 BYTE), 
	"GUARANTEECONTRACTPROCEDURE" VARCHAR2(4000 BYTE), 
	"GUARANTEECONTRACTISBAIL" NUMBER(1,0) DEFAULT 0, 
	"FINANCESOURCE" VARCHAR2(2000 BYTE), 
	"PLANPOSITIONNUMBER" VARCHAR2(100 BYTE), 
	"ADVANCE" NUMBER(15,2), 
	"ISMAXINVITATIONDATE" NUMBER(1,0) DEFAULT 0, 
	"CONMNGRRESP_FULLNAME" VARCHAR2(256 BYTE), 
	"CUSTCANCHANGECONTERMS" NUMBER(1,0) DEFAULT 0, 
	"CUSTCANREFUSE" NUMBER(1,0) DEFAULT 0, 
	"CONSERVICEINFO" VARCHAR2(2000 BYTE), 
	"CONMNGRRESP_ID" NUMBER(15,0), 
	"VATAMOUNT" NUMBER(15,2), 
	"GUARANTEEAPPPERCENT" NUMBER(5,2), 
	"GUARANTEECONTRACTPERCENT" NUMBER(5,2), 
	"CUSTCANREFUSEINFO" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("CUSTCANREFUSEINFO") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table CMPDECISION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPDECISION" 
   (	"ORDER_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"PHASEPOS" NUMBER(15,0), 
	"DECISION" CLOB, 
	"RESULT" NUMBER(2,0), 
	"FOR_" NUMBER(15,0), 
	"AGAINST" NUMBER(15,0), 
	"ABSTAIN" NUMBER(15,0), 
	"BYCALL" NUMBER(1,0), 
	"COMPETITORPOS" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("DECISION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table CMPDISCUSSION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPDISCUSSION" 
   (	"ID" NUMBER(15,0), 
	"ORDER_ID" NUMBER(15,0), 
	"PHASEPOS" NUMBER(15,0), 
	"LOTPOS" NUMBER(15,0), 
	"DISCUSSION" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("DISCUSSION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table CMPDOCREQ
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPDOCREQ" 
   (	"ORDER_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"LOTPOS" NUMBER(15,0), 
	"NAME" VARCHAR2(1000 BYTE), 
	"VENDOR_TYPE" NUMBER(2,0) DEFAULT 0, 
	"ISREQUIRED" NUMBER(1,0) DEFAULT 1, 
	"ISCONTENTTYPE" NUMBER(1,0) DEFAULT 0, 
	"TYPE" NUMBER(2,0) DEFAULT 0, 
	"ETPKEY" VARCHAR2(100 BYTE), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"DESCRIPTION" VARCHAR2(4000 BYTE), 
	"REQUIREMENTTYPE_ID" NUMBER(15,0), 
	"REQUIREMENTTYPE_NAME" VARCHAR2(500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPEXPENSE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPEXPENSE" 
   (	"ORDER_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"EXPDATE" DATE, 
	"GROUPCODE" VARCHAR2(20 BYTE), 
	"GROUPCAPTION" VARCHAR2(500 BYTE), 
	"GOODSCODE" VARCHAR2(20 BYTE), 
	"GOODSCAPTION" VARCHAR2(512 BYTE), 
	"QTY" NUMBER(15,4) DEFAULT 0, 
	"PRICE" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPFEATURE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPFEATURE" 
   (	"ORDER_ID" NUMBER(15,0), 
	"LOTPOS" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"PLACEMENTFEATURE_ID" NUMBER(15,0), 
	"PREFVALUE" NUMBER(15,2) DEFAULT 0, 
	"CONTENT" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPGOODS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPGOODS" 
   (	"ORDER_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"GROUPCODE" VARCHAR2(20 BYTE), 
	"OKDP_CODE" VARCHAR2(20 BYTE), 
	"GROUPCAPTION" VARCHAR2(500 BYTE), 
	"GOODSCODE" VARCHAR2(20 BYTE), 
	"GOODSCAPTION" VARCHAR2(512 BYTE), 
	"QTY" NUMBER(15,4) DEFAULT 0, 
	"PRICE" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"LOTPOS" NUMBER(15,0), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"STATUS" NUMBER(1,0) DEFAULT 0, 
	"OKPD_CODE" VARCHAR2(20 BYTE), 
	"OKPD_NAME" VARCHAR2(1000 BYTE), 
	"OKPD_ID" NUMBER(15,0), 
	"OKVED_ID" NUMBER(15,0), 
	"OKVED" VARCHAR2(20 BYTE), 
	"OKVED_NAME" VARCHAR2(1000 BYTE), 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPGOODSPROP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPGOODSPROP" 
   (	"ORDER_ID" NUMBER(15,0), 
	"GOODSPOS" NUMBER(15,0), 
	"SEQORDER" NUMBER(15,0), 
	"PROPTYPE_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(512 BYTE), 
	"PROPVALUE" VARCHAR2(1500 BYTE), 
	"OOSKEY" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPLOT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPLOT" 
   (	"ORDER_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"LOTNUMBER" NUMBER(15,0), 
	"DELIVERYBASISCODE" VARCHAR2(50 BYTE), 
	"PAYCONDITIONNAME" VARCHAR2(255 BYTE), 
	"HASCONTRACTORWORK" NUMBER(1,0) DEFAULT 0, 
	"AUCTIONSTEP" NUMBER(15,2), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"CONTYPE_ID" NUMBER(15,0), 
	"PRICE_GENERATION_ORDER" CLOB, 
	"MINSCORE" NUMBER(10,4) DEFAULT 0, 
	"MAXSCORE" NUMBER(10,4) DEFAULT 0, 
	"CMPDATE" DATE, 
	"FACT_CMPDATE" DATE, 
	"ISLOTDECLINED" NUMBER(1,0) DEFAULT 0, 
	"ENTERPRISE" NUMBER(1,0) DEFAULT 0, 
	"ISLOTREREGISTERED" NUMBER(1,0) DEFAULT 0, 
	"CHILD_ORDER_ID" NUMBER(15,0), 
	"PLAN_DEALDATE" DATE, 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"QUANTITYCONTRACTSPNIR" NUMBER(15,0), 
	"ISAMOUNTPERCENT" NUMBER(1,0) DEFAULT 0, 
	"AMOUNTPERCENT" NUMBER(3,2), 
	"CURRENCY_ID" NUMBER(15,0), 
	"CURRENCY_CODE" VARCHAR2(3 BYTE), 
	"LIMITCONDEFINITION" CLOB, 
	"GOODSLIMITS" CLOB, 
	"ENERGYTYPE" VARCHAR2(3 BYTE), 
	"NOPUBLICDISCUSSION" NUMBER(1,0) DEFAULT 0, 
	"FIRSTPUBLICDISCUSSIONCOMPLETE" NUMBER(1,0) DEFAULT 0, 
	"STANDARDCONTRACTNUMBER" VARCHAR2(16 BYTE), 
	"ALLOWMULTIPLECONTRACTS" NUMBER(1,0) DEFAULT 0, 
	"PUBLICDISCUSSIONLINK" CLOB, 
	"PRICEFORMULA" CLOB, 
	"VAT" NUMBER(1,0) DEFAULT 0, 
	"VATRATE" NUMBER(15,4), 
	"CONTRACT_SIGN_TERM" NUMBER(15,0), 
	"CONTRACT_DEAL_TERM" NUMBER(15,0), 
	"POTENTIALCONTRACTORSNUMBER" NUMBER(15,0), 
	"BIDAFTERYOURSELF" NUMBER(1,0) DEFAULT 0, 
	"AUCTIONWITHSTEP" NUMBER(1,0) DEFAULT 0, 
	"AUCTIONSTEPTYPE" NUMBER(1,0) DEFAULT 0, 
	"AUCTIONSTEPVALUE" NUMBER(15,4), 
	"AUCTIONBIDBYSTEP" NUMBER(1,0) DEFAULT 0, 
	"AUCTIONMINSTEPLIMIT" NUMBER(15,4), 
	"AUCTIONZEROBID" NUMBER(1,0) DEFAULT 0, 
	"AUCTIONDIVISIBLEBID" NUMBER(1,0) DEFAULT 0, 
	"AUCTIONAUTOSTEPDEC" NUMBER(1,0) DEFAULT 0, 
	"AUCTIONSTEPDECVALUE" NUMBER(15,4), 
	"AUCTIONSTEPDECLIMIT" NUMBER(15,4), 
	"AUCTIONDECINTERVAL" NUMBER(15,0), 
	"NAME" CLOB, 
	"RATIONALEPRICE" CLOB, 
	"SUBJECT" CLOB, 
	"ENERGYSERVICEECONOMY" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("PRICE_GENERATION_ORDER") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("LIMITCONDEFINITION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("GOODSLIMITS") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("PUBLICDISCUSSIONLINK") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("PRICEFORMULA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("NAME") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("RATIONALEPRICE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("SUBJECT") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("ENERGYSERVICEECONOMY") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table CMPOOSMODIFICATION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPOOSMODIFICATION" 
   (	"ORDER_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"PHASEPOS" NUMBER(15,0), 
	"MODIFICATIONNUMBER" NUMBER(15,0), 
	"PUBLISHDATE" DATE, 
	"INFO" VARCHAR2(2000 BYTE), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"CHANGE_INITIATIVETYPE" VARCHAR2(2 BYTE), 
	"CHANGE_AUTHORITYTYPE" VARCHAR2(2 BYTE), 
	"CHANGE_AUTHORITYNAME" VARCHAR2(2000 BYTE), 
	"CHANGE_DATE" DATE, 
	"CHANGE_DESNUMBER" VARCHAR2(350 BYTE), 
	"CHECKRESULT_NUMBER" VARCHAR2(30 BYTE), 
	"PRESCRIPTION_NUMBER" VARCHAR2(20 BYTE), 
	"CHANGE_DOCNAME" CLOB, 
	"CHANGE_ADDITIONALINFO" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("CHANGE_DOCNAME") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CHANGE_ADDITIONALINFO") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table CMPPAYSHEDULE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPPAYSHEDULE" 
   (	"ORDER_ID" NUMBER(15,0), 
	"BUDGETLINEPOS" NUMBER(15,0), 
	"PAYDATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPPERSONAL
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPPERSONAL" 
   (	"ORDER_ID" NUMBER(15,0), 
	"PERSONAL_ID" NUMBER(15,0), 
	"LASTNAME" VARCHAR2(50 BYTE), 
	"FIRSTNAME" VARCHAR2(50 BYTE), 
	"PATRONYMIC" VARCHAR2(50 BYTE), 
	"ORG_ID" NUMBER(15,0), 
	"PHONE" VARCHAR2(100 BYTE), 
	"FAX" VARCHAR2(100 BYTE), 
	"EMAIL" VARCHAR2(256 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPPERSONALRESP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPPERSONALRESP" 
   (	"ORDER_ID" NUMBER(15,0), 
	"PERSONAL_ID" NUMBER(15,0), 
	"RESPONSIBILITY_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPPHASE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPPHASE" 
   (	"ORDER_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"PHASECODE" NUMBER(1,0), 
	"PHASEDATE" DATE, 
	"PHASEPLACE" VARCHAR2(4000 BYTE), 
	"COMMISSION_ID" NUMBER(15,0), 
	"OOS_PROTOCOL_NUMBER" VARCHAR2(30 BYTE), 
	"OOS_SIGN_DATE" DATE, 
	"OOS_PUBLISH_DATE" DATE, 
	"OOS_ADDINFO" VARCHAR2(2000 BYTE), 
	"OOS_PROTOCOLPUBLISHED" NUMBER(1,0) DEFAULT 0, 
	"OOS_PROTOCOL_ID" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPPLACE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPPLACE" 
   (	"ORDER_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"ESTIMATE_ID" NUMBER(15,0), 
	"ESTIMATENAME" VARCHAR2(255 BYTE), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"RECIPIENTNAME" VARCHAR2(2000 BYTE), 
	"CODE1" VARCHAR2(100 BYTE), 
	"CODE2" VARCHAR2(100 BYTE), 
	"CODE3" VARCHAR2(100 BYTE), 
	"CODE4" VARCHAR2(100 BYTE), 
	"CODE5" VARCHAR2(100 BYTE), 
	"CODE6" VARCHAR2(100 BYTE), 
	"CODE7" VARCHAR2(100 BYTE), 
	"CODE8" VARCHAR2(100 BYTE), 
	"CODE9" VARCHAR2(100 BYTE), 
	"CODE10" VARCHAR2(100 BYTE), 
	"FINSRCNAME" VARCHAR2(512 BYTE), 
	"FINSRC_ID" NUMBER(15,0), 
	"COUNTRY_ID" NUMBER(15,0), 
	"TERRITORYCODE" VARCHAR2(20 BYTE), 
	"ADDRESS" VARCHAR2(300 BYTE), 
	"SUPPLYAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"USEAMOUNT" NUMBER(1,0) DEFAULT 0, 
	"CALCPRICE" NUMBER(1,0) DEFAULT 0, 
	"INDUSTRYCODE_ID" NUMBER(15,0), 
	"GRANTINVESTMENT_ID" NUMBER(15,0), 
	"CUSTOMER_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPQUALREQ
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPQUALREQ" 
   (	"ORDER_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"LOTPOS" NUMBER(15,0), 
	"NAME" VARCHAR2(2000 BYTE), 
	"QTYPE" NUMBER(2,0), 
	"QMINVALUE" NUMBER(15,4), 
	"QMAXVALUE" NUMBER(15,4), 
	"PLACEMENTFEATURE_ID" NUMBER(15,0), 
	"CONTENT" VARCHAR2(2000 BYTE), 
	"REQUIREMENTTYPE_ID" NUMBER(15,0), 
	"REQUIREMENTTYPE_NAME" VARCHAR2(500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPREPDOCUMENT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPREPDOCUMENT" 
   (	"ORDER_ID" NUMBER(15,0), 
	"REPDOCUMENT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPSUPPLYSHEDULE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPSUPPLYSHEDULE" 
   (	"ORDER_ID" NUMBER(15,0), 
	"GOODSPOS" NUMBER(15,0), 
	"PLACEPOS" NUMBER(15,0), 
	"SUPPLYDATE" DATE, 
	"QTY" NUMBER(15,4) DEFAULT 0, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"LOTPOS" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPVENDOR
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPVENDOR" 
   (	"ORDER_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"VENDOR_ID" NUMBER(15,0), 
	"TAXCODE" VARCHAR2(20 BYTE), 
	"KPP" VARCHAR2(20 BYTE), 
	"VENDORNAME" VARCHAR2(2000 BYTE), 
	"REFCOUNT" NUMBER(4,0), 
	"PROPFORM_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPVOTERESULT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPVOTERESULT" 
   (	"DECISIONPOS" NUMBER(15,0), 
	"ORDER_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"CMPCOMMEMBERPOS" NUMBER(15,0), 
	"NOTE" VARCHAR2(500 BYTE), 
	"RESULT" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CMPWORKGROUP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CMPWORKGROUP" 
   (	"ORDER_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"CAPTION" VARCHAR2(250 BYTE), 
	"ETPKEY" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CODETYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CODETYPE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"DISPLAY_ORDER" NUMBER(15,0), 
	"SEQORDER" NUMBER(2,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"MASK" VARCHAR2(200 BYTE), 
	"GROUPMASK" VARCHAR2(100 BYTE), 
	"DEFVALUE" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table COMMEMBER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."COMMEMBER" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"COMMISSION_ID" NUMBER(15,0), 
	"COMMEMBER_ID" NUMBER(15,0), 
	"COMROLE" NUMBER(1,0), 
	"COMMEMBER_NAME" VARCHAR2(255 BYTE), 
	"COMMEMBER_ROLE" VARCHAR2(255 BYTE), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"ISACTINGFORSECRETARY" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table COMMISSION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."COMMISSION" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(2000 BYTE), 
	"COMTYPE" NUMBER(1,0), 
	"OOSREGNUMBER" VARCHAR2(100 BYTE), 
	"ISACTUAL" NUMBER(1,0) DEFAULT 1, 
	"ORG_ID" NUMBER(15,0), 
	"DATENUMORDERNAME" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table COMPLAINTDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."COMPLAINTDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"BUDGET_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"INFO_DATE" DATE, 
	"SUPERVISION_ORG" VARCHAR2(2000 BYTE), 
	"COMPLAINANT_ORG" VARCHAR2(2000 BYTE), 
	"COM_LAW_ADDRESS" VARCHAR2(300 BYTE), 
	"COM_FAC_ADDRESS" VARCHAR2(300 BYTE), 
	"COM_EMAIL" VARCHAR2(256 BYTE), 
	"COM_PHONE" VARCHAR2(100 BYTE), 
	"COM_FAX" VARCHAR2(100 BYTE), 
	"COM_CONTACT_PERSON" VARCHAR2(300 BYTE), 
	"DEFENDANT_ORG_TYPE" NUMBER(2,0), 
	"DEF_ORG_NAME" VARCHAR2(2000 BYTE), 
	"DEF_LAW_ADDRESS" VARCHAR2(300 BYTE), 
	"DEF_FAC_ADDRESS" VARCHAR2(300 BYTE), 
	"DEF_PHONE" VARCHAR2(100 BYTE), 
	"ORDER_NUMBER" VARCHAR2(300 BYTE), 
	"NOTICE_PUBLISH_DATE" DATE, 
	"PURCHASE_GOODS" CLOB, 
	"SITE_URL" VARCHAR2(1000 BYTE), 
	"COMPLAINT_BODY" CLOB, 
	"COMPLAINT_DECISION" NUMBER(2,0), 
	"DECISION_DIRECTIONS" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("PURCHASE_GOODS") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("COMPLAINT_BODY") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DECISION_DIRECTIONS") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table CONAGREEMENTSDOCS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONAGREEMENTSDOCS" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"DOCNUMBER" VARCHAR2(500 BYTE), 
	"DOCDATE" DATE, 
	"DOCNAME" VARCHAR2(2000 BYTE), 
	"DOCINFO" VARCHAR2(500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONBANKGUARANTEERETURN
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONBANKGUARANTEERETURN" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"INFO" NUMBER(1,0), 
	"BANKGUARANTEEREGNUMBERTYPE" VARCHAR2(20 BYTE), 
	"RETURNDATE" DATE, 
	"NOTICENUMBER" VARCHAR2(100 BYTE), 
	"REASON" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONBUDGETLINE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONBUDGETLINE" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"CONTRACTORPOS" NUMBER(15,0), 
	"PLACEPOS" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"ESTIMATE_ID" NUMBER(15,0), 
	"ESTIMATENAME" VARCHAR2(255 BYTE), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"RECIPIENTNAME" VARCHAR2(2000 BYTE), 
	"RECIPIENTACC_ID" NUMBER(15,0), 
	"RECIPIENTACCOUNT" VARCHAR2(35 BYTE), 
	"CODE1" VARCHAR2(100 BYTE), 
	"CODE2" VARCHAR2(100 BYTE), 
	"CODE3" VARCHAR2(100 BYTE), 
	"CODE4" VARCHAR2(100 BYTE), 
	"CODE5" VARCHAR2(100 BYTE), 
	"CODE6" VARCHAR2(100 BYTE), 
	"CODE7" VARCHAR2(100 BYTE), 
	"CODE8" VARCHAR2(100 BYTE), 
	"CODE9" VARCHAR2(100 BYTE), 
	"CODE10" VARCHAR2(100 BYTE), 
	"FINSRCNAME" VARCHAR2(512 BYTE), 
	"FINSRC_ID" NUMBER(15,0), 
	"LIABILITYEXPENSE_ID" NUMBER(15,0), 
	"ADVANCE_DATE" DATE, 
	"ADVANCE_AMOUNT" NUMBER(15,2), 
	"REMARK" VARCHAR2(2000 BYTE), 
	"INDUSTRYCODE_ID" NUMBER(15,0), 
	"GRANTINVESTMENT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONCONFIRMINGDOCS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONCONFIRMINGDOCS" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"DOCCODE" NUMBER(1,0) DEFAULT 1, 
	"DOCNUMBER" VARCHAR2(500 BYTE), 
	"DOCDATE" DATE, 
	"PROTOCOLNAME" VARCHAR2(2000 BYTE), 
	"DOCINFO" VARCHAR2(500 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONCONTRACTOR
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONCONTRACTOR" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"ORG_ID" NUMBER(15,0), 
	"ORGNAME" VARCHAR2(2000 BYTE), 
	"ORGTAXCODE" VARCHAR2(20 BYTE), 
	"ORGKPP" VARCHAR2(20 BYTE), 
	"ORGACC_ID" NUMBER(15,0), 
	"ORGACCOUNT" VARCHAR2(35 BYTE), 
	"ORGACCTYPE" NUMBER(1,0) DEFAULT 0, 
	"ORGEXECUTERACC_ID" NUMBER(15,0), 
	"ORGEXECUTERACC" VARCHAR2(35 BYTE), 
	"ORGEXECUTER_ID" NUMBER(15,0), 
	"ORGEXECUTER" VARCHAR2(2000 BYTE), 
	"ORGCORACCOUNT" VARCHAR2(35 BYTE), 
	"ORGBIC" VARCHAR2(9 BYTE), 
	"ORGBANKNAME" VARCHAR2(2000 BYTE), 
	"ORGOKTMO" VARCHAR2(11 BYTE), 
	"ORGINCOME_CODE" VARCHAR2(20 BYTE), 
	"ORGOKTMO_ID" NUMBER(15,0), 
	"ORGORGTYPE" NUMBER(1,0) DEFAULT 0, 
	"ORGISTAXCODEFREE" NUMBER(1,0) DEFAULT 0, 
	"ORGTAXPAYERCODE" VARCHAR2(100 BYTE), 
	"ORGLASTNAME" VARCHAR2(250 BYTE), 
	"ORGFIRSTNAME" VARCHAR2(250 BYTE), 
	"ORGPATRONYMIC" VARCHAR2(250 BYTE), 
	"ORGISCULTURE" NUMBER(1,0) DEFAULT 0, 
	"ORGPROPFORM_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONDAMAGEPAYMENTS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONDAMAGEPAYMENTS" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"DOCNUMBER" VARCHAR2(100 BYTE), 
	"DOCDATE" DATE, 
	"DOCNAME" VARCHAR2(1000 BYTE), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONEXECSTEP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONEXECSTEP" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"CONTRACTORPOS" NUMBER(15,0), 
	"BUDGETLINEPOS" NUMBER(15,0), 
	"EXECDATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONEXECSTEP2
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONEXECSTEP2" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"STEPNUMBER" NUMBER(15,0), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"FOREIGNAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"CAPTION" VARCHAR2(100 BYTE), 
	"PLANSTARTDATE" DATE, 
	"PLANFINISHDATE" DATE, 
	"REMARKSTARTDATE" VARCHAR2(1000 BYTE), 
	"REMARKFINISHDATE" VARCHAR2(1000 BYTE), 
	"FACTSTARTDATE" DATE, 
	"FACTFINISHDATE" DATE, 
	"REPORTPRINTDATE" DATE, 
	"ISPAYIGNORED" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONFCONCLUSIONCONTRACT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONFCONCLUSIONCONTRACT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"PLACINGWAY_ID" NUMBER(15,0), 
	"DOCCODE" VARCHAR2(6 BYTE), 
	"DOCNAME" VARCHAR2(1000 BYTE), 
	"ACTUAL" NUMBER(1,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONGOODS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONGOODS" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"GROUPCODE" VARCHAR2(20 BYTE), 
	"OKDP_CODE" VARCHAR2(20 BYTE), 
	"GROUPCAPTION" VARCHAR2(500 BYTE), 
	"GOODSCODE" VARCHAR2(20 BYTE), 
	"GOODSCAPTION" VARCHAR2(512 BYTE), 
	"QTY" NUMBER(15,4) DEFAULT 0, 
	"PRICE" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"STATUS" NUMBER(1,0) DEFAULT 0, 
	"OKPD_CODE" VARCHAR2(20 BYTE), 
	"OKPD_NAME" VARCHAR2(1000 BYTE), 
	"OKPD_ID" NUMBER(15,0), 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONGOODSPROP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONGOODSPROP" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"GOODSPOS" NUMBER(15,0), 
	"SEQORDER" NUMBER(15,0), 
	"PROPTYPE_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(512 BYTE), 
	"PROPVALUE" VARCHAR2(1500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONLOT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONLOT" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"LOTPOS" NUMBER(15,0), 
	"LOTNAME" VARCHAR2(2000 BYTE), 
	"LOTNUMBER" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONORGSTATUS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONORGSTATUS" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"ORGSTATUS_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONPAYFACT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONPAYFACT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CONTRACT_ID" NUMBER(15,0), 
	"CONTRACTORPOS" NUMBER(15,0), 
	"PAYDATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"ISNOTFOREXPORTLINE" NUMBER(1,0) DEFAULT 0, 
	"NUM" VARCHAR2(100 BYTE), 
	"CAPTION" VARCHAR2(500 BYTE), 
	"FOREIGNKEY" VARCHAR2(50 BYTE), 
	"DOCDATE" DATE, 
	"ISPREPAYMENT" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONPAYSHEDULE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONPAYSHEDULE" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"CONTRACTORPOS" NUMBER(15,0), 
	"BUDGETLINEPOS" NUMBER(15,0), 
	"PAYDATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONPLACE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONPLACE" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"RECIPIENTNAME" VARCHAR2(2000 BYTE), 
	"COUNTRY_ID" NUMBER(15,0), 
	"TERRITORYCODE" VARCHAR2(20 BYTE), 
	"ADDRESS" VARCHAR2(300 BYTE), 
	"SUPPLYAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"USEAMOUNT" NUMBER(1,0) DEFAULT 0, 
	"CALCPRICE" NUMBER(1,0) DEFAULT 0, 
	"EXECSTEP2POS" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONPRODUCTSCHANGEDOCS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONPRODUCTSCHANGEDOCS" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"DOCNUMBER" VARCHAR2(100 BYTE), 
	"DOCDATE" DATE, 
	"DOCNAME" VARCHAR2(1000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONREFUSALFACT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONREFUSALFACT" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"VOUCHERENTRY" VARCHAR2(4000 BYTE), 
	"EXPLANATION" VARCHAR2(4000 BYTE), 
	"REFUSALFACTFOUNDATION_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONSOLIDDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONSOLIDDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"BUDGET_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"DOC_DATE" DATE, 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"EXPORT_FLAG" NUMBER(1,0) DEFAULT 0, 
	"CMPORG_ID" NUMBER(15,0), 
	"CMPORGNAME" VARCHAR2(2000 BYTE), 
	"TERM_DATE" DATE, 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"PURCHASEMODE_CAPTION" VARCHAR2(500 BYTE), 
	"PRICECONTROL" NUMBER(1,0) DEFAULT 0, 
	"SUBJECT" VARCHAR2(2000 BYTE), 
	"REMARK" VARCHAR2(255 BYTE), 
	"DESCRIPTION" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONSTRUCTION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONSTRUCTION" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"ADDRESS" VARCHAR2(255 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONSUPPLYSHEDULE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONSUPPLYSHEDULE" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"GOODSPOS" NUMBER(15,0), 
	"PLACEPOS" NUMBER(15,0), 
	"SUPPLYDATE" DATE, 
	"QTY" NUMBER(15,4) DEFAULT 0, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONTRACTCARDDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONTRACTCARDDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"BUDGET_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"SELECTIONDATE" DATE, 
	"DEALDATE" DATE, 
	"BIDDERDATE" DATE, 
	"ETP_ID" NUMBER(15,0), 
	"ETPKEY" VARCHAR2(100 BYTE), 
	"ETP_DOC_NUMBER" VARCHAR2(50 BYTE), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"CUSTOMERNAME" VARCHAR2(2000 BYTE), 
	"CON_ID" NUMBER(15,0), 
	"CONNAME" VARCHAR2(2000 BYTE), 
	"CONTAXCODE" VARCHAR2(20 BYTE), 
	"CONKPP" VARCHAR2(20 BYTE), 
	"CON_ETPKEY" VARCHAR2(100 BYTE), 
	"CMPNAME" VARCHAR2(2000 BYTE), 
	"REMARK" VARCHAR2(255 BYTE), 
	"AMOUNT" NUMBER(15,2), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"REJECTPLACE" VARCHAR2(4000 BYTE), 
	"REASONDOCUMENTS" VARCHAR2(4000 BYTE), 
	"REJECTREASONS" VARCHAR2(4000 BYTE), 
	"WEBLINK_CONTRACT" VARCHAR2(2000 BYTE), 
	"WEBLINK_REJECT" VARCHAR2(2000 BYTE), 
	"WEBLINK_REVISION" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONTRACTDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONTRACTDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"BUDGET_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(30 BYTE), 
	"DOC_DATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"CONTYPE_ID" NUMBER(15,0), 
	"CONSTRUCTION_ID" NUMBER(15,0), 
	"STARTDATE" DATE, 
	"FINISHDATE" DATE, 
	"INFODATE" DATE, 
	"EXECDATE" DATE, 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"PURCHASEMODE_CAPTION" VARCHAR2(500 BYTE), 
	"CMPORG_ID" NUMBER(15,0), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"CUSTOMERNAME" VARCHAR2(2000 BYTE), 
	"CUSTOMERTAXCODE" VARCHAR2(20 BYTE), 
	"CUSTOMERKPP" VARCHAR2(20 BYTE), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"RECIPIENTNAME" VARCHAR2(2000 BYTE), 
	"CON_ID" NUMBER(15,0), 
	"CONNAME" VARCHAR2(2000 BYTE), 
	"CONTAXCODE" VARCHAR2(20 BYTE), 
	"CONKPP" VARCHAR2(20 BYTE), 
	"CONACC_ID" NUMBER(15,0), 
	"CONACCOUNT" VARCHAR2(35 BYTE), 
	"CONACCTYPE" NUMBER(1,0) DEFAULT 0, 
	"CONEXECUTERACC_ID" NUMBER(15,0), 
	"CONEXECUTERACC" VARCHAR2(35 BYTE), 
	"CONEXECUTER_ID" NUMBER(15,0), 
	"CONEXECUTER" VARCHAR2(2000 BYTE), 
	"CONCORACCOUNT" VARCHAR2(35 BYTE), 
	"CONBIC" VARCHAR2(9 BYTE), 
	"CONBANKNAME" VARCHAR2(2000 BYTE), 
	"CONCOUNTRY_ID" NUMBER(15,0), 
	"CONTERRITORYCODE" VARCHAR2(20 BYTE), 
	"CONPOSTINDEX" VARCHAR2(10 BYTE), 
	"CONADDRESS" VARCHAR2(300 BYTE), 
	"CONPHONE" VARCHAR2(100 BYTE), 
	"CONFAX" VARCHAR2(100 BYTE), 
	"CONEMAIL" VARCHAR2(256 BYTE), 
	"CONPROPFORM_ID" NUMBER(15,0), 
	"CONOKTMO" VARCHAR2(11 BYTE), 
	"CONINCOME_CODE" VARCHAR2(20 BYTE), 
	"DELIVERYBASISCODE" VARCHAR2(50 BYTE), 
	"PAYCONDITIONNAME" VARCHAR2(255 BYTE), 
	"PAYEDAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"LOTNAME" VARCHAR2(512 BYTE), 
	"CON_NUMBER" VARCHAR2(50 BYTE), 
	"CON_DATE" DATE, 
	"NOTICENUMBER" VARCHAR2(20 BYTE), 
	"CMPDATE" DATE, 
	"REMARK" VARCHAR2(255 BYTE), 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"ISGROUPSMOREONE" NUMBER(1,0), 
	"EXPORT_FLAG" NUMBER(1,0) DEFAULT 0, 
	"CONTROLFLAGS" NUMBER(15,0) DEFAULT 0, 
	"CONTRACTTYPE_ID" NUMBER(15,0), 
	"ACTUAL_YEAR" NUMBER(4,0), 
	"DISSOLVE_DATE" DATE, 
	"REVISION_DATE" DATE, 
	"COMPLETE_DATE" DATE, 
	"DEALDATE" DATE, 
	"PROCESS_BEFORE_DATE" DATE, 
	"CONFIRMNOTE" VARCHAR2(4000 BYTE), 
	"CONFIRM_DOC_NUMBER" VARCHAR2(100 BYTE), 
	"CONFIRM_DOC_DATE" DATE, 
	"SUBJECT" VARCHAR2(2000 BYTE), 
	"CHANGETYPE" NUMBER(1,0) DEFAULT 0, 
	"SUPPLIEDAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"REMARK_EXT" VARCHAR2(2000 BYTE), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"OOSFOUNDATIONPROTOCOLNUMBER" VARCHAR2(100 BYTE), 
	"OOSCHANGEDESCRIPTION" VARCHAR2(2000 BYTE), 
	"OOSCHANGEBASE" VARCHAR2(2000 BYTE), 
	"OOSCURRENTSTAGE" VARCHAR2(2 BYTE), 
	"OOSATTACHPACKETCNT" NUMBER(15,0) DEFAULT -1, 
	"STARTINGAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"LOTNUMBER" NUMBER(15,0) DEFAULT 1, 
	"OFFERNUMBER" VARCHAR2(20 BYTE), 
	"DOCKIND" NUMBER(1,0), 
	"GRNTAMOUNT" NUMBER(15,2), 
	"GRNTFROM" DATE, 
	"GRNTTO" DATE, 
	"GRNTTYPE" NUMBER(1,0) DEFAULT 0, 
	"GRNTGUARANTOR" VARCHAR2(2000 BYTE), 
	"GRNTRETURNAMT" NUMBER(15,2), 
	"GRNTRETURNDATE" DATE, 
	"GRNTINFO" VARCHAR2(2000 BYTE), 
	"GRNTTERMAMOUNT" NUMBER(15,2), 
	"GRNTTERMFROM" DATE, 
	"GRNTTERMTO" DATE, 
	"GRNTTERMTYPE" NUMBER(1,0) DEFAULT 0, 
	"GRNTTERMGUARANTOR" VARCHAR2(2000 BYTE), 
	"GRNTTERMRETURNAMT" NUMBER(15,2), 
	"GRNTTERMRETURNDATE" DATE, 
	"GRNTTERMINFO" VARCHAR2(2000 BYTE), 
	"PRICECHANGEREASON_ID" NUMBER(15,0), 
	"PRICECHANGECOMMENTS" VARCHAR2(4000 BYTE), 
	"SINGLECUSTOMERREASON_ID" NUMBER(15,0), 
	"OFRREQREASON_ID" NUMBER(15,0), 
	"PLANPOSITIONNUMBER" VARCHAR2(100 BYTE), 
	"INVITATION_DATE" DATE, 
	"PUBLIC_DATE" DATE, 
	"EVASIONPROTOCOLOOSKEY" NUMBER(15,0), 
	"EVASIONPROTOCOLNUMBER" VARCHAR2(30 BYTE), 
	"EVASIONPROTOCOLDATE" DATE, 
	"EVASIONPROTOCOLSIGNDATE" DATE, 
	"EVASIONPROTOCOLPUBLISHDATE" DATE, 
	"EVASIONPROTOCOLPLACE" VARCHAR2(4000 BYTE), 
	"CURYEARAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"FUTYEARAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"CURRENCY_ID" NUMBER(15,0), 
	"FORFEITAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"OFFER_DOCDATE" DATE, 
	"SINGLECUSTOMERREASONDOC_ID" NUMBER(15,0), 
	"SINGLECUSTOMERREASONDOC_NAME" VARCHAR2(1000 BYTE), 
	"REPORTBASE" VARCHAR2(2000 BYTE), 
	"GRNTREGNUMBER" VARCHAR2(20 BYTE), 
	"REGNUMIKU" VARCHAR2(100 BYTE), 
	"PRICETYPE" NUMBER(1,0) DEFAULT 0, 
	"PRICEFORMULA" VARCHAR2(2000 BYTE), 
	"SUBCONTRACTORSSUMINPERCENTS" NUMBER(15,2) DEFAULT 0, 
	"SUBCONTRACTORSSUMINRUB" NUMBER(15,2) DEFAULT 0, 
	"ENERGYSERVICECONTRACTINFO" VARCHAR2(2000 BYTE), 
	"MODIFICATIONREASON_ID" NUMBER(15,0), 
	"MODIFICATIONREASON_NAME" VARCHAR2(1250 BYTE), 
	"MODIFICATIONREASON_CODE" VARCHAR2(15 BYTE), 
	"MODIFICATIONREASONDOC_ID" NUMBER(15,0), 
	"MODIFICATIONREASONDOC_NAME" VARCHAR2(1000 BYTE), 
	"MODIFICATIONREASONDOC_CODE" VARCHAR2(10 BYTE), 
	"CONOKPO" VARCHAR2(20 BYTE), 
	"CONREGISTRATIONDATE" DATE, 
	"PRODUCTSCHANGEINFO" VARCHAR2(2000 BYTE), 
	"NECESSITY_ID" NUMBER(15,0) DEFAULT 0, 
	"NECESSITY_DESCRIPTION" VARCHAR2(1000 BYTE), 
	"GRNTREGNUMBER_ID" NUMBER(15,0), 
	"CONFCONCCONTRACT_ID" NUMBER(15,0), 
	"FOREIGN_STATUS" VARCHAR2(100 BYTE), 
	"SUBCONTRACTORSINFO" VARCHAR2(2000 BYTE), 
	"INFO_VERSION" NUMBER(9,0), 
	"CONFIRMINFO_DATE" DATE, 
	"OOSPURCHASEORG_ID" NUMBER(15,0), 
	"OOSPURCHASEORG_NAME" VARCHAR2(2000 BYTE), 
	"OOSPURCHASEORGOOSROLE" NUMBER(1,0), 
	"ISCREDIT" NUMBER(1,0) DEFAULT 0, 
	"CONOKTMO_ID" NUMBER(15,0), 
	"CONORGTYPE" NUMBER(1,0) DEFAULT 0, 
	"CONISTAXCODEFREE" NUMBER(1,0) DEFAULT 0, 
	"CONTAXPAYERCODE" VARCHAR2(100 BYTE), 
	"CONLASTNAME" VARCHAR2(250 BYTE), 
	"CONFIRSTNAME" VARCHAR2(250 BYTE), 
	"CONPATRONYMIC" VARCHAR2(250 BYTE), 
	"CONISCULTURE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONTRACTEXECDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONTRACTEXECDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"BUDGET_ID" NUMBER(15,0), 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"REMARK" VARCHAR2(255 BYTE), 
	"PUBLISH_DATE" DATE, 
	"TYPE" NUMBER(1,0) DEFAULT 0, 
	"STAGE_NUMBER" NUMBER(15,0), 
	"STAGE_DATE" DATE, 
	"ORDINALNUMBER" NUMBER(15,0), 
	"FINALSTAGEEXECUTION" NUMBER(1,0), 
	"BANKGRNT_EXPORTFLAG" NUMBER(1,0), 
	"BANKGRNT_IMPROPEREXECINFO" VARCHAR2(2000 BYTE), 
	"BANKGRNT_REQUIREMENTSDATE" DATE, 
	"BANKGRNT_PAYMENTAMOUNT" NUMBER(15,2), 
	"BANKGRNT_NAME" VARCHAR2(1000 BYTE), 
	"BANKGRNT_DOCUMENTDATE" DATE, 
	"BANKGRNT_DOCUMENTNUM" VARCHAR2(100 BYTE), 
	"BANKGRNT_BANKPAID" NUMBER(15,2), 
	"BANKGRNT_BANKCANCELDETAILS" VARCHAR2(200 BYTE), 
	"BANKGRNT_IMPROPERGRNTPAYMENT" VARCHAR2(2000 BYTE), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"CUSTOMERNAME" VARCHAR2(2000 BYTE), 
	"CUSTOMERTAXCODE" VARCHAR2(20 BYTE), 
	"CUSTOMERKPP" VARCHAR2(20 BYTE), 
	"REASON" VARCHAR2(4000 BYTE), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"TERMINATIONFLAG" NUMBER(1,0) DEFAULT 0, 
	"TERMINATIONDATE" DATE, 
	"TERMINATIONREASON" VARCHAR2(2000 BYTE), 
	"RESTRUCTUREFLAG" NUMBER(1,0) DEFAULT 0, 
	"RESTRUCTUREDATE" DATE, 
	"RESTRUCTUREAMOUNT" NUMBER(15,2), 
	"REPAYMENTSCHEDULE" VARCHAR2(2000 BYTE), 
	"DELAY_WRTOFFPNLTSFLAG" NUMBER(1,0) DEFAULT 0, 
	"TOTALAMOUNT" NUMBER(15,2), 
	"DELAY_PENALTIESFLAG" NUMBER(1,0) DEFAULT 0, 
	"DELAY_DATE" DATE, 
	"DELAY_AMOUNT" NUMBER(15,2), 
	"DELAY_PERIOD" DATE, 
	"DELAY_NOTICEDOCNUM" VARCHAR2(100 BYTE), 
	"DELAY_NOTICEDOCDATE" DATE, 
	"WRITEOFF_PENALTIESFLAG" NUMBER(1,0) DEFAULT 0, 
	"WRITEOFF_DATE" DATE, 
	"WRITEOFF_AMOUNT" NUMBER(15,2), 
	"WRITEOFF_NOTICEDOCNUM" VARCHAR2(100 BYTE), 
	"WRITEOFF_NOTICEDOCDATE" DATE, 
	"HLDCASHENFRCMNT_FLAG" NUMBER(1,0) DEFAULT 0, 
	"IMPROPERSUPPLIERINFO" VARCHAR2(2000 BYTE), 
	"HOLDAMOUNT" NUMBER(15,2), 
	"HOLDDATE" DATE, 
	"BANKGRNT_REFUNDAMOUNT" NUMBER(15,2), 
	"BANKGRNT_PENALTIESAMOUNT" NUMBER(15,2), 
	"BANKGRNT_LOSSNOTCOVEREDAMOUNT" NUMBER(15,2), 
	"BANKGRNT_WARRANTYAMOUNT" NUMBER(15,2), 
	"BANKGRNT_OTHERAMOUNT" NUMBER(15,2)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONTRACTOR
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONTRACTOR" 
   (	"INSPECTOR_ID" NUMBER(15,0), 
	"ORG_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONTRACTREASON
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONTRACTREASON" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CODE" VARCHAR2(15 BYTE), 
	"NAME" VARCHAR2(2000 BYTE), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"ACTUAL" NUMBER(1,0) DEFAULT 0, 
	"REFTYPE" NUMBER(1,0), 
	"POINTLAW" VARCHAR2(1000 BYTE), 
	"BUDGETTYPE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONTRACTREASON_DOCLINES
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONTRACTREASON_DOCLINES" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CONTRACTREASON_ID" NUMBER(15,0), 
	"CODE" VARCHAR2(10 BYTE), 
	"NAME" VARCHAR2(1000 BYTE), 
	"ACTUAL" NUMBER(1,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONTRACTTEMPLATEDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONTRACTTEMPLATEDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"REMARK" VARCHAR2(255 BYTE), 
	"CMPLOTPOS" NUMBER(15,0), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"CONTRACT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONTYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONTYPE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"TEMPLATENAME" VARCHAR2(100 BYTE), 
	"ISCONTRACT" NUMBER(15,0) DEFAULT 1, 
	"CONTRACTTYPE" NUMBER(15,0) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CONTYPEATTACH
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CONTYPEATTACH" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CONTYPE_ID" NUMBER(15,0), 
	"DEVICE_NAME" VARCHAR2(100 BYTE), 
	"ATTACH_NAME" VARCHAR2(100 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"ATTACH_TYPE" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table COUNTRY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."COUNTRY" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CRLFILE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CRLFILE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CRLFILE" BLOB, 
	"CRLPOINT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("CRLFILE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table CRLPOINT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CRLPOINT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"URL" VARCHAR2(4000 BYTE), 
	"THISUPDATE" DATE, 
	"NEXTUPDATE" DATE, 
	"DESCRIPTION" VARCHAR2(4000 BYTE), 
	"FULL_ISSUER" VARCHAR2(1000 BYTE), 
	"ISSUER" VARCHAR2(1000 BYTE), 
	"ACTUAL" NUMBER(1,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CSGOODS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CSGOODS" 
   (	"CONSOLID_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"GROUPCODE" VARCHAR2(20 BYTE), 
	"GROUPCAPTION" VARCHAR2(500 BYTE), 
	"GOODSCODE" VARCHAR2(20 BYTE), 
	"GOODSCAPTION" VARCHAR2(512 BYTE), 
	"PRICE" NUMBER(15,2) DEFAULT 0, 
	"OKDP_CODE" VARCHAR2(20 BYTE), 
	"OKPD_CODE" VARCHAR2(20 BYTE), 
	"OKPD_NAME" VARCHAR2(1000 BYTE), 
	"OKPD_ID" NUMBER(15,0), 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CSGOODSPROP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CSGOODSPROP" 
   (	"CONSOLID_ID" NUMBER(15,0), 
	"GOODSPOS" NUMBER(15,0), 
	"SEQORDER" NUMBER(15,0), 
	"PROPTYPE_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(512 BYTE), 
	"PROPVALUE" VARCHAR2(1500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CSRECIPIENT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CSRECIPIENT" 
   (	"CONSOLID_ID" NUMBER(15,0), 
	"ORG_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CURHISTORY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CURHISTORY" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"CURRENCY_ID" NUMBER(15,0), 
	"DT" DATE, 
	"RATE" NUMBER(10,4), 
	"DIVISOR" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table CURRENCY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."CURRENCY" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CODE" VARCHAR2(3 BYTE), 
	"CAPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DATAOBJECTCHANGELOG
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DATAOBJECTCHANGELOG" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(18,0), 
	"CHANGE_TIME" DATE, 
	"USER_NAME" VARCHAR2(255 BYTE), 
	"USER_REALNAME" VARCHAR2(255 BYTE), 
	"UK" NUMBER(1,0), 
	"OBJ_NAME" VARCHAR2(255 BYTE), 
	"OBJ_ID" NUMBER(15,0), 
	"OBJ_VERSION" NUMBER(15,0), 
	"REMARK" VARCHAR2(255 BYTE), 
	"DATA" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("DATA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DATASOURCE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DATASOURCE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(128 BYTE), 
	"CAPTION" VARCHAR2(128 BYTE), 
	"JAVACLASSNAME" VARCHAR2(255 BYTE), 
	"DECLARATION" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("DECLARATION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DAYVERSION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DAYVERSION" 
   (	"DAY_DATE" DATE, 
	"DAY_VERSION" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DBCONNECT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DBCONNECT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(250 BYTE), 
	"URL" VARCHAR2(250 BYTE), 
	"USERNAME" VARCHAR2(50 BYTE), 
	"PSWD" VARCHAR2(30 BYTE), 
	"SYSUSERNAME" VARCHAR2(50 BYTE), 
	"SYSPASSWORD" VARCHAR2(30 BYTE), 
	"STATUS" NUMBER(15,0) DEFAULT 6, 
	"DBCONNECT_TYPE" NUMBER(15,0) DEFAULT 1, 
	"STATUS_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DBCONSTRAINT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DBCONSTRAINT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"SUBSYSTEM" NUMBER(15,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DBUPDATE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DBUPDATE" 
   (	"ID" NUMBER(15,0), 
	"AUTHOR" VARCHAR2(50 BYTE), 
	"UPDATE_DATE" DATE, 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"VERSIONS" RAW(21) DEFAULT 'a' || TO_CHAR(SYSDATE, 'mmddss')
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DECREASON
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DECREASON" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"DOCUMENTCLASS_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DELIVERYBASIS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DELIVERYBASIS" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"SYSTEM_FLAG" NUMBER(1,0) DEFAULT 0, 
	"CODE" VARCHAR2(50 BYTE), 
	"CAPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DESCGROUP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DESCGROUP" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DESCRIPTION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DESCRIPTION" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"DESCGROUP_ID" NUMBER(15,0), 
	"DESCRIPTION" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DESCRIPTIONCACHE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DESCRIPTIONCACHE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DESCRIPTION" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DEVIATIONFACTFOUNDATION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DEVIATIONFACTFOUNDATION" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CODE" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(500 BYTE), 
	"ACTUAL" NUMBER(1,0) DEFAULT 1, 
	"BUDGETTYPE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DIGEST
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DIGEST" 
   (	"ID" NUMBER(18,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"FGROUP_ID" NUMBER(18,0), 
	"TRANSFORMVERSION" VARCHAR2(32 BYTE), 
	"DIGESTDATA" CLOB, 
	"ISACTIVE" NUMBER(1,0) DEFAULT 0, 
	"DOCCLENANERNOTIFY" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("DIGESTDATA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DIGESTSIGN
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DIGESTSIGN" 
   (	"ID" NUMBER(18,0), 
	"VERSION" NUMBER(15,0), 
	"DIGEST_ID" NUMBER(18,0), 
	"SYSUSER_ID" NUMBER(15,0), 
	"SIGNTIME" DATE, 
	"ISVALID" NUMBER(1,0), 
	"CHECKTIME" DATE, 
	"REMARK" CLOB, 
	"SIGN" CLOB, 
	"CERTSERIALNUMBER" VARCHAR2(64 BYTE), 
	"CERTISSUERSERIALNUMBER" VARCHAR2(64 BYTE), 
	"USERROLE_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"SIGNTYPE" NUMBER(1,0) DEFAULT 0, 
	"ALGORITHM" VARCHAR2(30 BYTE), 
	"SIGN_SEQ_CTRL" NUMBER(1,0) DEFAULT 0, 
	"DOCATTACHEX_ID" NUMBER(18,0), 
	"SIGNVERSION" NUMBER(15,0), 
	"ISIMPORTED" NUMBER(1,0) DEFAULT 0, 
	"IMPORTUSER_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("REMARK") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("SIGN") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DISPSTATUS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DISPSTATUS" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"SUBSYSTEM" NUMBER(15,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCACTION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCACTION" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"SHOW_ORDER" NUMBER(15,0) DEFAULT 0, 
	"SHORTCUT_KEY" VARCHAR2(30 BYTE), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"CONFIRM_TEXT" VARCHAR2(255 BYTE), 
	"CLIENTOBJECT_ID" NUMBER(15,0), 
	"OBJECT_PARAMS" VARCHAR2(300 BYTE), 
	"DOCEVENT_NAME" VARCHAR2(50 BYTE), 
	"CLIENTOBJECT_NAME" VARCHAR2(255 BYTE), 
	"SHOW_MODE" NUMBER(15,0) DEFAULT 0, 
	"USER_TYPE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCATTACH
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCATTACH" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"ATTACH_NAME" VARCHAR2(100 BYTE), 
	"ATTACH_DATA" BLOB, 
	"AUTHOR" NUMBER(15,0), 
	"ACTION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("ATTACH_DATA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DOCATTACHEX
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCATTACHEX" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"ATTACH_NAME" VARCHAR2(256 BYTE), 
	"DEVICE_NAME" VARCHAR2(100 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"GUID" VARCHAR2(100 BYTE), 
	"CONVERTER_ID" NUMBER(15,0), 
	"AUTHOR" NUMBER(15,0), 
	"ACTION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCATTACH_LINK
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCATTACH_LINK" 
   (	"DOCATTACH_ID" NUMBER(18,0), 
	"STORAGE_NAME" VARCHAR2(100 BYTE), 
	"DEVICE_NAME" VARCHAR2(100 BYTE), 
	"REAL_FILENAME" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCCATEGORY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCCATEGORY" 
   (	"ID" NUMBER(18,0), 
	"VERSION" NUMBER(18,0), 
	"NAME" VARCHAR2(100 BYTE), 
	"CODE" VARCHAR2(15 BYTE), 
	"SYSTEM_FLAG" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCCLASS_DISPSTATUS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCCLASS_DISPSTATUS" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"PARDISPSTATUS_ID" NUMBER(15,0), 
	"PARALLEL" NUMBER(1,0), 
	"CONTROL_TYPE" NUMBER(1,0) DEFAULT 0, 
	"REMARK" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCCOMMENT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCCOMMENT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"BODY" CLOB, 
	"DATE_CREATE" DATE, 
	"REALNAME" VARCHAR2(100 BYTE), 
	"USERNAME" VARCHAR2(30 BYTE), 
	"USER_ID" NUMBER(15,0), 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("BODY") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DOCCUSTOMFIELDS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCCUSTOMFIELDS" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"FIELDTYPE" NUMBER(1,0), 
	"REQUIRED" NUMBER(1,0) DEFAULT 0, 
	"FIELDPOS" NUMBER(15,0), 
	"METADATA" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("METADATA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DOCCUSTOMFIELDVALUES
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCCUSTOMFIELDVALUES" 
   (	"DOCUMENT_ID" NUMBER(15,0), 
	"CUSTFIELD_ID" NUMBER(15,0), 
	"FIELD_VALUE" VARCHAR2(255 BYTE), 
	"FIELD_DATA" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("FIELD_DATA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DOCDIGESTREQUISITES
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCDIGESTREQUISITES" 
   (	"DOCDIGESTRULE_ID" NUMBER(18,0), 
	"RULEREQUISITE_ID" NUMBER(18,0), 
	"ITEM_CONDITION" NUMBER(1,0) DEFAULT 0, 
	"ITEM_VALUE" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCDIGESTROLES
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCDIGESTROLES" 
   (	"DOCDIGESTRULE_ID" NUMBER(18,0), 
	"USERROLE_ID" NUMBER(18,0), 
	"SIGN_ORDER" NUMBER(15,0) DEFAULT 0, 
	"DOCACTION_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCDIGESTRULE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCDIGESTRULE" 
   (	"ID" NUMBER(18,0), 
	"VERSION" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"OIDREF_ID" NUMBER(18,0), 
	"ROLE_SEQUENCE_CONTROL" NUMBER(1,0) DEFAULT 0, 
	"FGROUPHEADER_ID" NUMBER(18,0), 
	"PARDISPSTATUS_ID" NUMBER(15,0), 
	"RULESCRIPT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCEVENT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCEVENT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"SHOW_ORDER" NUMBER(15,0) DEFAULT 0, 
	"EXTERNAL_FLAG" NUMBER(1,0) DEFAULT 0, 
	"CAPTION" VARCHAR2(100 BYTE), 
	"PROCTREE_ID" NUMBER(15,0), 
	"USERPROCTREE_ID" NUMBER(15,0), 
	"AUTO_RPL" NUMBER(1,0) DEFAULT 1, 
	"ISOFFLINE" NUMBER(1,0) DEFAULT 1, 
	"USER_TYPE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCEVERRLOG
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCEVERRLOG" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"SYSUSER_ID" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"EVENT_BEGIN" DATE, 
	"EVENT_END" DATE, 
	"EVENT_MSG" BLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("EVENT_MSG") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DOCEXCHANGESCHEME
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCEXCHANGESCHEME" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCFLAG
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCFLAG" 
   (	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCFLAGTYPE_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCFLAGCATEGORY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCFLAGCATEGORY" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCFLAGTYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCFLAGTYPE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(255 BYTE), 
	"CATEGORY_ID" NUMBER(15,0), 
	"READONLY" NUMBER(1,0) DEFAULT 0, 
	"RADIO" NUMBER(1,0) DEFAULT 0, 
	"VISIBLE" NUMBER(1,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCGROUP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCGROUP" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(100 BYTE), 
	"PARENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DESCRIPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCJOURNAL
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCJOURNAL" 
   (	"ID" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OLD_DISPSTATUS_ID" NUMBER(15,0), 
	"ACTION_NAME" VARCHAR2(64 BYTE), 
	"ACTION_DATA" CLOB, 
	"REMARK" CLOB, 
	"ATTACH_NAME" VARCHAR2(270 BYTE), 
	"TASKJOURNAL_ID" NUMBER(15,0), 
	"WORK_DATE" DATE, 
	"PARDISPSTATUS_ID" NUMBER(15,0), 
	"OLD_PARDISPSTATUS_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("ACTION_DATA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("REMARK") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DOCREQ
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCREQ" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"VENDOR_TYPE" NUMBER(2,0) DEFAULT 0, 
	"ISREQUIRED" NUMBER(1,0) DEFAULT 1, 
	"PURCHASEMODE_ID" NUMBER(15,0) DEFAULT 1, 
	"REQUIREMENTTYPE_ID" NUMBER(15,0) DEFAULT 1, 
	"NAME" VARCHAR2(1024 BYTE), 
	"DESCRIPTION" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCRETENTION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCRETENTION" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(200 BYTE), 
	"CONDITION" CLOB, 
	"MSG" CLOB, 
	"FONT" VARCHAR2(200 BYTE), 
	"DOCACTION_ID" NUMBER(15,0), 
	"DOCSTATUS_ID" NUMBER(15,0), 
	"ISACTIVE" NUMBER(1,0) DEFAULT 0, 
	"SUBSYSTEM" NUMBER(15,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("CONDITION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("MSG") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DOCRETENTIONSTATITEMS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCRETENTIONSTATITEMS" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCRETENTION_ID" NUMBER(15,0), 
	"MSG" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("MSG") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DOCRETENTIONSTATUS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCRETENTIONSTATUS" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCRETENTION_ID" NUMBER(15,0), 
	"MSG" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("MSG") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DOCSELECT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCSELECT" 
   (	"ID" NUMBER(15,0), 
	"ORDER_ID" NUMBER(15,0), 
	"DOCREQPOS" NUMBER(15,0), 
	"COMPETITORPOS" NUMBER(15,0), 
	"VAL" NUMBER(1,0) DEFAULT null, 
	"ISREQUIRED" NUMBER(1,0) DEFAULT 1, 
	"TYPE" NUMBER(2,0) DEFAULT 0, 
	"REMARK" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCSITELINK
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCSITELINK" 
   (	"DOCUMENT_ID" NUMBER(15,0), 
	"SITE_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCSTATUS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCSTATUS" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"PROCTREE_ID" NUMBER(15,0), 
	"USERPROCTREE_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"PARENT_ID" NUMBER(15,0), 
	"PARALLEL" NUMBER(1,0) DEFAULT 0, 
	"INITIALL" NUMBER(1,0) DEFAULT 0, 
	"CONTROL_TYPE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCUMENT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCUMENT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"PARDISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"CREATE_DATE" DATE, 
	"PARENT_ID" NUMBER(15,0), 
	"NOTIFY_GROUP" NUMBER(15,0), 
	"INSTANCE_LINK" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(100 BYTE), 
	"DOC_DATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"REMARK" VARCHAR2(255 BYTE), 
	"REG_DATE" DATE, 
	"CARRY_DATE" DATE, 
	"LAST_SYS_DATE" DATE, 
	"LAST_OPER_DATE" DATE, 
	"ATTACH_CNT" NUMBER(15,0) DEFAULT 0, 
	"AUTHOR_ID" NUMBER(15,0), 
	"SIGN_CNT" NUMBER(18,0) DEFAULT 0, 
	"APP_TYPE" NUMBER(2,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCUMENTBLOCKINFO
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCUMENTBLOCKINFO" 
   (	"DOCUMENT_ID" NUMBER(15,0), 
	"SYSUSER_ID" NUMBER(15,0), 
	"BLOCKTIME" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCUMENTCLASS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCUMENTCLASS" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"SERVERPROCESSOR_ID" NUMBER(15,0), 
	"CLIENTMODULE_ID" NUMBER(15,0), 
	"CLIENTDOCUMENT_ID" NUMBER(15,0), 
	"DOCPRINTER_ID" NUMBER(15,0), 
	"PRINTER_ACTION" VARCHAR2(50 BYTE), 
	"TEMPLATE_NAME" VARCHAR2(100 BYTE), 
	"PARAMS_GUID" VARCHAR2(100 BYTE), 
	"PARAMS" CLOB, 
	"CLASSNAME" VARCHAR2(255 BYTE), 
	"FUNCAT_NAME" VARCHAR2(50 BYTE), 
	"CONTROLCLASSNAME" VARCHAR2(255 BYTE), 
	"NUMGENERATOR_ID" NUMBER(15,0), 
	"PRINTPARAMS" CLOB, 
	"PRINTCLIENTOBJECT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("PARAMS") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("PRINTPARAMS") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DOCUMENTREPORTS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCUMENTREPORTS" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(255 BYTE), 
	"DOCPRINTER_ID" NUMBER(15,0), 
	"PRINTER_ACTION" VARCHAR2(255 BYTE), 
	"TEMPLATE_NAME" VARCHAR2(255 BYTE), 
	"NAME" VARCHAR2(150 BYTE), 
	"SUBSYSTEM" NUMBER(15,0) DEFAULT 0, 
	"BIRT_OUTPUTFORMAT" VARCHAR2(10 BYTE), 
	"BIRT_EMITTER" VARCHAR2(128 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOCWEBLINK
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOCWEBLINK" 
   (	"DOCUMENT_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"NAME" VARCHAR2(255 BYTE), 
	"WEBLINK" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table DOMEN
--------------------------------------------------------

  CREATE TABLE "GZVLG"."DOMEN" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PARENT_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table EQUALITY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."EQUALITY" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(300 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table EQUALITYCODES
--------------------------------------------------------

  CREATE TABLE "GZVLG"."EQUALITYCODES" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"EQUALITY_ID" NUMBER(15,0), 
	"CODE" VARCHAR2(7 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ESCHECKRULE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ESCHECKRULE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"ISACTIVE" NUMBER(1,0) DEFAULT 1, 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"FGROUPHEADER_ID" NUMBER(18,0), 
	"PARDISPSTATUS_ID" NUMBER(15,0), 
	"RULESCRIPT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ESCHECKRULEREQUISITES
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ESCHECKRULEREQUISITES" 
   (	"ESCHECKRULE_ID" NUMBER(15,0), 
	"RULEREQUISITE_ID" NUMBER(18,0), 
	"ITEM_CONDITION" NUMBER(1,0) DEFAULT 0, 
	"ITEM_VALUE" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ESCRROLE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ESCRROLE" 
   (	"ESCHECKRULE_ID" NUMBER(15,0), 
	"USERROLE_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ESTIMATE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ESTIMATE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"ORG_ID" NUMBER(15,0), 
	"FOREIGNKEY" VARCHAR2(50 BYTE), 
	"CAPTION" VARCHAR2(255 BYTE), 
	"FINYEAR" NUMBER(4,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ETP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ETP" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(100 BYTE), 
	"ADDRESS" VARCHAR2(255 BYTE), 
	"OOSETPCODE" VARCHAR2(20 BYTE), 
	"MSGSITE_ID" NUMBER(15,0), 
	"CLASSNAME" VARCHAR2(255 BYTE), 
	"LINK_ADDRESS" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ETPATTACH
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ETPATTACH" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"ETP_ID" NUMBER(15,0), 
	"DOCATTACHEX_ID" NUMBER(15,0), 
	"ETPKEY" VARCHAR2(100 BYTE), 
	"FILE_CRC" VARCHAR2(100 BYTE), 
	"URL" VARCHAR2(1024 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ETPTYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ETPTYPE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CODE" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(100 BYTE), 
	"ADDRESS" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table EXCHANGECLASSES
--------------------------------------------------------

  CREATE TABLE "GZVLG"."EXCHANGECLASSES" 
   (	"DOCEXCHANGESCHEME_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FACTDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FACTDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"BUDGET_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(100 BYTE), 
	"DOC_DATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"REMARK" VARCHAR2(255 BYTE), 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"TYPENAME" VARCHAR2(50 BYTE), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"RECIPIENTNAME" VARCHAR2(2000 BYTE), 
	"VENDOR_ID" NUMBER(15,0), 
	"VENDORTAXCODE" VARCHAR2(20 BYTE), 
	"VENDORKPP" VARCHAR2(20 BYTE), 
	"VENDORNAME" VARCHAR2(2000 BYTE), 
	"VENDORCOUNTRY_ID" NUMBER(15,0) DEFAULT 643, 
	"VENDORTERRITORYCODE" VARCHAR2(20 BYTE), 
	"VENDORADDRESS" VARCHAR2(300 BYTE), 
	"VENDORPOSTINDEX" VARCHAR2(10 BYTE), 
	"VENDORPHONE" VARCHAR2(100 BYTE), 
	"VENDORFAX" VARCHAR2(100 BYTE), 
	"VENDOREMAIL" VARCHAR2(256 BYTE), 
	"COUNTRY_ID" NUMBER(15,0), 
	"TERRITORYCODE" VARCHAR2(20 BYTE), 
	"SUPPLYADDRESS" VARCHAR2(300 BYTE), 
	"ISGROUPSMOREONE" NUMBER(1,0), 
	"FACTTYPE" NUMBER(1,0) DEFAULT 0, 
	"EXPORT_FLAG" NUMBER(1,0) DEFAULT 0, 
	"EXPORT_PARENT_ID" NUMBER(15,0), 
	"PAYEDAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"ACTUAL_YEAR" NUMBER(4,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FACTDOCTYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FACTDOCTYPE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCTYPE" NUMBER(1,0), 
	"NAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FCTGOODS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FCTGOODS" 
   (	"FACT_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"GROUPCODE" VARCHAR2(20 BYTE), 
	"OKDP_CODE" VARCHAR2(20 BYTE), 
	"GROUPCAPTION" VARCHAR2(500 BYTE), 
	"GOODSCODE" VARCHAR2(20 BYTE), 
	"GOODSCAPTION" VARCHAR2(512 BYTE), 
	"QTY" NUMBER(15,4) DEFAULT 0, 
	"PRICE" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"STATUS" NUMBER(1,0) DEFAULT 0, 
	"OKPD_CODE" VARCHAR2(20 BYTE), 
	"USEAMOUNT" NUMBER(1,0) DEFAULT 0, 
	"OKPD_NAME" VARCHAR2(1000 BYTE), 
	"OKPD_ID" NUMBER(15,0), 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FCTGOODSPROP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FCTGOODSPROP" 
   (	"FACT_ID" NUMBER(15,0), 
	"GOODSPOS" NUMBER(15,0), 
	"SEQORDER" NUMBER(15,0), 
	"PROPTYPE_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(512 BYTE), 
	"PROPVALUE" VARCHAR2(1500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FETCHMODE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FETCHMODE" 
   (	"ID" NUMBER(18,0), 
	"VERSION" NUMBER(18,0), 
	"DOCUMENTCLASS_ID" NUMBER(18,0), 
	"PACKET_SIZE" NUMBER(18,0), 
	"MAX_SIZE" NUMBER(18,0), 
	"DESCRIPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FGROUP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FGROUP" 
   (	"ID" NUMBER(18,0), 
	"VERSION" NUMBER(15,0), 
	"OBJECT_NAME" VARCHAR2(255 BYTE), 
	"BODY" CLOB, 
	"ALGORITHM" VARCHAR2(30 BYTE), 
	"CLASSNAME" VARCHAR2(255 BYTE), 
	"FGROUPHEADER_ID" NUMBER(18,0), 
	"FG_VERSION" NUMBER(18,0), 
	"FG_DATE" TIMESTAMP (6), 
	"ACTUAL" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("BODY") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table FGROUPATTACH
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FGROUPATTACH" 
   (	"ID" NUMBER(18,0), 
	"VERSION" NUMBER(15,0), 
	"DOCATTACH_ID" NUMBER(15,0), 
	"FGROUP_ID" NUMBER(15,0), 
	"DATA" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("DATA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table FGROUPHEADER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FGROUPHEADER" 
   (	"ID" NUMBER(18,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(100 BYTE), 
	"CAPTION" VARCHAR2(255 BYTE), 
	"DOCUMENTCLASS_ID" NUMBER(18,0), 
	"GROUP_TYPE" NUMBER(1,0) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"SUBSYSTEM" NUMBER(18,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FILEFOLDER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FILEFOLDER" 
   (	"FILE_NAME" VARCHAR2(255 BYTE), 
	"FOLDER" VARCHAR2(32 BYTE), 
	"DEVICE_NAME" VARCHAR2(25 BYTE) DEFAULT 'defaultDevice', 
	"STORAGE_NAME" VARCHAR2(25 BYTE) DEFAULT 'UNKNOWN'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FINSRC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FINSRC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(512 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"CODE" VARCHAR2(16 BYTE), 
	"FINYEAR" NUMBER(4,0), 
	"ISCONINFONOTBUDGET" NUMBER(1,0) DEFAULT 0, 
	"ISBUDGET" NUMBER(1,0) DEFAULT 0, 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"ACTUAL" NUMBER(1,0) DEFAULT 1, 
	"OKTMO" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FINSRCSATISFY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FINSRCSATISFY" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"FINYEAR" NUMBER(4,0), 
	"FINSRCSELECTEDYEARID" NUMBER(15,0), 
	"FINSRCNEXTYEARID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FORMATCONVERTER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FORMATCONVERTER" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"CLASSNAME" VARCHAR2(100 BYTE), 
	"CAPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FUNCAT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FUNCAT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"CAPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FUNCDOCUMENT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FUNCDOCUMENT" 
   (	"FUNUNIT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FUNCMODULE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FUNCMODULE" 
   (	"FUNUNIT_ID" NUMBER(15,0), 
	"MODULENAME" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FUNCOBJECT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FUNCOBJECT" 
   (	"FUNUNIT_ID" NUMBER(15,0), 
	"CLIENTOBJECT_NAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FUNCPROCESSOR
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FUNCPROCESSOR" 
   (	"FUNUNIT_ID" NUMBER(15,0), 
	"SERVERPROCESSOR_NAME" VARCHAR2(50 BYTE), 
	"ACCESS_MODE" NUMBER(15,0) DEFAULT 3
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FUNCPROVIDER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FUNCPROVIDER" 
   (	"FUNUNIT_ID" NUMBER(15,0), 
	"SERVERPROVIDER_NAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FUNCREFERENCE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FUNCREFERENCE" 
   (	"FUNUNIT_ID" NUMBER(15,0), 
	"REF_NAME" VARCHAR2(50 BYTE), 
	"ACCESS_MODE" NUMBER(15,0) DEFAULT 3
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FUNCUNIT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FUNCUNIT" 
   (	"FUNUNIT_ID" NUMBER(15,0), 
	"FUNUNIT_NAME" VARCHAR2(50 BYTE), 
	"ACCESS_MODE" NUMBER(15,0) DEFAULT 3
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table FUNUNIT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."FUNUNIT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"FUNCAT_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"SUBTYPE" NUMBER(18,0) DEFAULT 0, 
	"APP_ID" NUMBER(15,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GCREGISTER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GCREGISTER" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"ATTACH_NAME" VARCHAR2(100 BYTE), 
	"ATTACH_DATA" BLOB, 
	"CAPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("ATTACH_DATA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table GOODS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GOODS" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CODE" VARCHAR2(20 BYTE), 
	"GROUP_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(512 BYTE), 
	"DESCRIPTION" VARCHAR2(500 BYTE), 
	"OKP_CODE" VARCHAR2(16 BYTE), 
	"IS_ACTUAL" NUMBER(1,0) DEFAULT 1, 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GOODSBAN
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GOODSBAN" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME_NPA" VARCHAR2(1000 BYTE), 
	"BAN_FROMDATE" DATE, 
	"BAN_TODATE" DATE, 
	"BAN_DESCRIPTION" VARCHAR2(1000 BYTE), 
	"IS223FZ" NUMBER(1,0) DEFAULT 0, 
	"CONTROL_MODE" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GOODSBANGOODSOKPD
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GOODSBANGOODSOKPD" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"GOODSOKPD_ID" NUMBER(15,0), 
	"GOODSBAN_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GOODSBANPURCHASEMODE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GOODSBANPURCHASEMODE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"GOODSBAN_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GOODSBRANCH
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GOODSBRANCH" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(512 BYTE), 
	"BRANCHTYPE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GOODSGROUP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GOODSGROUP" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CODE" VARCHAR2(20 BYTE), 
	"PARENT_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(500 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"ISUNITFILTERED" NUMBER(1,0) DEFAULT 0, 
	"IS_ACTUAL" NUMBER(1,0) DEFAULT 1, 
	"HAS_PREFERENCE" NUMBER(1,0) DEFAULT 0, 
	"OKP_CODE" VARCHAR2(16 BYTE), 
	"OKDP_CODE" VARCHAR2(7 BYTE), 
	"OKPD_CODE" VARCHAR2(20 BYTE), 
	"IS_ENTERPRISE" NUMBER(1,0) DEFAULT 0, 
	"IS_CONTROLPRICE" NUMBER(1,0) DEFAULT 0, 
	"CATEGORY" NUMBER(1,0) DEFAULT 1, 
	"NOTFORPLAN" NUMBER(1,0) DEFAULT 0, 
	"OKPD_ID" NUMBER(15,0), 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GOODSGROUPDOCDETAIL
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GOODSGROUPDOCDETAIL" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"GROUPCODE" VARCHAR2(20 BYTE), 
	"OKDP_CODE" VARCHAR2(20 BYTE), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GOODSGROUPPURCHASEMODE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GOODSGROUPPURCHASEMODE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"GOODSGROUP_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GOODSGROUP_TREE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GOODSGROUP_TREE" 
   (	"GROUP_ID" NUMBER(15,0), 
	"TREE" VARCHAR2(252 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GOODSOKDP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GOODSOKDP" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CODE" VARCHAR2(7 BYTE), 
	"NAME" VARCHAR2(512 BYTE), 
	"ACTUAL" NUMBER(1,0) DEFAULT 1, 
	"CHAPTER" NUMBER(1,0) DEFAULT 0, 
	"UNUSABLE" NUMBER(1,0) DEFAULT 0, 
	"ENTERPRISE" NUMBER(1,0) DEFAULT 0, 
	"UUISPREFERENCE" NUMBER(1,0) DEFAULT 0, 
	"INVALIDPREFERENCE" NUMBER(1,0) DEFAULT 0, 
	"OKVED_ID" NUMBER(15,0), 
	"PARENT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GOODSOKDPCOUNTRYPREF
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GOODSOKDPCOUNTRYPREF" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"COUNTRY_ID" NUMBER(15,0), 
	"GOODSOKDP_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GOODSOKDPPURCHASEMODE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GOODSOKDPPURCHASEMODE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"GOODSOKDP_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GOODSOKPD
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GOODSOKPD" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CODE" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(1000 BYTE), 
	"DESCRIPTION" VARCHAR2(4000 BYTE), 
	"ACTUAL" NUMBER(1,0) DEFAULT 0, 
	"CHAPTER" NUMBER(1,0) DEFAULT 0, 
	"UNUSABLE" NUMBER(1,0) DEFAULT 0, 
	"UUISPREFERENCE" NUMBER(1,0) DEFAULT 0, 
	"INVALIDPREFERENCE" NUMBER(1,0) DEFAULT 0, 
	"ONEVENDORUUIS" NUMBER(1,0) DEFAULT 0, 
	"PARENT_ID" NUMBER(15,0), 
	"CLASSIFIER" NUMBER(1,0) DEFAULT 2
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GOODSOKPDCOUNTRYPREF
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GOODSOKPDCOUNTRYPREF" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"COUNTRY_ID" NUMBER(15,0), 
	"GOODSOKPD_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GOODSOKPDPURCHASEMODE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GOODSOKPDPURCHASEMODE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"GOODSOKPD_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GOODSOKVED
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GOODSOKVED" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CODE" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(1000 BYTE), 
	"DESCRIPTION" VARCHAR2(4000 BYTE), 
	"ACTUAL" NUMBER(1,0) DEFAULT 1, 
	"CHAPTER" NUMBER(1,0) DEFAULT 0, 
	"UNUSABLE" NUMBER(1,0) DEFAULT 0, 
	"PARENT_ID" NUMBER(15,0), 
	"CLASSIFIER" NUMBER(1,0) DEFAULT 2, 
	"OOSKEY" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GOODSPRICE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GOODSPRICE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"GOODS_ID" NUMBER(15,0), 
	"DT" DATE, 
	"PRICE" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GOODSPROP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GOODSPROP" 
   (	"GOODS_ID" NUMBER(15,0), 
	"GROUP_ID" NUMBER(15,0), 
	"SEQORDER" NUMBER(2,0), 
	"PROPTYPE" NUMBER(1,0) DEFAULT 0, 
	"PROPVALUE" VARCHAR2(1500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GRANTINVESTMENT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GRANTINVESTMENT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"ORG_ID" NUMBER(15,0), 
	"CODE" VARCHAR2(20 BYTE), 
	"CAPTION" VARCHAR2(2000 BYTE), 
	"GRANTTYPE" NUMBER(4,0) DEFAULT 0, 
	"FOREIGNKEY" VARCHAR2(50 BYTE), 
	"FINYEAR" NUMBER(4,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GROUPPROP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GROUPPROP" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"GROUP_ID" NUMBER(15,0), 
	"SEQORDER" NUMBER(2,0), 
	"CAPTION" VARCHAR2(512 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"ISREQUIRED" NUMBER(15,0) DEFAULT 0, 
	"DEFVALUE" VARCHAR2(1500 BYTE), 
	"PROPTYPE_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GROUPPROPVALUE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GROUPPROPVALUE" 
   (	"GROUPPROP_ID" NUMBER(15,0), 
	"SEQORDER" NUMBER(5,0), 
	"CAPTION" VARCHAR2(1500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table GROUPUNIT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."GROUPUNIT" 
   (	"GROUP_ID" NUMBER(15,0), 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table HISTORYMODIFY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."HISTORYMODIFY" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"OBJ_NAME" VARCHAR2(50 BYTE), 
	"OBJ_ID" NUMBER(15,0), 
	"SYSUSER_ID" NUMBER(15,0), 
	"modify" DATE, 
	"REMARK" VARCHAR2(255 BYTE), 
	"DATA" BLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("DATA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table INDUSTRYCODE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."INDUSTRYCODE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"PARENT_ID" NUMBER(15,0), 
	"ORG_ID" NUMBER(15,0), 
	"CODE" VARCHAR2(17 BYTE), 
	"CAPTION" VARCHAR2(2000 BYTE), 
	"FOREIGNKEY" VARCHAR2(50 BYTE), 
	"FINYEAR" NUMBER(4,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table INSTITUTIONLINE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."INSTITUTIONLINE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"INDUSTRYCODE_ID" NUMBER(15,0), 
	"GRANTINVESTMENT_ID" NUMBER(15,0), 
	"KOSGU" VARCHAR2(16 BYTE), 
	"KIF" VARCHAR2(16 BYTE), 
	"FOREIGNKEY" VARCHAR2(50 BYTE), 
	"FINYEAR" NUMBER(4,0), 
	"PLANCHANGE_AMT1" NUMBER(15,2) DEFAULT 0, 
	"PLANCHANGE_AMT2" NUMBER(15,2) DEFAULT 0, 
	"PLANCHANGE_AMT3" NUMBER(15,2) DEFAULT 0, 
	"KVR" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table INTERBUDGET
--------------------------------------------------------

  CREATE TABLE "GZVLG"."INTERBUDGET" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"MSGSITE_ID" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"OUTERBUDGET_ID" NUMBER(15,0), 
	"FINYEAR" NUMBER(4,0), 
	"SYSTEMTYPE" NUMBER(1,0) DEFAULT 0, 
	"LINK_ADDRESS" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table INVBUDGETLINE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."INVBUDGETLINE" 
   (	"INVOICE_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"ESTIMATE_ID" NUMBER(15,0), 
	"ESTIMATENAME" VARCHAR2(255 BYTE), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"RECIPIENTNAME" VARCHAR2(2000 BYTE), 
	"RECIPIENTACC_ID" NUMBER(15,0), 
	"RECIPIENTACCOUNT" VARCHAR2(35 BYTE), 
	"CODE1" VARCHAR2(100 BYTE), 
	"CODE2" VARCHAR2(100 BYTE), 
	"CODE3" VARCHAR2(100 BYTE), 
	"CODE4" VARCHAR2(100 BYTE), 
	"CODE5" VARCHAR2(100 BYTE), 
	"CODE6" VARCHAR2(100 BYTE), 
	"CODE7" VARCHAR2(100 BYTE), 
	"CODE8" VARCHAR2(100 BYTE), 
	"CODE9" VARCHAR2(100 BYTE), 
	"CODE10" VARCHAR2(100 BYTE), 
	"FINSRCNAME" VARCHAR2(512 BYTE), 
	"FINSRC_ID" NUMBER(15,0), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"LIABILITYEXPENSE_ID" NUMBER(15,0), 
	"INDUSTRYCODE_ID" NUMBER(15,0), 
	"GRANTINVESTMENT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table INVGOODS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."INVGOODS" 
   (	"INVOICE_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"GROUPCODE" VARCHAR2(20 BYTE), 
	"OKDP_CODE" VARCHAR2(20 BYTE), 
	"GROUPCAPTION" VARCHAR2(500 BYTE), 
	"GOODSCODE" VARCHAR2(20 BYTE), 
	"GOODSCAPTION" VARCHAR2(512 BYTE), 
	"QTY" NUMBER(15,4) DEFAULT 0, 
	"PRICE" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"STATUS" NUMBER(1,0) DEFAULT 0, 
	"OKPD_CODE" VARCHAR2(20 BYTE), 
	"OKPD_NAME" VARCHAR2(1000 BYTE), 
	"OKPD_ID" NUMBER(15,0), 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table INVGOODSPROP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."INVGOODSPROP" 
   (	"INVOICE_ID" NUMBER(15,0), 
	"GOODSPOS" NUMBER(15,0), 
	"SEQORDER" NUMBER(15,0), 
	"PROPTYPE_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(512 BYTE), 
	"PROPVALUE" VARCHAR2(1500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table INVOICEDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."INVOICEDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"BUDGET_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(45 BYTE), 
	"DOC_DATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"SINGLECUSTOMERREASON_ID" NUMBER(15,0), 
	"STARTDATE" DATE, 
	"FINISHDATE" DATE, 
	"DEALDATE" DATE, 
	"CUSTOMER_ID" NUMBER(15,0), 
	"CUSTOMERNAME" VARCHAR2(2000 BYTE), 
	"CON_ID" NUMBER(15,0), 
	"CONNAME" VARCHAR2(2000 BYTE), 
	"CONTAXCODE" VARCHAR2(20 BYTE), 
	"CONKPP" VARCHAR2(20 BYTE), 
	"CONACC_ID" NUMBER(15,0), 
	"CONACCOUNT" VARCHAR2(35 BYTE), 
	"CONACCTYPE" NUMBER(1,0) DEFAULT 0, 
	"CONEXECUTERACC_ID" NUMBER(15,0), 
	"CONEXECUTERACC" VARCHAR2(35 BYTE), 
	"CONEXECUTER" VARCHAR2(2000 BYTE), 
	"CONCORACCOUNT" VARCHAR2(20 BYTE), 
	"CONBIC" VARCHAR2(9 BYTE), 
	"CONBANKNAME" VARCHAR2(2000 BYTE), 
	"REMARK" VARCHAR2(255 BYTE), 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"COUNTRY_ID" NUMBER(15,0), 
	"TERRITORYCODE" VARCHAR2(20 BYTE), 
	"SUPPLYADDRESS" VARCHAR2(300 BYTE), 
	"ISGROUPSMOREONE" NUMBER(1,0), 
	"EXPORT_FLAG" NUMBER(1,0) DEFAULT 0, 
	"CONTROLFLAGS" NUMBER(15,0) DEFAULT 0, 
	"ACTUAL_YEAR" NUMBER(4,0), 
	"NECESSITY_ID" NUMBER(15,0) DEFAULT 0, 
	"NECESSITY_DESCRIPTION" VARCHAR2(1000 BYTE), 
	"SUPPLIEDAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"PLANPOSITIONNUMBER" VARCHAR2(100 BYTE), 
	"FOREIGN_STATUS" VARCHAR2(100 BYTE), 
	"CONEXECUTER_ID" NUMBER(15,0), 
	"CONORGTYPE" NUMBER(1,0) DEFAULT 0, 
	"CONISTAXCODEFREE" NUMBER(1,0) DEFAULT 0, 
	"CONTAXPAYERCODE" VARCHAR2(100 BYTE), 
	"CONLASTNAME" VARCHAR2(250 BYTE), 
	"CONFIRSTNAME" VARCHAR2(250 BYTE), 
	"CONPATRONYMIC" VARCHAR2(250 BYTE), 
	"CONPROPFORM_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table JAVACLASS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."JAVACLASS" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(250 BYTE), 
	"STATE" NUMBER(1,0) DEFAULT 0, 
	"SOURCE" CLOB, 
	"DATA" BLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("SOURCE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DATA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table KBKLINEFIT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."KBKLINEFIT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"FINYEAR" NUMBER(4,0), 
	"FINYEAR_TO" NUMBER(4,0), 
	"ANAL_KIND" NUMBER(*,0), 
	"SEQ_ORDER" NUMBER(15,0), 
	"CODE1" VARCHAR2(100 BYTE), 
	"CODE2" VARCHAR2(100 BYTE), 
	"CODE3" VARCHAR2(100 BYTE), 
	"CODE4" VARCHAR2(100 BYTE), 
	"CODE5" VARCHAR2(100 BYTE), 
	"CODE6" VARCHAR2(100 BYTE), 
	"CODE7" VARCHAR2(100 BYTE), 
	"CODE8" VARCHAR2(100 BYTE), 
	"CODE9" VARCHAR2(100 BYTE), 
	"CODE10" VARCHAR2(100 BYTE), 
	"CODE1_TO" VARCHAR2(100 BYTE), 
	"CODE2_TO" VARCHAR2(100 BYTE), 
	"CODE3_TO" VARCHAR2(100 BYTE), 
	"CODE4_TO" VARCHAR2(100 BYTE), 
	"CODE5_TO" VARCHAR2(100 BYTE), 
	"CODE6_TO" VARCHAR2(100 BYTE), 
	"CODE7_TO" VARCHAR2(100 BYTE), 
	"CODE8_TO" VARCHAR2(100 BYTE), 
	"CODE9_TO" VARCHAR2(100 BYTE), 
	"CODE10_TO" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table KLADR
--------------------------------------------------------

  CREATE TABLE "GZVLG"."KLADR" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PARENT_ID" NUMBER(15,0), 
	"ACTUAL" NUMBER(1,0), 
	"NAME" VARCHAR2(40 BYTE), 
	"SOCR" VARCHAR2(10 BYTE), 
	"CODE" VARCHAR2(13 BYTE), 
	"CHILDLEVEL" NUMBER(1,0), 
	"CODE1" VARCHAR2(2 BYTE), 
	"CODE2" VARCHAR2(3 BYTE), 
	"CODE3" VARCHAR2(3 BYTE), 
	"CODE4" VARCHAR2(3 BYTE), 
	"CODE5" VARCHAR2(2 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table KLADRSTREET
--------------------------------------------------------

  CREATE TABLE "GZVLG"."KLADRSTREET" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"ACTUAL" NUMBER(1,0), 
	"KLADR_ID" NUMBER(15,0), 
	"NAME" VARCHAR2(40 BYTE), 
	"SOCR" VARCHAR2(10 BYTE), 
	"CODE" VARCHAR2(17 BYTE), 
	"CODE1" VARCHAR2(2 BYTE), 
	"CODE2" VARCHAR2(3 BYTE), 
	"CODE3" VARCHAR2(3 BYTE), 
	"CODE4" VARCHAR2(3 BYTE), 
	"CODE5" VARCHAR2(4 BYTE), 
	"CODE6" VARCHAR2(2 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table LEDGER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."LEDGER" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PLAN2DOC_ID" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"GROUP_ID" NUMBER(15,0), 
	"OKDP_ID" NUMBER(15,0), 
	"GOODS_ID" NUMBER(15,0), 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"ISENTERPRISE" NUMBER(1,0), 
	"ISSMALL" NUMBER(1,0), 
	"DOCYEAR" NUMBER(4,0), 
	"CODE1" VARCHAR2(100 BYTE), 
	"CODE2" VARCHAR2(100 BYTE), 
	"CODE3" VARCHAR2(100 BYTE), 
	"CODE4" VARCHAR2(100 BYTE), 
	"CODE5" VARCHAR2(100 BYTE), 
	"CODE6" VARCHAR2(100 BYTE), 
	"CODE7" VARCHAR2(100 BYTE), 
	"CODE8" VARCHAR2(100 BYTE), 
	"CODE9" VARCHAR2(100 BYTE), 
	"CODE10" VARCHAR2(100 BYTE), 
	"FINSRC_ID" NUMBER(15,0), 
	"DELIVERYBASIS_ID" NUMBER(15,0), 
	"PAYCONDITIONCACHE_ID" NUMBER(15,0), 
	"INDUSTRYCODE_ID" NUMBER(15,0), 
	"GRANTINVESTMENT_ID" NUMBER(15,0), 
	"INVITATIONDATE" DATE, 
	"CMPDATE" DATE, 
	"DESCRIPTIONCACHE_ID" NUMBER(15,0), 
	"CMPORG_ID" NUMBER(15,0), 
	"CONTRACTOR_ID" NUMBER(15,0), 
	"NECESSITY_ID" NUMBER(15,0), 
	"PLAN_Q1" NUMBER(15,2) DEFAULT 0, 
	"PLAN_Q2" NUMBER(15,2) DEFAULT 0, 
	"PLAN_Q3" NUMBER(15,2) DEFAULT 0, 
	"PLAN_Q4" NUMBER(15,2) DEFAULT 0, 
	"FACT_Q1" NUMBER(15,2) DEFAULT 0, 
	"FACT_Q2" NUMBER(15,2) DEFAULT 0, 
	"FACT_Q3" NUMBER(15,2) DEFAULT 0, 
	"FACT_Q4" NUMBER(15,2) DEFAULT 0, 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table LIABILITYCREDENTIAL
--------------------------------------------------------

  CREATE TABLE "GZVLG"."LIABILITYCREDENTIAL" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"STAGECODE_ID" NUMBER(15,0), 
	"LIABILITYGROUP_ID" NUMBER(15,0), 
	"CODE" VARCHAR2(100 BYTE), 
	"CAPTION" VARCHAR2(4000 BYTE), 
	"DESCRIPTION" VARCHAR2(1024 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table LIABILITYEXPENSE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."LIABILITYEXPENSE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"IS_ACTUAL" NUMBER(1,0) DEFAULT 1, 
	"CREDENTIAL_ID" NUMBER(15,0), 
	"ORG_ID" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"FINYEAR" NUMBER(4,0), 
	"CODE1" VARCHAR2(100 BYTE), 
	"CODE2" VARCHAR2(100 BYTE), 
	"CODE3" VARCHAR2(100 BYTE), 
	"CODE4" VARCHAR2(100 BYTE), 
	"CODE5" VARCHAR2(100 BYTE), 
	"CODE6" VARCHAR2(100 BYTE), 
	"CODE7" VARCHAR2(100 BYTE), 
	"CODE8" VARCHAR2(100 BYTE), 
	"CODE9" VARCHAR2(100 BYTE), 
	"CODE10" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table LIABILITYEXPENSE_DOCLINES
--------------------------------------------------------

  CREATE TABLE "GZVLG"."LIABILITYEXPENSE_DOCLINES" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"LIABILITYEXPENSE_ID" NUMBER(15,0), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"CODE1" VARCHAR2(100 BYTE), 
	"CODE2" VARCHAR2(100 BYTE), 
	"CODE3" VARCHAR2(100 BYTE), 
	"CODE4" VARCHAR2(100 BYTE), 
	"CODE5" VARCHAR2(100 BYTE), 
	"CODE6" VARCHAR2(100 BYTE), 
	"CODE7" VARCHAR2(100 BYTE), 
	"CODE8" VARCHAR2(100 BYTE), 
	"CODE9" VARCHAR2(100 BYTE), 
	"CODE10" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table LIABILITYGROUP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."LIABILITYGROUP" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(5 BYTE), 
	"DESCRIPTION" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table LICTYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."LICTYPE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"ISSUER" VARCHAR2(255 BYTE), 
	"ACTIVITYKIND" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table MAIL
--------------------------------------------------------

  CREATE TABLE "GZVLG"."MAIL" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"SENDER_ID" NUMBER(15,0), 
	"RECEIVER_ID" NUMBER(15,0), 
	"SUBJECT" VARCHAR2(255 BYTE), 
	"BODY" CLOB, 
	"CREATE_DATE" DATE, 
	"ARCHIVE_DATE" DATE, 
	"READ_DATE" DATE, 
	"STATUS" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("BODY") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table MAILATTACH
--------------------------------------------------------

  CREATE TABLE "GZVLG"."MAILATTACH" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"MAIL_ID" NUMBER(15,0), 
	"ATTACH_NAME" VARCHAR2(100 BYTE), 
	"DEVICE_NAME" VARCHAR2(100 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"AUTHOR" NUMBER(15,0), 
	"ACTION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table MAILRECEIVERGROUP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."MAILRECEIVERGROUP" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(255 BYTE), 
	"DESCRIPTION" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table MAILRECEIVERGROUP_RECEIVER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."MAILRECEIVERGROUP_RECEIVER" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"MAILRECEIVERGROUP_ID" NUMBER(15,0), 
	"SYSUSER_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table MENU
--------------------------------------------------------

  CREATE TABLE "GZVLG"."MENU" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"CAPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table MENUITEM
--------------------------------------------------------

  CREATE TABLE "GZVLG"."MENUITEM" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"MENU_ID" NUMBER(15,0), 
	"SHOW_ORDER" NUMBER(15,0) DEFAULT 0, 
	"CAPTION" VARCHAR2(100 BYTE), 
	"HINT_MESSAGE" VARCHAR2(255 BYTE), 
	"SHORTCUT_KEY" VARCHAR2(30 BYTE), 
	"CLIENTOBJECT_ID" NUMBER(15,0), 
	"OBJECT_PARAMS" VARCHAR2(300 BYTE), 
	"PARENT_ID" NUMBER(15,0), 
	"SUBSYSTEM" NUMBER(15,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table MENUITEMWEB
--------------------------------------------------------

  CREATE TABLE "GZVLG"."MENUITEMWEB" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"MENU_ID" NUMBER(15,0), 
	"SHOW_ORDER" NUMBER(15,0) DEFAULT 0, 
	"CAPTION" VARCHAR2(100 BYTE), 
	"HINT_MESSAGE" VARCHAR2(255 BYTE), 
	"SHORTCUT_KEY" VARCHAR2(30 BYTE), 
	"APPOBJNAME" VARCHAR2(128 BYTE), 
	"OBJECT_PARAMS" VARCHAR2(300 BYTE), 
	"PARENT_ID" NUMBER(15,0), 
	"SUBSYSTEM" NUMBER(15,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table METACONSTRAINT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."METACONSTRAINT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"METAOBJECT_ID" NUMBER(15,0), 
	"NAME" VARCHAR2(128 BYTE), 
	"CONSTRAINT_TYPE" NUMBER(15,0), 
	"FOREIGNOBJECT_NAME" VARCHAR2(250 BYTE), 
	"EXPRESSION" VARCHAR2(1024 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table METAOBJECT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."METAOBJECT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(128 BYTE), 
	"TABLE_NAME" VARCHAR2(255 BYTE), 
	"SUBSYSTEM" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table MSG
--------------------------------------------------------

  CREATE TABLE "GZVLG"."MSG" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"SENDER_ID" NUMBER(15,0), 
	"RECEIVER_ID" NUMBER(15,0), 
	"SEQ_NUMBER" NUMBER(9,0) DEFAULT 0, 
	"QUEUE_NAME" VARCHAR2(50 BYTE) DEFAULT 'default', 
	"RESET_QUEUE" NUMBER(1,0) DEFAULT 0, 
	"REQUEST_DATA" CLOB, 
	"DIAGNOSIS" VARCHAR2(2000 BYTE), 
	"DISPSTATUS" NUMBER(1,0) DEFAULT 0, 
	"CREATE_TIME" DATE, 
	"SEND_TIME" DATE, 
	"RECEIVE_TIME" DATE, 
	"PROCESS_TIME" DATE, 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"PROCESS_PRIORITY" NUMBER(1,0) DEFAULT 0, 
	"REQUEST_DATA_CRC" NUMBER(15,0), 
	"REQUEST_DATA_LEN" NUMBER(15,0), 
	"SYSUSER_ID" NUMBER(15,0) DEFAULT -99999, 
	"BUDGET_ID" NUMBER(15,0), 
	"GUID" VARCHAR2(100 BYTE), 
	"RPL_OBJ_NAME" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("REQUEST_DATA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table MSGLINKTYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."MSGLINKTYPE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"CLASSNAME" VARCHAR2(100 BYTE), 
	"EXAMPLE" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table MSGQUEUE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."MSGQUEUE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"SENDER_ID" NUMBER(15,0), 
	"RECEIVER_ID" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"SENT_NUMBER" NUMBER(9,0) DEFAULT 0, 
	"PROCESSED_NUMBER" NUMBER(9,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table MSGSITE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."MSGSITE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"MSGLINKTYPE_ID" NUMBER(15,0), 
	"LINK_ADDRESS" VARCHAR2(255 BYTE), 
	"SYSUSER_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"REPLICATOR_VERSION" NUMBER(15,0) DEFAULT 0, 
	"SPLIT_QUEUES_BY_OBJECT" NUMBER(1,0) DEFAULT 0, 
	"SPLIT_QUEUES_BY_BUDGET" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table MSGSITEEXCHANGE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."MSGSITEEXCHANGE" 
   (	"MSGSITE_ID" NUMBER(15,0), 
	"DOCEXCHANGESCHEME_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table NECESSITY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."NECESSITY" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(1000 BYTE), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"ACTUAL" NUMBER(1,0) DEFAULT 1, 
	"CODE2" VARCHAR2(100 BYTE), 
	"NECTYPE" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table NOTICEDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."NOTICEDOC" 
   (	"ID" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOCGROUP_ID" NUMBER(15,0), 
	"SYSDOCGROUP_ID" NUMBER(15,0), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"BUDGET_ID" NUMBER(15,0), 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"REMARK" VARCHAR2(255 BYTE), 
	"VERSION" NUMBER(15,0), 
	"BRIEF" CLOB, 
	"BODY" CLOB, 
	"SUBJECT" CLOB, 
	"DOC_DATE" DATE, 
	"ISPUBLIC" NUMBER(1,0), 
	"PUBLISHERORG_ID" NUMBER(15,0), 
	"AUTHORORG_ID" NUMBER(15,0), 
	"AUTHORORGNAME" VARCHAR2(2000 BYTE), 
	"MCMPUBLISH_DATE" DATE, 
	"SENDEMAIL" NUMBER(1,0) DEFAULT 0, 
	"FROMADDRESS" VARCHAR2(100 BYTE), 
	"ETPKEY" VARCHAR2(100 BYTE), 
	"ETP_ID" NUMBER(15,0), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"SEND_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("BRIEF") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("BODY") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("SUBJECT") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table NOTICEEMAILORG
--------------------------------------------------------

  CREATE TABLE "GZVLG"."NOTICEEMAILORG" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NOTICEDOC_ID" NUMBER(15,0), 
	"ORG_ID" NUMBER(15,0), 
	"ORGNAME" VARCHAR2(2000 BYTE), 
	"EMAIL" VARCHAR2(256 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table NOTICEORG
--------------------------------------------------------

  CREATE TABLE "GZVLG"."NOTICEORG" 
   (	"NOTICEDOC_ID" NUMBER(15,0), 
	"ORG_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table NOTIFYMSG
--------------------------------------------------------

  CREATE TABLE "GZVLG"."NOTIFYMSG" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CREATE_DATE" DATE DEFAULT '1970-01-01', 
	"NOTIFYMSGGROUP_ID" NUMBER(15,0), 
	"NOTIFYMSGEVENT_ID" NUMBER(15,0), 
	"SENDER_ID" NUMBER(15,0), 
	"RECEIVER_ID" NUMBER(15,0), 
	"MSG_BODY" CLOB, 
	"READ_DATE" DATE, 
	"EMAILSENDED" NUMBER(1,0) DEFAULT 0, 
	"TOEXEC" NUMBER(1,0) DEFAULT 0, 
	"DOCUMENT_ID" NUMBER(15,0), 
	"QUICKLY" NUMBER(1,0) DEFAULT 0, 
	"READED" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("MSG_BODY") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table NOTIFYMSGDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."NOTIFYMSGDOC" 
   (	"NOTIFYMSGRULE_ID" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"CREATETIME" DATE, 
	"NOTIFYMSGKIND" NUMBER(15,0) DEFAULT 0, 
	"PARAMHASH" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table NOTIFYMSGEVENT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."NOTIFYMSGEVENT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table NOTIFYMSGGROUP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."NOTIFYMSGGROUP" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table NOTIFYMSGRULE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."NOTIFYMSGRULE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NOTIFYMSGGROUP_ID" NUMBER(15,0), 
	"NOTIFYMSGEVENT_ID" NUMBER(15,0), 
	"SENDER_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"START_DISPSTATUS_ID" VARCHAR2(255 BYTE), 
	"END_DISPSTATUS_ID" VARCHAR2(255 BYTE), 
	"MSG" CLOB, 
	"DELAY_TIME" DATE, 
	"DOCFILTER" VARCHAR2(255 BYTE), 
	"RECEIVERSFROMDOCFIELD" VARCHAR2(255 BYTE), 
	"QUICKLY" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("MSG") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table NOTIFYMSGRULE_RECEIVER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."NOTIFYMSGRULE_RECEIVER" 
   (	"NOTIFYMSGRULE_ID" NUMBER(15,0), 
	"PERSON_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table NUMGENERATOR
--------------------------------------------------------

  CREATE TABLE "GZVLG"."NUMGENERATOR" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"JAVACLASS_NAME" VARCHAR2(100 BYTE), 
	"PARAMS" VARCHAR2(255 BYTE), 
	"SUBSYSTEM" NUMBER(15,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table NUMPREFIX
--------------------------------------------------------

  CREATE TABLE "GZVLG"."NUMPREFIX" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NUMGENERATOR_ID" NUMBER(15,0), 
	"SYSUSER_ID" NUMBER(15,0), 
	"PREFIX" VARCHAR2(3 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table NUMSEQUENCE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."NUMSEQUENCE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"NEXT_VALUE" NUMBER(18,0) DEFAULT 1, 
	"CAPTION" VARCHAR2(100 BYTE), 
	"TERM_KIND" NUMBER(1,0) DEFAULT 0, 
	"BUDGET_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table NUMUSAGE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."NUMUSAGE" 
   (	"NUMSEQUENCE_ID" NUMBER(15,0), 
	"PERIOD_START" DATE, 
	"NUM_VALUE" NUMBER(18,0), 
	"USE_COUNT" NUMBER(9,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OFFERDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OFFERDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"BUDGET_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"REMARK" VARCHAR2(255 BYTE), 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"VENDOR_ID" NUMBER(15,0), 
	"VENDORTAXCODE" VARCHAR2(20 BYTE), 
	"VENDORKPP" VARCHAR2(20 BYTE), 
	"VENDORNAME" VARCHAR2(2000 BYTE), 
	"VENDORADDRESS" VARCHAR2(300 BYTE), 
	"VENDORCOUNTRY_ID" NUMBER(15,0), 
	"VENDORTERRITORYCODE" VARCHAR2(20 BYTE), 
	"VENDORPOSTINDEX" VARCHAR2(10 BYTE), 
	"VENDORPOSTADDRESS" VARCHAR2(300 BYTE), 
	"VENDORPOSTCOUNTRY_ID" NUMBER(15,0), 
	"VENDORPOSTTERRITORYCODE" VARCHAR2(20 BYTE), 
	"VENDORPOSTPOSTINDEX" VARCHAR2(10 BYTE), 
	"VENDORPHONE" VARCHAR2(100 BYTE), 
	"VENDORFAX" VARCHAR2(100 BYTE), 
	"VENDOREMAIL" VARCHAR2(256 BYTE), 
	"VENDORPROPFORM_ID" NUMBER(15,0), 
	"DELIVERYBASISCODE" VARCHAR2(50 BYTE), 
	"PAYCONDITIONNAME" VARCHAR2(255 BYTE), 
	"CMPORG_ID" NUMBER(15,0), 
	"PROVIDINGAMOUNT" NUMBER(15,2), 
	"ISGROUPSMOREONE" NUMBER(1,0), 
	"EXTRA" CLOB, 
	"FROM_WEB" NUMBER(1,0) DEFAULT 0, 
	"ISCORRECTED" NUMBER(1,0) DEFAULT 0, 
	"PRICE_GENERATION_ORDER" CLOB, 
	"VENDORACCOUNT" VARCHAR2(35 BYTE), 
	"VENDORACC_ID" NUMBER(15,0), 
	"VENDORACCTYPE" NUMBER(1,0) DEFAULT 0, 
	"VENDOREXECUTERACC_ID" NUMBER(15,0), 
	"VENDOREXECUTERACC" VARCHAR2(35 BYTE), 
	"VENDOREXECUTER_ID" NUMBER(15,0), 
	"VENDOREXECUTER" VARCHAR2(2000 BYTE), 
	"VENDORBIC" VARCHAR2(9 BYTE), 
	"VENDORCORACCOUNT" VARCHAR2(35 BYTE), 
	"VENDORBANKNAME" VARCHAR2(2000 BYTE), 
	"ETP_ID" NUMBER(15,0), 
	"ETPKEY" VARCHAR2(100 BYTE), 
	"VENDOR_ETPKEY" VARCHAR2(100 BYTE), 
	"GOODS_INFO" CLOB, 
	"FINALOFFER_DATE" DATE, 
	"FINALOFFER_AMT" NUMBER(15,2), 
	"PRICEINFO" CLOB, 
	"VENDORORGTYPE" NUMBER(1,0) DEFAULT 0, 
	"VENDORISTAXCODEFREE" NUMBER(1,0) DEFAULT 0, 
	"VENDORTAXPAYERCODE" VARCHAR2(100 BYTE), 
	"VENDORLASTNAME" VARCHAR2(250 BYTE), 
	"VENDORFIRSTNAME" VARCHAR2(250 BYTE), 
	"VENDORPATRONYMIC" VARCHAR2(250 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("EXTRA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("PRICE_GENERATION_ORDER") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("GOODS_INFO") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("PRICEINFO") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table OFRCRITERIONLINEVAL
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OFRCRITERIONLINEVAL" 
   (	"OFFER_ID" NUMBER(15,0), 
	"CMPCRITERIONPOS" NUMBER(15,0), 
	"SEQORDER" NUMBER(15,0), 
	"CAPTION" VARCHAR2(2000 BYTE), 
	"VAL" VARCHAR2(2000 BYTE), 
	"ISFINALOFFER" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OFRCRITERIONVAL
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OFRCRITERIONVAL" 
   (	"OFFER_ID" NUMBER(15,0), 
	"CMPCRITERIONPOS" NUMBER(15,0), 
	"BESTPARAM" NUMBER(1,0), 
	"NAME" VARCHAR2(512 BYTE), 
	"LOTPOS" NUMBER(15,0), 
	"VAL" VARCHAR2(255 BYTE), 
	"WEIGHT" NUMBER(15,2), 
	"CTYPE" NUMBER(2,0), 
	"CALCMODE" NUMBER(1,0), 
	"ISFINALOFFER" NUMBER(1,0) DEFAULT 0, 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OFRDECREASON
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OFRDECREASON" 
   (	"OFFER_ID" NUMBER(15,0), 
	"LOTPOS" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"NAME" VARCHAR2(512 BYTE), 
	"OFRRETREASONCODE" VARCHAR2(20 BYTE), 
	"OFRRETREASON_ID" NUMBER(15,0), 
	"DESCRIPTION" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OFRDOCREQVAL
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OFRDOCREQVAL" 
   (	"OFFER_ID" NUMBER(15,0), 
	"CMPDOCREQPOS" NUMBER(15,0), 
	"LOTPOS" NUMBER(15,0), 
	"DESCRIPTION" VARCHAR2(1000 BYTE), 
	"VAL" NUMBER(1,0), 
	"VENDOR_TYPE" NUMBER(2,0) DEFAULT 0, 
	"ISREQUIRED" NUMBER(1,0) DEFAULT 1, 
	"REMARK" VARCHAR2(2000 BYTE), 
	"TYPE" NUMBER(2,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OFRGOODS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OFRGOODS" 
   (	"OFFER_ID" NUMBER(15,0), 
	"LOTPOS" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"GROUPCODE" VARCHAR2(20 BYTE), 
	"GROUPCAPTION" VARCHAR2(500 BYTE), 
	"OKDP_CODE" VARCHAR2(20 BYTE), 
	"GOODSCODE" VARCHAR2(20 BYTE), 
	"GOODSCAPTION" VARCHAR2(512 BYTE), 
	"QTY" NUMBER(15,4) DEFAULT 0, 
	"PRICE" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"OKPD_CODE" VARCHAR2(20 BYTE), 
	"OKPD_NAME" VARCHAR2(1000 BYTE), 
	"OKPD_ID" NUMBER(15,0), 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OFRGOODSPROP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OFRGOODSPROP" 
   (	"OFFER_ID" NUMBER(15,0), 
	"GOODSPOS" NUMBER(15,0), 
	"SEQORDER" NUMBER(15,0), 
	"PROPTYPE_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(512 BYTE), 
	"PROPVALUE" VARCHAR2(1500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OFRGROUPPROP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OFRGROUPPROP" 
   (	"OFFER_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"GROUPCODE" VARCHAR2(20 BYTE), 
	"SEQORDER" NUMBER(2,0), 
	"CAPTION" VARCHAR2(512 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"ISREQUIRED" NUMBER(1,0) DEFAULT 0, 
	"DEFVALUE" VARCHAR2(1500 BYTE), 
	"PROPTYPE_ID" NUMBER(15,0), 
	"GROUPPROP_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OFRGROUPPROPVALUE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OFRGROUPPROPVALUE" 
   (	"OFFER_ID" NUMBER(15,0), 
	"GROUPPROPPOS" NUMBER(15,0), 
	"SEQORDER" NUMBER(5,0), 
	"CAPTION" VARCHAR2(1500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OFRLOT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OFRLOT" 
   (	"OFFER_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"LOTNUMBER" NUMBER(15,0), 
	"NAME" VARCHAR2(2000 BYTE), 
	"DELIVERYBASISCODE" VARCHAR2(50 BYTE), 
	"PAYCONDITIONNAME" VARCHAR2(255 BYTE), 
	"PROVIDINGAMOUNT" NUMBER(15,2), 
	"ISUTILIZED" NUMBER(1,0) DEFAULT 0, 
	"ISDECLINED" NUMBER(1,0) DEFAULT 0, 
	"REMARK" VARCHAR2(255 BYTE), 
	"COMMENTS" VARCHAR2(255 BYTE), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"ISLOTDECLINED" NUMBER(1,0) DEFAULT 0, 
	"ISLOTREREGISTERED" NUMBER(1,0) DEFAULT 0, 
	"OOS_DOC_NUMBER" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OFRORGSTATUS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OFRORGSTATUS" 
   (	"OFFER_ID" NUMBER(15,0), 
	"ORGSTATUS_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OFRPLACE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OFRPLACE" 
   (	"OFFER_ID" NUMBER(15,0), 
	"LOTPOS" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"RECIPIENTNAME" VARCHAR2(2000 BYTE), 
	"COUNTRY_ID" NUMBER(15,0), 
	"TERRITORYCODE" VARCHAR2(20 BYTE), 
	"ADDRESS" VARCHAR2(300 BYTE), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"SUPPLYAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"USEAMOUNT" NUMBER(1,0) DEFAULT 0, 
	"CALCPRICE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OFRQUALREQVAL
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OFRQUALREQVAL" 
   (	"OFFER_ID" NUMBER(15,0), 
	"CMPQUALREQPOS" NUMBER(15,0), 
	"LOTPOS" NUMBER(15,0), 
	"NAME" VARCHAR2(2000 BYTE), 
	"QTYPE" NUMBER(2,0), 
	"VAL" NUMBER(15,4), 
	"QMINVALUE" NUMBER(15,4), 
	"QMAXVALUE" NUMBER(15,4), 
	"ISSATISFY" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OFRREQREASON
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OFRREQREASON" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(1000 BYTE), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"ACTUAL" NUMBER(1,0) DEFAULT 1, 
	"BUDGETTYPE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OFRRETREASON
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OFRRETREASON" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CODE" VARCHAR2(20 BYTE), 
	"REASON" VARCHAR2(512 BYTE), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"ACTUAL" NUMBER(1,0) DEFAULT 1, 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"OOSKEY" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OFRSUPPLYSHEDULE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OFRSUPPLYSHEDULE" 
   (	"OFFER_ID" NUMBER(15,0), 
	"PLACEPOS" NUMBER(15,0), 
	"GOODSPOS" NUMBER(15,0), 
	"SUPPLYDATE" DATE, 
	"QTY" NUMBER(15,4) DEFAULT 0, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"LOTPOS" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OIDREF
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OIDREF" 
   (	"ID" NUMBER(18,0), 
	"VERSION" NUMBER(15,0), 
	"OID" VARCHAR2(100 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OKTMO
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OKTMO" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CODE" VARCHAR2(20 BYTE), 
	"PARENT_CODE" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(500 BYTE), 
	"ACTUAL" NUMBER(1,0) DEFAULT 0, 
	"PARENT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OLAPQUERY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OLAPQUERY" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OOSAPPLICATION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OOSAPPLICATION" 
   (	"NOTIFICATIONNUMBER" VARCHAR2(19 BYTE), 
	"LOTNUMBER" NUMBER(15,0), 
	"JOURNALNUMBER" VARCHAR2(20 BYTE), 
	"APPDATE" DATE, 
	"ADMITTEDFIRST" NUMBER(1,0) DEFAULT 0, 
	"COMMONINFO" VARCHAR2(2000 BYTE), 
	"LASTPRICE" NUMBER(15,2), 
	"LASTPRICEDATE" DATE, 
	"PARTICIPANTPRESENT" NUMBER(1,0) DEFAULT 0, 
	"PARTICIPANTTYPE" VARCHAR2(2 BYTE), 
	"PARTICIPANTINN" VARCHAR2(12 BYTE), 
	"PARTICIPANTKPP" VARCHAR2(9 BYTE), 
	"PARTICIPANTORGANIZATIONFORM" VARCHAR2(3 BYTE), 
	"PARTICIPANTIDNUMBER" VARCHAR2(20 BYTE), 
	"PARTICIPANTIDNUMBEREXTENSION" VARCHAR2(20 BYTE), 
	"PARTICIPANTORGANIZATIONNAME" VARCHAR2(4000 BYTE), 
	"PARTICIPANTCOUNTRYCODE" VARCHAR2(3 BYTE), 
	"PARTICIPANTFACTUALADDRESS" VARCHAR2(1024 BYTE), 
	"PARTICIPANTPOSTADDRESS" VARCHAR2(1024 BYTE), 
	"PARTICIPANTLASTNAME" VARCHAR2(50 BYTE), 
	"PARTICIPANTFIRSTNAME" VARCHAR2(50 BYTE), 
	"PARTICIPANTMIDDLENAME" VARCHAR2(50 BYTE), 
	"PARTICIPANTCONTACTEMAIL" VARCHAR2(256 BYTE), 
	"PARTICIPANTCONTACTPHONE" VARCHAR2(30 BYTE), 
	"PARTICIPANTCONTACTFAX" VARCHAR2(30 BYTE), 
	"PARTICIPANTADDITIONALINFO" VARCHAR2(4000 BYTE), 
	"PARTICIPANTSTATUS" VARCHAR2(2 BYTE), 
	"PARTICIPANTSCOUNT" NUMBER(15,0) DEFAULT 0, 
	"ADMITTEDSECOND" NUMBER(1,0) DEFAULT 0, 
	"APPRATING" NUMBER(15,0), 
	"APPFORMAT" VARCHAR2(1 BYTE), 
	"RESULTTYPE" VARCHAR2(17 BYTE), 
	"EVALRESULT" NUMBER(15,2), 
	"PREFEXPL" VARCHAR2(2000 BYTE), 
	"GENERALPREFS" NUMBER(15,2), 
	"GOODSDELIVERED" VARCHAR2(4000 BYTE), 
	"EXPENSESINFO" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OOSCONTRACT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OOSCONTRACT" 
   (	"ID" NUMBER(15,0), 
	"REGNUM" VARCHAR2(30 BYTE), 
	"CONTRACTNUM" VARCHAR2(100 BYTE), 
	"PUBLISHDATE" DATE, 
	"SIGNDATE" DATE, 
	"VERSIONNUMBER" NUMBER(15,0), 
	"NOTIFICATIONNUMBER" VARCHAR2(100 BYTE), 
	"LOTNUMBER" NUMBER(15,0), 
	"PLACING" VARCHAR2(5 BYTE), 
	"SINGLECUSTOMER" NUMBER(1,0) DEFAULT 0, 
	"CUSTOMERREGNUM" VARCHAR2(11 BYTE), 
	"CUSTOMERFULLNAME" VARCHAR2(2000 BYTE), 
	"CUSTOMERINN" VARCHAR2(12 BYTE), 
	"CUSTOMERKPP" VARCHAR2(9 BYTE), 
	"CUSTOMERTOFK" VARCHAR2(4 BYTE), 
	"PROTOCOLDATE" DATE, 
	"DOCUMENTBASE" VARCHAR2(4000 BYTE), 
	"PRICE" NUMBER(15,2), 
	"CURRENCYCODE" VARCHAR2(3 BYTE), 
	"EXECUTIONMONTH" NUMBER(15,0), 
	"EXECUTIONYEAR" NUMBER(15,0), 
	"SUPPLIERSCOUNT" NUMBER(15,0), 
	"ISACTUAL" NUMBER(1,0) DEFAULT 0, 
	"CURRENTCONTRACTSTAGE" VARCHAR2(2 BYTE), 
	"BUDGETNAME" VARCHAR2(2000 BYTE), 
	"BUDGETLEVEL" VARCHAR2(2 BYTE), 
	"PLACINGTYPE" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OOSCONTRACTPRODUCTS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OOSCONTRACTPRODUCTS" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"OKDPCODE" VARCHAR2(20 BYTE), 
	"OKDPNAME" VARCHAR2(1024 BYTE), 
	"COUNTRYCODE" VARCHAR2(3 BYTE), 
	"COUNTRYFULLNAME" VARCHAR2(200 BYTE), 
	"OKEICODE" VARCHAR2(3 BYTE), 
	"OKEINAME" VARCHAR2(200 BYTE), 
	"PRICE" NUMBER(15,2) DEFAULT 0, 
	"QUANTITY" NUMBER(15,4) DEFAULT 0, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"NAME" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("NAME") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table OOSCONTRACTSUPPLIER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OOSCONTRACTSUPPLIER" 
   (	"CONTRACT_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"SUPPLIERTYPE" VARCHAR2(2 BYTE), 
	"INN" VARCHAR2(12 BYTE), 
	"KPP" VARCHAR2(9 BYTE), 
	"ORGANIZATIONFORM" VARCHAR2(3 BYTE), 
	"IDNUMBER" VARCHAR2(20 BYTE), 
	"IDNUMBEREXTENSION" VARCHAR2(20 BYTE), 
	"ORGANIZATIONNAME" VARCHAR2(4000 BYTE), 
	"COUNTRYCODE" VARCHAR2(3 BYTE), 
	"POSTADDRESS" VARCHAR2(1024 BYTE), 
	"LASTNAME" VARCHAR2(50 BYTE), 
	"FIRSTNAME" VARCHAR2(50 BYTE), 
	"MIDDLENAME" VARCHAR2(50 BYTE), 
	"CONTACTEMAIL" VARCHAR2(256 BYTE), 
	"CONTACTPHONE" VARCHAR2(30 BYTE), 
	"CONTACTFAX" VARCHAR2(30 BYTE), 
	"ADDITIONALINFO" VARCHAR2(4000 BYTE), 
	"STATUS" VARCHAR2(2 BYTE), 
	"FACTUALADDRESS" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("FACTUALADDRESS") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table OOSCUSTOMERREQUIREMENT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OOSCUSTOMERREQUIREMENT" 
   (	"ID" NUMBER(15,0), 
	"NOTIFICATION_ID" NUMBER(15,0), 
	"LOT_ID" NUMBER(15,0), 
	"QUANTITY" VARCHAR2(4000 BYTE), 
	"MAXPRICE" NUMBER(15,2), 
	"CUSTOMERREGNUM" VARCHAR2(11 BYTE), 
	"CUSTOMERFULLNAME" VARCHAR2(2000 BYTE), 
	"DELIVERYPLACE" VARCHAR2(4000 BYTE), 
	"DELIVERYTERM" VARCHAR2(1024 BYTE), 
	"GRNTAPPPROCEDURE" VARCHAR2(4000 BYTE), 
	"GRNTAPPSETTLEMENTACCOUNT" VARCHAR2(20 BYTE), 
	"GRNTAPPPERSONALACCOUNT" VARCHAR2(30 BYTE), 
	"GRNTAPPBIK" VARCHAR2(9 BYTE), 
	"GRNTAPPAMOUNT" NUMBER(15,2), 
	"GRNTCONTRPROCEDURE" VARCHAR2(4000 BYTE), 
	"GRNTCONTRSETTLEMENTACCOUNT" VARCHAR2(20 BYTE), 
	"GRNTCONTRPERSONALACCOUNT" VARCHAR2(30 BYTE), 
	"GRNTCONTRBIK" VARCHAR2(9 BYTE), 
	"GRNTCONTRISBAIL" NUMBER(1,0), 
	"GRNTCONTRAMOUNT" NUMBER(15,2), 
	"ADDITIONALINFO" VARCHAR2(4000 BYTE), 
	"QUANTITYCONTRACTSPNIR" NUMBER(15,0), 
	"FINANCESOURCE" VARCHAR2(2000 BYTE), 
	"PAYMENTCONDITION" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OOSNOTIFICATION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OOSNOTIFICATION" 
   (	"ID" NUMBER(15,0), 
	"NOTIFICATIONNUMBER" VARCHAR2(19 BYTE), 
	"VERSIONNUMBER" NUMBER(15,0), 
	"CREATEDATE" DATE, 
	"PLACINGWAYCODE" VARCHAR2(3 BYTE), 
	"PLACINGWAYNAME" VARCHAR2(500 BYTE), 
	"ORDERNAME" VARCHAR2(2000 BYTE), 
	"INITIATORREGNUM" VARCHAR2(11 BYTE), 
	"INITIATORFULLNAME" VARCHAR2(2000 BYTE), 
	"INITIATORORGROLE" VARCHAR2(1 BYTE), 
	"PLACERREGNUM" VARCHAR2(11 BYTE), 
	"PLACERFULLNAME" VARCHAR2(2000 BYTE), 
	"PLACERORGROLE" VARCHAR2(2 BYTE), 
	"CONTACTORGNAME" VARCHAR2(4000 BYTE), 
	"PUBLISHDATE" DATE, 
	"MODIFICATIONINITIATIVETYPE" VARCHAR2(2 BYTE), 
	"MODIFICATIONDATE" DATE, 
	"MODIFICATIONINFO" VARCHAR2(4000 BYTE), 
	"P1DATE" DATE, 
	"P2DATE" DATE, 
	"P3DATE" DATE, 
	"EPCODE" VARCHAR2(20 BYTE), 
	"EPNAME" VARCHAR2(20 BYTE), 
	"EPURL" VARCHAR2(50 BYTE), 
	"LOTCOUNT" NUMBER(15,0), 
	"REGIONNAME" VARCHAR2(2000 BYTE), 
	"P1PLACE" VARCHAR2(4000 BYTE), 
	"P2PLACE" VARCHAR2(4000 BYTE), 
	"P3PLACE" VARCHAR2(4000 BYTE), 
	"PLACEMENTDELIVERYTERM" VARCHAR2(1024 BYTE), 
	"PLACEMENTDELIVERYPLACE" VARCHAR2(1024 BYTE), 
	"PLACEMENTADDITIONALINFO" VARCHAR2(4000 BYTE), 
	"GRNTAPPPROCEDURE" VARCHAR2(4000 BYTE), 
	"GRNTAPPSETTLEMENTACCOUNT" VARCHAR2(20 BYTE), 
	"GRNTAPPPERSONALACCOUNT" VARCHAR2(30 BYTE), 
	"GRNTAPPBIK" VARCHAR2(9 BYTE), 
	"GRNTCONTRPROCEDURE" VARCHAR2(4000 BYTE), 
	"GRNTCONTRSETTLEMENTACCOUNT" VARCHAR2(20 BYTE), 
	"GRNTCONTRPERSONALACCOUNT" VARCHAR2(30 BYTE), 
	"GRNTCONTRBIK" VARCHAR2(9 BYTE), 
	"GRNTCONTRISBAIL" NUMBER(1,0), 
	"DOCDELIVERYTERM" DATE, 
	"DOCDELIVERYTERM2" DATE, 
	"DOCDELIVERYPLACE" VARCHAR2(2000 BYTE), 
	"DOCDELIVERYPROCEDURE" VARCHAR2(1028 BYTE), 
	"DOCWWW" VARCHAR2(4000 BYTE), 
	"DOCGRNTPROCEDURE" VARCHAR2(4000 BYTE), 
	"DOCGRNTSETTLEMENTACCOUNT" VARCHAR2(20 BYTE), 
	"DOCGRNTPERSONALACCOUNT" VARCHAR2(30 BYTE), 
	"DOCGRNTBIK" VARCHAR2(9 BYTE), 
	"DOCGRNTCONTRAMOUNT" NUMBER(15,2), 
	"DOCGRNTCURRENCYCODE" VARCHAR2(3 BYTE), 
	"SIGNTERM" NUMBER(15,0), 
	"ISACTUAL" NUMBER(1,0) DEFAULT 0, 
	"NOTIFICATIONTYPE" VARCHAR2(2 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OOSNOTIFICATIONLOT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OOSNOTIFICATIONLOT" 
   (	"ID" NUMBER(15,0), 
	"NOTIFICATION_ID" NUMBER(15,0), 
	"ORDINALNUMBER" NUMBER(15,0), 
	"CUSTOMERCOUNT" NUMBER(15,0), 
	"SUBJECT" VARCHAR2(2000 BYTE), 
	"ISENTERPRISE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OOSORGANIZATION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OOSORGANIZATION" 
   (	"REGNUMBER" VARCHAR2(11 BYTE), 
	"SHORTNAME" VARCHAR2(2000 BYTE), 
	"FULLNAME" VARCHAR2(2000 BYTE), 
	"FACTOKATO" VARCHAR2(20 BYTE), 
	"FACTADDRESSLINE" VARCHAR2(2000 BYTE), 
	"FACTAREAKLADRTYPE" VARCHAR2(1 BYTE), 
	"FACTAREAKLADRCODE" VARCHAR2(20 BYTE), 
	"FACTAREAFULLNAME" VARCHAR2(200 BYTE), 
	"FACTBUILDING" VARCHAR2(200 BYTE), 
	"FACTCOUNTRYCODE" VARCHAR2(3 BYTE), 
	"FACTCOUNTRYFULLNAME" VARCHAR2(200 BYTE), 
	"FACTFILLEDMANUALLY" NUMBER(1,0) DEFAULT 0, 
	"FACTOFFICE" VARCHAR2(200 BYTE), 
	"FACTREGIONKLADRTYPE" VARCHAR2(1 BYTE), 
	"FACTREGIONKLADRCODE" VARCHAR2(20 BYTE), 
	"FACTREGIONFULLNAME" VARCHAR2(200 BYTE), 
	"FACTSETTLEMENTKLADRTYPE" VARCHAR2(1 BYTE), 
	"FACTSETTLEMENTKLADRCODE" VARCHAR2(20 BYTE), 
	"FACTSETTLEMENTFULLNAME" VARCHAR2(200 BYTE), 
	"FACTCITYKLADRTYPE" VARCHAR2(1 BYTE), 
	"FACTCITYKLADRCODE" VARCHAR2(20 BYTE), 
	"FACTCITYFULLNAME" VARCHAR2(200 BYTE), 
	"FACTSHORTSTREET" VARCHAR2(200 BYTE), 
	"FACTSTREETKLADRTYPE" VARCHAR2(1 BYTE), 
	"FACTSTREETKLADRCODE" VARCHAR2(20 BYTE), 
	"FACTSTREETFULLNAME" VARCHAR2(200 BYTE), 
	"FACTZIP" VARCHAR2(6 BYTE), 
	"POSTALADDRESS" VARCHAR2(200 BYTE), 
	"EMAIL" VARCHAR2(256 BYTE), 
	"PHONE" VARCHAR2(30 BYTE), 
	"FAX" VARCHAR2(30 BYTE), 
	"CONTACTLASTNAME" VARCHAR2(50 BYTE), 
	"CONTACTFIRSTNAME" VARCHAR2(50 BYTE), 
	"CONTACTMIDDLENAME" VARCHAR2(50 BYTE), 
	"HEADAGENCYREGNUM" VARCHAR2(11 BYTE), 
	"HEADAGENCYFULLNAME" VARCHAR2(2000 BYTE), 
	"ORDERINGAGENCYREGNUM" VARCHAR2(11 BYTE), 
	"ORDERINGAGENCYFULLNAME" VARCHAR2(2000 BYTE), 
	"INN" VARCHAR2(12 BYTE), 
	"KPP" VARCHAR2(9 BYTE), 
	"OGRN" VARCHAR2(13 BYTE), 
	"OKOPFCODE" VARCHAR2(2 BYTE), 
	"OKOPFFULLNAME" VARCHAR2(200 BYTE), 
	"OKOPFASSEMBLYALGORITHM" VARCHAR2(250 BYTE), 
	"OKPO" VARCHAR2(11 BYTE), 
	"OKVED" VARCHAR2(2000 BYTE), 
	"ORGANIZATIONTYPEID" NUMBER(15,0), 
	"ORGANIZATIONTYPENAME" VARCHAR2(20 BYTE), 
	"ORGANIZATIONTYPEDESCRIPTION" VARCHAR2(200 BYTE), 
	"SUBORDINATIONTYPEID" NUMBER(15,0), 
	"SUBORDINATIONTYPEDESCRIPTION" VARCHAR2(200 BYTE), 
	"URL" VARCHAR2(40 BYTE), 
	"TIMEZONE" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OOSORGANIZATIONROLE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OOSORGANIZATIONROLE" 
   (	"REGNUMBER" VARCHAR2(11 BYTE), 
	"ORGROLE" VARCHAR2(2 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OOSORGROLE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OOSORGROLE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CODE" VARCHAR2(10 BYTE), 
	"CAPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OOSORGROLES
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OOSORGROLES" 
   (	"ORG_ID" NUMBER(15,0), 
	"ROLECODE" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OOSPRODUCTS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OOSPRODUCTS" 
   (	"NOTIFICATION_ID" NUMBER(15,0), 
	"LOT_ID" NUMBER(15,0), 
	"CODE" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(1024 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OOSPROTOCOL
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OOSPROTOCOL" 
   (	"NOTIFICATIONNUMBER" VARCHAR2(19 BYTE), 
	"PROTOCOLNUMBER" VARCHAR2(25 BYTE), 
	"VERSIONNUMBER" NUMBER(15,0), 
	"PROTOCOLTYPE" VARCHAR2(20 BYTE), 
	"FOUNDATIONPROTOCOLNUMBER" VARCHAR2(24 BYTE), 
	"PARENTPROTOCOLNUMBER" VARCHAR2(24 BYTE), 
	"PLACE" VARCHAR2(4000 BYTE), 
	"PROTOCOLDATE" DATE, 
	"SIGNDATE" DATE, 
	"PUBLISHDATE" DATE, 
	"COMMISSIONREGNUMBER" NUMBER(15,0), 
	"COMMISSIONNAME" VARCHAR2(2000 BYTE), 
	"LOTCOUNT" NUMBER(15,0), 
	"ISACTUAL" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OOSPROTOCOLLOT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OOSPROTOCOLLOT" 
   (	"NOTIFICATIONNUMBER" VARCHAR2(19 BYTE), 
	"PROTOCOLNUMBER" VARCHAR2(25 BYTE), 
	"PROTOCOLVERSIONNUMBER" NUMBER(15,0), 
	"PROTOCOLTYPE" VARCHAR2(20 BYTE), 
	"LOTNUMBER" NUMBER(15,0), 
	"APPLICATIONCOUNT" NUMBER(15,0), 
	"ALLABSENT" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OOS223PURCHASENOTICEINFO
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OOS223PURCHASENOTICEINFO" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"GUID" VARCHAR2(36 BYTE), 
	"REGISTRATIONNUMBER" NUMBER(11,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OOS223PURCHNOTICELOTINFO
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OOS223PURCHNOTICELOTINFO" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"OOS223PURCHASENOTICEINFO_ID" NUMBER(15,0), 
	"GUID" VARCHAR2(36 BYTE), 
	"ORDINALNUMBER" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table OPERTYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."OPERTYPE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORDERDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORDERDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"BUDGET_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"VENDOR_ID" NUMBER(15,0), 
	"VENDORTAXCODE" VARCHAR2(20 BYTE), 
	"VENDORKPP" VARCHAR2(20 BYTE), 
	"VENDORPROPFORM_ID" NUMBER(15,0), 
	"MINSCORE" NUMBER(10,4) DEFAULT 0, 
	"MAXSCORE" NUMBER(10,4) DEFAULT 0, 
	"REMARK" VARCHAR2(255 BYTE), 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"ISGROUPSMOREONE" NUMBER(1,0), 
	"HASCONTRACTORWORK" NUMBER(1,0) DEFAULT 0, 
	"ENTERPRISE" NUMBER(1,0) DEFAULT 0, 
	"CONTROLFLAGS" NUMBER(15,0) DEFAULT 0, 
	"AUCTIONSTEP" NUMBER(15,2), 
	"STARTTIME" DATE, 
	"PROLONGCOUNT" NUMBER(15,0) DEFAULT 0, 
	"EXPORT_FLAG" NUMBER(1,0) DEFAULT 0, 
	"ISASSIGNRELEASED" NUMBER(1,0) DEFAULT 0, 
	"CONTYPE_ID" NUMBER(15,0), 
	"AUCTIONEERPOS" NUMBER(15,0), 
	"OPENINGDATE" DATE, 
	"SELECTDATE" DATE, 
	"PROCESS_DATE" DATE, 
	"REFUSE_DATE" DATE, 
	"PROCESS_BEFORE_DATE" DATE, 
	"PRICE_GENERATION_ORDER" CLOB, 
	"PLAN_DEALDATE" DATE, 
	"PLAN_INVITATIONDATE" DATE, 
	"OOSKEYREFUSE" VARCHAR2(100 BYTE), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"OOS_DOC_NUMBER" VARCHAR2(50 BYTE), 
	"LOTOOSKEY" VARCHAR2(100 BYTE), 
	"OOSATTACHPACKETCNT" NUMBER(15,0) DEFAULT -1, 
	"DOCDELIVERYTERMBEGIN" DATE, 
	"DOCDELIVERYTERMEND" DATE, 
	"DOCDELIVERYPROCEDURE" VARCHAR2(1028 BYTE), 
	"ISDOCFEEBAIL" NUMBER(1,0) DEFAULT 0, 
	"DOCFEEPERSONALACC_ID" NUMBER(15,0), 
	"DOCFEESETTLEMENTACC_ID" NUMBER(15,0), 
	"DOCFEESETTLEMENTBIC" VARCHAR2(15 BYTE), 
	"DOCFEECURRENCY_ID" NUMBER(15,0), 
	"DOCFEEAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"OOSFOUNDATIONPROTOCOLNUMBER" VARCHAR2(30 BYTE), 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"PURCHASEMODE_CAPTION" VARCHAR2(500 BYTE), 
	"DELIVERYBASISCODE" VARCHAR2(50 BYTE), 
	"PAYCONDITIONNAME" VARCHAR2(255 BYTE), 
	"CMPORG_ID" NUMBER(15,0), 
	"CMPDATE" DATE, 
	"ACCEPTDATE" DATE, 
	"EXTRA" CLOB, 
	"NOTICE" CLOB, 
	"ACCEPTSTARTDATE" DATE, 
	"PLACINGWAY_ID" NUMBER(15,0), 
	"QUANTITYCONTRACTSPNIR" NUMBER(15,0), 
	"DOCDEVELOPER_ID" NUMBER(15,0), 
	"FINISHDATE" DATE, 
	"ISAMOUNTPERCENT" NUMBER(1,0) DEFAULT 0, 
	"AMOUNTPERCENT" NUMBER(3,2), 
	"DOCLANGUAGE" VARCHAR2(500 BYTE), 
	"CURRENCY_ID" NUMBER(15,0), 
	"CURRENCY_CODE" VARCHAR2(3 BYTE), 
	"PURCHASEORG_ID" NUMBER(15,0), 
	"PURCHASEORGNAMECACHE_ID" NUMBER(15,0), 
	"CURYEARAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"FUTYEARAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"SINGLECUSTOMERREASON_ID" NUMBER(15,0), 
	"OFRREQREASON_ID" NUMBER(15,0), 
	"DOCDELIVERYMODE" CLOB, 
	"AUCTIONREGPROCEDURE" CLOB, 
	"PRESELECTIONPLACE" CLOB, 
	"LIMITCONDEFINITION" CLOB, 
	"GOODSLIMITS" CLOB, 
	"COLLECTINGORDER" CLOB, 
	"CONTRACTINGTERM" CLOB, 
	"CANCEL_DATE" DATE, 
	"CANCEL_NUMBER" VARCHAR2(100 BYTE), 
	"CANCEL_PLANPUBLISHDATE" DATE, 
	"CANCEL_INITIATIVETYPE" VARCHAR2(2 BYTE), 
	"CANCEL_AUTHORITYTYPE" VARCHAR2(2 BYTE), 
	"CANCEL_AUTHORITYNAME" CLOB, 
	"CANCEL_DOCDATE" DATE, 
	"CANCEL_DOCNUMBER" VARCHAR2(100 BYTE), 
	"CANCEL_DOCNAME" CLOB, 
	"CANCEL_CHECKRESULT_NUMBER" VARCHAR2(30 BYTE), 
	"CANCEL_PRESCRIPTION_NUMBER" VARCHAR2(30 BYTE), 
	"CANCEL_ADDINFO" CLOB, 
	"SECONDPART_ACCEPTSTARTDATE" DATE, 
	"SECONDPART_ACCEPTPLACE" CLOB, 
	"SECONDPART_ACCEPTORDER" CLOB, 
	"SECONDPART_OPENINGDATE" DATE, 
	"SECONDPART_OPENINGPLACE" CLOB, 
	"SECONDPART_CMPDATE" DATE, 
	"SECONDPART_CMPPLACE" CLOB, 
	"CHANGE_DOCNAME" CLOB, 
	"CHANGE_ADDITIONALINFO" CLOB, 
	"NECESSITY_ID" NUMBER(15,0) DEFAULT 0, 
	"NECESSITY_DESCRIPTION" VARCHAR2(1000 BYTE), 
	"REPNOTICE_ID" NUMBER(15,0), 
	"ETP_ID" NUMBER(15,0), 
	"OOSETPCODE" VARCHAR2(20 BYTE), 
	"ETPKEY" VARCHAR2(100 BYTE), 
	"CMPORGTAXCODE" VARCHAR2(20 BYTE), 
	"CMPORGKPP" VARCHAR2(20 BYTE), 
	"CMPORGFACTCOUNTRY_ID" NUMBER(15,0), 
	"CMPORGFACTPOSTINDEX" VARCHAR2(10 BYTE), 
	"CMPORGFACTTERRITORYCODE" VARCHAR2(20 BYTE), 
	"CMPORGFACTADDRESS" VARCHAR2(300 BYTE), 
	"CMPORGPOSTCOUNTRY_ID" NUMBER(15,0), 
	"CMPORGPOSTPOSTINDEX" VARCHAR2(10 BYTE), 
	"CMPORGPOSTTERRITORYCODE" VARCHAR2(20 BYTE), 
	"CMPORGPOSTADDRESS" VARCHAR2(300 BYTE), 
	"CMPORGFAX" VARCHAR2(100 BYTE), 
	"CMPORGPHONE" VARCHAR2(100 BYTE), 
	"CMPORGEMAIL" VARCHAR2(256 BYTE), 
	"CHANGE_INITIATIVETYPE" VARCHAR2(2 BYTE), 
	"CHANGE_AUTHORITYTYPE" VARCHAR2(2 BYTE), 
	"CHANGE_AUTHORITYNAME" VARCHAR2(100 BYTE), 
	"CHANGE_DATE" DATE, 
	"CHANGE_DESNUMBER" VARCHAR2(350 BYTE), 
	"ENERGYTYPE" VARCHAR2(3 BYTE), 
	"SIGNTERM" NUMBER(15,0), 
	"FIRSTPARTETPKEY" VARCHAR2(100 BYTE), 
	"SECONDPARTETPKEY" VARCHAR2(100 BYTE), 
	"PRESCRIPTION_DATE" DATE, 
	"PRESCRIPTION_NUMBER" VARCHAR2(30 BYTE), 
	"CHECKRESULT_NUMBER" VARCHAR2(30 BYTE), 
	"COMMISSION_ID" NUMBER(15,0), 
	"NOPUBLICDISCUSSION" NUMBER(1,0) DEFAULT 0, 
	"FIRSTPUBLICDISCUSSIONCOMPLETE" NUMBER(1,0) DEFAULT 0, 
	"PUBLICDISCUSSIONLINK" CLOB, 
	"PRICEFORMULA" CLOB, 
	"STANDARDCONTRACTNUMBER" VARCHAR2(16 BYTE), 
	"ALLOWMULTIPLECONTRACTS" NUMBER(1,0) DEFAULT 0, 
	"OOSFACTSTARTDATE" DATE, 
	"CMPNAMEOFPURCHORDER" CLOB, 
	"CMPTYPE" NUMBER(1,0) DEFAULT 0, 
	"CMPPARTICIPATION" NUMBER(1,0) DEFAULT 0, 
	"ISVATAMOUNT" NUMBER(1,0) DEFAULT 0, 
	"CMPORG_NEGOTIATE_CONTRACT" NUMBER(1,0) DEFAULT 0, 
	"OFFERS_OUTSIDE_ETP" NUMBER(1,0) DEFAULT 0, 
	"AUCTION_FINISH_TYPE" NUMBER(1,0) DEFAULT 0, 
	"AUCTION_FINISH_DATE" DATE, 
	"AUCTION_PROLONGATION" NUMBER(15,0), 
	"VAT" NUMBER(1,0) DEFAULT 0, 
	"VATRATE" NUMBER(15,4), 
	"CONTRACT_SIGN_TERM" NUMBER(15,0), 
	"CONTRACT_DEAL_TERM" NUMBER(15,0), 
	"POTENTIALCONTRACTORSNUMBER" NUMBER(15,0), 
	"BIDAFTERYOURSELF" NUMBER(1,0) DEFAULT 0, 
	"AUCTIONWITHSTEP" NUMBER(1,0) DEFAULT 0, 
	"AUCTIONSTEPTYPE" NUMBER(1,0) DEFAULT 0, 
	"AUCTIONSTEPVALUE" NUMBER(15,4), 
	"AUCTIONBIDBYSTEP" NUMBER(1,0) DEFAULT 0, 
	"AUCTIONMINSTEPLIMIT" NUMBER(15,4), 
	"AUCTIONZEROBID" NUMBER(1,0) DEFAULT 0, 
	"AUCTIONDIVISIBLEBID" NUMBER(1,0) DEFAULT 0, 
	"AUCTIONAUTOSTEPDEC" NUMBER(1,0) DEFAULT 0, 
	"AUCTIONSTEPDECVALUE" NUMBER(15,4), 
	"AUCTIONSTEPDECLIMIT" NUMBER(15,4), 
	"AUCTIONDECINTERVAL" NUMBER(15,0), 
	"DOCWEBADDRESS" CLOB, 
	"P1PLACE" CLOB, 
	"P2PLACE" CLOB, 
	"P3PLACE" CLOB, 
	"CHANGE_DESCRIPTION" CLOB, 
	"P1PLACELTD" CLOB, 
	"P2PLACELTD" CLOB, 
	"EVADEDMEMBERCONDITION" CLOB, 
	"RATIONALEPRICE" CLOB, 
	"DOCFEEPAYPROCEDURE" CLOB, 
	"VENDORNAME" CLOB, 
	"DESCRIPTION" CLOB, 
	"COMMISSION_ISSUE" CLOB, 
	"SUBJECT" CLOB, 
	"CMPORGNAME" CLOB, 
	"CMPNAME" CLOB, 
	"ENERGYSERVICEECONOMY" CLOB, 
	"DOCDELIVERYPLACE" CLOB, 
	"APPFORM" CLOB, 
	"SPECIALORG_ID" NUMBER(15,0), 
	"SPECIALORG_NAME" CLOB, 
	"CMPORGOOSROLE" NUMBER(1,0), 
	"PROCEDUREOOSVERSION" NUMBER(15,0), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"RECIPIENTNAME" CLOB, 
	"PARENTLOTNUMBER" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("PRICE_GENERATION_ORDER") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("EXTRA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("NOTICE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DOCDELIVERYMODE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("AUCTIONREGPROCEDURE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("PRESELECTIONPLACE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("LIMITCONDEFINITION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("GOODSLIMITS") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("COLLECTINGORDER") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CONTRACTINGTERM") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CANCEL_AUTHORITYNAME") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CANCEL_DOCNAME") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CANCEL_ADDINFO") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("SECONDPART_ACCEPTPLACE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("SECONDPART_ACCEPTORDER") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("SECONDPART_OPENINGPLACE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("SECONDPART_CMPPLACE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CHANGE_DOCNAME") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CHANGE_ADDITIONALINFO") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("PUBLICDISCUSSIONLINK") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("PRICEFORMULA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CMPNAMEOFPURCHORDER") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DOCWEBADDRESS") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("P1PLACE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("P2PLACE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("P3PLACE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CHANGE_DESCRIPTION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("P1PLACELTD") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("P2PLACELTD") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("EVADEDMEMBERCONDITION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("RATIONALEPRICE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DOCFEEPAYPROCEDURE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("VENDORNAME") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DESCRIPTION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("COMMISSION_ISSUE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("SUBJECT") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CMPORGNAME") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CMPNAME") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("ENERGYSERVICEECONOMY") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DOCDELIVERYPLACE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("APPFORM") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("SPECIALORG_NAME") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("RECIPIENTNAME") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table ORDERSUMMARY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORDERSUMMARY" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"ORDER_ID" NUMBER(15,0), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"CMPLOTPOS" NUMBER(15,0), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"FIRSTCONTRACT_ID" NUMBER(15,0), 
	"LASTCONTRACT_ID" NUMBER(15,0), 
	"CMPBUDGETLINEPOS" NUMBER(15,0), 
	"CMPGOODSPOS" NUMBER(15,0), 
	"RESULT" NUMBER(15,0) DEFAULT 0, 
	"LASTPHASECODE" NUMBER(1,0) DEFAULT 0, 
	"LASTPHASEDATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORG
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORG" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"CAPTION" VARCHAR2(255 BYTE), 
	"TAXCODE" VARCHAR2(20 BYTE), 
	"KPP" VARCHAR2(20 BYTE), 
	"OKPO" VARCHAR2(20 BYTE), 
	"OKONH" VARCHAR2(20 BYTE), 
	"LAW_ADDRESS" VARCHAR2(300 BYTE), 
	"ADDRESS" VARCHAR2(300 BYTE), 
	"DIRECTOR_NAME" VARCHAR2(100 BYTE), 
	"ACCOUNTANT_NAME" VARCHAR2(100 BYTE), 
	"CLOSE_DATE" DATE, 
	"COMPEXTRA" CLOB, 
	"QUOTEXTRA" CLOB, 
	"CERT_ID" NUMBER(15,0), 
	"AUCTIONEXTRA" CLOB, 
	"SELECTIONEXTRA" CLOB, 
	"CUSTOMERCODE" VARCHAR2(5 BYTE), 
	"ACTIONPLACE" VARCHAR2(255 BYTE), 
	"AUCTIONREGPROCEDURE" VARCHAR2(255 BYTE), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"DOCWEBADDRESS" CLOB, 
	"DOCDELIVERYPLACE" VARCHAR2(255 BYTE), 
	"DOCDELIVERYPROCEDURE" CLOB, 
	"ISDOCFEEBAIL" NUMBER(1,0) DEFAULT 0, 
	"DOCFEEPERSONALACC_ID" NUMBER(15,0), 
	"DOCFEESETTLEMENTACC_ID" NUMBER(15,0), 
	"OOSUSERNAME" VARCHAR2(100 BYTE), 
	"OOSPASSWORD" VARCHAR2(100 BYTE), 
	"DEFACCEPTSTARTTIME" DATE, 
	"DEFACCEPTTIME" DATE, 
	"DEFQUOTREQFORM" CLOB, 
	"DEFDELIVERYTERM" CLOB, 
	"DEFPAYMENTCONDITION" CLOB, 
	"DEFEVADEDMEMBERCONDITION" CLOB, 
	"DEFOFRREQOFFERSREGLAMENT" CLOB, 
	"DOCLANGUAGE" VARCHAR2(500 BYTE), 
	"CONSERVICEINFO" CLOB, 
	"OKTMO" VARCHAR2(20 BYTE), 
	"DOCDELIVERYMODE" CLOB, 
	"CUSTCANREFUSEINFO" CLOB, 
	"COLLECTINGORDER" CLOB, 
	"CONTRACTINGTERM" CLOB, 
	"DEFQUOTREQUESTPLACE" CLOB, 
	"PUBLICENTITYNAME" CLOB, 
	"COUNTRY_ID" NUMBER(15,0), 
	"FOREIGNKEY" VARCHAR2(50 BYTE), 
	"TERRITORY_ID" NUMBER(15,0), 
	"LAWTERRITORY_ID" NUMBER(15,0), 
	"FACTERRITORY_ID" NUMBER(15,0), 
	"FAC_ADDRESS" VARCHAR2(300 BYTE), 
	"FAC_POSTINDEX" VARCHAR2(10 BYTE), 
	"LAW_POSTINDEX" VARCHAR2(10 BYTE), 
	"PHONE" VARCHAR2(100 BYTE), 
	"FAX" VARCHAR2(100 BYTE), 
	"EMAIL" VARCHAR2(256 BYTE), 
	"REGDATE" DATE, 
	"REGPLACE" VARCHAR2(255 BYTE), 
	"REGYEAR" NUMBER(4,0), 
	"ISTAXCODEFREE" NUMBER(1,0) DEFAULT 0, 
	"PARENT_ID" NUMBER(15,0), 
	"POSTINDEX" VARCHAR2(10 BYTE), 
	"PROPFORM_ID" NUMBER(15,0), 
	"SERVEORG_ID" NUMBER(15,0), 
	"OGRN" VARCHAR2(13 BYTE), 
	"ISCONTRACTOR" NUMBER(1,0) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"PROP_FORM" VARCHAR2(2000 BYTE), 
	"REQUESTORDERLTD" VARCHAR2(4000 BYTE), 
	"KLARD_REGION" VARCHAR2(255 BYTE), 
	"KLARD_REGIONCODE" VARCHAR2(20 BYTE), 
	"KLARD_DISTRICT" VARCHAR2(255 BYTE), 
	"KLARD_DISTRICTCODE" VARCHAR2(20 BYTE), 
	"KLARD_CITY" VARCHAR2(255 BYTE), 
	"KLARD_CITYCODE" VARCHAR2(20 BYTE), 
	"KLARD_LOCALITY" VARCHAR2(255 BYTE), 
	"KLARD_LOCALITYCODE" VARCHAR2(20 BYTE), 
	"KLARD_STREET" VARCHAR2(255 BYTE), 
	"KLARD_STREETCODE" VARCHAR2(20 BYTE), 
	"KLARD_HOUSE" VARCHAR2(200 BYTE), 
	"KLARD_APPARTMENT" VARCHAR2(200 BYTE), 
	"STARTPLDATE" DATE, 
	"EXPIREPLDATE" DATE, 
	"ISPLPUBLIC" NUMBER(1,0) DEFAULT 0, 
	"INTERNAL_CUSTOMERCODE" VARCHAR2(20 BYTE), 
	"OOS223FZKEY" VARCHAR2(100 BYTE), 
	"OOS223FZOFRREQCODE" NUMBER(15,0), 
	"OKTMO_ID" NUMBER(15,0), 
	"IKU" VARCHAR2(20 BYTE), 
	"ORGTYPE" NUMBER(1,0) DEFAULT 0, 
	"LASTNAME" VARCHAR2(250 BYTE), 
	"FIRSTNAME" VARCHAR2(250 BYTE), 
	"PATRONYMIC" VARCHAR2(250 BYTE), 
	"SHORTNAME" VARCHAR2(2000 BYTE), 
	"COMPANYNAME" VARCHAR2(2000 BYTE), 
	"TAXPAYERCODE" VARCHAR2(100 BYTE), 
	"OKOGU" VARCHAR2(20 BYTE), 
	"DIRECTOR_ID" NUMBER(15,0), 
	"ACCOUNTANT_ID" NUMBER(15,0), 
	"WEBSITE" VARCHAR2(2000 BYTE), 
	"KLARD_REGIONSOCR" VARCHAR2(10 BYTE), 
	"KLARD_DISTRICTSOCR" VARCHAR2(10 BYTE), 
	"KLARD_CITYSOCR" VARCHAR2(10 BYTE), 
	"KLARD_LOCALITYSOCR" VARCHAR2(10 BYTE), 
	"KLARD_STREETSOCR" VARCHAR2(10 BYTE), 
	"OKVED_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("COMPEXTRA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("QUOTEXTRA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("AUCTIONEXTRA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("SELECTIONEXTRA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DOCWEBADDRESS") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DOCDELIVERYPROCEDURE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DEFQUOTREQFORM") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DEFDELIVERYTERM") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DEFPAYMENTCONDITION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DEFEVADEDMEMBERCONDITION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DEFOFRREQOFFERSREGLAMENT") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CONSERVICEINFO") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DOCDELIVERYMODE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CUSTCANREFUSEINFO") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("COLLECTINGORDER") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CONTRACTINGTERM") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("DEFQUOTREQUESTPLACE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("PUBLICENTITYNAME") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table ORGACCOUNT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGACCOUNT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"ORGACCTYPE_ID" NUMBER(15,0) DEFAULT 1, 
	"ORG_ID" NUMBER(15,0), 
	"BUDGET_FLAG" NUMBER(1,0) DEFAULT 0, 
	"BANK_ID" NUMBER(15,0), 
	"KEEPER_ID" NUMBER(15,0), 
	"CURRENCY_NAME" VARCHAR2(50 BYTE), 
	"ACCOUNT_NUMBER" VARCHAR2(35 BYTE), 
	"OPEN_DATE" DATE, 
	"CLOSE_DATE" DATE, 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"DISTRIBUTIVE_FLAG" NUMBER(1,0) DEFAULT 0, 
	"FOREIGNKEY" VARCHAR2(50 BYTE), 
	"EXECUTER_ID" NUMBER(15,0), 
	"EXECUTERACC_ID" NUMBER(15,0), 
	"KEEPERACC_ID" NUMBER(15,0), 
	"OOSFLAG" NUMBER(1,0) DEFAULT 0, 
	"RECIPIENT_DESCRIPTION" VARCHAR2(2000 BYTE), 
	"ISCONTRACTOR" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGACCTYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGACCTYPE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGADDKPP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGADDKPP" 
   (	"ORG_ID" NUMBER(15,0), 
	"KPP" VARCHAR2(20 BYTE), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"FOREIGNKEY" VARCHAR2(50 BYTE), 
	"PROPFORM_ID" NUMBER(15,0), 
	"EXCLUDE_DATE" DATE, 
	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGATTACH
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGATTACH" 
   (	"ID" NUMBER(15,0), 
	"ORG_ID" NUMBER(15,0), 
	"ATTACH_NAME" VARCHAR2(100 BYTE), 
	"ATTACH_DATA" BLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("ATTACH_DATA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table ORGCHILD
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGCHILD" 
   (	"ORG_ID" NUMBER(15,0), 
	"CHILD_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGCONCCONT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGCONCCONT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"ORG_ID" NUMBER(15,0), 
	"CONTRACT_YEAR" NUMBER(4,0), 
	"CONTRACT_COUNT" NUMBER(15,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGETP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGETP" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"ORG_ID" NUMBER(15,0), 
	"ETP_ID" NUMBER(15,0), 
	"ETPKEY" VARCHAR2(100 BYTE), 
	"REMARK" VARCHAR2(2000 BYTE), 
	"STATUS" NUMBER(1,0), 
	"ORGROLE_ID" NUMBER(15,0), 
	"ETPUSERNAME" VARCHAR2(100 BYTE), 
	"ETPPASSWORD" VARCHAR2(100 BYTE), 
	"SYSUSER_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGFORM
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGFORM" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(200 BYTE), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"OOSCODE" VARCHAR2(10 BYTE), 
	"ISACTUAL" NUMBER(1,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGGOODSGROUP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGGOODSGROUP" 
   (	"ORG_ID" NUMBER(15,0), 
	"GROUP_ID" NUMBER(15,0), 
	"ISSUPPLYING" NUMBER(1,0) DEFAULT 0, 
	"SELECTION_DATE" DATE, 
	"SELECTION_RESULT" NUMBER(1,0), 
	"FIRST_IGNORED" NUMBER(1,0), 
	"FIRST_DOC_NUMBER" VARCHAR2(20 BYTE), 
	"FIRST_DATE" DATE, 
	"SECOND_IGNORED" NUMBER(1,0), 
	"SECOND_DOC_NUMBER" VARCHAR2(20 BYTE), 
	"SECOND_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGHEARING
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGHEARING" 
   (	"ORG_ID" NUMBER(15,0), 
	"POS" NUMBER(3,0), 
	"YR" NUMBER(4,0), 
	"DECISION" VARCHAR2(255 BYTE), 
	"CLIENT" VARCHAR2(255 BYTE), 
	"CAUSE" VARCHAR2(255 BYTE), 
	"SUBJECT" VARCHAR2(255 BYTE), 
	"AMOUNT" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGLICENCE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGLICENCE" 
   (	"ORG_ID" NUMBER(15,0), 
	"LICTYPE_ID" NUMBER(15,0), 
	"ISSUER_NAME" VARCHAR2(255 BYTE), 
	"ISSUE_DATE" DATE, 
	"EXPIRE_DATE" DATE, 
	"LICENCE_NUMBER" VARCHAR2(30 BYTE), 
	"HASHARDCOPY" NUMBER(15,0) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGOOS223FZUSER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGOOS223FZUSER" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"ORG_ID" NUMBER(15,0), 
	"SYSUSER_ID" NUMBER(15,0), 
	"LOGIN" VARCHAR2(100 BYTE), 
	"PSWD" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGPERSONAL
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGPERSONAL" 
   (	"ORG_ID" NUMBER(15,0), 
	"PERSONAL_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGPERSONALRESP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGPERSONALRESP" 
   (	"ORG_ID" NUMBER(15,0), 
	"PERSONAL_ID" NUMBER(15,0), 
	"RESPONSIBILITY_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGROLE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGROLE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGROLES
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGROLES" 
   (	"ORG_ID" NUMBER(15,0), 
	"ORGROLE_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGSELSTATUS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGSELSTATUS" 
   (	"ORG_ID" NUMBER(15,0), 
	"ORGSTATUS_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGSTATUS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGSTATUS" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(300 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGTITLE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGTITLE" 
   (	"ORG_ID" NUMBER(15,0), 
	"DTBEGIN" DATE, 
	"DTEND" DATE, 
	"DESCRIPTION" VARCHAR2(500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGTURNOVER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGTURNOVER" 
   (	"ORG_ID" NUMBER(15,0), 
	"YR" NUMBER(4,0), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"CURRENCY_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ORGUNFAIR
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ORGUNFAIR" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"ORG_ID" NUMBER(15,0), 
	"DT" DATE, 
	"MARK" NUMBER(1,0) DEFAULT 1, 
	"DESCRIPTION" CLOB, 
	"PURCHASEDATE" DATE, 
	"CONTRACTDESCRIPTION" VARCHAR2(500 BYTE), 
	"CONTRACTAMOUNT" NUMBER(15,2), 
	"CONTRACTEXECUTIONDATE" DATE, 
	"CONTRACTDISSOLVEDATE" DATE, 
	"CONTRACTDISSOLVEREASON" VARCHAR2(255 BYTE), 
	"ISUNFAIR" NUMBER(1,0) DEFAULT 0, 
	"UNFAIRDATE" DATE, 
	"CONTRACTDOCNUMBER" VARCHAR2(30 BYTE), 
	"PURCHASEMODE_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("DESCRIPTION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table PACKTYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PACKTYPE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PANEL
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PANEL" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"CAPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PANELITEM
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PANELITEM" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PANEL_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"SHOW_ORDER" NUMBER(15,0) DEFAULT 0, 
	"HINT_MESSAGE" VARCHAR2(255 BYTE), 
	"SHORTCUT_KEY" VARCHAR2(30 BYTE), 
	"CLIENTOBJECT_ID" NUMBER(15,0), 
	"OBJECT_PARAMS" VARCHAR2(300 BYTE), 
	"IMAGE" BLOB, 
	"SUBSYSTEM" NUMBER(15,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("IMAGE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table PAYCONDITION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PAYCONDITION" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(255 BYTE), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"SYSTEM_FLAG" NUMBER(1,0) DEFAULT 0, 
	"ACTUAL" NUMBER(1,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PERSON
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PERSON" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"FIO" VARCHAR2(255 BYTE), 
	"PHONE" VARCHAR2(255 BYTE), 
	"EMAIL" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PERSONAL
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PERSONAL" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"LASTNAME" VARCHAR2(50 BYTE), 
	"FIRSTNAME" VARCHAR2(50 BYTE), 
	"PATRONYMIC" VARCHAR2(50 BYTE), 
	"ORG_ID" NUMBER(15,0), 
	"APPOINTMENT" VARCHAR2(255 BYTE), 
	"PHONE" VARCHAR2(100 BYTE), 
	"PHONECOUNTRYCODE" VARCHAR2(15 BYTE), 
	"PHONECITYCODE" VARCHAR2(15 BYTE), 
	"PHONEEXTENSION" VARCHAR2(15 BYTE), 
	"EMAIL" VARCHAR2(256 BYTE), 
	"FAX" VARCHAR2(100 BYTE), 
	"FAXCOUNTRYCODE" VARCHAR2(15 BYTE), 
	"FAXCITYCODE" VARCHAR2(15 BYTE), 
	"FAXEXTENSION" VARCHAR2(15 BYTE), 
	"IS_ACTUAL" NUMBER(1,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLACEMENTFEATURE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLACEMENTFEATURE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"FOREIGNKEY" VARCHAR2(50 BYTE), 
	"NAME" VARCHAR2(512 BYTE), 
	"SHORTNAME" VARCHAR2(100 BYTE), 
	"TYPE" VARCHAR2(100 BYTE), 
	"PREFVALUE" NUMBER(15,2) DEFAULT 0, 
	"ACTUAL" NUMBER(1,0) DEFAULT 0, 
	"USETENDERPLANS" NUMBER(1,0) DEFAULT 1, 
	"BUDGETTYPE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLACEMENTFEATUREPM
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLACEMENTFEATUREPM" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PLACEMENTFEATURE_ID" NUMBER(15,0), 
	"PURCHASEMODE_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLACINGWAY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLACINGWAY" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"NAME" VARCHAR2(2000 BYTE), 
	"CODE" VARCHAR2(50 BYTE), 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"ACTUAL" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLANDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLANDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"BUDGET_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"REMARK" VARCHAR2(255 BYTE), 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"CUSTOMERNAME" VARCHAR2(2000 BYTE), 
	"PLANYEAR" NUMBER(4,0), 
	"PLANYEARBEGIN" NUMBER(4,0), 
	"PLANYEAREND" NUMBER(4,0), 
	"ISGROUPSMOREONE" NUMBER(1,0), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"RECIPIENT_NAME" VARCHAR2(2000 BYTE), 
	"NECESSITY_ID" NUMBER(15,0) DEFAULT 0, 
	"NECESSITY_DESCRIPTION" VARCHAR2(500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLANPOSITIONCHANGEREASON
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLANPOSITIONCHANGEREASON" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(1000 BYTE), 
	"ACTUAL" NUMBER(1,0) DEFAULT 1, 
	"BUDGETTYPE" NUMBER(1,0) DEFAULT 0, 
	"OOSKEY" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLANPOSITIONNUMBERERROR
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLANPOSITIONNUMBERERROR" 
   (	"DOCUMENT_ID" NUMBER(15,0), 
	"TEXT" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("TEXT") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table PLANREQUEST
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLANREQUEST" 
   (	"REQUEST_ID" NUMBER(15,0), 
	"DOC_ID" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN2ARRANGEMENT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN2ARRANGEMENT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PLAN2GOODS_ID" NUMBER(15,0), 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"PURCHASEMODE_CAPTION" VARCHAR2(500 BYTE), 
	"AMOUNT" NUMBER(15,4), 
	"PAYAMOUNT" NUMBER(15,4), 
	"PAYAMOUNTPROLONG" NUMBER(15,4), 
	"INVITATIONDATE" DATE, 
	"CMPDATE" DATE, 
	"DEALDATE" DATE, 
	"CMPORG_ID" NUMBER(15,0), 
	"CONTRACTOR_ID" NUMBER(15,0), 
	"LOTNAMECACHE_ID" NUMBER(15,0), 
	"ISENTERPRISE" NUMBER(1,0) DEFAULT 0, 
	"ISSMALL" NUMBER(1,0) DEFAULT 0, 
	"PARENTID" NUMBER(15,0), 
	"CONTRACTEXECDATE" DATE, 
	"CHANGEDESCRIPTIONCACHE_ID" NUMBER(15,0), 
	"LOTNUMBERCACHE_ID" NUMBER(15,0), 
	"STATUS" NUMBER(1,0) DEFAULT 0, 
	"DELIVERYBASIS_ID" NUMBER(15,0), 
	"PAYCONDITIONCACHE_ID" NUMBER(15,0), 
	"CONTRACTPROVIDINGCACHE_ID" NUMBER(15,0), 
	"ORDERNUMBER" VARCHAR2(30 BYTE), 
	"ADVANCE" NUMBER(15,2), 
	"ORDERNAMECACHE_ID" NUMBER(15,0), 
	"OPENINGDATE" DATE, 
	"SELECTDATE" DATE, 
	"FINISHDATE" DATE, 
	"EXPLANATIONCACHE_ID" NUMBER(15,0), 
	"EFORM" NUMBER(1,0), 
	"COUNTRY_ID" NUMBER(15,0), 
	"TERRITORYCODE" VARCHAR2(20 BYTE), 
	"DELIVERYADDRESS_ID" NUMBER(15,0), 
	"CURRENCY_ID" NUMBER(15,0), 
	"ORDERFORM" NUMBER(1,0) DEFAULT 0, 
	"CONTRACTPAYORDERCACHE_ID" NUMBER(15,0), 
	"GUARANTEEAMOUNT" NUMBER(15,2), 
	"GUARANTEEREQUESTAMOUNT" NUMBER(15,2), 
	"CHANGEREASON_ID" NUMBER(15,0), 
	"CONEXECSTAGESCACHE_ID" NUMBER(15,0), 
	"PERIODICITYCACHE_ID" NUMBER(15,0), 
	"PROHIBITIONSCACHE_ID" NUMBER(15,0), 
	"QUANTITYUNDEFINED" NUMBER(1,0) DEFAULT 0, 
	"PUBLICDISCUSSCACHE_ID" NUMBER(15,0), 
	"PREFERENCEGROUP_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN2CHANGEREASON
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN2CHANGEREASON" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(1000 BYTE), 
	"ACTUAL" NUMBER(1,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN2DAILYTOTALS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN2DAILYTOTALS" 
   (	"ID" NUMBER(15,0), 
	"RUNDATE" DATE, 
	"BUDGET_ID" NUMBER(15,0), 
	"PLANYEAR" NUMBER(4,0), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"AMOUNT" NUMBER(15,4), 
	"INVITATIONDATE" DATE, 
	"CMPDATE" DATE, 
	"DEALDATE" DATE, 
	"CONTRACTEXECDATE" DATE, 
	"ISENTERPRISE" NUMBER(1,0) DEFAULT 0, 
	"ISSMALL" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN2DOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN2DOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"BUDGET_ID" NUMBER(15,0), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"PLANYEAR" NUMBER(4,0), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"CUSTOMERNAME" VARCHAR2(2000 BYTE), 
	"DESCRIPTION_ID" NUMBER(15,0), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"NECESSITY_ID" NUMBER(15,0) DEFAULT 0, 
	"NECESSITY_DESCRIPTION" VARCHAR2(500 BYTE), 
	"REMARK" VARCHAR2(255 BYTE), 
	"ISGROUPSMOREONE" NUMBER(1,0), 
	"OOSPLANNUMBER" VARCHAR2(100 BYTE), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"CHANGE_OOSKEY" VARCHAR2(100 BYTE), 
	"FULLDESCRIPTION" VARCHAR2(4000 BYTE), 
	"OOSDISPSTATUS_ID" NUMBER(15,0), 
	"CONFIRMDATE" DATE, 
	"OWNER_ID" NUMBER(15,0), 
	"OWNERNAME" VARCHAR2(2000 BYTE), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"RESPPERSONAL_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN2DOCCHILD
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN2DOCCHILD" 
   (	"PLAN2DOC_ID" NUMBER(15,0), 
	"DOC_ID" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN2GOODS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN2GOODS" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PLAN2DOC_ID" NUMBER(15,0), 
	"GROUPCODE" VARCHAR2(20 BYTE), 
	"GROUPCAPTION" VARCHAR2(500 BYTE), 
	"OKDP_CODE" VARCHAR2(20 BYTE), 
	"OKPD_CODE" VARCHAR2(20 BYTE), 
	"OKVED" VARCHAR2(20 BYTE), 
	"GOODSCODE" VARCHAR2(20 BYTE), 
	"GOODSCAPTION" VARCHAR2(512 BYTE), 
	"PRICE" NUMBER(15,2) DEFAULT 0, 
	"QTY" NUMBER(15,4) DEFAULT 0, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"AMOUNTARRANGED" NUMBER(15,2) DEFAULT 0, 
	"FINSRC_ID" NUMBER(15,0), 
	"CODE1" VARCHAR2(100 BYTE), 
	"CODE2" VARCHAR2(100 BYTE), 
	"CODE3" VARCHAR2(100 BYTE), 
	"CODE4" VARCHAR2(100 BYTE), 
	"CODE5" VARCHAR2(100 BYTE), 
	"CODE6" VARCHAR2(100 BYTE), 
	"CODE7" VARCHAR2(100 BYTE), 
	"CODE8" VARCHAR2(100 BYTE), 
	"CODE9" VARCHAR2(100 BYTE), 
	"CODE10" VARCHAR2(100 BYTE), 
	"DELIVERYDATEFROM" DATE, 
	"DELIVERYDATETO" DATE, 
	"INDUSTRYCODE_ID" NUMBER(15,0), 
	"GRANTINVESTMENT_ID" NUMBER(15,0), 
	"PAYDATE" DATE, 
	"PAYDATEFROM" DATE, 
	"PAYDATETO" DATE, 
	"PAYAMOUNT" NUMBER(15,2), 
	"PAYAMOUNTPROLONG" NUMBER(15,2) DEFAULT 0, 
	"GOODSFLAG" NUMBER(1,0) DEFAULT 0, 
	"NECESSITY_ID" NUMBER(15,0) DEFAULT 0, 
	"CHANGE_PRICE" NUMBER(15,2) DEFAULT 0, 
	"CHANGE_QTY" NUMBER(15,4) DEFAULT 0, 
	"CHANGE_AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"RESULT_PRICE" NUMBER(15,2) DEFAULT 0, 
	"RESULT_QTY" NUMBER(15,4) DEFAULT 0, 
	"RESULT_AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"FROMPARENT" NUMBER(1,0) DEFAULT 0, 
	"GOODSBRANCH_ID" NUMBER(15,0), 
	"SUBJECTREQUIREMENTS" VARCHAR2(2000 BYTE), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"OLDPLAN2GOODS_ID" NUMBER(15,0), 
	"MEDICINEPROPVALUECACHE_ID" NUMBER(15,0), 
	"OKPD_NAME" VARCHAR2(1000 BYTE), 
	"OKVED_NAME" VARCHAR2(1000 BYTE), 
	"OKPD_ID" NUMBER(15,0), 
	"OKVED_ID" NUMBER(15,0), 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN2LEDGER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN2LEDGER" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PLAN2DOC_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"GROUP_ID" NUMBER(15,0), 
	"OKDP_ID" NUMBER(15,0), 
	"GOODS_ID" NUMBER(15,0), 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"ISENTERPRISE" NUMBER(1,0), 
	"ISSMALL" NUMBER(1,0), 
	"CMPORG_ID" NUMBER(15,0), 
	"FINSRC_ID" NUMBER(15,0), 
	"NECESSITY_ID" NUMBER(15,0), 
	"CODE1" VARCHAR2(100 BYTE), 
	"CODE2" VARCHAR2(100 BYTE), 
	"CODE3" VARCHAR2(100 BYTE), 
	"CODE4" VARCHAR2(100 BYTE), 
	"CODE5" VARCHAR2(100 BYTE), 
	"CODE6" VARCHAR2(100 BYTE), 
	"CODE7" VARCHAR2(100 BYTE), 
	"CODE8" VARCHAR2(100 BYTE), 
	"CODE9" VARCHAR2(100 BYTE), 
	"CODE10" VARCHAR2(100 BYTE), 
	"DELIVERYBASIS_ID" NUMBER(15,0), 
	"PAYCONDITIONCACHE_ID" NUMBER(15,0), 
	"INDUSTRYCODE_ID" NUMBER(15,0), 
	"GRANTINVESTMENT_ID" NUMBER(15,0), 
	"INVITATIONDATE" DATE, 
	"CMPDATE" DATE, 
	"DESCRIPTIONCACHE_ID" NUMBER(15,0), 
	"IDENTIFICCODECACHE_ID" NUMBER(15,0), 
	"CONTRACTOR_ID" NUMBER(15,0), 
	"AMOUNT_Q1" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT_Q2" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT_Q3" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT_Q4" NUMBER(15,2) DEFAULT 0, 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN2OOSEXTNUMBER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN2OOSEXTNUMBER" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"YEARPLANOWNER" VARCHAR2(104 BYTE), 
	"PLANPOSITIONNUMBER" VARCHAR2(100 BYTE), 
	"POSITIONNUMBER" VARCHAR2(30 BYTE), 
	"EXTNUMBER" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN2OOSFEATURE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN2OOSFEATURE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PLAN2OOSPOSITION_ID" NUMBER(15,0), 
	"PLACEMENTFEATURE_ID" NUMBER(15,0), 
	"OOSKEY" VARCHAR2(50 BYTE), 
	"NAME" VARCHAR2(450 BYTE), 
	"TYPE" VARCHAR2(1 BYTE), 
	"PREFVALUE" NUMBER(15,2) DEFAULT 0, 
	"CONTENT" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN2OOSKBK
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN2OOSKBK" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PLAN2OOSPOSITION_ID" NUMBER(15,0), 
	"CODE1" VARCHAR2(100 BYTE), 
	"CODE2" VARCHAR2(100 BYTE), 
	"CODE3" VARCHAR2(100 BYTE), 
	"CODE4" VARCHAR2(100 BYTE), 
	"CODE5" VARCHAR2(100 BYTE), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"FUTUREAMOUNT" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN2OOSKBKYEAR
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN2OOSKBKYEAR" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PLAN2OOSKBK_ID" NUMBER(15,0), 
	"PLANYEAR" NUMBER(4,0), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN2OOSOKVED
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN2OOSOKVED" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PLAN2OOSPOSITION_ID" NUMBER(15,0), 
	"CODE" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(1000 BYTE), 
	"OKVED_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN2OOSPOSITION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN2OOSPOSITION" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"POSITIONNUMBER" VARCHAR2(30 BYTE), 
	"CONTRACTSUBJECTNAME" VARCHAR2(2000 BYTE), 
	"CONTRACTMAXPRICE" NUMBER(15,2) DEFAULT 0, 
	"CONTRACTCURRENCY_ID" NUMBER(15,0), 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"PURCHASEMODE_CAPTION" VARCHAR2(500 BYTE), 
	"ORDERFORM" NUMBER(1,0) DEFAULT 1, 
	"CONTRACTPAYORDER" VARCHAR2(4000 BYTE), 
	"CONTRACTGUARANTEEPROCEDURE" VARCHAR2(4000 BYTE), 
	"CONTRACTGUARANTEEPART" NUMBER(15,2), 
	"CONTRACTGUARANTEEAMOUNT" NUMBER(15,2), 
	"ORDERPLACINGTERM" DATE, 
	"CONTRACTEXECUTIONTERM" DATE, 
	"CHANGEREASON_ID" NUMBER(15,0), 
	"ADDITIONALINFO" VARCHAR2(4000 BYTE), 
	"PUBLISHDATE" DATE, 
	"CONFIRMDATE" DATE, 
	"POSITIONPUBLISHDATE" DATE, 
	"VERSIONNUMBER" NUMBER(15,0), 
	"DIAGNOSIS" CLOB, 
	"PAYMENTS" NUMBER(15,2) DEFAULT 0, 
	"PUBLICDISCUSSCACHE_ID" NUMBER(15,0), 
	"PURCHASEFINPROCEDURECACHE_ID" NUMBER(15,0), 
	"PURCHASEFINAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"ADVANCECACHE_ID" NUMBER(15,0), 
	"CONEXECSTAGESCACHE_ID" NUMBER(15,0), 
	"PERIODICITYCACHE_ID" NUMBER(15,0), 
	"PROHIBITIONSCACHE_ID" NUMBER(15,0), 
	"PURCHASETYPE" NUMBER(2,0) DEFAULT 0, 
	"CMPORG_ID" NUMBER(15,0), 
	"PURCHASEMETHOD_ID" NUMBER(15,0), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"OKATO" VARCHAR2(20 BYTE), 
	"EFORM" NUMBER(1,0), 
	"MODIFICATIONDESCRIPTION" VARCHAR2(2000 BYTE), 
	"LEGALACTREQUISITES" VARCHAR2(2000 BYTE), 
	"CONTRACTPRICEFEATURES" VARCHAR2(2000 BYTE), 
	"FEATURES111" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("DIAGNOSIS") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table PLAN2OOSPRODUCT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN2OOSPRODUCT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PLAN2OOSPOSITION_ID" NUMBER(15,0), 
	"OKDP_CODE" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(4000 BYTE), 
	"MINREQUIREMENT" VARCHAR2(4000 BYTE), 
	"QUANTITYUNDEFINED" NUMBER(1,0) DEFAULT 0, 
	"QUANTITY" NUMBER(15,4) DEFAULT 0, 
	"PRICE" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"OKPD_CODE" VARCHAR2(20 BYTE), 
	"INTERNATIONALNAME" VARCHAR2(4000 BYTE), 
	"QUANTITYCURRENTYEAR" NUMBER(15,4) DEFAULT 0, 
	"OKPD_ID" NUMBER(15,0), 
	"UNITNAME" VARCHAR2(50 BYTE), 
	"OKVED" VARCHAR2(20 BYTE), 
	"OKVED_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN3DOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN3DOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(30 BYTE), 
	"DOC_DATE" DATE, 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"REMARK" VARCHAR2(255 BYTE), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"SGOZAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"SGOZENTERPRISEAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"PLANYEAR" NUMBER(4,0), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"CUSTOMERNAME" VARCHAR2(2000 BYTE), 
	"RESPORG_ID" NUMBER(15,0), 
	"RESPORGNAME" VARCHAR2(2000 BYTE), 
	"CONFIRMDATE" DATE, 
	"REGNUMBER" VARCHAR2(100 BYTE), 
	"VERSIONNUMBER" NUMBER(15,0) DEFAULT 0, 
	"PLANINFO" VARCHAR2(4000 BYTE), 
	"CUSTOMERTAXCODE" VARCHAR2(20 BYTE), 
	"CUSTOMERKPP" VARCHAR2(20 BYTE), 
	"CUSTOMERPROPFORM_ID" NUMBER(15,0), 
	"CUSTOMERPROPFORMCAPTION" VARCHAR2(2000 BYTE), 
	"CUSTOMERPROPFORMOOSCODE" VARCHAR2(10 BYTE), 
	"CUSTOMEROKTMO" VARCHAR2(20 BYTE), 
	"CUSTOMERPUBLICENTITYNAME" VARCHAR2(2000 BYTE), 
	"CUSTOMERCOUNTRY_ID" NUMBER(15,0), 
	"CUSTOMERINDEX" VARCHAR2(10 BYTE), 
	"CUSTOMERADDRESS" VARCHAR2(300 BYTE), 
	"CUSTOMERPHONE" VARCHAR2(100 BYTE), 
	"CUSTOMERFAX" VARCHAR2(100 BYTE), 
	"CUSTOMEREMAIL" VARCHAR2(256 BYTE), 
	"RESPEXECUTER_ID" NUMBER(15,0), 
	"RESPEXECUTERLASTNAME" VARCHAR2(50 BYTE), 
	"RESPEXECUTERFIRSTNAME" VARCHAR2(50 BYTE), 
	"RESPEXECUTERPATRONYMIC" VARCHAR2(50 BYTE), 
	"CONFIRMPERSON_ID" NUMBER(15,0), 
	"CONFIRMPERSONLASTNAME" VARCHAR2(50 BYTE), 
	"CONFIRMPERSONFIRSTNAME" VARCHAR2(50 BYTE), 
	"CONFIRMPERSONPATRONYMIC" VARCHAR2(50 BYTE), 
	"CONFIRMPERSONAPPOINTMENT" VARCHAR2(255 BYTE), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"CUSTOMEROKPO" VARCHAR2(20 BYTE), 
	"CREDENTIALSPASSED" NUMBER(1,0) DEFAULT 0, 
	"RESPONSIBLEORGLOCATION" VARCHAR2(2000 BYTE), 
	"RESPONSIBLEORGPHONE" VARCHAR2(100 BYTE), 
	"RESPONSIBLEORGEMAIL" VARCHAR2(256 BYTE), 
	"RESPONSIBLEORGOKPO" VARCHAR2(20 BYTE), 
	"RESPONSIBLEORGOKTMO" VARCHAR2(20 BYTE), 
	"RESPONSIBLEORGTAXCODE" VARCHAR2(20 BYTE), 
	"RESPONSIBLEORGKPP" VARCHAR2(20 BYTE), 
	"RESPORGOOSROLE" NUMBER(1,0), 
	"PLANTYPE" NUMBER(1,0), 
	"PERIODSTART" DATE, 
	"PERIODEND" DATE, 
	"ADDITIONALINFO" VARCHAR2(2000 BYTE), 
	"CUSTOMERFACTTERRITORY_ID" NUMBER(15,0), 
	"MODIFICATIONDESCRIPTION" VARCHAR2(2000 BYTE), 
	"SGOZEXCLUDEAMOUNT" NUMBER(15,2) DEFAULT NULL, 
	"SGOZENTERPRISEPERCENT" NUMBER(15,2) DEFAULT NULL, 
	"SGOZENTMANUALAMOUNT" NUMBER(15,2), 
	"SGOZQUOTMANUALAMOUNT" NUMBER(15,2)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN3DOCCHILD
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN3DOCCHILD" 
   (	"PLAN3DOC_ID" NUMBER(15,0), 
	"DOC_ID" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN3PURCHASEDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN3PURCHASEDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"REMARK" VARCHAR2(255 BYTE), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"ISGROUPSMOREONE" NUMBER(1,0), 
	"PLANYEAR" NUMBER(4,0), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"CUSTOMERNAME" VARCHAR2(2000 BYTE), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"RECIPIENTNAME" VARCHAR2(2000 BYTE), 
	"PURCHASECODE" VARCHAR2(100 BYTE), 
	"PLANPOSITION" VARCHAR2(100 BYTE), 
	"DESCRIPTION_ID" NUMBER(15,0), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"PURCHASETYPE" NUMBER(1,0) DEFAULT 0, 
	"NECESSITY_ID" NUMBER(15,0) DEFAULT 0, 
	"NECESSITY_DESCRIPTION" VARCHAR2(1000 BYTE), 
	"NECESSITY_ADVANCED" VARCHAR2(1000 BYTE), 
	"STATEPROGDOC_RSLT" VARCHAR2(2000 BYTE), 
	"STATEPROGDOC_PERIOD" VARCHAR2(2000 BYTE), 
	"STATEPROGDOC_PROCURE" VARCHAR2(2000 BYTE), 
	"PUBLICDISCUSSION" NUMBER(1,0) DEFAULT 0, 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"PURCHASEMODE_CAPTION" VARCHAR2(500 BYTE), 
	"CURRENCY_ID" NUMBER(15,0), 
	"CURRENCY_CODE" VARCHAR2(3 BYTE), 
	"ORDERFORM" NUMBER(1,0) DEFAULT 0, 
	"ORDERNAMECACHE_ID" NUMBER(15,0), 
	"INVITATIONDATE" DATE, 
	"DEALDATE" DATE, 
	"CONTRACTEXECDATE" DATE, 
	"CONEXECSTAGESCACHE_ID" NUMBER(15,0), 
	"PERIODICITYCACHE_ID" NUMBER(15,0), 
	"PROHIBITIONSCACHE_ID" NUMBER(15,0), 
	"SINGLECUSTOMERREASON_ID" NUMBER(15,0), 
	"OFRREQREASON_ID" NUMBER(15,0), 
	"CMPORG_ID" NUMBER(15,0), 
	"CMPORGNAME" VARCHAR2(2000 BYTE), 
	"CONBANKSUPPORTCACHE_ID" NUMBER(15,0), 
	"PUBLICDISCUSSCACHE_ID" NUMBER(15,0), 
	"ISENTERPRISE" NUMBER(1,0) DEFAULT 0, 
	"ADVANCE" NUMBER(15,2), 
	"ADVANCEPERCENTS" NUMBER(15,2), 
	"ADVANCEINFO" VARCHAR2(2000 BYTE), 
	"ISGUARANTEEAPP" NUMBER(1,0) DEFAULT 0, 
	"GUARANTEEAPPAMOUNT" NUMBER(15,2), 
	"GUARANTEEAPPPERCENT" NUMBER(15,2), 
	"PURCHASEFINCONDITION" VARCHAR2(2000 BYTE), 
	"ISGUARANTEECONTRACT" NUMBER(1,0) DEFAULT 0, 
	"GUARANTEECONTRACTAMOUNT" NUMBER(15,2), 
	"GUARANTEECONTRACTPERCENT" NUMBER(15,2), 
	"CONTRACTFINCONDITION" VARCHAR2(2000 BYTE), 
	"EFORM" NUMBER(1,0), 
	"ORDERNUMBER" VARCHAR2(30 BYTE), 
	"SUMPUSHASESMALLBUSINESS" NUMBER(15,2), 
	"PRCPUSHASESMALLBUSINESS" NUMBER(15,2), 
	"CONTRACTPAYORDERCACHE_ID" NUMBER(15,0), 
	"DELIVERYBASIS_ID" NUMBER(15,0), 
	"PAYCONDITIONCACHE_ID" NUMBER(15,0), 
	"CONTRACTOR_ID" NUMBER(15,0), 
	"COUNTRY_ID" NUMBER(15,0), 
	"TERRITORYCODE" VARCHAR2(20 BYTE), 
	"DELIVERYADDRESS_ID" NUMBER(15,0), 
	"CHANGEREASONDATE" DATE, 
	"PLANCHANGEREASON_ID" NUMBER(15,0), 
	"CHANGEREASON_ID" NUMBER(15,0), 
	"CHANGEREASON" VARCHAR2(2000 BYTE), 
	"CHANGEREASONINFO" VARCHAR2(2000 BYTE), 
	"FINAMOUNT" NUMBER(15,2), 
	"FINAMOUNT_2YEAR" NUMBER(15,2), 
	"FINAMOUNT_3YEAR" NUMBER(15,2), 
	"FINAMOUNT_FUTURE" NUMBER(15,2), 
	"PLAN_INVITATIONYEAR" NUMBER(4,0), 
	"INFO_7_2_17_44_FZ" NUMBER(1,0), 
	"DELIVERYDATEFROM" DATE, 
	"DELIVERYDATETO" DATE, 
	"PAYDATEFROM" DATE, 
	"PAYDATETO" DATE, 
	"OOSPUBLISHDATE" DATE, 
	"PURCHASEMETHOD_ID" NUMBER(15,0), 
	"MODIFICATIONDESCRIPTION" VARCHAR2(2000 BYTE), 
	"IDENTIFICATION_CODE" VARCHAR2(50 BYTE), 
	"IKOKPD_ID" NUMBER(15,0), 
	"LEGALACTREQUISITES" VARCHAR2(2000 BYTE), 
	"CONTRACTPRICEFEATURES" VARCHAR2(2000 BYTE), 
	"PARENT_PURCHASECODE" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN3PURCHASEFEATURE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN3PURCHASEFEATURE" 
   (	"PLAN3PURCHASEDOC_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"PLACEMENTFEATURE_ID" NUMBER(15,0), 
	"PREFVALUE" NUMBER(15,2) DEFAULT 0, 
	"CONTENT" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN3PURCHASEGOODS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN3PURCHASEGOODS" 
   (	"PLAN3PURCHASEDOC_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"PLAN3PURCHASELINEPOS" NUMBER(15,0), 
	"GROUPCODE" VARCHAR2(20 BYTE), 
	"GROUPCAPTION" VARCHAR2(500 BYTE), 
	"GOODSCODE" VARCHAR2(20 BYTE), 
	"GOODSCAPTION" VARCHAR2(512 BYTE), 
	"OKDP_CODE" VARCHAR2(20 BYTE), 
	"OKPD_CODE" VARCHAR2(20 BYTE), 
	"OKVED" VARCHAR2(20 BYTE), 
	"OKEI" VARCHAR2(4 BYTE), 
	"PRICE" NUMBER(15,2), 
	"MINREQUIREMENT" VARCHAR2(2000 BYTE), 
	"QUANTITYUNDEFINED" NUMBER(1,0) DEFAULT 0, 
	"QTY" NUMBER(15,4) DEFAULT 0, 
	"QTY_2YEAR" NUMBER(15,4) DEFAULT 0, 
	"QTY_3YEAR" NUMBER(15,4) DEFAULT 0, 
	"QTY_FUTURE" NUMBER(15,4) DEFAULT 0, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT_2YEAR" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT_3YEAR" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT_FUTURE" NUMBER(15,2) DEFAULT 0, 
	"STATUS" NUMBER(1,0) DEFAULT 0, 
	"OKPD_NAME" VARCHAR2(1000 BYTE), 
	"OKVED_NAME" VARCHAR2(1000 BYTE), 
	"OKPD_ID" NUMBER(15,0), 
	"OKVED_ID" NUMBER(15,0), 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN3PURCHASEGOODSOKVED
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN3PURCHASEGOODSOKVED" 
   (	"PLAN3PURCHASEDOC_ID" NUMBER(15,0), 
	"GOODSPOS" NUMBER(15,0), 
	"OKVED" VARCHAR2(20 BYTE), 
	"OKVED_NAME" VARCHAR2(1000 BYTE), 
	"OKVED_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN3PURCHASEGOODSPROP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN3PURCHASEGOODSPROP" 
   (	"PLAN3PURCHASEDOC_ID" NUMBER(15,0), 
	"GOODSPOS" NUMBER(15,0), 
	"SEQORDER" NUMBER(15,0), 
	"PROPTYPE_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(512 BYTE), 
	"PROPVALUE" VARCHAR2(1500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN3PURCHASELINE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN3PURCHASELINE" 
   (	"PLAN3PURCHASEDOC_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"FINSRC_ID" NUMBER(15,0), 
	"FINSRCNAME" VARCHAR2(512 BYTE), 
	"ESTIMATE_ID" NUMBER(15,0), 
	"ESTIMATENAME" VARCHAR2(255 BYTE), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"RECIPIENTNAME" VARCHAR2(2000 BYTE), 
	"CODE1" VARCHAR2(100 BYTE), 
	"CODE2" VARCHAR2(100 BYTE), 
	"CODE3" VARCHAR2(100 BYTE), 
	"CODE4" VARCHAR2(100 BYTE), 
	"CODE5" VARCHAR2(100 BYTE), 
	"CODE6" VARCHAR2(100 BYTE), 
	"CODE7" VARCHAR2(100 BYTE), 
	"CODE8" VARCHAR2(100 BYTE), 
	"CODE9" VARCHAR2(100 BYTE), 
	"CODE10" VARCHAR2(100 BYTE), 
	"INDUSTRYCODE_ID" NUMBER(15,0), 
	"INDUSTRYCODE" VARCHAR2(17 BYTE), 
	"GRANTINVESTMENT_ID" NUMBER(15,0), 
	"GRANTINVESTMENTCODE" VARCHAR2(20 BYTE), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT_2YEAR" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT_3YEAR" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT_FUTURE" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLAN3PURCHASELINESHEDULE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLAN3PURCHASELINESHEDULE" 
   (	"PLAN3PURCHASEDOC_ID" NUMBER(15,0), 
	"PLAN3PURCHASELINEPOS" NUMBER(15,0), 
	"FINYEAR" NUMBER(4,0), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLGOODS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLGOODS" 
   (	"ID" NUMBER(15,0), 
	"PRICE" NUMBER(15,2) DEFAULT 0, 
	"MAXQUANTITY" NUMBER(15,4) DEFAULT 0, 
	"UNIT" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(512 BYTE), 
	"GROUPCODE" VARCHAR2(20 BYTE), 
	"ORGID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLGOODSPROP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLGOODSPROP" 
   (	"GOODSID" NUMBER(15,0), 
	"SEQORDER" NUMBER(15,0), 
	"PROPTYPE_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(512 BYTE), 
	"PROPVALUE" VARCHAR2(1500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLNBUDGETLINE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLNBUDGETLINE" 
   (	"PLANDOC_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"ESTIMATE_ID" NUMBER(15,0), 
	"ESTIMATENAME" VARCHAR2(255 BYTE), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"RECIPIENTNAME" VARCHAR2(2000 BYTE), 
	"CODE1" VARCHAR2(100 BYTE), 
	"CODE2" VARCHAR2(100 BYTE), 
	"CODE3" VARCHAR2(100 BYTE), 
	"CODE4" VARCHAR2(100 BYTE), 
	"CODE5" VARCHAR2(100 BYTE), 
	"CODE6" VARCHAR2(100 BYTE), 
	"CODE7" VARCHAR2(100 BYTE), 
	"CODE8" VARCHAR2(100 BYTE), 
	"CODE9" VARCHAR2(100 BYTE), 
	"CODE10" VARCHAR2(100 BYTE), 
	"INDUSTRYCODE_ID" NUMBER(15,0), 
	"GRANTINVESTMENT_ID" NUMBER(15,0), 
	"FINSRCNAME" VARCHAR2(512 BYTE), 
	"FINSRC_ID" NUMBER(15,0), 
	"AMOUNT1" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT2" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT3" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT4" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLNGOODS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLNGOODS" 
   (	"PLANDOC_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"GROUPCODE" VARCHAR2(20 BYTE), 
	"GROUPCAPTION" VARCHAR2(500 BYTE), 
	"GOODSCODE" VARCHAR2(20 BYTE), 
	"GOODSCAPTION" VARCHAR2(512 BYTE), 
	"QTY1" NUMBER(15,4) DEFAULT 0, 
	"QTY2" NUMBER(15,4) DEFAULT 0, 
	"QTY3" NUMBER(15,4) DEFAULT 0, 
	"QTY4" NUMBER(15,4) DEFAULT 0, 
	"QTYENABLEDMASK" NUMBER(4,0) DEFAULT 15, 
	"PRICE1" NUMBER(15,2) DEFAULT 0, 
	"PRICE2" NUMBER(15,2) DEFAULT 0, 
	"PRICE3" NUMBER(15,2) DEFAULT 0, 
	"PRICE4" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT1" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT2" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT3" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT4" NUMBER(15,2) DEFAULT 0, 
	"OKDP_CODE" VARCHAR2(7 BYTE), 
	"OKVED" VARCHAR2(20 BYTE), 
	"OKPD_NAME" VARCHAR2(1000 BYTE), 
	"OKPD_CODE" VARCHAR2(20 BYTE), 
	"OKVED_NAME" VARCHAR2(1000 BYTE), 
	"OKPD_ID" NUMBER(15,0), 
	"OKVED_ID" NUMBER(15,0), 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PLNSHEDULE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PLNSHEDULE" 
   (	"PLANDOC_ID" NUMBER(15,0), 
	"GOODSPOS" NUMBER(15,0), 
	"BUDGETLINEPOS" NUMBER(15,0), 
	"QTY1" NUMBER(15,4) DEFAULT 0, 
	"QTY2" NUMBER(15,4) DEFAULT 0, 
	"QTY3" NUMBER(15,4) DEFAULT 0, 
	"QTY4" NUMBER(15,4) DEFAULT 0, 
	"AMOUNT1" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT2" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT3" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT4" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PREFERENCEGROUP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PREFERENCEGROUP" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(1000 BYTE), 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"BUDGETTYPE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PREFERENCEGROUPFEATURE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PREFERENCEGROUPFEATURE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PREFERENCEGROUP_ID" NUMBER(15,0), 
	"PLACEMENTFEATURE_ID" NUMBER(15,0), 
	"PREFVALUE" NUMBER(15,2) DEFAULT 0, 
	"CONTENT" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PROCTREE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PROCTREE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"PARENT_ID" NUMBER(15,0), 
	"COND_VALUE" NUMBER(15,0) DEFAULT 0, 
	"SEQ_ORDER" NUMBER(15,0), 
	"SCHEMA_ACT" VARCHAR2(30 BYTE), 
	"PARAMS" VARCHAR2(300 BYTE), 
	"PARAMS_ONLY" NUMBER(1,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PROCUREMENT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PROCUREMENT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"REQUEST_ID" NUMBER(15,0), 
	"ORDER_ID" NUMBER(15,0), 
	"CMPDATE" DATE, 
	"FINISHDATE" DATE, 
	"ISARCHIVE" NUMBER(1,0) DEFAULT 0, 
	"REMARKS" VARCHAR2(1000 BYTE), 
	"RESPPERSONAL_ID" NUMBER(15,0), 
	"COMMISSION_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PROPTYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PROPTYPE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(512 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PURCHASECARRY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PURCHASECARRY" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOC_ID" NUMBER(15,0), 
	"CARRYSTATUS" NUMBER(1,0) DEFAULT 1, 
	"RECIPIENT_ID" NUMBER(15,0), 
	"GROUPCODE" VARCHAR2(20 BYTE), 
	"OKDP_CODE" VARCHAR2(20 BYTE), 
	"PLANYEAR" NUMBER(4,0), 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"CMPORG_ID" NUMBER(15,0), 
	"FINSRC_ID" NUMBER(15,0), 
	"NECESSITY_ID" NUMBER(15,0) DEFAULT 0, 
	"AMOUNT1" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT2" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT3" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT4" NUMBER(15,2) DEFAULT 0, 
	"ECONOMYAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"ECONOMYFINALAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"EXECUTEAMOUNT1" NUMBER(15,2) DEFAULT 0, 
	"EXECUTEAMOUNT2" NUMBER(15,2) DEFAULT 0, 
	"EXECUTEAMOUNT3" NUMBER(15,2) DEFAULT 0, 
	"EXECUTEAMOUNT4" NUMBER(15,2) DEFAULT 0, 
	"GOODSCODE" VARCHAR2(20 BYTE), 
	"CODE1" VARCHAR2(100 BYTE), 
	"CODE2" VARCHAR2(100 BYTE), 
	"CODE3" VARCHAR2(100 BYTE), 
	"CODE4" VARCHAR2(100 BYTE), 
	"CODE5" VARCHAR2(100 BYTE), 
	"CODE6" VARCHAR2(100 BYTE), 
	"CODE7" VARCHAR2(100 BYTE), 
	"CODE8" VARCHAR2(100 BYTE), 
	"CODE9" VARCHAR2(100 BYTE), 
	"CODE10" VARCHAR2(100 BYTE), 
	"DELIVERYBASIS_ID" NUMBER(15,0), 
	"PAYCONDITIONCACHE_ID" NUMBER(15,0), 
	"INDUSTRYCODE_ID" NUMBER(15,0), 
	"GRANTINVESTMENT_ID" NUMBER(15,0), 
	"INVITATIONDATE" DATE, 
	"CMPDATE" DATE, 
	"DESCRIPTIONCACHE_ID" NUMBER(15,0), 
	"CONTRACTOR_ID" NUMBER(15,0), 
	"ISENTERPRISE" NUMBER(1,0) DEFAULT 0, 
	"ISSMALL" NUMBER(1,0) DEFAULT 0, 
	"PLANVERSION" NUMBER(1,0) DEFAULT 1, 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PURCHASEMETHOD
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PURCHASEMETHOD" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"ACTUAL" NUMBER(1,0), 
	"CODE" NUMBER(15,0), 
	"NAME" VARCHAR2(3000 BYTE), 
	"ELECTRONIC" NUMBER(1,0), 
	"CREATORORG_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PURCHASEMODE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PURCHASEMODE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(500 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"ISPUBLIC" NUMBER(1,0) DEFAULT 0, 
	"ISACTUAL" NUMBER(1,0) DEFAULT 0, 
	"KIND" NUMBER(1,0) DEFAULT 0, 
	"ISPRIOR" NUMBER(1,0) DEFAULT 0, 
	"CODE_PPRF_807" NUMBER(2,0), 
	"CODE" NUMBER(2,0), 
	"CODE_MINFIN_142N" NUMBER(2,0), 
	"OOS_CODE" VARCHAR2(15 BYTE), 
	"OOS_TYPE" VARCHAR2(15 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PURCHASEPLAN
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PURCHASEPLAN" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"GROUPCODE" VARCHAR2(20 BYTE), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"CMPORG_ID" NUMBER(15,0), 
	"DESC_ID" NUMBER(15,0), 
	"PURCHASEPLANDOC_ID" NUMBER(15,0), 
	"FINSRC_ID" NUMBER(15,0), 
	"NECESSITY_ID" NUMBER(15,0) DEFAULT 0, 
	"AMOUNT1" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT2" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT3" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT4" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT5" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT6" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT7" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT8" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT9" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT10" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT11" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT12" NUMBER(15,2) DEFAULT 0, 
	"DATEBEGIN" DATE, 
	"DATEEND" DATE, 
	"ENTAMOUNT1" NUMBER(15,2) DEFAULT 0, 
	"ENTAMOUNT2" NUMBER(15,2) DEFAULT 0, 
	"ENTAMOUNT3" NUMBER(15,2) DEFAULT 0, 
	"ENTAMOUNT4" NUMBER(15,2) DEFAULT 0, 
	"ENTAMOUNT5" NUMBER(15,2) DEFAULT 0, 
	"ENTAMOUNT6" NUMBER(15,2) DEFAULT 0, 
	"ENTAMOUNT7" NUMBER(15,2) DEFAULT 0, 
	"ENTAMOUNT8" NUMBER(15,2) DEFAULT 0, 
	"ENTAMOUNT9" NUMBER(15,2) DEFAULT 0, 
	"ENTAMOUNT10" NUMBER(15,2) DEFAULT 0, 
	"ENTAMOUNT11" NUMBER(15,2) DEFAULT 0, 
	"ENTAMOUNT12" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table PURCHASEPLANDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."PURCHASEPLANDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"REMARK" VARCHAR2(255 BYTE), 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"PLANYEAR" NUMBER(4,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table QUALIFYSELECT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."QUALIFYSELECT" 
   (	"ID" NUMBER(15,0), 
	"ORDER_ID" NUMBER(15,0), 
	"QUALIFYREQPOS" NUMBER(15,0), 
	"COMPETITORPOS" NUMBER(15,0), 
	"SCORE" NUMBER(15,4)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table QUALREQ
--------------------------------------------------------

  CREATE TABLE "GZVLG"."QUALREQ" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(2000 BYTE), 
	"DESCRIPTION" VARCHAR2(1000 BYTE), 
	"PURCHASEMODE_ID" NUMBER(15,0) DEFAULT 1, 
	"REQUIREMENTTYPE_ID" NUMBER(15,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RECOILDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RECOILDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"BUDGET_ID" NUMBER(15,0), 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"REMARK" VARCHAR2(255 BYTE), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"CMPORG_ID" NUMBER(15,0), 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"NECESSITY_ID" NUMBER(15,0) DEFAULT 0, 
	"CON_ID" NUMBER(15,0), 
	"ISSMALL" NUMBER(1,0) DEFAULT 0, 
	"INVITATIONDATE" DATE, 
	"DEALDATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RECOILLINES
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RECOILLINES" 
   (	"RECOILDOC_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"GROUPCODE" VARCHAR2(20 BYTE), 
	"OKDP_CODE" VARCHAR2(20 BYTE), 
	"FINSRC_ID" NUMBER(15,0), 
	"GOODSCODE" VARCHAR2(20 BYTE), 
	"CODE1" VARCHAR2(100 BYTE), 
	"CODE2" VARCHAR2(100 BYTE), 
	"CODE3" VARCHAR2(100 BYTE), 
	"CODE4" VARCHAR2(100 BYTE), 
	"CODE5" VARCHAR2(100 BYTE), 
	"CODE6" VARCHAR2(100 BYTE), 
	"CODE7" VARCHAR2(100 BYTE), 
	"CODE8" VARCHAR2(100 BYTE), 
	"CODE9" VARCHAR2(100 BYTE), 
	"CODE10" VARCHAR2(100 BYTE), 
	"DELIVERYBASIS_ID" NUMBER(15,0), 
	"PAYCONDITIONCACHE_ID" NUMBER(15,0), 
	"INDUSTRYCODE_ID" NUMBER(15,0), 
	"GRANTINVESTMENT_ID" NUMBER(15,0), 
	"CMPDATE" DATE, 
	"ISENTERPRISE" NUMBER(1,0) DEFAULT 0, 
	"RESERVEDAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table REFATTACH
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REFATTACH" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"TABLENAME" VARCHAR2(50 BYTE), 
	"RECORD_ID" NUMBER(15,0), 
	"ATTACH_NAME" VARCHAR2(100 BYTE), 
	"ATTACH_DATA" BLOB, 
	"AUTHOR" NUMBER(15,0), 
	"ACTION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("ATTACH_DATA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table REFDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REFDOC" 
   (	"DOCUMENT_ID" NUMBER(15,0), 
	"REF_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table REFERENCECLASS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REFERENCECLASS" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"CAPTION" VARCHAR2(255 BYTE), 
	"PROCESSOR_NAME" VARCHAR2(255 BYTE), 
	"OBJECT_CLASS_NAME" VARCHAR2(255 BYTE), 
	"TABLE_NAME" VARCHAR2(255 BYTE), 
	"CONTROL_CLASS_NAME" VARCHAR2(255 BYTE), 
	"SUBSYSTEM" NUMBER(15,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table REFINANCINGRATE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REFINANCINGRATE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"START_DATE" DATE, 
	"RATE" NUMBER(15,2) DEFAULT 0, 
	"LAW_ACT" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table REFJOURNAL
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REFJOURNAL" 
   (	"ID" NUMBER(15,0), 
	"REF_ID" NUMBER(15,0), 
	"REF_OBJ_ID" NUMBER(15,0), 
	"ACTION_NAME" VARCHAR2(64 BYTE), 
	"TASKJOURNAL_ID" NUMBER(15,0), 
	"ACTION_DATA" CLOB, 
	"WORK_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("ACTION_DATA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table REFUSALFACTFOUNDATION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REFUSALFACTFOUNDATION" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"OOSKEY" VARCHAR2(100 BYTE), 
	"NAME" VARCHAR2(1000 BYTE), 
	"ACTUAL" NUMBER(1,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table REPDOCFRAGMENT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REPDOCFRAGMENT" 
   (	"REPDOCUMENT_ID" NUMBER(15,0), 
	"REPFRAGMENT_ID" NUMBER(15,0), 
	"BOOKMARK" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table REPDOCUMENT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REPDOCUMENT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENTTYPE" NUMBER(1,0) DEFAULT 0, 
	"NAME" VARCHAR2(100 BYTE), 
	"CAPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table REPFIELD
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REPFIELD" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"REPFORM_ID" NUMBER(15,0), 
	"SEQ_ORDER" NUMBER(4,0) DEFAULT 0, 
	"FIELD_NAME" VARCHAR2(50 BYTE), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"REQUIRED_FLAG" NUMBER(1,0) DEFAULT 0, 
	"REFERENCE_FLAG" NUMBER(1,0) DEFAULT 1, 
	"FIELD_TYPE" NUMBER(1,0) DEFAULT 0, 
	"EDIT_MASK" VARCHAR2(100 BYTE), 
	"MAX_LENGTH" NUMBER(3,0), 
	"REF_NAME" VARCHAR2(50 BYTE), 
	"REF_KEYFIELDS" VARCHAR2(100 BYTE), 
	"REF_RESULTFIELD" VARCHAR2(100 BYTE), 
	"REF_PARAMS" VARCHAR2(100 BYTE), 
	"CTRL_WIDTH" NUMBER(4,0) DEFAULT 0, 
	"CTRL_HEIGHT" NUMBER(4,0) DEFAULT 0, 
	"LINES_COUNT" NUMBER(4,0) DEFAULT 1, 
	"NEWLINE_FLAG" NUMBER(1,0) DEFAULT 0, 
	"DEF_VALUE" CLOB, 
	"PARAMS" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("DEF_VALUE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("PARAMS") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table REPFORM
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REPFORM" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"PARENT_FORM" VARCHAR2(50 BYTE), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"SERVERPROCESSOR_ID" NUMBER(15,0), 
	"SERVERACTION_NAME" VARCHAR2(50 BYTE), 
	"XLT_FILENAME" VARCHAR2(100 BYTE), 
	"REPORT_CODE" NUMBER(4,0) DEFAULT 0, 
	"SUBSYSTEM" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table REPFRAGMENT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REPFRAGMENT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"FRAGMENTTYPE" NUMBER(1,0) DEFAULT 0, 
	"REPSOURCE_ID" NUMBER(15,0), 
	"NAME" VARCHAR2(100 BYTE), 
	"CAPTION" VARCHAR2(255 BYTE), 
	"DIVIDER" VARCHAR2(255 BYTE), 
	"ISNOTICE" NUMBER(1,0) DEFAULT 0, 
	"BODY" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("BODY") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table REPFRAGMENTCHILD
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REPFRAGMENTCHILD" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"REPFRAGMENT_ID" NUMBER(15,0), 
	"CHILD_ID" NUMBER(15,0), 
	"SOURCEFIELDNAME" VARCHAR2(255 BYTE), 
	"SOURCEFIELDVALUE" VARCHAR2(1000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table REPORT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REPORT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(128 BYTE), 
	"CAPTION" VARCHAR2(128 BYTE), 
	"DECLARATION" CLOB, 
	"EXCELTEMPLATENAME" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("DECLARATION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table REPPROFILE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REPPROFILE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"FORM_NAME" VARCHAR2(100 BYTE), 
	"SYSUSER_ID" NUMBER(15,0), 
	"LOCAL_FLAG" NUMBER(*,0), 
	"NAME" VARCHAR2(100 BYTE), 
	"PROFILE_DATA" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("PROFILE_DATA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table REPSOURCE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REPSOURCE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"SOURCETYPE" NUMBER(1,0) DEFAULT 0, 
	"NAME" VARCHAR2(100 BYTE), 
	"CAPTION" VARCHAR2(255 BYTE), 
	"CLASSNAME" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table REPTEMPLATEATTACH
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REPTEMPLATEATTACH" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"REPDOCUMENT_ID" NUMBER(15,0), 
	"DEVICE_NAME" VARCHAR2(100 BYTE), 
	"ATTACH_NAME" VARCHAR2(100 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table REQUESTDOC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REQUESTDOC" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"BUDGET_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"OFRREQREASON_ID" NUMBER(15,0), 
	"SINGLECUSTOMERREASON_ID" NUMBER(15,0), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"CUSTOMERNAME" VARCHAR2(2000 BYTE), 
	"DELIVERYBASISCODE" VARCHAR2(50 BYTE), 
	"PURCHASEMODE_ID" NUMBER(15,0), 
	"PURCHASEMODE_CAPTION" VARCHAR2(500 BYTE), 
	"PAYCONDITIONNAME" VARCHAR2(255 BYTE), 
	"CMPORG_ID" NUMBER(15,0), 
	"REMARK" VARCHAR2(255 BYTE), 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"YEARAMT" NUMBER(15,2) DEFAULT 0, 
	"ASSIGNEDAMT" NUMBER(15,2) DEFAULT 0, 
	"IGNASSIGN" NUMBER(1,0), 
	"ISGROUPSMOREONE" NUMBER(1,0), 
	"EXPORT_FLAG" NUMBER(1,0) DEFAULT 0, 
	"CONTROLFLAGS" NUMBER(15,0) DEFAULT 0, 
	"RESPPERSONAL_NAME" VARCHAR2(255 BYTE), 
	"RESPPERSONAL_DATE" DATE, 
	"RESPPERSONAL_PHONE" VARCHAR2(100 BYTE), 
	"INCOME_NUMBER" VARCHAR2(20 BYTE), 
	"INCOME_DATE" DATE, 
	"STATCHANGE_DATE" DATE, 
	"RECIPIENT_ID" NUMBER(15,0), 
	"RECIPIENT_NAME" VARCHAR2(2000 BYTE), 
	"ACTUAL_YEAR" NUMBER(4,0), 
	"CONTYPE_ID" NUMBER(15,0), 
	"CMPDATE" DATE, 
	"FUTUREAMT" NUMBER(15,2) DEFAULT 0, 
	"ENTERPRISE" NUMBER(1,0) DEFAULT 0, 
	"PLAN_DEALDATE" DATE, 
	"PLAN_INVITATIONDATE" DATE, 
	"SUBJECT" VARCHAR2(2000 BYTE), 
	"PRICE_GENERATION_ORDER" CLOB, 
	"RATIONALEPRICE" VARCHAR2(4000 BYTE), 
	"PLACINGWAY_ID" NUMBER(15,0), 
	"QUANTITY" VARCHAR2(4000 BYTE), 
	"DELIVERYTERM" VARCHAR2(1024 BYTE), 
	"DELIVERYPLACE" VARCHAR2(4000 BYTE), 
	"PAYMENTCONDITION" VARCHAR2(2000 BYTE), 
	"QUANTITYCONTRACTSPNIR" NUMBER(15,0), 
	"ADDITIONALINFO" VARCHAR2(4000 BYTE), 
	"ISGUARANTEEAPP" NUMBER(1,0) DEFAULT 0, 
	"GUARANTEEAPPAMOUNT" NUMBER(15,2), 
	"GUARAPPSETTLEMENTACC_ID" NUMBER(15,0), 
	"GUARAPPPERSONALACC_ID" NUMBER(15,0), 
	"GUARAPPBIC" VARCHAR2(15 BYTE), 
	"GUARANTEEAPPPROCEDURE" CLOB, 
	"ISGUARANTEECONTRACT" NUMBER(1,0) DEFAULT 0, 
	"GUARANTEECONTRACTAMOUNT" NUMBER(15,2), 
	"GUARCONTRSETTLEMENTACC_ID" NUMBER(15,0), 
	"GUARCONTRPERSONALACC_ID" NUMBER(15,0), 
	"GUARANTEECONTRACTBIC" VARCHAR2(15 BYTE), 
	"GUARANTEECONTRACTPROCEDURE" CLOB, 
	"GUARANTEECONTRACTISBAIL" NUMBER(1,0) DEFAULT 0, 
	"ENERGYTYPE" VARCHAR2(3 BYTE), 
	"ENERGYSERVICEECONOMY" VARCHAR2(2000 BYTE), 
	"SIGNTERM" NUMBER(15,0), 
	"PLANPOSITIONNUMBER" VARCHAR2(100 BYTE), 
	"PARENTREQUESTDOC_ID" NUMBER(15,0), 
	"ADVANCE" NUMBER(15,2), 
	"RESERVETYPE" NUMBER(1,0) DEFAULT 0, 
	"ISAMOUNTPERCENT" NUMBER(1,0) DEFAULT 0, 
	"AMOUNTPERCENT" NUMBER(3,2), 
	"CURRENCY_ID" NUMBER(15,0), 
	"CURRENCY_CODE" VARCHAR2(3 BYTE), 
	"CONMNGRRESP_FULLNAME" VARCHAR2(256 BYTE), 
	"CUSTCANCHANGECONTERMS" NUMBER(1,0) DEFAULT 0, 
	"CUSTCANREFUSE" NUMBER(1,0) DEFAULT 0, 
	"CONSERVICEINFO" VARCHAR2(2000 BYTE), 
	"CURYEARAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"CUSTCANREFUSEINFO" CLOB, 
	"LIMITCONDEFINITION" CLOB, 
	"GOODSLIMITS" CLOB, 
	"NECESSITY_ID" NUMBER(15,0) DEFAULT 0, 
	"NECESSITY_DESCRIPTION" VARCHAR2(1000 BYTE), 
	"REPNOTICE_ID" NUMBER(15,0), 
	"ETP_ID" NUMBER(15,0), 
	"RESPPERSONAL_ID" NUMBER(15,0), 
	"COMMISSION_ID" NUMBER(15,0), 
	"CONMNGRRESP_ID" NUMBER(15,0), 
	"CONSOLIDDOC_ID" NUMBER(15,0), 
	"PRICEFORMULA" VARCHAR2(2000 BYTE), 
	"STANDARDCONTRACTNUMBER" VARCHAR2(16 BYTE), 
	"ALLOWMULTIPLECONTRACTS" NUMBER(1,0) DEFAULT 0, 
	"GUARANTEEAPPPERCENT" NUMBER(5,2), 
	"GUARANTEECONTRACTPERCENT" NUMBER(5,2), 
	"DATENUMORDERNAME" VARCHAR2(2000 BYTE), 
	"ETPKEY" VARCHAR2(100 BYTE), 
	"DECLINECOUNTER" NUMBER(15,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("PRICE_GENERATION_ORDER") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("GUARANTEEAPPPROCEDURE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("GUARANTEECONTRACTPROCEDURE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CUSTCANREFUSEINFO") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("LIMITCONDEFINITION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("GOODSLIMITS") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table REQUESTORDER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REQUESTORDER" 
   (	"ORDER_ID" NUMBER(15,0), 
	"DOC_ID" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table REQUIREMENTTYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REQUIREMENTTYPE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"REFTYPE" NUMBER(1,0), 
	"QTYPE" NUMBER(2,0), 
	"NAME" VARCHAR2(500 BYTE), 
	"IS_ACTUAL" NUMBER(1,0), 
	"VISIBLE" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table REQUIREMENTTYPEPM
--------------------------------------------------------

  CREATE TABLE "GZVLG"."REQUIREMENTTYPEPM" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"REQUIREMENTTYPE_ID" NUMBER(15,0), 
	"PURCHASEMODE_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RESERVEDBUDGETLINE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RESERVEDBUDGETLINE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"ORDER_ID" NUMBER(15,0), 
	"CUSTOMER_ID" NUMBER(15,0), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"ESTIMATE_ID" NUMBER(15,0), 
	"CODE1" VARCHAR2(100 BYTE), 
	"CODE2" VARCHAR2(100 BYTE), 
	"CODE3" VARCHAR2(100 BYTE), 
	"CODE4" VARCHAR2(100 BYTE), 
	"CODE5" VARCHAR2(100 BYTE), 
	"CODE6" VARCHAR2(100 BYTE), 
	"CODE7" VARCHAR2(100 BYTE), 
	"CODE8" VARCHAR2(100 BYTE), 
	"CODE9" VARCHAR2(100 BYTE), 
	"CODE10" VARCHAR2(100 BYTE), 
	"RESERVED_AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"EXPENDED_AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"ERRORCAUSE" VARCHAR2(2000 BYTE), 
	"RELEASED_AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT_FOR_RELEASE" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT_FOR_RETURN" NUMBER(15,2) DEFAULT 0, 
	"FINYEAR" NUMBER(4,0), 
	"PARENT_ID" NUMBER(15,0), 
	"INDUSTRYCODE_ID" NUMBER(15,0), 
	"GRANTINVESTMENT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RESPONSIBILITY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RESPONSIBILITY" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(100 BYTE), 
	"CAPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RNP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RNP" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"REGISTRY_NUMBER" VARCHAR2(100 BYTE), 
	"INCLUSIONDATE" DATE, 
	"AUTHORIZED_UNIT" VARCHAR2(2000 BYTE), 
	"VENDOR_NAME" VARCHAR2(2000 BYTE), 
	"VENDOR_TAXCODE" VARCHAR2(20 BYTE), 
	"VENDOR_POSTINDEX" VARCHAR2(20 BYTE), 
	"VENDOR_CITY" VARCHAR2(300 BYTE), 
	"VENDOR_ADDRESS" VARCHAR2(1000 BYTE), 
	"CMPDATE" DATE, 
	"CONFIRMING_DOCUMENT_DETAILS" VARCHAR2(2000 BYTE), 
	"CONTRACT_DEALDATE" DATE, 
	"CONTRACT_REGISTRY_NUMBER" VARCHAR2(100 BYTE), 
	"CONTRACT_SUBJECT" CLOB, 
	"CONTRACT_AMOUNT" NUMBER(18,2) DEFAULT 0, 
	"CONTRACT_COMPLETEDATE" DATE, 
	"CONTRACT_DISSOLVE_REASON" CLOB, 
	"CONTRACT_DISSOLVEDATE" DATE, 
	"STATE" NUMBER(1,0) DEFAULT 0, 
	"CONTRACT_EXCLUDEDATE" DATE, 
	"REGISTRY_FLAG" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("CONTRACT_SUBJECT") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CONTRACT_DISSOLVE_REASON") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table ROLEAPPOBJ
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ROLEAPPOBJ" 
   (	"USERROLE_ID" NUMBER(15,0), 
	"APPOBJNAME" VARCHAR2(128 BYTE), 
	"ACCESS_MODE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ROLEATTACH
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ROLEATTACH" 
   (	"USERROLE_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"CATEGORY_ID" NUMBER(15,0), 
	"ACCESS_MODE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ROLEBUDGET
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ROLEBUDGET" 
   (	"USERROLE_ID" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"ACCESS_MODE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ROLECLASS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ROLECLASS" 
   (	"USERROLE_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"ACCESS_MODE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ROLEEVENT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ROLEEVENT" 
   (	"USERROLE_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"EVENT_NAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ROLEFUNC
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ROLEFUNC" 
   (	"USERROLE_ID" NUMBER(15,0), 
	"FUNUNIT_NAME" VARCHAR2(50 BYTE), 
	"ACCESS_MODE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ROLEORG
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ROLEORG" 
   (	"USERROLE_ID" NUMBER(15,0), 
	"ORG_ID" NUMBER(15,0), 
	"ACCESS_MODE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ROLEREFCLASS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ROLEREFCLASS" 
   (	"USERROLE_ID" NUMBER(15,0), 
	"ACCESS_MODE" NUMBER(1,0) DEFAULT 0, 
	"REF_NAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table ROLEREGISTER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ROLEREGISTER" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"DOC_NUMBER" VARCHAR2(20 BYTE), 
	"DOC_DATE" DATE, 
	"GRANTEDROLE_ID" NUMBER(15,0), 
	"GRANTINGUSER_ID" NUMBER(15,0), 
	"USER_ID" NUMBER(15,0), 
	"GRANTDATE" TIMESTAMP (6), 
	"FROMDATE" DATE, 
	"TODATE" DATE, 
	"DESCRIPTION" CLOB, 
	"DOCUMENT_ID" NUMBER(15,0), 
	"OPERTYPE_ID" NUMBER(15,0) DEFAULT 0, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"FOREIGN_KEY" VARCHAR2(50 BYTE), 
	"OPERATION" NUMBER(2,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("DESCRIPTION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table ROLERIGHT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."ROLERIGHT" 
   (	"USERROLE_ID" NUMBER(15,0), 
	"SYSRIGHT_NAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RPL
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RPL" 
   (	"MASTER_ID" NUMBER(15,0), 
	"CLIENT_ID" NUMBER(15,0), 
	"RPLOBJECT_ID" NUMBER(15,0), 
	"RPL_ACTIVE" NUMBER(1,0) DEFAULT 1, 
	"SENT_VERSION" NUMBER(18,0) DEFAULT 0, 
	"RECEIVED_VERSION" NUMBER(18,0) DEFAULT 0, 
	"FLTR" VARCHAR2(255 BYTE), 
	"RPLTYPE" NUMBER(18,0), 
	"EXEC_ORDER" NUMBER(18,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"TABLE_NAME" VARCHAR2(50 BYTE), 
	"SERVERPROCESSOR_NAME" VARCHAR2(50 BYTE), 
	"FIELD1_VALUE" NUMBER(15,0), 
	"FIELD2_VALUE" NUMBER(15,0), 
	"FIELD3_VALUE" NUMBER(15,0), 
	"FIELD4_VALUE" NUMBER(15,0), 
	"FIELD5_VALUE" NUMBER(15,0), 
	"FILTER_CONDITION" VARCHAR2(2000 BYTE), 
	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RPL$CONSTRAINTFIELDS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RPL$CONSTRAINTFIELDS" 
   (	"ID" NUMBER(18,0), 
	"RPL$CONSTRAINTS_ID" NUMBER(18,0), 
	"ENUM_ORDER" NUMBER(18,0), 
	"FIELDNAME" VARCHAR2(50 BYTE), 
	"TARGET_FIELDNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RPL$CONSTRAINTS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RPL$CONSTRAINTS" 
   (	"ID" NUMBER(18,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"TRIGGERNAME" VARCHAR2(20 BYTE), 
	"TABLENAME" VARCHAR2(50 BYTE), 
	"TARGET_TABLENAME" VARCHAR2(50 BYTE), 
	"UPDATE_RULE" VARCHAR2(11 BYTE) DEFAULT 'RESTRICT', 
	"DELETE_RULE" VARCHAR2(11 BYTE) DEFAULT 'RESTRICT', 
	"DEFFERABLE" NUMBER(18,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RPLLOG
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RPLLOG" 
   (	"RPLTABLE_ID" NUMBER(15,0), 
	"GENERATION" NUMBER(15,0), 
	"RECORD_ID" NUMBER(15,0), 
	"FIELD1_VALUE" NUMBER(15,0), 
	"FIELD2_VALUE" NUMBER(15,0), 
	"FIELD3_VALUE" NUMBER(15,0), 
	"FIELD4_VALUE" NUMBER(15,0), 
	"FIELD5_VALUE" NUMBER(15,0), 
	"TRANSACTION_ID" VARCHAR2(16 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RPLOBJECT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RPLOBJECT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"FLTR" VARCHAR2(255 BYTE), 
	"CLASSNAME" VARCHAR2(255 BYTE), 
	"SEQORDER" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RPLRULE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RPLRULE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RPLRULEOBJ
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RPLRULEOBJ" 
   (	"RPLRULE_ID" NUMBER(15,0), 
	"RPLOBJECT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RPLSITE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RPLSITE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"MASTER_ID" NUMBER(15,0), 
	"CLIENT_ID" NUMBER(15,0), 
	"RPLRULE_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RPLTABLE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RPLTABLE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"ISLOG_FLAG" NUMBER(1,0) DEFAULT 0, 
	"RPLFIELD1" VARCHAR2(50 BYTE), 
	"RPLFIELD2" VARCHAR2(50 BYTE), 
	"RPLFIELD3" VARCHAR2(50 BYTE), 
	"RPLFIELD4" VARCHAR2(50 BYTE), 
	"RPLFIELD5" VARCHAR2(50 BYTE), 
	"ISPLUGIN" NUMBER(1,0) DEFAULT 0, 
	"OLD_VALUE" NUMBER(*,0), 
	"GENERATION_GROUP" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RPLTABLEPLUGIN
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RPLTABLEPLUGIN" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"RPLTABLE_ID" NUMBER(15,0), 
	"PLUGIN_RPLTABLE_ID" NUMBER(15,0), 
	"JOIN_FRAGMENT" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RPLTABLINK
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RPLTABLINK" 
   (	"RPLTABLE_ID" NUMBER(15,0), 
	"FIELD_NAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RPLTRANSACTMODE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RPLTRANSACTMODE" 
   (	"NUM_TRANSACTION" VARCHAR2(50 BYTE), 
	"RPL_MODE" NUMBER(18,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RPLVERSIONLOG
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RPLVERSIONLOG" 
   (	"VER" NUMBER(15,0), 
	"NUM_TRANSACTION" VARCHAR2(50 BYTE), 
	"RPLTABLE_ID" NUMBER(15,0), 
	"TASKJOURNAL_ID" NUMBER(15,0), 
	"RECORD_ID" NUMBER(15,0), 
	"RECORD_ACTION" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RQBUDGETLINE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RQBUDGETLINE" 
   (	"REQUEST_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"ESTIMATE_ID" NUMBER(15,0), 
	"ESTIMATENAME" VARCHAR2(255 BYTE), 
	"RECIPIENT_ID" NUMBER(15,0), 
	"RECIPIENTNAME" VARCHAR2(2000 BYTE), 
	"CODE1" VARCHAR2(100 BYTE), 
	"CODE2" VARCHAR2(100 BYTE), 
	"CODE3" VARCHAR2(100 BYTE), 
	"CODE4" VARCHAR2(100 BYTE), 
	"CODE5" VARCHAR2(100 BYTE), 
	"CODE6" VARCHAR2(100 BYTE), 
	"CODE7" VARCHAR2(100 BYTE), 
	"CODE8" VARCHAR2(100 BYTE), 
	"CODE9" VARCHAR2(100 BYTE), 
	"CODE10" VARCHAR2(100 BYTE), 
	"FINSRCNAME" VARCHAR2(512 BYTE), 
	"FINSRC_ID" NUMBER(15,0), 
	"COUNTRY_ID" NUMBER(15,0), 
	"TERRITORYCODE" VARCHAR2(20 BYTE), 
	"ADDRESS" VARCHAR2(300 BYTE), 
	"SUPPLYAMOUNT" NUMBER(15,2) DEFAULT 0, 
	"USEAMOUNT" NUMBER(1,0) DEFAULT 0, 
	"CALCPRICE" NUMBER(1,0) DEFAULT 0, 
	"INDUSTRYCODE_ID" NUMBER(15,0), 
	"GRANTINVESTMENT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RQCOMMEMBER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RQCOMMEMBER" 
   (	"REQUEST_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"COMMEMBER_ID" NUMBER(15,0), 
	"COMMEMBER_ROLE" VARCHAR2(255 BYTE), 
	"COMMEMBER_NAME" VARCHAR2(255 BYTE), 
	"COMROLE" NUMBER(1,0), 
	"ABSENT" NUMBER(1,0), 
	"NOTE" VARCHAR2(100 BYTE), 
	"ISACTINGFORSECRETARY" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RQCONDEALRESP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RQCONDEALRESP" 
   (	"REQUEST_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"LOTPOS" NUMBER(15,0), 
	"PERSONAL_ID" NUMBER(15,0), 
	"PERSONAL_NAME" VARCHAR2(256 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RQCRITERION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RQCRITERION" 
   (	"REQUEST_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"NAME" VARCHAR2(512 BYTE), 
	"CTYPE" NUMBER(2,0), 
	"CALCMODE" NUMBER(1,0), 
	"BESTPARAM" NUMBER(1,0), 
	"WEIGHT" NUMBER(15,2), 
	"LOTPOS" NUMBER(15,0), 
	"TENDERCRITERION_ID" NUMBER(15,0), 
	"MINWEIGHT" NUMBER(15,2), 
	"MAXWEIGHT" NUMBER(15,2), 
	"VAL" NUMBER(15,2), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"FORMULA" VARCHAR2(2000 BYTE), 
	"OOSCODE" VARCHAR2(2 BYTE) DEFAULT '0', 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RQCRITERIONLINE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RQCRITERIONLINE" 
   (	"REQUEST_ID" NUMBER(15,0), 
	"RQCRITERIONPOS" NUMBER(15,0), 
	"SEQORDER" NUMBER(15,0), 
	"CAPTION" VARCHAR2(2000 BYTE), 
	"MINVALUE" NUMBER(15,2), 
	"MAXVALUE" NUMBER(15,2), 
	"WEIGHT" NUMBER(15,2), 
	"LIMITDESCRIPTION" VARCHAR2(2000 BYTE), 
	"DESCRIPTION" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RQDOCCHILD
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RQDOCCHILD" 
   (	"REQUEST_ID" NUMBER(15,0), 
	"DOC_ID" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RQDOCREQ
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RQDOCREQ" 
   (	"REQUEST_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"LOTPOS" NUMBER(15,0), 
	"NAME" VARCHAR2(1000 BYTE), 
	"VENDOR_TYPE" VARCHAR2(2 BYTE) DEFAULT 0, 
	"ISREQUIRED" NUMBER(1,0) DEFAULT 1, 
	"ISCONTENTTYPE" NUMBER(1,0) DEFAULT 0, 
	"TYPE" NUMBER(2,0) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(4000 BYTE), 
	"REQUIREMENTTYPE_ID" NUMBER(15,0), 
	"REQUIREMENTTYPE_NAME" VARCHAR2(500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RQFEATURE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RQFEATURE" 
   (	"REQUEST_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"LOTPOS" NUMBER(15,0), 
	"PLACEMENTFEATURE_ID" NUMBER(15,0), 
	"PREFVALUE" NUMBER(15,2) DEFAULT 0, 
	"CONTENT" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RQGOODS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RQGOODS" 
   (	"REQUEST_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"GROUPCODE" VARCHAR2(20 BYTE), 
	"GROUPCAPTION" VARCHAR2(500 BYTE), 
	"OKDP_CODE" VARCHAR2(20 BYTE), 
	"GOODSCODE" VARCHAR2(20 BYTE), 
	"GOODSCAPTION" VARCHAR2(512 BYTE), 
	"QTY" NUMBER(15,4) DEFAULT 0, 
	"PRICE" NUMBER(15,2) DEFAULT 0, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"STATUS" NUMBER(1,0) DEFAULT 0, 
	"OKPD_CODE" VARCHAR2(20 BYTE), 
	"OKPD_NAME" VARCHAR2(1000 BYTE), 
	"OKPD_ID" NUMBER(15,0), 
	"OKVED_ID" NUMBER(15,0), 
	"OKVED" VARCHAR2(20 BYTE), 
	"OKVED_NAME" VARCHAR2(1000 BYTE), 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RQGOODSPROP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RQGOODSPROP" 
   (	"REQUEST_ID" NUMBER(15,0), 
	"GOODSPOS" NUMBER(15,0), 
	"SEQORDER" NUMBER(15,0), 
	"PROPTYPE_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(512 BYTE), 
	"PROPVALUE" VARCHAR2(1500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RQLOT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RQLOT" 
   (	"REQUEST_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"LOTNUMBER" NUMBER(15,0), 
	"NAME" VARCHAR2(2000 BYTE), 
	"DELIVERYBASISCODE" VARCHAR2(50 BYTE), 
	"PAYCONDITIONNAME" VARCHAR2(255 BYTE), 
	"CONTYPE_ID" NUMBER(15,0), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"CMPDATE" DATE, 
	"ENTERPRISE" NUMBER(1,0) DEFAULT 0, 
	"PLAN_DEALDATE" DATE, 
	"SUBJECT" VARCHAR2(2000 BYTE), 
	"PRICE_GENERATION_ORDER" CLOB, 
	"RATIONALEPRICE" VARCHAR2(4000 BYTE), 
	"QUANTITY" VARCHAR2(4000 BYTE), 
	"DELIVERYTERM" VARCHAR2(1024 BYTE), 
	"DELIVERYPLACE" VARCHAR2(4000 BYTE), 
	"PAYMENTCONDITION" VARCHAR2(2000 BYTE), 
	"QUANTITYCONTRACTSPNIR" NUMBER(15,0), 
	"ADDITIONALINFO" VARCHAR2(4000 BYTE), 
	"ISGUARANTEEAPP" NUMBER(1,0) DEFAULT 0, 
	"GUARANTEEAPPAMOUNT" NUMBER(15,2), 
	"GUARAPPSETTLEMENTACC_ID" NUMBER(15,0), 
	"GUARAPPPERSONALACC_ID" NUMBER(15,0), 
	"GUARAPPBIC" VARCHAR2(15 BYTE), 
	"GUARANTEEAPPPROCEDURE" CLOB, 
	"ISGUARANTEECONTRACT" NUMBER(1,0) DEFAULT 0, 
	"GUARANTEECONTRACTAMOUNT" NUMBER(15,2), 
	"GUARCONTRSETTLEMENTACC_ID" NUMBER(15,0), 
	"GUARCONTRPERSONALACC_ID" NUMBER(15,0), 
	"GUARANTEECONTRACTBIC" VARCHAR2(15 BYTE), 
	"GUARANTEECONTRACTPROCEDURE" CLOB, 
	"GUARANTEECONTRACTISBAIL" NUMBER(1,0) DEFAULT 0, 
	"ENERGYTYPE" VARCHAR2(3 BYTE), 
	"ENERGYSERVICEECONOMY" VARCHAR2(2000 BYTE), 
	"PLANPOSITIONNUMBER" VARCHAR2(100 BYTE), 
	"ADVANCE" NUMBER(15,2), 
	"ISAMOUNTPERCENT" NUMBER(1,0) DEFAULT 0, 
	"AMOUNTPERCENT" NUMBER(3,2), 
	"CURRENCY_ID" NUMBER(15,0), 
	"CURRENCY_CODE" VARCHAR2(3 BYTE), 
	"CONMNGRRESP_FULLNAME" VARCHAR2(256 BYTE), 
	"CUSTCANCHANGECONTERMS" NUMBER(1,0) DEFAULT 0, 
	"CUSTCANREFUSE" NUMBER(1,0) DEFAULT 0, 
	"CONSERVICEINFO" VARCHAR2(2000 BYTE), 
	"CUSTCANREFUSEINFO" CLOB, 
	"LIMITCONDEFINITION" CLOB, 
	"GOODSLIMITS" CLOB, 
	"CONMNGRRESP_ID" NUMBER(15,0), 
	"PRICEFORMULA" VARCHAR2(2000 BYTE), 
	"STANDARDCONTRACTNUMBER" VARCHAR2(16 BYTE), 
	"ALLOWMULTIPLECONTRACTS" NUMBER(1,0) DEFAULT 0, 
	"GUARANTEEAPPPERCENT" NUMBER(5,2), 
	"GUARANTEECONTRACTPERCENT" NUMBER(5,2)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("PRICE_GENERATION_ORDER") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("GUARANTEEAPPPROCEDURE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("GUARANTEECONTRACTPROCEDURE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CUSTCANREFUSEINFO") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("LIMITCONDEFINITION") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("GOODSLIMITS") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table RQOPTIMIZEDPRICE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RQOPTIMIZEDPRICE" 
   (	"REQUEST_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"PLANPOSITIONNUMBER" VARCHAR2(100 BYTE), 
	"PERCENT" NUMBER(5,2) DEFAULT 0, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RQPAYSHEDULE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RQPAYSHEDULE" 
   (	"REQUEST_ID" NUMBER(15,0), 
	"BUDGETLINEPOS" NUMBER(15,0), 
	"PAYDATE" DATE, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RQQUALREQ
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RQQUALREQ" 
   (	"REQUEST_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"LOTPOS" NUMBER(15,0), 
	"NAME" VARCHAR2(2000 BYTE), 
	"QTYPE" NUMBER(2,0), 
	"QMINVALUE" NUMBER(15,4), 
	"QMAXVALUE" NUMBER(15,4), 
	"PLACEMENTFEATURE_ID" NUMBER(15,0), 
	"CONTENT" VARCHAR2(2000 BYTE), 
	"REQUIREMENTTYPE_ID" NUMBER(15,0), 
	"REQUIREMENTTYPE_NAME" VARCHAR2(500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RQSUPPLYSHEDULE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RQSUPPLYSHEDULE" 
   (	"REQUEST_ID" NUMBER(15,0), 
	"BUDGETLINEPOS" NUMBER(15,0), 
	"GOODSPOS" NUMBER(15,0), 
	"SUPPLYDATE" DATE, 
	"QTY" NUMBER(15,4) DEFAULT 0, 
	"AMOUNT" NUMBER(15,2) DEFAULT 0, 
	"LOTPOS" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RQVENDOR
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RQVENDOR" 
   (	"REQUEST_ID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"VENDOR_ID" NUMBER(15,0), 
	"TAXCODE" VARCHAR2(20 BYTE), 
	"KPP" VARCHAR2(20 BYTE), 
	"VENDORNAME" VARCHAR2(2000 BYTE), 
	"REFCOUNT" NUMBER(4,0), 
	"PROPFORM_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RULEREQUISITE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RULEREQUISITE" 
   (	"ID" NUMBER(18,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENTCLASS_ID" NUMBER(18,0), 
	"CAPTION" VARCHAR2(255 BYTE), 
	"FIELD_NAME" VARCHAR2(50 BYTE), 
	"REF_PARAM" VARCHAR2(255 BYTE), 
	"EXPR" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table RULESCRIPT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."RULESCRIPT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"SUBSYSTEM" NUMBER(15,0) DEFAULT 0, 
	"BODY" CLOB, 
	"CAPTION" VARCHAR2(256 BYTE), 
	"LANG" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("BODY") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table SCHEXPDOCS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SCHEXPDOCS" 
   (	"ID" NUMBER(18,0), 
	"VERSION" NUMBER(15,0), 
	"DOCCLASS_ID" NUMBER(15,0), 
	"STATUSES" VARCHAR2(255 BYTE), 
	"ROLES" VARCHAR2(255 BYTE), 
	"REMARK" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table SCHPLAN
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SCHPLAN" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"SCHTASK_ID" NUMBER(15,0), 
	"MODEL" NUMBER(1,0), 
	"DAYS" VARCHAR2(7 BYTE), 
	"START_DATE" DATE, 
	"ISACTIVE" NUMBER(1,0) DEFAULT 1, 
	"NAME" VARCHAR2(50 BYTE), 
	"INSTANCE" VARCHAR2(255 BYTE), 
	"LAST_RUNNING_TIME" DATE, 
	"LAST_START" DATE, 
	"PARAMS" VARCHAR2(255 BYTE), 
	"LAST_FINISH_TIME" DATE, 
	"LAST_RESULT" CLOB, 
	"RUN_AFTER_SYS_START" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("LAST_RESULT") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table SCHTASK
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SCHTASK" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"ALONE" NUMBER(1,0) DEFAULT 0, 
	"SUBSYSTEM" NUMBER(15,0) DEFAULT 0, 
	"EXAMPLE" CLOB, 
	"PROCESSOR_XML" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("EXAMPLE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table SERVERACTION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SERVERACTION" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"SERVERPROCESSOR_ID" NUMBER(15,0), 
	"ACTION_NAME" VARCHAR2(50 BYTE), 
	"EXTERNAL_FLAG" NUMBER(1,0) DEFAULT 0, 
	"READONLY_FLAG" NUMBER(1,0) DEFAULT 0, 
	"CAPTION" VARCHAR2(100 BYTE), 
	"JAVACLASS_NAME" VARCHAR2(100 BYTE), 
	"SERIALIZABLE_FLAG" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table SERVERERROR
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SERVERERROR" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"SUBSYSTEM" NUMBER(15,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table SERVERPROCESSOR
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SERVERPROCESSOR" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"CLASSNAME" VARCHAR2(100 BYTE), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"SYSTEM_FLAG" NUMBER(1,0) DEFAULT 0, 
	"PUBLIC_FLAG" NUMBER(1,0) DEFAULT 0, 
	"DATA_CLASSNAME" VARCHAR2(100 BYTE), 
	"PARAMS" VARCHAR2(255 BYTE), 
	"SUBSYSTEM" NUMBER(15,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table SERVERPROVIDER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SERVERPROVIDER" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"CLASSNAME" VARCHAR2(100 BYTE), 
	"PUBLIC_FLAG" NUMBER(1,0) DEFAULT 0, 
	"CAPTION" VARCHAR2(100 BYTE), 
	"REPORT_FLAG" NUMBER(1,0) DEFAULT 0, 
	"PARAMS" CLOB, 
	"SUBSYSTEM" NUMBER(15,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("PARAMS") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table SIGNEXPORTLOG
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SIGNEXPORTLOG" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DIGEST_ID" NUMBER(15,0), 
	"EXPORT_TIME" DATE, 
	"SYSUSER_ID" NUMBER(15,0), 
	"DISPSTATUS_ID" NUMBER(15,0), 
	"SIGNTYPE" NUMBER(1,0) DEFAULT 0, 
	"DOCATTACHEX_ID" NUMBER(18,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table SIGNFORMAT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SIGNFORMAT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table SIGNTYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SIGNTYPE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(255 BYTE), 
	"SIGNFORMAT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table STATISTICSSOURCE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."STATISTICSSOURCE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(100 BYTE), 
	"CAPTION" VARCHAR2(255 BYTE), 
	"CLASSNAME" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table STOREDDOCUMENTS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."STOREDDOCUMENTS" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"DOCUMENT_ID" NUMBER(15,0), 
	"STORE_DATE" DATE, 
	"DATA" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("DATA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table STOREPLACE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."STOREPLACE" 
   (	"GOODSID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"QUANTITY" NUMBER(15,4), 
	"TERRITORYCODE" VARCHAR2(20 BYTE), 
	"ADDRESS" VARCHAR2(300 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table SUPPLYPLACE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SUPPLYPLACE" 
   (	"GOODSID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"QUANTITY" NUMBER(15,4), 
	"SUPPLYPRICE" NUMBER(15,2), 
	"TERRITORYCODE" VARCHAR2(20 BYTE), 
	"ADDRESS" VARCHAR2(300 BYTE), 
	"REMARK" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table SUPPORTCRYPTOLIB
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SUPPORTCRYPTOLIB" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(100 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"LIBTYPE" VARCHAR2(20 BYTE) DEFAULT 'WIN_CSP'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table SUPPORTCRYPTOLIBFORMAT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SUPPORTCRYPTOLIBFORMAT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"SUPPORTCRYPTOLIB_ID" NUMBER(15,0), 
	"SIGNFORMAT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table SUPPORTCRYPTOLIBPARAM
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SUPPORTCRYPTOLIBPARAM" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"SUPPORTCRYPTOLIB_ID" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"VAL" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table SYSEVENT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SYSEVENT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CREATETIME" DATE, 
	"MSGTYPE" NUMBER(1,0), 
	"SRC" VARCHAR2(50 BYTE), 
	"SYSUSER_ID" NUMBER(15,0), 
	"SERVERNAME" VARCHAR2(50 BYTE), 
	"REPORT" VARCHAR2(2000 BYTE), 
	"OBJECTID" NUMBER(15,0), 
	"EXTRA" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("EXTRA") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table SYSPARAM
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SYSPARAM" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(255 BYTE), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"PARAM_VALUE" CLOB, 
	"SYSUSER_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("PARAM_VALUE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table SYSRIGHT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SYSRIGHT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"FUNCAT_NAME" VARCHAR2(50 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table SYSTEMSITE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SYSTEMSITE" 
   (	"SITE_ID" NUMBER(15,0), 
	"SUBSYSTEM" NUMBER(15,0) DEFAULT 0, 
	"SITETYPE" NUMBER(1,0) DEFAULT 0, 
	"CLEAN_GENERATION_1" NUMBER(15,0), 
	"CLEAN_GENERATION_2" NUMBER(15,0), 
	"CLEAN_GENERATION_3" NUMBER(15,0), 
	"AS" NUMBER(*,0), 
	"LAST_GENERATION" NUMBER(15,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table SYSUSER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SYSUSER" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"MENU_ID" NUMBER(15,0), 
	"USERNAME" VARCHAR2(30 BYTE), 
	"PSWD" VARCHAR2(50 BYTE), 
	"REALNAME" VARCHAR2(100 BYTE), 
	"ORG_ROLES" NUMBER(1,0) DEFAULT 0, 
	"SIGNDEMAND" NUMBER(1,0) DEFAULT 1, 
	"REMARK" VARCHAR2(255 BYTE), 
	"USER_LOCKED" NUMBER(1,0) DEFAULT 0, 
	"FORCE_CP_MODE" NUMBER(1,0) DEFAULT 0, 
	"LAST_CP_TIME" DATE, 
	"EMAIL" VARCHAR2(255 BYTE), 
	"SSL_CERT" CLOB, 
	"COMMENTARY" VARCHAR2(2000 BYTE), 
	"USER_TYPE" NUMBER(1,0) DEFAULT 0, 
	"ARCHIVED" NUMBER(1,0) DEFAULT 0, 
	"ORG_ID" NUMBER(15,0), 
	"PANEL_ID" NUMBER(15,0), 
	"PERSON_ID" NUMBER(15,0), 
	"DOMEN_ID" NUMBER(15,0) DEFAULT 0, 
	"NO_PASSWORD_EXPIRY_CHECK" NUMBER(1,0) DEFAULT 0, 
	"USER_LOCK_REASON" VARCHAR2(255 BYTE), 
	"OOS_LOGIN" VARCHAR2(100 BYTE), 
	"OOS_PASSWORD" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("SSL_CERT") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table SYSUSEREXT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."SYSUSEREXT" 
   (	"ID" NUMBER(18,0), 
	"BADATTEMPT_COUNT" NUMBER(5,0), 
	"LAST_BADATTEMPT_TIME" DATE, 
	"LAST_LOGIN_TIME" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table TASKJOURNAL
--------------------------------------------------------

  CREATE TABLE "GZVLG"."TASKJOURNAL" 
   (	"ID" NUMBER(15,0), 
	"ACTION_DATE" DATE, 
	"URL" VARCHAR2(255 BYTE), 
	"TASK_TIME" NUMBER(15,0), 
	"PROCESSOR_NAME" VARCHAR2(255 BYTE), 
	"SPECIFICATION" VARCHAR2(255 BYTE), 
	"ACTION_NAME" VARCHAR2(255 BYTE), 
	"COMPLETED" NUMBER(1,0), 
	"EVENT_TYPE" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"SYSUSER_ID" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"SERVER_HOST" VARCHAR2(100 BYTE), 
	"SERVER_PORT" NUMBER(5,0), 
	"CLIENT_HOST" VARCHAR2(100 BYTE), 
	"CLIENT_PORT" NUMBER(5,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table TENDER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."TENDER" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"ORDER_ID" NUMBER(15,0), 
	"CRITERIONPOS" NUMBER(15,0), 
	"COMPETITORPOS" NUMBER(15,0), 
	"RATE" NUMBER(17,4), 
	"SCORE" NUMBER(10,4), 
	"OFFERVAL" VARCHAR2(255 BYTE), 
	"TENDERCRITERION_ID" NUMBER(15,0), 
	"ISFINALOFFER" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table TENDERCRITERION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."TENDERCRITERION" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(512 BYTE), 
	"CTYPE" NUMBER(2,0), 
	"CALCMODE" NUMBER(1,0), 
	"BESTPARAM" NUMBER(1,0), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"MINWEIGHT" NUMBER(15,2), 
	"MAXWEIGHT" NUMBER(15,2), 
	"DEFWEIGHT" NUMBER(15,2), 
	"CHILDWEIGHT" NUMBER(15,2), 
	"DIFFERENCE" NUMBER(15,2), 
	"ROUNDVALUE" NUMBER(15,2), 
	"ISACTUAL" NUMBER(1,0) DEFAULT 1, 
	"ISUNIQUE" NUMBER(1,0) DEFAULT 0, 
	"ISREQUIRED" NUMBER(1,0) DEFAULT 0, 
	"ISCANCELLABLE" NUMBER(1,0) DEFAULT 0, 
	"FORMULA" VARCHAR2(2000 BYTE), 
	"OOSCODE" VARCHAR2(2 BYTE) DEFAULT '0'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table TENDERCRITERIONCHILD
--------------------------------------------------------

  CREATE TABLE "GZVLG"."TENDERCRITERIONCHILD" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"TENDERCRITERION_ID" NUMBER(15,0), 
	"CHILD_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table TENDERCRITERIONPM
--------------------------------------------------------

  CREATE TABLE "GZVLG"."TENDERCRITERIONPM" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"TENDERCRITERION_ID" NUMBER(15,0), 
	"PURCHASEMODE_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table TENDERLINE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."TENDERLINE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"ORDER_ID" NUMBER(15,0), 
	"TENDER_ID" NUMBER(15,0), 
	"CRITERIONLINESEQORDER" NUMBER(15,0), 
	"CRITERIONPOS" NUMBER(15,0), 
	"RATE" NUMBER(17,4), 
	"SCORE" NUMBER(10,4), 
	"OFFERVAL" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table TENDERLINECOMM
--------------------------------------------------------

  CREATE TABLE "GZVLG"."TENDERLINECOMM" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"ORDER_ID" NUMBER(15,0), 
	"TENDERLINE_ID" NUMBER(15,0), 
	"COMMEMBERPOS" NUMBER(15,0), 
	"SCORE" NUMBER(10,4)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table TERRITORY
--------------------------------------------------------

  CREATE TABLE "GZVLG"."TERRITORY" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"COUNTRY_ID" NUMBER(15,0), 
	"PARENT_ID" NUMBER(15,0), 
	"CODE" VARCHAR2(20 BYTE), 
	"TERTYPE_ID" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table TER_TREE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."TER_TREE" 
   (	"TER_ID" NUMBER(15,0), 
	"TREE" VARCHAR2(252 BYTE), 
	"PATH" VARCHAR2(512 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table TERTYPE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."TERTYPE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(20 BYTE), 
	"CAPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table TYPECRIT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."TYPECRIT" 
   (	"TYPEREQCRITID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"NAME" VARCHAR2(2000 BYTE), 
	"CTYPE" NUMBER(2,0), 
	"CALCMODE" NUMBER(1,0), 
	"BESTPARAM" NUMBER(1,0), 
	"WEIGHT" NUMBER(15,2), 
	"TENDERCRITERION_ID" NUMBER(15,0), 
	"MINWEIGHT" NUMBER(15,2), 
	"MAXWEIGHT" NUMBER(15,2), 
	"VAL" NUMBER(15,2), 
	"DESCRIPTION" VARCHAR2(2000 BYTE), 
	"FORMULA" VARCHAR2(2000 BYTE), 
	"UNITNAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table TYPECRITLINE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."TYPECRITLINE" 
   (	"TYPEREQCRIT_ID" NUMBER(15,0), 
	"TYPECRITPOS" NUMBER(15,0), 
	"SEQORDER" NUMBER(15,0), 
	"CAPTION" VARCHAR2(2000 BYTE), 
	"MINVALUE" NUMBER(15,2), 
	"MAXVALUE" NUMBER(15,2), 
	"WEIGHT" NUMBER(15,2), 
	"LIMITDESCRIPTION" VARCHAR2(2000 BYTE), 
	"DESCRIPTION" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table TYPEDOCREQ
--------------------------------------------------------

  CREATE TABLE "GZVLG"."TYPEDOCREQ" 
   (	"TYPEDOCREQGROUPID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"VENDOR_TYPE" NUMBER(2,0) DEFAULT 0, 
	"ISREQUIRED" NUMBER(1,0) DEFAULT 1, 
	"PURCHASEMODE_ID" NUMBER(15,0) DEFAULT 1, 
	"REQUIREMENTTYPE_ID" NUMBER(15,0) DEFAULT 1, 
	"NAME" VARCHAR2(1024 BYTE), 
	"DESCRIPTION" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table TYPEDOCREQGROUP
--------------------------------------------------------

  CREATE TABLE "GZVLG"."TYPEDOCREQGROUP" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"PURCHASEMODE_ID" NUMBER(15,0) DEFAULT 1, 
	"NAME" VARCHAR2(1024 BYTE), 
	"DESCRIPTION" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table TYPEREQ
--------------------------------------------------------

  CREATE TABLE "GZVLG"."TYPEREQ" 
   (	"TYPEREQCRITID" NUMBER(15,0), 
	"POS" NUMBER(15,0), 
	"NAME" VARCHAR2(2000 BYTE), 
	"PURCHASEMODE_ID" NUMBER(15,0) DEFAULT 1, 
	"REQUIREMENTTYPE_ID" NUMBER(15,0) DEFAULT 1, 
	"DESCRIPTION" VARCHAR2(1000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table TYPEREQCRIT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."TYPEREQCRIT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(2000 BYTE), 
	"DESCRIPTION" VARCHAR2(500 BYTE), 
	"PURCHASEMODE_ID" NUMBER(15,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table UNIT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."UNIT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"CAPTION" VARCHAR2(100 BYTE), 
	"OKEI" VARCHAR2(4 BYTE), 
	"IS_ACTUAL" NUMBER(1,0) DEFAULT 1, 
	"NAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table UPDPACKAGE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."UPDPACKAGE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"RECEIVE_TIME" DATE, 
	"PROCESS_TIME" DATE, 
	"SOURCE_BUILD" VARCHAR2(50 BYTE), 
	"TARGET_BUILD" VARCHAR2(50 BYTE), 
	"MODEL" VARCHAR2(100 BYTE), 
	"SENDER_ID" NUMBER(15,0), 
	"RECEIVER_ID" NUMBER(15,0), 
	"DISPSTATUS" NUMBER(1,0) DEFAULT 0, 
	"BUNDLE_PATH" VARCHAR2(512 BYTE), 
	"UPDATE_LOG" CLOB, 
	"DESCRIPTION" VARCHAR2(1024 BYTE), 
	"UPDATE_STARTUP_FILE" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("UPDATE_LOG") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table USERBUDGET
--------------------------------------------------------

  CREATE TABLE "GZVLG"."USERBUDGET" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"SYSUSER_ID" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"ACCESS_MODE" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table USERCERT
--------------------------------------------------------

  CREATE TABLE "GZVLG"."USERCERT" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"SYSUSER_ID" NUMBER(15,0), 
	"SERIALNUMBER" VARCHAR2(64 BYTE), 
	"SUBJECT" VARCHAR2(255 BYTE), 
	"ISSUERSERIALNUMBER" VARCHAR2(64 BYTE), 
	"ISSUER" VARCHAR2(255 BYTE), 
	"VALIDFROM" DATE, 
	"VALIDBY" DATE, 
	"REVOKEDDATE" DATE DEFAULT '4000-01-01', 
	"REMARK" VARCHAR2(1000 BYTE), 
	"CERTENCODED" CLOB, 
	"CHECKOID" NUMBER(1,0) DEFAULT 0, 
	"SUBJECT_STATUS" NUMBER(1,0) DEFAULT 0, 
	"ASSIGNEE" VARCHAR2(100 BYTE), 
	"SUBJECT_ORG" VARCHAR2(255 BYTE), 
	"SUBJECT_TITLE" VARCHAR2(255 BYTE), 
	"FULL_ISSUER" VARCHAR2(255 BYTE), 
	"SIGNTYPE_ID" NUMBER(15,0) DEFAULT 1, 
	"ISNOTNOTIFY" NUMBER(1,0) DEFAULT 0, 
	"SUBJECT_OGRN" VARCHAR2(20 BYTE), 
	"SUBJECT_INN" VARCHAR2(13 BYTE), 
	"SUBJECT_LOCATION" VARCHAR2(300 BYTE), 
	"BLOCKED" NUMBER(1,0) DEFAULT 0, 
	"CRLPOINT_ID" NUMBER(15,0), 
	"SUBJECT_EMAIL" VARCHAR2(255 BYTE), 
	"SUBJECT_SNILS" VARCHAR2(100 BYTE), 
	"CA_NAME" VARCHAR2(255 BYTE), 
	"CA_CONTACT_INFO" VARCHAR2(1024 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("CERTENCODED") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table USERCERTSYSUSER
--------------------------------------------------------

  CREATE TABLE "GZVLG"."USERCERTSYSUSER" 
   (	"SYSUSER_ID" NUMBER(15,0), 
	"USERCERT_ID" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table USERORG
--------------------------------------------------------

  CREATE TABLE "GZVLG"."USERORG" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"SYSUSER_ID" NUMBER(15,0), 
	"ORG_ID" NUMBER(15,0), 
	"ACCESS_MODE" NUMBER(1,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table USERPROFILE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."USERPROFILE" 
   (	"SYSUSER_ID" NUMBER(15,0), 
	"PVALUE" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" 
 LOB ("PVALUE") STORE AS SECUREFILE (
  TABLESPACE "AZK" ENABLE STORAGE IN ROW CHUNK 16384
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 212992 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table USERROLE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."USERROLE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"ROLE_TYPE" NUMBER(1,0) DEFAULT 0, 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"ISSIGNROLE" NUMBER(1,0), 
	"ISBLOCKED" NUMBER(1,0) DEFAULT 0, 
	"ISPRIVATEORG" NUMBER(1,0) DEFAULT 0, 
	"HASCHILDORGS" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table USERSESSION
--------------------------------------------------------

  CREATE TABLE "GZVLG"."USERSESSION" 
   (	"ID" NUMBER(15,0), 
	"SYSUSER_ID" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"WORK_DATE" DATE, 
	"SERVER_HOST" VARCHAR2(100 BYTE), 
	"SERVER_PORT" NUMBER(5,0), 
	"CLIENT_HOST" VARCHAR2(100 BYTE), 
	"CLIENT_PORT" NUMBER(5,0), 
	"OPEN_TIME" DATE, 
	"CLOSE_TIME" DATE, 
	"VERSION" NUMBER(15,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table USERSESSIONACCESS
--------------------------------------------------------

  CREATE TABLE "GZVLG"."USERSESSIONACCESS" 
   (	"ID" NUMBER(15,0), 
	"ACCESS_TIME" DATE, 
	"REQUEST_COUNT" NUMBER(9,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table USESCRYPTOLIB
--------------------------------------------------------

  CREATE TABLE "GZVLG"."USESCRYPTOLIB" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"SUPPORTCRYPTOLIB_ID" NUMBER(15,0), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"REQUESTERTYPE" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table USESCRYPTOLIBPARAM
--------------------------------------------------------

  CREATE TABLE "GZVLG"."USESCRYPTOLIBPARAM" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"USESCRYPTOLIB_ID" NUMBER(15,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"VAL" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table WEBSTATCACHE
--------------------------------------------------------

  CREATE TABLE "GZVLG"."WEBSTATCACHE" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"BUDGET_ID" NUMBER(15,0), 
	"YEAR_NUM" NUMBER(*,0), 
	"STATISTICSSOURCE_ID" NUMBER(15,0), 
	"PURNAME" VARCHAR2(100 BYTE), 
	"KEYTYPE" VARCHAR2(100 BYTE), 
	"INSTANCE" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Table WEBSTATCACHEVAL
--------------------------------------------------------

  CREATE TABLE "GZVLG"."WEBSTATCACHEVAL" 
   (	"ID" NUMBER(15,0), 
	"VERSION" NUMBER(15,0), 
	"KEYNAME" VARCHAR2(100 BYTE), 
	"WEBSTAT_ID" NUMBER(15,0), 
	"PURCOUNT" NUMBER(15,0) DEFAULT 0, 
	"PURAMOUNT" NUMBER(15,2) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  Constraints for Table GROUPUNIT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GROUPUNIT" ADD CONSTRAINT "PK_GROUPUNIT" PRIMARY KEY ("GROUP_ID", "UNITNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GROUPUNIT" MODIFY ("GROUP_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GROUPUNIT" MODIFY ("UNITNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EXCHANGECLASSES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."EXCHANGECLASSES" ADD CONSTRAINT "UQ_EXCHANGECLASSES" UNIQUE ("DOCEXCHANGESCHEME_ID", "DOCUMENTCLASS_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MAILRECEIVERGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MAILRECEIVERGROUP" ADD CONSTRAINT "PK_MAILRECEIVERGROUP" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."MAILRECEIVERGROUP" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MAILRECEIVERGROUP" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MAILRECEIVERGROUP" ADD CONSTRAINT "UQ_MAILRECEIVERGROUP" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table LIABILITYEXPENSE_DOCLINES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."LIABILITYEXPENSE_DOCLINES" ADD CONSTRAINT "PK_LIABILITY_LINES" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."LIABILITYEXPENSE_DOCLINES" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LIABILITYEXPENSE_DOCLINES" MODIFY ("LIABILITYEXPENSE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CMPDECISION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPDECISION" ADD CONSTRAINT "CHK_CMPDECISION_RESULT" CHECK (RESULT in (0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPDECISION" ADD CONSTRAINT "PK_CMPDECISION" PRIMARY KEY ("ORDER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPDECISION" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPDECISION" MODIFY ("POS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DESCRIPTIONCACHE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DESCRIPTIONCACHE" ADD CONSTRAINT "PK_DESCRIPTION_CACHE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DESCRIPTIONCACHE" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CAVILTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CAVILTYPE" ADD CONSTRAINT "PK_CAVILTYPE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CAVILTYPE" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table NOTICEEMAILORG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NOTICEEMAILORG" ADD CONSTRAINT "PK_NOTICEEMAILORG" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."NOTICEEMAILORG" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTICEEMAILORG" MODIFY ("NOTICEDOC_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FUNCPROCESSOR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FUNCPROCESSOR" ADD CONSTRAINT "PK_FUNCPROCESSOR" PRIMARY KEY ("FUNUNIT_ID", "SERVERPROCESSOR_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FUNCPROCESSOR" MODIFY ("FUNUNIT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FUNCPROCESSOR" MODIFY ("SERVERPROCESSOR_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FUNCPROCESSOR" MODIFY ("ACCESS_MODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORGLICENCE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGLICENCE" ADD CONSTRAINT "CK_ORGLICENCE_HASHARDCOPY" CHECK (hasHardcopy in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORGLICENCE" ADD CONSTRAINT "PK_ORGLICENCE" PRIMARY KEY ("ORG_ID", "LICTYPE_ID", "LICENCE_NUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGLICENCE" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGLICENCE" MODIFY ("LICTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGLICENCE" MODIFY ("LICENCE_NUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGLICENCE" MODIFY ("HASHARDCOPY" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table NOTIFYMSGDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NOTIFYMSGDOC" MODIFY ("NOTIFYMSGKIND" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTIFYMSGDOC" ADD CONSTRAINT "UQ_NOTIFYMSGDOC" UNIQUE ("NOTIFYMSGRULE_ID", "DOCUMENT_ID", "NOTIFYMSGKIND")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RQCRITERION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQCRITERION" ADD CONSTRAINT "CK_RQCRITERION_BESTPARAM" CHECK (BestParam in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."RQCRITERION" ADD CONSTRAINT "CK_RQCRITERION_CALCMODE" CHECK (CalcMode in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."RQCRITERION" ADD CONSTRAINT "CK_RQCRITERION_CTYPE" CHECK (CType in (0,1,2,3,4,5,6,7,8,9,10,11,12)) ENABLE;
 
  ALTER TABLE "GZVLG"."RQCRITERION" ADD CONSTRAINT "PK_RQCRITERION" PRIMARY KEY ("REQUEST_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RQCRITERION" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQCRITERION" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQCRITERION" MODIFY ("OOSCODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORGADDKPP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGADDKPP" ADD CONSTRAINT "PK_ORGADDKPP" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGADDKPP" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGADDKPP" MODIFY ("KPP" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGADDKPP" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PANEL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PANEL" ADD CONSTRAINT "PK_PANEL" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PANEL" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PANEL" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PANEL" ADD CONSTRAINT "UQ_PANEL_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table USERSESSIONACCESS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."USERSESSIONACCESS" ADD CONSTRAINT "PK_USERSESSIONACESS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."USERSESSIONACCESS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERSESSIONACCESS" MODIFY ("REQUEST_COUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OOSORGROLES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSORGROLES" ADD CONSTRAINT "PK_OOSORGROLES" PRIMARY KEY ("ORG_ID", "ROLECODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OOSORGROLES" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSORGROLES" MODIFY ("ROLECODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RNP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RNP" ADD CONSTRAINT "CHK_RNP_REGISTRY_FLAG" CHECK (REGISTRY_FLAG in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."RNP" ADD CONSTRAINT "CHK_RNP_STATE" CHECK (STATE in (0, 1, 2, 3, 4)) ENABLE;
 
  ALTER TABLE "GZVLG"."RNP" ADD CONSTRAINT "PK_RNP" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RNP" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RNP" MODIFY ("CONTRACT_AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RNP" MODIFY ("STATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RNP" MODIFY ("REGISTRY_FLAG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OFRLOT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRLOT" ADD CONSTRAINT "CK_OFRLOT_ISDECLINED" CHECK (IsDeclined in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFRLOT" ADD CONSTRAINT "CK_OFRLOT_ISUTILIZED" CHECK (IsUtilized in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFRLOT" ADD CONSTRAINT "CK_OFRLOT_LOTDECLINED" CHECK (IsLotDeclined in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFRLOT" ADD CONSTRAINT "CK_OFRLOT_LOTREREGISTERED" CHECK (IsLotReregistered in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFRLOT" ADD CONSTRAINT "PK_OFRLOT" PRIMARY KEY ("OFFER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OFRLOT" MODIFY ("OFFER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRLOT" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRLOT" MODIFY ("ISUTILIZED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRLOT" MODIFY ("ISDECLINED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRLOT" MODIFY ("ISLOTDECLINED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRLOT" MODIFY ("ISLOTREREGISTERED" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONSTRUCTION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONSTRUCTION" ADD CONSTRAINT "PK_CONSTRUCTION" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONSTRUCTION" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCGROUP" ADD CONSTRAINT "PK_DOCGROUP" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCGROUP" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCGROUP" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCGROUP" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCGROUP" ADD CONSTRAINT "UQ_DOCGROUP" UNIQUE ("DOCUMENTCLASS_ID", "NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table OFRGROUPPROPVALUE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRGROUPPROPVALUE" ADD CONSTRAINT "PK_OFRGROUPPROPVALUE" PRIMARY KEY ("OFFER_ID", "GROUPPROPPOS", "SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OFRGROUPPROPVALUE" MODIFY ("OFFER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGROUPPROPVALUE" MODIFY ("GROUPPROPPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGROUPPROPVALUE" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGROUPPROPVALUE" MODIFY ("CAPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CMPGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPGOODS" ADD CONSTRAINT "CK_CMPGOODS_STATUS" CHECK (Status in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPGOODS" ADD CONSTRAINT "PK_CMPGOODS" PRIMARY KEY ("ORDER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPGOODS" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPGOODS" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPGOODS" MODIFY ("GROUPCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPGOODS" MODIFY ("QTY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPGOODS" MODIFY ("PRICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPGOODS" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPGOODS" MODIFY ("STATUS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPGOODS" MODIFY ("UNITNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEVIATIONFACTFOUNDATION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DEVIATIONFACTFOUNDATION" ADD CONSTRAINT "CK_DEVFACTFOUNDATION_ACTUAL" CHECK (Actual IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."DEVIATIONFACTFOUNDATION" ADD CONSTRAINT "PK_DEVFACTFOUNDATION" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DEVIATIONFACTFOUNDATION" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DEVIATIONFACTFOUNDATION" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DEVIATIONFACTFOUNDATION" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DEVIATIONFACTFOUNDATION" MODIFY ("ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DEVIATIONFACTFOUNDATION" MODIFY ("BUDGETTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table INVGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."INVGOODS" ADD CONSTRAINT "CK_INVGOODS_STATUS" CHECK (status in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."INVGOODS" ADD CONSTRAINT "PK_INVGOODS" PRIMARY KEY ("INVOICE_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."INVGOODS" MODIFY ("INVOICE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVGOODS" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVGOODS" MODIFY ("GROUPCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVGOODS" MODIFY ("QTY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVGOODS" MODIFY ("PRICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVGOODS" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVGOODS" MODIFY ("STATUS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVGOODS" MODIFY ("UNITNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN2OOSFEATURE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2OOSFEATURE" ADD CONSTRAINT "CHK_PLAN2OOSFEATURE_TYPE" CHECK (Type in ('P','F')) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSFEATURE" ADD CONSTRAINT "PK_PLAN2OOSFEATURE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSFEATURE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSFEATURE" MODIFY ("PLAN2OOSPOSITION_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSFEATURE" MODIFY ("TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSFEATURE" MODIFY ("PREFVALUE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLNSHEDULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLNSHEDULE" ADD CONSTRAINT "PK_PLNSHEDULE" PRIMARY KEY ("PLANDOC_ID", "GOODSPOS", "BUDGETLINEPOS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLNSHEDULE" MODIFY ("PLANDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNSHEDULE" MODIFY ("GOODSPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNSHEDULE" MODIFY ("BUDGETLINEPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNSHEDULE" MODIFY ("QTY1" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNSHEDULE" MODIFY ("QTY2" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNSHEDULE" MODIFY ("QTY3" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNSHEDULE" MODIFY ("QTY4" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNSHEDULE" MODIFY ("AMOUNT1" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNSHEDULE" MODIFY ("AMOUNT2" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNSHEDULE" MODIFY ("AMOUNT3" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNSHEDULE" MODIFY ("AMOUNT4" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REPPROFILE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REPPROFILE" ADD CONSTRAINT "PK_REPPROFILE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REPPROFILE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPPROFILE" MODIFY ("FORM_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPPROFILE" MODIFY ("NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MSGQUEUE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MSGQUEUE" ADD CONSTRAINT "PK_MSGQUEUE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."MSGQUEUE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSGQUEUE" MODIFY ("SENDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSGQUEUE" MODIFY ("RECEIVER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSGQUEUE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSGQUEUE" MODIFY ("SENT_NUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSGQUEUE" MODIFY ("PROCESSED_NUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSGQUEUE" ADD CONSTRAINT "UQ_MSGQUEUE" UNIQUE ("SENDER_ID", "RECEIVER_ID", "NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DOCFLAGTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCFLAGTYPE" ADD CONSTRAINT "CK_DOCFLAGTYPE_RADIO" CHECK (radio in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."DOCFLAGTYPE" ADD CONSTRAINT "CK_DOCFLAGTYPE_READONLY" CHECK (readOnly in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."DOCFLAGTYPE" ADD CONSTRAINT "CK_DOCFLAGTYPE_VISIBLE" CHECK (visible in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."DOCFLAGTYPE" ADD CONSTRAINT "PK_DOCFLAGTYPE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCFLAGTYPE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCFLAGTYPE" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCFLAGTYPE" MODIFY ("READONLY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCFLAGTYPE" MODIFY ("RADIO" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCFLAGTYPE" MODIFY ("VISIBLE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ETPTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ETPTYPE" ADD CONSTRAINT "PK_ETPTYPE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ETPTYPE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ETPTYPE" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ETPTYPE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ETPTYPE" ADD CONSTRAINT "UQ_ETPTYPE_CODE" UNIQUE ("CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PERSONAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PERSONAL" ADD CONSTRAINT "CK_PESONAL_IS_ACTUAL" CHECK (IS_ACTUAL IN (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PERSONAL" ADD CONSTRAINT "PK_PERSONAL" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PERSONAL" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PERSONAL" MODIFY ("LASTNAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PERSONAL" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PERSONAL" MODIFY ("IS_ACTUAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN2DAILYTOTALS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2DAILYTOTALS" ADD CONSTRAINT "CHK_PLAN2DAILYTOTALS_ENTRPRS" CHECK (IsEnterprise in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DAILYTOTALS" ADD CONSTRAINT "CHK_PLAN2DAILYTOTALS_SMALL" CHECK (IsSmall in (0, 1, 2)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DAILYTOTALS" ADD CONSTRAINT "PK_PLAN2DAILYTOTALS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DAILYTOTALS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2DAILYTOTALS" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2DAILYTOTALS" MODIFY ("PLANYEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2DAILYTOTALS" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORGPERSONALRESP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGPERSONALRESP" ADD CONSTRAINT "PK_ORGPERSONALRESP" PRIMARY KEY ("ORG_ID", "PERSONAL_ID", "RESPONSIBILITY_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGPERSONALRESP" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGPERSONALRESP" MODIFY ("PERSONAL_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGPERSONALRESP" MODIFY ("RESPONSIBILITY_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RULEREQUISITE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RULEREQUISITE" ADD CONSTRAINT "PK_RULEREQUISITE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RULEREQUISITE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RULEREQUISITE" MODIFY ("CAPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RULEREQUISITE" MODIFY ("FIELD_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CMPVENDOR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPVENDOR" ADD CONSTRAINT "PK_CMPVENDOR" PRIMARY KEY ("ORDER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPVENDOR" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPVENDOR" MODIFY ("POS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOMEN
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOMEN" ADD CONSTRAINT "PK_DOMEN" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOMEN" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN3DOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN3DOC" ADD CONSTRAINT "CK_PLAN3DOC_CREDENTIALSPASSED" CHECK (CredentialsPassed in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3DOC" ADD CONSTRAINT "CK_PLAN3DOC_PLANTYPE" CHECK (PlanType IN (1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3DOC" ADD CONSTRAINT "CK_PLAN3DOC_RESPORGOOSROLE" CHECK (RespOrgOosRole in (0,1,2,3)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3DOC" ADD CONSTRAINT "PK_PLAN3DOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3DOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3DOC" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3DOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3DOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3DOC" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3DOC" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3DOC" MODIFY ("SGOZAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3DOC" MODIFY ("SGOZENTERPRISEAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3DOC" MODIFY ("PLANYEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3DOC" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3DOC" MODIFY ("RESPORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3DOC" MODIFY ("VERSIONNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3DOC" MODIFY ("CREDENTIALSPASSED" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLANPOSITIONCHANGEREASON
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLANPOSITIONCHANGEREASON" ADD CONSTRAINT "CK_PLANPOSITIONCHANGE_ACTUAL" CHECK (actual in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLANPOSITIONCHANGEREASON" ADD CONSTRAINT "PK_PLANPOSITIONCHANGEREASON" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLANPOSITIONCHANGEREASON" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLANPOSITIONCHANGEREASON" MODIFY ("ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLANPOSITIONCHANGEREASON" MODIFY ("BUDGETTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REFUSALFACTFOUNDATION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REFUSALFACTFOUNDATION" ADD CONSTRAINT "CK_REFUSALFACTFNDTN_ACTUAL" CHECK (Actual in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."REFUSALFACTFOUNDATION" ADD CONSTRAINT "PK_REFUSALFACTFOUNDATION" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REFUSALFACTFOUNDATION" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REFUSALFACTFOUNDATION" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REFUSALFACTFOUNDATION" MODIFY ("ACTUAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OOSAPPLICATION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSAPPLICATION" ADD CONSTRAINT "CHK_ADMITTEDFIRST" CHECK (admittedFirst in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OOSAPPLICATION" ADD CONSTRAINT "CHK_ADMITTEDSECOND" CHECK (admittedSecond in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OOSAPPLICATION" ADD CONSTRAINT "CHK_PARTICIPANTPRESENT" CHECK (participantPresent in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OOSAPPLICATION" ADD CONSTRAINT "PK_OOSAPPLICATION" PRIMARY KEY ("NOTIFICATIONNUMBER", "LOTNUMBER", "JOURNALNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OOSAPPLICATION" MODIFY ("NOTIFICATIONNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSAPPLICATION" MODIFY ("LOTNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSAPPLICATION" MODIFY ("JOURNALNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSAPPLICATION" MODIFY ("ADMITTEDFIRST" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSAPPLICATION" MODIFY ("PARTICIPANTPRESENT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSAPPLICATION" MODIFY ("PARTICIPANTSCOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSAPPLICATION" MODIFY ("ADMITTEDSECOND" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CMPVOTERESULT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPVOTERESULT" ADD CONSTRAINT "CHK_CMPVOTERESULT_RESULT" CHECK ((result is null) or result in (0, 1, 2)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPVOTERESULT" ADD CONSTRAINT "PK_CMPVOTERESULT" PRIMARY KEY ("DECISIONPOS", "ORDER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPVOTERESULT" MODIFY ("DECISIONPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPVOTERESULT" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPVOTERESULT" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPVOTERESULT" MODIFY ("CMPCOMMEMBERPOS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OFRGROUPPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRGROUPPROP" ADD CONSTRAINT "CK_OFRGROUPPROP_ISREQUIRED" CHECK (IsRequired in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFRGROUPPROP" ADD CONSTRAINT "PK_OFRGROUPPROP" PRIMARY KEY ("OFFER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OFRGROUPPROP" MODIFY ("OFFER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGROUPPROP" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGROUPPROP" MODIFY ("GROUPCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGROUPPROP" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGROUPPROP" MODIFY ("CAPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGROUPPROP" MODIFY ("ISREQUIRED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGROUPPROP" MODIFY ("PROPTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGROUPPROP" ADD CONSTRAINT "UQ_OFRGROUPPROP" UNIQUE ("OFFER_ID", "GROUPCODE", "SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CONGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONGOODS" ADD CONSTRAINT "CK_CONGOODS_STATUS" CHECK (status in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONGOODS" ADD CONSTRAINT "PK_CONGOODS" PRIMARY KEY ("CONTRACT_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONGOODS" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONGOODS" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONGOODS" MODIFY ("GROUPCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONGOODS" MODIFY ("QTY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONGOODS" MODIFY ("PRICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONGOODS" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONGOODS" MODIFY ("STATUS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONGOODS" MODIFY ("UNITNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONTRACTREASON_DOCLINES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONTRACTREASON_DOCLINES" ADD CONSTRAINT "CK_CONREASONLINE_ACTUAL" CHECK (actual in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTREASON_DOCLINES" ADD CONSTRAINT "PK_CONREASONLINE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTREASON_DOCLINES" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTREASON_DOCLINES" MODIFY ("ACTUAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCSITELINK
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCSITELINK" ADD CONSTRAINT "PK_DOCSITELINK" PRIMARY KEY ("DOCUMENT_ID", "SITE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCSITELINK" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCSITELINK" MODIFY ("SITE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table USERPROFILE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."USERPROFILE" ADD CONSTRAINT "PK_USERPROFILE" PRIMARY KEY ("SYSUSER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."USERPROFILE" MODIFY ("SYSUSER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GOODSBAN
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSBAN" ADD CONSTRAINT "PK_GOODSBAN" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSBAN" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSBAN" MODIFY ("NAME_NPA" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSBAN" MODIFY ("BAN_FROMDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSBAN" MODIFY ("IS223FZ" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSBAN" MODIFY ("CONTROL_MODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSBAN" ADD CONSTRAINT "UQ_GOODSBAN_NAME_NPA" UNIQUE ("NAME_NPA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DOCEVENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCEVENT" ADD CONSTRAINT "CK_DOCEVENT_AUTO_RPL" CHECK (auto_rpl in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."DOCEVENT" ADD CONSTRAINT "CK_DOCEVENT_EXTERNAL" CHECK (external_flag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."DOCEVENT" ADD CONSTRAINT "CK_DOCEVENT_ISOFFLINE" CHECK (isoffline in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."DOCEVENT" ADD CONSTRAINT "PK_DOCEVENT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCEVENT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCEVENT" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCEVENT" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCEVENT" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCEVENT" MODIFY ("SHOW_ORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCEVENT" MODIFY ("EXTERNAL_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCEVENT" MODIFY ("AUTO_RPL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCEVENT" MODIFY ("ISOFFLINE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCEVENT" MODIFY ("USER_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCEVENT" ADD CONSTRAINT "UQ_DOCEVENT" UNIQUE ("DOCUMENTCLASS_ID", "DISPSTATUS_ID", "NAME", "USER_TYPE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table OOSCONTRACT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSCONTRACT" ADD CONSTRAINT "CHK_SINGLECUSTOMER" CHECK (singleCustomer in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OOSCONTRACT" ADD CONSTRAINT "CK_OOSCONTRACT_ISACTUAL" CHECK (isActual in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OOSCONTRACT" ADD CONSTRAINT "PK_OOSCONTRACT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OOSCONTRACT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSCONTRACT" MODIFY ("REGNUM" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSCONTRACT" MODIFY ("SINGLECUSTOMER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSCONTRACT" MODIFY ("ISACTUAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ATTACHEDPLANDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ATTACHEDPLANDOC" ADD CONSTRAINT "PK_ATTACHEDPLANDOC" PRIMARY KEY ("PURCHASEPLANDOC_ID", "DOC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ATTACHEDPLANDOC" MODIFY ("DOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ATTACHEDPLANDOC" MODIFY ("PURCHASEPLANDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ATTACHEDPLANDOC" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RQGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQGOODS" ADD CONSTRAINT "CK_RQGOODS_STATUS" CHECK (Status in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."RQGOODS" ADD CONSTRAINT "PK_RQGOODS" PRIMARY KEY ("REQUEST_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RQGOODS" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQGOODS" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQGOODS" MODIFY ("GROUPCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQGOODS" MODIFY ("QTY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQGOODS" MODIFY ("PRICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQGOODS" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQGOODS" MODIFY ("STATUS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQGOODS" MODIFY ("UNITNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RULESCRIPT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RULESCRIPT" ADD CONSTRAINT "PK_RULESCRIPT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RULESCRIPT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RULESCRIPT" MODIFY ("SUBSYSTEM" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RULESCRIPT" MODIFY ("LANG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table USERROLE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."USERROLE" ADD CONSTRAINT "CK_USERROLE_HASCHILDORGS" CHECK (hasChildOrgs in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."USERROLE" ADD CONSTRAINT "CK_USERROLE_ISBLOCKED" CHECK (isblocked in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."USERROLE" ADD CONSTRAINT "CK_USERROLE_ISPRIVATEORG" CHECK (isPrivateOrg in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."USERROLE" ADD CONSTRAINT "CK_USERROLE_TYPE" CHECK (role_type in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."USERROLE" ADD CONSTRAINT "PK_USERROLE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."USERROLE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERROLE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERROLE" MODIFY ("ROLE_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERROLE" MODIFY ("ISPRIVATEORG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERROLE" MODIFY ("HASCHILDORGS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERROLE" ADD CONSTRAINT "UQ_USERROLE_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CMPQUALREQ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPQUALREQ" ADD CONSTRAINT "CK_CMPQUALREQ_QTYPE" CHECK (qType BETWEEN 0 AND 13) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPQUALREQ" ADD CONSTRAINT "PK_CMPQUALREQ" PRIMARY KEY ("ORDER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPQUALREQ" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPQUALREQ" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPQUALREQ" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPQUALREQ" MODIFY ("QTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONTRACTEXECDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" ADD CONSTRAINT "CK_CONEXECDOC_DELAYPNLTSFLAG" CHECK (delay_PenaltiesFlag IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" ADD CONSTRAINT "CK_CONEXECDOC_WRTOFFPNLTSFLAG" CHECK (writeOff_PenaltiesFlag IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" ADD CONSTRAINT "CK_CONTRACTEXECDOC_BGEXPFLAG" CHECK (BankGrnt_ExportFlag IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" ADD CONSTRAINT "CK_CONTRACTEXECDOC_DELAYFLAG" CHECK (delay_WrtOffPnltsFlag IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" ADD CONSTRAINT "CK_CONTRACTEXECDOC_HCEFLAG" CHECK (HldCashEnfrcmnt_Flag IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" ADD CONSTRAINT "CK_CONTRACTEXECDOC_RESTRFLAG" CHECK (RestructureFlag IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" ADD CONSTRAINT "CK_CONTRACTEXECDOC_TERMFLAG" CHECK (TerminationFlag IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" ADD CONSTRAINT "CK_CONTREXECDOC_FINALSTAGEEXEC" CHECK (FinalStageExecution IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" ADD CONSTRAINT "CK_CONTREXECDOC_TYPE" CHECK (type in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" ADD CONSTRAINT "PK_CONTREXECDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" MODIFY ("TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" MODIFY ("ORDINALNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" MODIFY ("TERMINATIONFLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" MODIFY ("RESTRUCTUREFLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" MODIFY ("DELAY_WRTOFFPNLTSFLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" MODIFY ("DELAY_PENALTIESFLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" MODIFY ("WRITEOFF_PENALTIESFLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" MODIFY ("HLDCASHENFRCMNT_FLAG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OOSCONTRACTPRODUCTS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSCONTRACTPRODUCTS" ADD CONSTRAINT "PK_OOSCONTRACTPRODUCTS" PRIMARY KEY ("CONTRACT_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OOSCONTRACTPRODUCTS" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSCONTRACTPRODUCTS" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSCONTRACTPRODUCTS" MODIFY ("PRICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSCONTRACTPRODUCTS" MODIFY ("QUANTITY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSCONTRACTPRODUCTS" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table COMPLAINTDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."COMPLAINTDOC" ADD CONSTRAINT "PK_COMPLAINTDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."COMPLAINTDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."COMPLAINTDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."COMPLAINTDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."COMPLAINTDOC" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."COMPLAINTDOC" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."COMPLAINTDOC" MODIFY ("DOC_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."COMPLAINTDOC" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."COMPLAINTDOC" MODIFY ("ORDER_NUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."COMPLAINTDOC" MODIFY ("NOTICE_PUBLISH_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."COMPLAINTDOC" MODIFY ("SITE_URL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CMPDISCUSSION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPDISCUSSION" ADD CONSTRAINT "PK_CMPDISCUSSION" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPDISCUSSION" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPDISCUSSION" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPDISCUSSION" MODIFY ("PHASEPOS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORGCHILD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGCHILD" ADD CONSTRAINT "PK_ORGCHILD" PRIMARY KEY ("ORG_ID", "CHILD_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGCHILD" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGCHILD" MODIFY ("CHILD_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCFLAG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCFLAG" MODIFY ("DOCFLAGTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCFLAG" ADD CONSTRAINT "UQ_DOCFLAG_DOC_FLAGTYPE" UNIQUE ("DOCUMENT_ID", "DOCFLAGTYPE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table REPDOCFRAGMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REPDOCFRAGMENT" ADD CONSTRAINT "PK_REPDOCFRAGMENT" PRIMARY KEY ("REPDOCUMENT_ID", "REPFRAGMENT_ID", "BOOKMARK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REPDOCFRAGMENT" MODIFY ("REPDOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPDOCFRAGMENT" MODIFY ("REPFRAGMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPDOCFRAGMENT" MODIFY ("BOOKMARK" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GOODSOKDPPURCHASEMODE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSOKDPPURCHASEMODE" ADD CONSTRAINT "PK_GOODSOKDPPURCHASEMODE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSOKDPPURCHASEMODE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKDPPURCHASEMODE" MODIFY ("PURCHASEMODE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKDPPURCHASEMODE" MODIFY ("GOODSOKDP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLNBUDGETLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLNBUDGETLINE" ADD CONSTRAINT "PK_PLNBUDGETLINE" PRIMARY KEY ("PLANDOC_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLNBUDGETLINE" MODIFY ("PLANDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNBUDGETLINE" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNBUDGETLINE" MODIFY ("AMOUNT1" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNBUDGETLINE" MODIFY ("AMOUNT2" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNBUDGETLINE" MODIFY ("AMOUNT3" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNBUDGETLINE" MODIFY ("AMOUNT4" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN2DOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2DOC" ADD CONSTRAINT "PK_PLAN2DOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2DOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2DOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2DOC" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2DOC" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2DOC" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2DOC" MODIFY ("PLANYEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2DOC" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2DOC" MODIFY ("NECESSITY_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CMPCRITERION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPCRITERION" ADD CONSTRAINT "CK_CMPCRITERION_BESTPARAM" CHECK (BestParam in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCRITERION" ADD CONSTRAINT "CK_CMPCRITERION_CALCMODE" CHECK (CalcMode in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCRITERION" ADD CONSTRAINT "CK_CMPCRITERION_CTYPE" CHECK (CType in (0,1,2,3,4,5,6,7,8,9,10,11,12)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCRITERION" ADD CONSTRAINT "PK_CMPCRITERION" PRIMARY KEY ("ORDER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCRITERION" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCRITERION" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCRITERION" MODIFY ("OOSCODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APPMODULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."APPMODULE" ADD CONSTRAINT "PK_APPMODULE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."APPMODULE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."APPMODULE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."APPMODULE" ADD CONSTRAINT "UQ_APPMODULE" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CMPDOCREQ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPDOCREQ" ADD CONSTRAINT "CHK_CMPDOCREQ_ISCONTENTTYPE" CHECK (isContentType in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPDOCREQ" ADD CONSTRAINT "CHK_CMPDOCREQ_ISREQUIRED" CHECK (isRequired in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPDOCREQ" ADD CONSTRAINT "CK_CMPDOCREQ_TYPE" CHECK (Type in (0,1,2,3,4,5,6,7,8,9,10,11)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPDOCREQ" ADD CONSTRAINT "CK_CMPDOCREQ_VENDOR_TYPE" CHECK (vendor_type in (0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPDOCREQ" ADD CONSTRAINT "PK_CMPDOCREQ" PRIMARY KEY ("ORDER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPDOCREQ" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPDOCREQ" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPDOCREQ" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPDOCREQ" MODIFY ("VENDOR_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPDOCREQ" MODIFY ("ISREQUIRED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPDOCREQ" MODIFY ("ISCONTENTTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPDOCREQ" MODIFY ("TYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FILEFOLDER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FILEFOLDER" ADD CONSTRAINT "PK_FILEFOLDER" PRIMARY KEY ("STORAGE_NAME", "DEVICE_NAME", "FILE_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FILEFOLDER" MODIFY ("FILE_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FILEFOLDER" MODIFY ("FOLDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FILEFOLDER" MODIFY ("DEVICE_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FILEFOLDER" MODIFY ("STORAGE_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORGACCTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGACCTYPE" ADD CONSTRAINT "PK_ORGACCTYPE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGACCTYPE" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OFRGOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRGOODSPROP" ADD CONSTRAINT "PK_OFRGOODSPROP" PRIMARY KEY ("OFFER_ID", "GOODSPOS", "SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OFRGOODSPROP" MODIFY ("OFFER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGOODSPROP" MODIFY ("GOODSPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGOODSPROP" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGOODSPROP" MODIFY ("PROPTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGOODSPROP" MODIFY ("CAPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CMPCOMMEMBER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPCOMMEMBER" ADD CONSTRAINT "CK_CMPCOMMEMBER_COMROLE" CHECK (comRole in (0,1,2,3,4)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCOMMEMBER" ADD CONSTRAINT "CK_CMPCOMMEMBER_ISACTSECR" CHECK (ISACTINGFORSECRETARY IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCOMMEMBER" ADD CONSTRAINT "CK_CMPCOMMEMBER_PRESIDENT" CHECK (president_vacation in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCOMMEMBER" ADD CONSTRAINT "PK_CMPCOMMEMBER" PRIMARY KEY ("ORDER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCOMMEMBER" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCOMMEMBER" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCOMMEMBER" MODIFY ("ABSENT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCOMMEMBER" MODIFY ("PRESIDENT_VACATION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCOMMEMBER" MODIFY ("ISACTINGFORSECRETARY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCOMMEMBER" ADD CHECK (absent in (0, 1)) ENABLE;
--------------------------------------------------------
--  Constraints for Table CLIENTOBJECT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CLIENTOBJECT" ADD CONSTRAINT "CK_CLIENTOBJECT_BUDGET" CHECK (budget_required in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CLIENTOBJECT" ADD CONSTRAINT "CK_CLIENTOBJECT_SYSTEM" CHECK (system_flag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CLIENTOBJECT" ADD CONSTRAINT "CK_CLIENTOBJECT_TYPE" CHECK (obj_type in (0,1,2,3,4)) ENABLE;
 
  ALTER TABLE "GZVLG"."CLIENTOBJECT" ADD CONSTRAINT "CK_CO_REPORT_FLAG" CHECK (report_flag in (0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."CLIENTOBJECT" ADD CONSTRAINT "PK_CLIENTOBJECT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CLIENTOBJECT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLIENTOBJECT" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLIENTOBJECT" MODIFY ("OBJ_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLIENTOBJECT" MODIFY ("SYSTEM_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLIENTOBJECT" MODIFY ("REPORT_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLIENTOBJECT" MODIFY ("SUBSYSTEM" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLIENTOBJECT" MODIFY ("BUDGET_REQUIRED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLIENTOBJECT" ADD CONSTRAINT "UQ_CLIENTOBJECT" UNIQUE ("OBJ_TYPE", "NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RQFEATURE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQFEATURE" ADD CONSTRAINT "PK_RQFEATURE" PRIMARY KEY ("REQUEST_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RQFEATURE" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQFEATURE" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQFEATURE" MODIFY ("PLACEMENTFEATURE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQFEATURE" MODIFY ("PREFVALUE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONTRACTCARDDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONTRACTCARDDOC" ADD CONSTRAINT "PK_CONTRACTCARDDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTCARDDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTCARDDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTCARDDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTCARDDOC" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTCARDDOC" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTCARDDOC" MODIFY ("ETP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REFATTACH
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REFATTACH" ADD CONSTRAINT "PK_REFATTACH" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REFATTACH" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REFATTACH" MODIFY ("TABLENAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REFATTACH" MODIFY ("RECORD_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REFATTACH" MODIFY ("ATTACH_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REFATTACH" ADD CONSTRAINT "UQ_REFATTACH" UNIQUE ("TABLENAME", "RECORD_ID", "ATTACH_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CONAGREEMENTSDOCS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONAGREEMENTSDOCS" ADD CONSTRAINT "PK_CONAGREEMENTSDOCS" PRIMARY KEY ("CONTRACT_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONAGREEMENTSDOCS" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONAGREEMENTSDOCS" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONAGREEMENTSDOCS" MODIFY ("DOCDATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BUDGCODE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."BUDGCODE" ADD CONSTRAINT "PK_BUDGCODE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."BUDGCODE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGCODE" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGCODE" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGCODE" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGCODE" MODIFY ("FINYEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGCODE" ADD CONSTRAINT "UQ_BUDGCODE" UNIQUE ("BUDGET_ID", "SEQORDER", "CODE", "FINYEAR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RPLLOG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPLLOG" MODIFY ("RPLTABLE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLLOG" MODIFY ("GENERATION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLLOG" MODIFY ("RECORD_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FORMATCONVERTER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FORMATCONVERTER" ADD CONSTRAINT "PK_FORMATCONVERTER" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FORMATCONVERTER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FORMATCONVERTER" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FORMATCONVERTER" ADD CONSTRAINT "UQ_FORMATCONVERTER_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SERVERPROVIDER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SERVERPROVIDER" ADD CONSTRAINT "CK_SERVERPROVIDER_PUBLIC" CHECK (public_flag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."SERVERPROVIDER" ADD CONSTRAINT "CK_SP_REPORT_FLAG" CHECK (report_flag in (0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."SERVERPROVIDER" ADD CONSTRAINT "PK_SERVERPROVIDER" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SERVERPROVIDER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SERVERPROVIDER" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SERVERPROVIDER" MODIFY ("PUBLIC_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SERVERPROVIDER" MODIFY ("REPORT_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SERVERPROVIDER" MODIFY ("SUBSYSTEM" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SERVERPROVIDER" ADD CONSTRAINT "UQ_SERVERPROVIDER" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ORDERSUMMARY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORDERSUMMARY" ADD CONSTRAINT "CHK_ORDERSUMMARY_RESULT" CHECK (Result in (0,1,2,3,4,5,6,7,8,9,10,41,42)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERSUMMARY" ADD CONSTRAINT "PK_ORDERSUMMARY" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERSUMMARY" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERSUMMARY" MODIFY ("VERSION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERSUMMARY" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERSUMMARY" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERSUMMARY" MODIFY ("RESULT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERSUMMARY" MODIFY ("LASTPHASECODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN2OOSPRODUCT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2OOSPRODUCT" ADD CONSTRAINT "PK_PLAN2OOSPRODUCT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPRODUCT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSPRODUCT" MODIFY ("PLAN2OOSPOSITION_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSPRODUCT" MODIFY ("QUANTITYUNDEFINED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSPRODUCT" MODIFY ("QUANTITY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSPRODUCT" MODIFY ("PRICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSPRODUCT" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSPRODUCT" MODIFY ("QUANTITYCURRENTYEAR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN3PURCHASEGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" ADD CONSTRAINT "CK_P3GOODS_QUANTITYUNDEFINED" CHECK (QuantityUndefined in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" ADD CONSTRAINT "CK_P3GOODS_STATUS" CHECK (Status in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" ADD CONSTRAINT "PK_P3GOODS" PRIMARY KEY ("PLAN3PURCHASEDOC_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" MODIFY ("PLAN3PURCHASEDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" MODIFY ("GROUPCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" MODIFY ("QUANTITYUNDEFINED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" MODIFY ("QTY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" MODIFY ("QTY_2YEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" MODIFY ("QTY_3YEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" MODIFY ("QTY_FUTURE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" MODIFY ("AMOUNT_2YEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" MODIFY ("AMOUNT_3YEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" MODIFY ("AMOUNT_FUTURE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" MODIFY ("STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OFRCRITERIONLINEVAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRCRITERIONLINEVAL" ADD CONSTRAINT "CK_OCLINEVAL_ISFINALFFER" CHECK (IsFinalOffer in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFRCRITERIONLINEVAL" ADD CONSTRAINT "PK_OFRCRITERIONLINEVAL" PRIMARY KEY ("OFFER_ID", "CMPCRITERIONPOS", "SEQORDER", "ISFINALOFFER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OFRCRITERIONLINEVAL" MODIFY ("OFFER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRCRITERIONLINEVAL" MODIFY ("CMPCRITERIONPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRCRITERIONLINEVAL" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRCRITERIONLINEVAL" MODIFY ("CAPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRCRITERIONLINEVAL" MODIFY ("ISFINALOFFER" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TYPEREQ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TYPEREQ" ADD CONSTRAINT "PK_TYPEREQ" PRIMARY KEY ("TYPEREQCRITID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."TYPEREQ" MODIFY ("TYPEREQCRITID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPEREQ" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPEREQ" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPEREQ" MODIFY ("PURCHASEMODE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPEREQ" MODIFY ("REQUIREMENTTYPE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TENDERCRITERIONCHILD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TENDERCRITERIONCHILD" ADD CONSTRAINT "PK_TENDERCRITERIONCHILD" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."TENDERCRITERIONCHILD" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERCRITERIONCHILD" MODIFY ("TENDERCRITERION_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERCRITERIONCHILD" MODIFY ("CHILD_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERCRITERIONCHILD" ADD CONSTRAINT "UQ_TENDERCRITERIONCHILD" UNIQUE ("TENDERCRITERION_ID", "CHILD_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CMPWORKGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPWORKGROUP" ADD CONSTRAINT "PK_CMPWORKGROUP" PRIMARY KEY ("ORDER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPWORKGROUP" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPWORKGROUP" MODIFY ("POS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OFRCRITERIONVAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRCRITERIONVAL" ADD CONSTRAINT "CHK_WEIGHT" CHECK (Weight > 0) ENABLE;
 
  ALTER TABLE "GZVLG"."OFRCRITERIONVAL" ADD CONSTRAINT "CK_OCV_ISFINALFFER" CHECK (IsFinalOffer in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFRCRITERIONVAL" ADD CONSTRAINT "CK_OFRCRITERIONVAL_CTYPE" CHECK (CType in (0,1,2,3,4,5,6,7,8,9,10,11,12)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFRCRITERIONVAL" ADD CONSTRAINT "PK_OFRCRITERIONVAL" PRIMARY KEY ("OFFER_ID", "CMPCRITERIONPOS", "ISFINALOFFER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OFRCRITERIONVAL" MODIFY ("OFFER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRCRITERIONVAL" MODIFY ("CMPCRITERIONPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRCRITERIONVAL" MODIFY ("ISFINALOFFER" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONTYPE" ADD CONSTRAINT "PK_CONTYPE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONTYPE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTYPE" MODIFY ("ISCONTRACT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTYPE" MODIFY ("CONTRACTTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AUCTIONLOG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."AUCTIONLOG" ADD CONSTRAINT "CK_AUCTIONLOG_STATE" CHECK (State in (0,1,2,3,4,5,6,11,12,13)) ENABLE;
 
  ALTER TABLE "GZVLG"."AUCTIONLOG" ADD CONSTRAINT "PK_AUCTIONLOG" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."AUCTIONLOG" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."AUCTIONLOG" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."AUCTIONLOG" MODIFY ("EVENTTIME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."AUCTIONLOG" MODIFY ("STATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table NUMGENERATOR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NUMGENERATOR" ADD CONSTRAINT "PK_NUMGENERATOR" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."NUMGENERATOR" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NUMGENERATOR" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NUMGENERATOR" MODIFY ("SUBSYSTEM" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NUMGENERATOR" ADD CONSTRAINT "UQ_NUMGENERATOR_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BANKGUARANTEEREFDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."BANKGUARANTEEREFDOC" ADD CONSTRAINT "PK_BANKGUARANTEEREFDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEREFDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEREFDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEREFDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEREFDOC" MODIFY ("OOSKEY" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SUPPORTCRYPTOLIBFORMAT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIBFORMAT" ADD CONSTRAINT "PK_SUPPORTCRYPTOLIBFORMAT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIBFORMAT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIBFORMAT" MODIFY ("SUPPORTCRYPTOLIB_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIBFORMAT" MODIFY ("SIGNFORMAT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIBFORMAT" ADD CONSTRAINT "UQ_SUPPORTCRYPTOLIBFORMAT" UNIQUE ("SUPPORTCRYPTOLIB_ID", "SIGNFORMAT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table GOODSOKVED
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSOKVED" ADD CONSTRAINT "CK_GOODSOKVED_CLASSIFIER" CHECK (classifier in (1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSOKVED" ADD CONSTRAINT "PK_GOODSOKVED" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSOKVED" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKVED" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKVED" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKVED" MODIFY ("ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKVED" MODIFY ("CHAPTER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKVED" MODIFY ("UNUSABLE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKVED" MODIFY ("CLASSIFIER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKVED" ADD CONSTRAINT "UQ_GOODSOKVED_CODE" UNIQUE ("CODE", "CLASSIFIER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DOCRETENTIONSTATITEMS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCRETENTIONSTATITEMS" ADD CONSTRAINT "PK_DOCRETSTATITEMS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCRETENTIONSTATITEMS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCRETENTIONSTATITEMS" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCRETENTIONSTATITEMS" MODIFY ("DOCRETENTION_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCRETENTIONSTATITEMS" ADD CONSTRAINT "UQ_DOCRESTATITMS" UNIQUE ("DOCUMENT_ID", "DOCRETENTION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CERTREQUEST
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CERTREQUEST" ADD CONSTRAINT "CK_CERTREQUEST_STATUS_OWNER" CHECK (STATUS_OWNER in(0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."CERTREQUEST" ADD CONSTRAINT "PK_CERTREQ" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CERTREQUEST" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERTREQUEST" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERTREQUEST" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERTREQUEST" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERTREQUEST" MODIFY ("STATUS_OWNER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERTREQUEST" MODIFY ("EXPORTABLE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERTREQUEST" ADD CHECK (USER_EMAIL <> '') ENABLE;
 
  ALTER TABLE "GZVLG"."CERTREQUEST" ADD CHECK (USER_FIO <> '') ENABLE;
 
  ALTER TABLE "GZVLG"."CERTREQUEST" ADD CHECK (USER_ORG <> '') ENABLE;
 
  ALTER TABLE "GZVLG"."CERTREQUEST" ADD CHECK (STATE <> '') ENABLE;
 
  ALTER TABLE "GZVLG"."CERTREQUEST" ADD CHECK (CITY <> '') ENABLE;
 
  ALTER TABLE "GZVLG"."CERTREQUEST" ADD CHECK (COUNTRY <> '') ENABLE;
--------------------------------------------------------
--  Constraints for Table FCTGOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FCTGOODSPROP" ADD CONSTRAINT "PK_FCTGOODSPROP" PRIMARY KEY ("FACT_ID", "GOODSPOS", "SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FCTGOODSPROP" MODIFY ("FACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FCTGOODSPROP" MODIFY ("GOODSPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FCTGOODSPROP" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FCTGOODSPROP" MODIFY ("PROPTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FCTGOODSPROP" MODIFY ("CAPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GOODSOKDPCOUNTRYPREF
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSOKDPCOUNTRYPREF" ADD CONSTRAINT "PK_GOODSOKDPPREFCOUNTRY" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSOKDPCOUNTRYPREF" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKDPCOUNTRYPREF" MODIFY ("COUNTRY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKDPCOUNTRYPREF" MODIFY ("GOODSOKDP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORGACCOUNT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGACCOUNT" ADD CONSTRAINT "CK_ORGACCOUNT_BUDGET" CHECK (budget_flag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORGACCOUNT" ADD CONSTRAINT "CK_ORGACCOUNT_DISTRIBUTIVE" CHECK (distributive_flag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORGACCOUNT" ADD CONSTRAINT "CK_ORGACCOUNT_ISCONTRACTOR" CHECK (IsContractor in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORGACCOUNT" ADD CONSTRAINT "CK_ORGACCOUNT_OOSFLAG" CHECK (OosFlag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORGACCOUNT" ADD CONSTRAINT "PK_ORGACCOUNT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGACCOUNT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGACCOUNT" MODIFY ("ORGACCTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGACCOUNT" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGACCOUNT" MODIFY ("BUDGET_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGACCOUNT" MODIFY ("ACCOUNT_NUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGACCOUNT" MODIFY ("DISTRIBUTIVE_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGACCOUNT" MODIFY ("OOSFLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGACCOUNT" MODIFY ("ISCONTRACTOR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CMPPHASE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPPHASE" ADD CONSTRAINT "CK_CMPPHASE_PROTOCOLPUB" CHECK ((Oos_ProtocolPublished in (0,1))) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPPHASE" ADD CONSTRAINT "PK_CMPPHASE" PRIMARY KEY ("ORDER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPPHASE" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPPHASE" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPPHASE" MODIFY ("OOS_PROTOCOLPUBLISHED" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN3PURCHASELINESHEDULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN3PURCHASELINESHEDULE" ADD CONSTRAINT "PK_P3SHED" PRIMARY KEY ("PLAN3PURCHASEDOC_ID", "PLAN3PURCHASELINEPOS", "FINYEAR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASELINESHEDULE" MODIFY ("PLAN3PURCHASEDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASELINESHEDULE" MODIFY ("PLAN3PURCHASELINEPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASELINESHEDULE" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PURCHASEMODE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PURCHASEMODE" ADD CONSTRAINT "CK_PURCHASEMODE_ISACTUAL" CHECK (IsActual IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEMODE" ADD CONSTRAINT "CK_PURCHASEMODE_ISPRIOR" CHECK (IsPrior in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEMODE" ADD CONSTRAINT "CK_PURCHASEMODE_ISPUBLIC" CHECK (IsPublic in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEMODE" ADD CONSTRAINT "CK_PURCHASEMODE_KIND" CHECK (Kind in (0,1,2,3,4,5)) ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEMODE" ADD CONSTRAINT "PK_PURCHASEMODE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEMODE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEMODE" MODIFY ("ISPUBLIC" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEMODE" MODIFY ("ISACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEMODE" MODIFY ("KIND" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEMODE" MODIFY ("ISPRIOR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RECOILLINES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RECOILLINES" ADD CONSTRAINT "CHK_RECOILLINES_ISENTERPRISE" CHECK (IsEnterprise in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILLINES" ADD CONSTRAINT "PK_RECOILLINES" PRIMARY KEY ("RECOILDOC_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILLINES" MODIFY ("RECOILDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RECOILLINES" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RECOILLINES" MODIFY ("GROUPCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RECOILLINES" MODIFY ("ISENTERPRISE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RECOILLINES" MODIFY ("RESERVEDAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RECOILLINES" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODS" ADD CONSTRAINT "PK_GOODS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GOODS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODS" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODS" MODIFY ("GROUP_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODS" MODIFY ("IS_ACTUAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONFCONCLUSIONCONTRACT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONFCONCLUSIONCONTRACT" ADD CONSTRAINT "CK_CCCONTRACT_ACTUAL" CHECK (actual in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONFCONCLUSIONCONTRACT" ADD CONSTRAINT "PK_CONFCONCCONTRACT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONFCONCLUSIONCONTRACT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONFCONCLUSIONCONTRACT" MODIFY ("ACTUAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CMPCRITERIONLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPCRITERIONLINE" ADD CONSTRAINT "PK_CMPCRITERIONLINE" PRIMARY KEY ("ORDER_ID", "CMPCRITERIONPOS", "SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCRITERIONLINE" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCRITERIONLINE" MODIFY ("CMPCRITERIONPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCRITERIONLINE" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCRITERIONLINE" MODIFY ("CAPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CMPPERSONAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPPERSONAL" ADD CONSTRAINT "PK_CMPPERSONAL" PRIMARY KEY ("ORDER_ID", "PERSONAL_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPPERSONAL" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPPERSONAL" MODIFY ("PERSONAL_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPPERSONAL" MODIFY ("LASTNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLGOODS" ADD CONSTRAINT "PK_PLGOODS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLGOODS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLGOODS" MODIFY ("PRICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLGOODS" MODIFY ("MAXQUANTITY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLGOODS" MODIFY ("UNIT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLGOODS" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLGOODS" MODIFY ("GROUPCODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ESTIMATE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ESTIMATE" ADD CONSTRAINT "PK_ESTIMATE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ESTIMATE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ESTIMATE" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ESTIMATE" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ESTIMATE" MODIFY ("CAPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ESTIMATE" MODIFY ("FINYEAR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORGETP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGETP" ADD CONSTRAINT "CK_ORGETP_STATUS" CHECK (Status in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORGETP" ADD CONSTRAINT "PK_ORGETP" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGETP" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGETP" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGETP" MODIFY ("ETP_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGETP" MODIFY ("STATUS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGETP" ADD CONSTRAINT "UQ_ORGETP" UNIQUE ("ORG_ID", "ETP_ID", "ORGROLE_ID", "SYSUSER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DOCUMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCUMENT" ADD CONSTRAINT "PK_DOCUMENT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCUMENT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCUMENT" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCUMENT" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCUMENT" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCUMENT" MODIFY ("CREATE_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCUMENT" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCUMENT" MODIFY ("ATTACH_CNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCUMENT" MODIFY ("SIGN_CNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OOSORGANIZATIONROLE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSORGANIZATIONROLE" ADD CONSTRAINT "PK_OOSORGANIZATIONROLE" PRIMARY KEY ("REGNUMBER", "ORGROLE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OOSORGANIZATIONROLE" MODIFY ("REGNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSORGANIZATIONROLE" MODIFY ("ORGROLE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GOODSOKPD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSOKPD" ADD CONSTRAINT "CK_GOODSOKPD_CLASSIFIER" CHECK (classifier in (1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSOKPD" ADD CONSTRAINT "PK_GOODSOKPD" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSOKPD" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKPD" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKPD" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKPD" MODIFY ("ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKPD" MODIFY ("CHAPTER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKPD" MODIFY ("UNUSABLE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKPD" MODIFY ("UUISPREFERENCE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKPD" MODIFY ("INVALIDPREFERENCE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKPD" MODIFY ("ONEVENDORUUIS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKPD" MODIFY ("CLASSIFIER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKPD" ADD CONSTRAINT "UQ_GOODSOKPD_CODE" UNIQUE ("CODE", "CLASSIFIER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CEEXECUTIONLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CEEXECUTIONLINE" ADD CONSTRAINT "CK_CEEXECUTIONLINE_TYPE" CHECK (type in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CEEXECUTIONLINE" ADD CONSTRAINT "PK_CEEXECUTIONLINE" PRIMARY KEY ("CONTRACTEXECDOC_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CEEXECUTIONLINE" MODIFY ("CONTRACTEXECDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CEEXECUTIONLINE" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CEEXECUTIONLINE" MODIFY ("TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CEEXECUTIONLINE" MODIFY ("PAIDAMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table LEDGER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "CHK_LEDGER_ISENTERPRISE_YN" CHECK (IsEnterprise is null or IsEnterprise in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "CHK_LEDGER_ISSMALL_YN" CHECK (IsSmall in (0, 1, 2)) ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "PK_LEDGER" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LEDGER" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LEDGER" MODIFY ("GROUP_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LEDGER" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LEDGER" MODIFY ("ISSMALL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LEDGER" MODIFY ("DOCYEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LEDGER" MODIFY ("PLAN_Q1" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LEDGER" MODIFY ("PLAN_Q2" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LEDGER" MODIFY ("PLAN_Q3" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LEDGER" MODIFY ("PLAN_Q4" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LEDGER" MODIFY ("FACT_Q1" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LEDGER" MODIFY ("FACT_Q2" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LEDGER" MODIFY ("FACT_Q3" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LEDGER" MODIFY ("FACT_Q4" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CHECK (Fact_Q4 >= 0) ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CHECK (Fact_Q3 >= 0) ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CHECK (Fact_Q2 >= 0) ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CHECK (Fact_Q1 >= 0) ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CHECK (Plan_Q4 >= 0) ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CHECK (Plan_Q3 >= 0) ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CHECK (Plan_Q2 >= 0) ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CHECK (Plan_Q1 >= 0) ENABLE;
--------------------------------------------------------
--  Constraints for Table RPLSITE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPLSITE" ADD CONSTRAINT "PK_RPLSITE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RPLSITE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLSITE" MODIFY ("MASTER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLSITE" MODIFY ("CLIENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLSITE" MODIFY ("RPLRULE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLSITE" ADD CONSTRAINT "UQ_RPLSITE_MASTER_ID_CLIENT_ID" UNIQUE ("MASTER_ID", "CLIENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ETP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ETP" ADD CONSTRAINT "PK_ETP" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ETP" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ETP" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ETP" ADD CONSTRAINT "UQ_ETP_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RQSUPPLYSHEDULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQSUPPLYSHEDULE" ADD CONSTRAINT "PK_RQSUPPLYSHEDULE" PRIMARY KEY ("REQUEST_ID", "GOODSPOS", "BUDGETLINEPOS", "SUPPLYDATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RQSUPPLYSHEDULE" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQSUPPLYSHEDULE" MODIFY ("BUDGETLINEPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQSUPPLYSHEDULE" MODIFY ("GOODSPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQSUPPLYSHEDULE" MODIFY ("SUPPLYDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQSUPPLYSHEDULE" MODIFY ("QTY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQSUPPLYSHEDULE" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CLAIMPAYFACT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CLAIMPAYFACT" ADD CONSTRAINT "CK_CLAIMPAYFACT_DOCTYPE" CHECK (DocType in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CLAIMPAYFACT" ADD CONSTRAINT "PK_CLAIMPAYFACT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CLAIMPAYFACT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMPAYFACT" MODIFY ("CLAIM_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMPAYFACT" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMPAYFACT" MODIFY ("NUM" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMPAYFACT" MODIFY ("CAPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMPAYFACT" MODIFY ("DOCDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMPAYFACT" MODIFY ("DOCTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MENUITEM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MENUITEM" ADD CONSTRAINT "PK_MENUITEM" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."MENUITEM" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MENUITEM" MODIFY ("MENU_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MENUITEM" MODIFY ("SHOW_ORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MENUITEM" MODIFY ("SUBSYSTEM" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SYSUSEREXT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SYSUSEREXT" ADD CONSTRAINT "PK_SYSUSEREXT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SYSUSEREXT" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DISPSTATUS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DISPSTATUS" ADD CONSTRAINT "PK_DISPSTATUS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DISPSTATUS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DISPSTATUS" MODIFY ("SUBSYSTEM" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLACEMENTFEATUREPM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLACEMENTFEATUREPM" ADD CONSTRAINT "PK_PLACEMENTFEATUREPM" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLACEMENTFEATUREPM" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLACEMENTFEATUREPM" MODIFY ("PLACEMENTFEATURE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLACEMENTFEATUREPM" MODIFY ("PURCHASEMODE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN2OOSEXTNUMBER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2OOSEXTNUMBER" ADD CONSTRAINT "PK_PLAN2OOSEXTNUMBER" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSEXTNUMBER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSEXTNUMBER" MODIFY ("YEARPLANOWNER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSEXTNUMBER" ADD CONSTRAINT "UQ_PLAN2OOSEXTNUMBER" UNIQUE ("YEARPLANOWNER", "PLANPOSITIONNUMBER", "POSITIONNUMBER", "EXTNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DOCCUSTOMFIELDS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCCUSTOMFIELDS" ADD CONSTRAINT "CK_DOCCUSTOMFIELDS_REQ" CHECK (required in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."DOCCUSTOMFIELDS" ADD CONSTRAINT "PK_DOCCUSTOMFIELDS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCCUSTOMFIELDS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCUSTOMFIELDS" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCUSTOMFIELDS" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCUSTOMFIELDS" MODIFY ("CAPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCUSTOMFIELDS" MODIFY ("FIELDTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCUSTOMFIELDS" MODIFY ("REQUIRED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCUSTOMFIELDS" MODIFY ("FIELDPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCUSTOMFIELDS" ADD CONSTRAINT "UQ_DOCCUSTOMFIELDS" UNIQUE ("DOCUMENTCLASS_ID", "NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ESCRROLE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ESCRROLE" ADD CONSTRAINT "PK_ESCRROLE" PRIMARY KEY ("ESCHECKRULE_ID", "USERROLE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ESCRROLE" MODIFY ("ESCHECKRULE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ESCRROLE" MODIFY ("USERROLE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REQUESTORDER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REQUESTORDER" ADD CONSTRAINT "PK_REQUESTORDER" PRIMARY KEY ("ORDER_ID", "DOC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTORDER" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTORDER" MODIFY ("DOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTORDER" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table COMMISSION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."COMMISSION" ADD CONSTRAINT "CK_COMMISSION_COMTYPE" CHECK (comType in (0,1,2,3,4,5)) ENABLE;
 
  ALTER TABLE "GZVLG"."COMMISSION" ADD CONSTRAINT "CK_COMMISSION_ISACTUAL" CHECK (isActual in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."COMMISSION" ADD CONSTRAINT "PK_COMMISSION" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."COMMISSION" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."COMMISSION" MODIFY ("CAPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."COMMISSION" MODIFY ("COMTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."COMMISSION" MODIFY ("ISACTUAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ROLECLASS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLECLASS" ADD CONSTRAINT "CK_ROLECLASS_ACCESS" CHECK (access_mode in (0,1,2,3)) ENABLE;
 
  ALTER TABLE "GZVLG"."ROLECLASS" ADD CONSTRAINT "PK_ROLECLASS" PRIMARY KEY ("USERROLE_ID", "DOCUMENTCLASS_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ROLECLASS" MODIFY ("USERROLE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLECLASS" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLECLASS" MODIFY ("ACCESS_MODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FUNCUNIT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FUNCUNIT" ADD CONSTRAINT "PK_FUNCUNIT" PRIMARY KEY ("FUNUNIT_ID", "FUNUNIT_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FUNCUNIT" MODIFY ("FUNUNIT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FUNCUNIT" MODIFY ("FUNUNIT_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FUNCUNIT" MODIFY ("ACCESS_MODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RPLTABLE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPLTABLE" ADD CONSTRAINT "CK_RPLTABLE_GENGRP" CHECK (generation_group in (0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."RPLTABLE" ADD CONSTRAINT "PK_RPLTABLE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RPLTABLE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLTABLE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLTABLE" MODIFY ("ISPLUGIN" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLTABLE" MODIFY ("GENERATION_GROUP" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLTABLE" ADD CONSTRAINT "UQ_RPLTABLE_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table GOODSBANGOODSOKPD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSBANGOODSOKPD" ADD CONSTRAINT "PK_GBGO" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSBANGOODSOKPD" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSPROP" ADD CONSTRAINT "CK_GOODSPROP_PROPTYPE" CHECK (propType in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSPROP" ADD CONSTRAINT "PK_GOODSPROP" PRIMARY KEY ("GOODS_ID", "SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSPROP" MODIFY ("GOODS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSPROP" MODIFY ("GROUP_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSPROP" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSPROP" MODIFY ("PROPTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CMPPLACE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPPLACE" ADD CONSTRAINT "CK_CMPPLACE_CALCPRICE" CHECK (calcprice in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPPLACE" ADD CONSTRAINT "CK_CMPPLACE_USEAMOUNT" CHECK (useamount in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPPLACE" ADD CONSTRAINT "PK_CMPPLACE" PRIMARY KEY ("ORDER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPPLACE" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPPLACE" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPPLACE" MODIFY ("COUNTRY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPPLACE" MODIFY ("TERRITORYCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPPLACE" MODIFY ("SUPPLYAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPPLACE" MODIFY ("USEAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPPLACE" MODIFY ("CALCPRICE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCCUSTOMFIELDVALUES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCCUSTOMFIELDVALUES" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCUSTOMFIELDVALUES" MODIFY ("CUSTFIELD_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCUSTOMFIELDVALUES" ADD CONSTRAINT "UQ_DOCCUSTOMFIELDVALUES" UNIQUE ("DOCUMENT_ID", "CUSTFIELD_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table REFDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REFDOC" ADD CONSTRAINT "PK_REFDOC" PRIMARY KEY ("DOCUMENT_ID", "REF_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REFDOC" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REFDOC" MODIFY ("REF_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table USESCRYPTOLIBPARAM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."USESCRYPTOLIBPARAM" ADD CONSTRAINT "PK_USESCRYPTOLIBPARAM" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."USESCRYPTOLIBPARAM" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USESCRYPTOLIBPARAM" MODIFY ("USESCRYPTOLIB_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USESCRYPTOLIBPARAM" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USESCRYPTOLIBPARAM" MODIFY ("VAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USESCRYPTOLIBPARAM" ADD CONSTRAINT "UQ_USESCRYPTOLIBPARAM" UNIQUE ("USESCRYPTOLIB_ID", "NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table OOSCONTRACTSUPPLIER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSCONTRACTSUPPLIER" ADD CONSTRAINT "PK_OOSCONTRACTSUPPLIER" PRIMARY KEY ("CONTRACT_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OOSCONTRACTSUPPLIER" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSCONTRACTSUPPLIER" MODIFY ("POS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RECOILDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RECOILDOC" ADD CONSTRAINT "CHK_RECOILDOC_ISSMALL" CHECK (IsSmall in (0, 1, 2)) ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILDOC" ADD CONSTRAINT "PK_RECOILDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RECOILDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RECOILDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RECOILDOC" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RECOILDOC" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RECOILDOC" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RECOILDOC" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RECOILDOC" MODIFY ("NECESSITY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RECOILDOC" MODIFY ("ISSMALL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PURCHASEPLANDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PURCHASEPLANDOC" ADD CONSTRAINT "FK_PURCHPLANDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEPLANDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLANDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLANDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLANDOC" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLANDOC" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLANDOC" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLANDOC" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLANDOC" MODIFY ("PLANYEAR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FUNUNIT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FUNUNIT" ADD CONSTRAINT "PK_FUNUNIT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FUNUNIT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FUNUNIT" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FUNUNIT" MODIFY ("FUNCAT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FUNUNIT" ADD CONSTRAINT "UQ_FUNUNIT_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table COUNTRY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."COUNTRY" ADD CONSTRAINT "PK_COUNTRY" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."COUNTRY" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORGSELSTATUS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGSELSTATUS" ADD CONSTRAINT "PK_ORGSELSTATUS" PRIMARY KEY ("ORG_ID", "ORGSTATUS_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGSELSTATUS" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGSELSTATUS" MODIFY ("ORGSTATUS_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TYPECRITLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TYPECRITLINE" ADD CONSTRAINT "PK_TYPECRITLINE" PRIMARY KEY ("TYPEREQCRIT_ID", "TYPECRITPOS", "SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."TYPECRITLINE" MODIFY ("TYPEREQCRIT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPECRITLINE" MODIFY ("TYPECRITPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPECRITLINE" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPECRITLINE" MODIFY ("CAPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCUMENTBLOCKINFO
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCUMENTBLOCKINFO" ADD CONSTRAINT "PK_DOCUMENTBLOCKINFO" PRIMARY KEY ("DOCUMENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCUMENTBLOCKINFO" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCUMENTBLOCKINFO" MODIFY ("SYSUSER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RESERVEDBUDGETLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RESERVEDBUDGETLINE" ADD CONSTRAINT "PK_RESERVEDLINE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RESERVEDBUDGETLINE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RESERVEDBUDGETLINE" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RESERVEDBUDGETLINE" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RESERVEDBUDGETLINE" MODIFY ("RECIPIENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RESERVEDBUDGETLINE" MODIFY ("RESERVED_AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RESERVEDBUDGETLINE" MODIFY ("EXPENDED_AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RESERVEDBUDGETLINE" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RESERVEDBUDGETLINE" MODIFY ("RELEASED_AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table USESCRYPTOLIB
--------------------------------------------------------

  ALTER TABLE "GZVLG"."USESCRYPTOLIB" ADD CONSTRAINT "CK_USESCRYPTOLIB_REQUESTER" CHECK (RequesterType in (0,1,2,3)) ENABLE;
 
  ALTER TABLE "GZVLG"."USESCRYPTOLIB" ADD CONSTRAINT "PK_USESCRYPTOLIB" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."USESCRYPTOLIB" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USESCRYPTOLIB" MODIFY ("SUPPORTCRYPTOLIB_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USESCRYPTOLIB" MODIFY ("REQUESTERTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OIDREF
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OIDREF" ADD CONSTRAINT "PK_OIDREF" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OIDREF" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OIDREF" MODIFY ("OID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OIDREF" ADD CONSTRAINT "UQ_OIDREF_OID" UNIQUE ("OID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table FACTDOCTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FACTDOCTYPE" ADD CONSTRAINT "CK_FACTDOCTYPE_DOCTYPE" CHECK (docType in (0, 1, 2, 3)) ENABLE;
 
  ALTER TABLE "GZVLG"."FACTDOCTYPE" ADD CONSTRAINT "PK_FACTDOCTYPE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FACTDOCTYPE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FACTDOCTYPE" ADD CONSTRAINT "UQ_FACTDOCTYPE_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SYSTEMSITE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SYSTEMSITE" ADD CONSTRAINT "CK_SYSTEMSITE_TYPE" CHECK (SiteType in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."SYSTEMSITE" MODIFY ("SITE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSTEMSITE" MODIFY ("SUBSYSTEM" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSTEMSITE" MODIFY ("SITETYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSTEMSITE" MODIFY ("LAST_GENERATION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RPLOBJECT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPLOBJECT" ADD CONSTRAINT "PK_RPLOBJECT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RPLOBJECT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLOBJECT" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLOBJECT" MODIFY ("CLASSNAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLOBJECT" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLOBJECT" ADD CONSTRAINT "UQ_RPLOBJECT_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RPLOBJECT" ADD CONSTRAINT "UQ_RPLOBJECT_SEQORDER" UNIQUE ("SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CONPRODUCTSCHANGEDOCS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONPRODUCTSCHANGEDOCS" ADD CONSTRAINT "PK_CONPRODUCTSCHANGEDOCS" PRIMARY KEY ("CONTRACT_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONPRODUCTSCHANGEDOCS" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONPRODUCTSCHANGEDOCS" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONPRODUCTSCHANGEDOCS" MODIFY ("DOCDATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FGROUPHEADER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FGROUPHEADER" ADD CONSTRAINT "CK_FGROUPHEADER_TYPE" CHECK (group_type IN (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."FGROUPHEADER" ADD CONSTRAINT "PK_FGROUPHEADER" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FGROUPHEADER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FGROUPHEADER" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FGROUPHEADER" MODIFY ("CAPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FGROUPHEADER" MODIFY ("GROUP_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FGROUPHEADER" MODIFY ("SUBSYSTEM" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FGROUPHEADER" ADD CONSTRAINT "UQ_FGROUPHEADER_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DELIVERYBASIS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DELIVERYBASIS" ADD CONSTRAINT "CK_DELIVERYBASIS_SYSTEM_FLAG" CHECK (System_Flag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."DELIVERYBASIS" ADD CONSTRAINT "PK_DELIVERYBASIS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DELIVERYBASIS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DELIVERYBASIS" MODIFY ("SYSTEM_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DELIVERYBASIS" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DELIVERYBASIS" ADD CONSTRAINT "UQ_DELIVERYBASIS_CODE" UNIQUE ("CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RQPAYSHEDULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQPAYSHEDULE" ADD CONSTRAINT "PK_RQPAYSHEDULE" PRIMARY KEY ("REQUEST_ID", "BUDGETLINEPOS", "PAYDATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RQPAYSHEDULE" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQPAYSHEDULE" MODIFY ("BUDGETLINEPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQPAYSHEDULE" MODIFY ("PAYDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQPAYSHEDULE" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCWEBLINK
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCWEBLINK" ADD CONSTRAINT "PK_DOCWEBLINK" PRIMARY KEY ("DOCUMENT_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCWEBLINK" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCWEBLINK" MODIFY ("POS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FUNCOBJECT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FUNCOBJECT" ADD CONSTRAINT "PK_FUNCOBJECT" PRIMARY KEY ("FUNUNIT_ID", "CLIENTOBJECT_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FUNCOBJECT" MODIFY ("FUNUNIT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FUNCOBJECT" MODIFY ("CLIENTOBJECT_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GOODSOKPDCOUNTRYPREF
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSOKPDCOUNTRYPREF" ADD CONSTRAINT "PK_GOODSOKPDPREFCOUNTRY" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSOKPDCOUNTRYPREF" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKPDCOUNTRYPREF" MODIFY ("COUNTRY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKPDCOUNTRYPREF" MODIFY ("GOODSOKPD_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table LIABILITYGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."LIABILITYGROUP" ADD CONSTRAINT "PK_LIABILITYGROUP" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."LIABILITYGROUP" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LIABILITYGROUP" MODIFY ("CAPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table USERCERTSYSUSER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."USERCERTSYSUSER" MODIFY ("SYSUSER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERCERTSYSUSER" MODIFY ("USERCERT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERCERTSYSUSER" ADD CONSTRAINT "UQ_USSU" UNIQUE ("SYSUSER_ID", "USERCERT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CMPREPDOCUMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPREPDOCUMENT" ADD CONSTRAINT "PK_CMPREPDOCUMENT" PRIMARY KEY ("ORDER_ID", "REPDOCUMENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPREPDOCUMENT" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPREPDOCUMENT" MODIFY ("REPDOCUMENT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table HISTORYMODIFY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."HISTORYMODIFY" ADD CONSTRAINT "PK_HISTORYMODIFY" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."HISTORYMODIFY" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."HISTORYMODIFY" MODIFY ("OBJ_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."HISTORYMODIFY" MODIFY ("SYSUSER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table COMMEMBER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."COMMEMBER" ADD CONSTRAINT "CK_COMMEMBER_COMROLE" CHECK (comRole in (0,1,2,3,4)) ENABLE;
 
  ALTER TABLE "GZVLG"."COMMEMBER" ADD CONSTRAINT "CK_COMMEMBER_ISACTSECR" CHECK (ISACTINGFORSECRETARY IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."COMMEMBER" ADD CONSTRAINT "PK_COMMEMBER" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."COMMEMBER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."COMMEMBER" MODIFY ("COMMISSION_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."COMMEMBER" MODIFY ("ISACTINGFORSECRETARY" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CMPSUPPLYSHEDULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPSUPPLYSHEDULE" ADD CONSTRAINT "PK_CMPSUPPLYSHEDULE" PRIMARY KEY ("ORDER_ID", "GOODSPOS", "PLACEPOS", "SUPPLYDATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPSUPPLYSHEDULE" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPSUPPLYSHEDULE" MODIFY ("GOODSPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPSUPPLYSHEDULE" MODIFY ("PLACEPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPSUPPLYSHEDULE" MODIFY ("SUPPLYDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPSUPPLYSHEDULE" MODIFY ("QTY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPSUPPLYSHEDULE" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ROLERIGHT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLERIGHT" ADD CONSTRAINT "PK_ROLERIGHT" PRIMARY KEY ("USERROLE_ID", "SYSRIGHT_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ROLERIGHT" MODIFY ("USERROLE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLERIGHT" MODIFY ("SYSRIGHT_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CETERMINATIONLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CETERMINATIONLINE" ADD CONSTRAINT "PK_CETERMINATIONLINE" PRIMARY KEY ("CONTRACTEXECDOC_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CETERMINATIONLINE" MODIFY ("CONTRACTEXECDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CETERMINATIONLINE" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CETERMINATIONLINE" MODIFY ("PAIDAMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RQGOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQGOODSPROP" ADD CONSTRAINT "PK_RQGOODSPROP" PRIMARY KEY ("REQUEST_ID", "GOODSPOS", "SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RQGOODSPROP" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQGOODSPROP" MODIFY ("GOODSPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQGOODSPROP" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQGOODSPROP" MODIFY ("PROPTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQGOODSPROP" MODIFY ("CAPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCFLAGCATEGORY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCFLAGCATEGORY" ADD CONSTRAINT "PK_DOCFLAGCATEGORY" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCFLAGCATEGORY" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SYSRIGHT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SYSRIGHT" ADD CONSTRAINT "PK_SYSRIGHT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SYSRIGHT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSRIGHT" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSRIGHT" ADD CONSTRAINT "UQ_SYSRIGHT_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MENU
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MENU" ADD CONSTRAINT "PK_MENU" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."MENU" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MENU" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MENU" ADD CONSTRAINT "UQ_MENU_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TASKJOURNAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TASKJOURNAL" ADD CONSTRAINT "PK_TASKJOURNAL" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."TASKJOURNAL" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FUNCREFERENCE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FUNCREFERENCE" ADD CONSTRAINT "PK_FUNCREFERENCE" PRIMARY KEY ("FUNUNIT_ID", "REF_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FUNCREFERENCE" MODIFY ("FUNUNIT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FUNCREFERENCE" MODIFY ("REF_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FUNCREFERENCE" MODIFY ("ACCESS_MODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GOODSOKDP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSOKDP" ADD CONSTRAINT "PK_GOODSOKDP" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSOKDP" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKDP" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKDP" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKDP" MODIFY ("ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKDP" MODIFY ("CHAPTER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKDP" MODIFY ("UNUSABLE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKDP" MODIFY ("ENTERPRISE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKDP" MODIFY ("UUISPREFERENCE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKDP" MODIFY ("INVALIDPREFERENCE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKDP" ADD CONSTRAINT "UQ_GOODSOKDP_CODE" UNIQUE ("CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table REFERENCECLASS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REFERENCECLASS" ADD CONSTRAINT "PK_REFERENCECLASS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REFERENCECLASS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REFERENCECLASS" MODIFY ("SUBSYSTEM" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REFERENCECLASS" ADD CONSTRAINT "UQ_REFCLASS" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ORGPERSONAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGPERSONAL" ADD CONSTRAINT "PK_ORGPERSONAL" PRIMARY KEY ("ORG_ID", "PERSONAL_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGPERSONAL" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGPERSONAL" MODIFY ("PERSONAL_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FUNCDOCUMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FUNCDOCUMENT" ADD CONSTRAINT "PK_FUNCDOCUMENT" PRIMARY KEY ("FUNUNIT_ID", "DOCUMENTCLASS_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FUNCDOCUMENT" MODIFY ("FUNUNIT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FUNCDOCUMENT" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CERTINTERCHANGEREQUEST
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CERTINTERCHANGEREQUEST" ADD CONSTRAINT "PK_CERTICREQ" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CERTINTERCHANGEREQUEST" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERTINTERCHANGEREQUEST" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERTINTERCHANGEREQUEST" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERTINTERCHANGEREQUEST" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERTINTERCHANGEREQUEST" MODIFY ("USERCERT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERTINTERCHANGEREQUEST" MODIFY ("EXPORTABLE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OFRDOCREQVAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRDOCREQVAL" ADD CONSTRAINT "CHK_OFRDOCREQVAL_ISREQUIRED" CHECK (isRequired in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFRDOCREQVAL" ADD CONSTRAINT "CK_OFRDOCREQVAL_TYPE" CHECK (Type in (0,1,2,3,4,5,6,7,8,9,10,11)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFRDOCREQVAL" ADD CONSTRAINT "CK_OFRDOCREQVAL_VAL" CHECK (val in (-1,0,1,null)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFRDOCREQVAL" ADD CONSTRAINT "CK_OFRDOCREQVAL_VENDOR_TYPE" CHECK (vendor_type in (0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFRDOCREQVAL" ADD CONSTRAINT "PK_OFRDOCREQVAL" PRIMARY KEY ("OFFER_ID", "CMPDOCREQPOS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OFRDOCREQVAL" MODIFY ("OFFER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRDOCREQVAL" MODIFY ("CMPDOCREQPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRDOCREQVAL" MODIFY ("DESCRIPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRDOCREQVAL" MODIFY ("VENDOR_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRDOCREQVAL" MODIFY ("ISREQUIRED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRDOCREQVAL" MODIFY ("TYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GOODSPRICE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSPRICE" ADD CONSTRAINT "PK_GOODSPRICE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSPRICE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSPRICE" MODIFY ("GOODS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSPRICE" MODIFY ("DT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSPRICE" MODIFY ("PRICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSPRICE" ADD CONSTRAINT "UQ_GOODSPRICE" UNIQUE ("GOODS_ID", "DT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table REFINANCINGRATE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REFINANCINGRATE" ADD CONSTRAINT "PK_REFINANCINGRATE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REFINANCINGRATE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REFINANCINGRATE" MODIFY ("START_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REFINANCINGRATE" MODIFY ("RATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REFINANCINGRATE" ADD CONSTRAINT "UQ_REFINANCINGRATE" UNIQUE ("START_DATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RPLRULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPLRULE" ADD CONSTRAINT "PK_RPLRULE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RPLRULE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLRULE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLRULE" ADD CONSTRAINT "UQ_RPLRULE_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DESCGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DESCGROUP" ADD CONSTRAINT "PK_DESCGROUP" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DESCGROUP" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DESCGROUP" MODIFY ("CAPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DESCGROUP" ADD CONSTRAINT "UQ_DESCGROUP" UNIQUE ("CAPTION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MSG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MSG" ADD CONSTRAINT "CK_MSG_DISPSTATUS" CHECK (dispstatus in(0,1,2,3)) ENABLE;
 
  ALTER TABLE "GZVLG"."MSG" ADD CONSTRAINT "CK_MSG_RESET" CHECK (reset_queue in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."MSG" ADD CONSTRAINT "PK_MSG" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."MSG" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSG" MODIFY ("SENDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSG" MODIFY ("RECEIVER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSG" MODIFY ("SEQ_NUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSG" MODIFY ("QUEUE_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSG" MODIFY ("RESET_QUEUE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSG" MODIFY ("DISPSTATUS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSG" MODIFY ("PROCESS_PRIORITY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSG" MODIFY ("SYSUSER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSG" ADD CONSTRAINT "UQ_MSG" UNIQUE ("SENDER_ID", "RECEIVER_ID", "QUEUE_NAME", "SEQ_NUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DOCREQ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCREQ" ADD CONSTRAINT "CHK_DOCREQ_ISREQUIRED" CHECK (isRequired in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."DOCREQ" ADD CONSTRAINT "CHK_DOCREQ_VENDOR_TYPE" CHECK (vendor_type in (0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."DOCREQ" ADD CONSTRAINT "PK_DOCREQ" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCREQ" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCREQ" MODIFY ("VENDOR_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCREQ" MODIFY ("ISREQUIRED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCREQ" MODIFY ("PURCHASEMODE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCREQ" MODIFY ("REQUIREMENTTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCREQ" MODIFY ("NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CEPAYMENTPENALTY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CEPAYMENTPENALTY" ADD CONSTRAINT "PK_CEPAYPENALTY" PRIMARY KEY ("CONTRACTEXECDOC_ID", "PENALTYPOS", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CEPAYMENTPENALTY" MODIFY ("CONTRACTEXECDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CEPAYMENTPENALTY" MODIFY ("PENALTYPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CEPAYMENTPENALTY" MODIFY ("POS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONTRACTOR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONTRACTOR" ADD CONSTRAINT "PK_CONTRACTOR" PRIMARY KEY ("INSPECTOR_ID", "ORG_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTOR" MODIFY ("INSPECTOR_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTOR" MODIFY ("ORG_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REPTEMPLATEATTACH
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REPTEMPLATEATTACH" ADD CONSTRAINT "PK_REPTEMPLATEATTACH" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REPTEMPLATEATTACH" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPTEMPLATEATTACH" MODIFY ("REPDOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPTEMPLATEATTACH" MODIFY ("DEVICE_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPTEMPLATEATTACH" MODIFY ("ATTACH_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REQUESTDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "CHK_REQUESTDOC_ALLWMLTCONTRS" CHECK (AllowMultipleContracts IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "CHK_REQUESTDOC_ENTERPRISE" CHECK (Enterprise in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "CHK_REQUESTDOC_G_APP_P" CHECK (GUARANTEEAPPPERCENT BETWEEN  0 AND 100) ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "CHK_REQUESTDOC_G_CNTR_P" CHECK (GUARANTEECONTRACTPERCENT BETWEEN 0 AND 100) ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "CHK_REQUESTDOC_ISAMOUNTPERCENT" CHECK (IsAmountPercent in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "CHK_REQUESTDOC_RESERVETYPE" CHECK (ReserveType in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "CK_REQUESTDOC_ENERGYTYPE" CHECK (EnergyType is null or EnergyType in ('FV','FP','MIN','1','2','3')) ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "CK_REQUESTDOC_EXPORT_FLAG" CHECK (Export_Flag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "CK_REQUESTDOC_GUARANTEEAPP" CHECK (IsGuaranteeApp in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "CK_REQUESTDOC_GUARANTEECON" CHECK (IsGuaranteeContract in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "CK_REQUESTDOC_GUARCONBAIL" CHECK (GuaranteeContractIsBail in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "CK_REQUESTDOC_IGNASSIGN" CHECK (IgnAssign IS NULL OR IgnAssign=1) ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "CK_REQUESTDOC_ISGROUPSMOREONE" CHECK (IsGroupsMoreOne IS NULL OR IsGroupsMoreOne=1) ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "PK_REQUESTDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("YEARAMT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("ASSIGNEDAMT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("EXPORT_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("CONTROLFLAGS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("FUTUREAMT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("ENTERPRISE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("RESERVETYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("ISAMOUNTPERCENT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("CUSTCANCHANGECONTERMS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("CUSTCANREFUSE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("CURYEARAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("NECESSITY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUESTDOC" MODIFY ("ALLOWMULTIPLECONTRACTS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CODETYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CODETYPE" ADD CONSTRAINT "CK_CODETYPE_DISPLAY" CHECK (display_order>0) ENABLE;
 
  ALTER TABLE "GZVLG"."CODETYPE" ADD CONSTRAINT "CK_CODETYPE_PUBLIC" CHECK (seqorder in (1,2,3,4,5,6,7,8,9,10)) ENABLE;
 
  ALTER TABLE "GZVLG"."CODETYPE" ADD CONSTRAINT "PK_CODETYPE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CODETYPE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CODETYPE" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CODETYPE" MODIFY ("DISPLAY_ORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CODETYPE" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CODETYPE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CODETYPE" ADD CONSTRAINT "UQ_CODETYPE_DISPLAY_ORDER" UNIQUE ("BUDGET_ID", "DISPLAY_ORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CODETYPE" ADD CONSTRAINT "UQ_CODETYPE_NAME" UNIQUE ("BUDGET_ID", "NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CODETYPE" ADD CONSTRAINT "UQ_CODETYPE_SEQORDER" UNIQUE ("BUDGET_ID", "SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PLAN2OOSKBKYEAR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2OOSKBKYEAR" ADD CONSTRAINT "PK_PLAN2OOSKBKYEAR" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSKBKYEAR" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSKBKYEAR" MODIFY ("PLAN2OOSKBK_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSKBKYEAR" MODIFY ("PLANYEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSKBKYEAR" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table INSTITUTIONLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."INSTITUTIONLINE" ADD CONSTRAINT "PK_INSTITUTIONLINE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."INSTITUTIONLINE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INSTITUTIONLINE" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INSTITUTIONLINE" MODIFY ("RECIPIENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INSTITUTIONLINE" MODIFY ("FINYEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INSTITUTIONLINE" MODIFY ("PLANCHANGE_AMT1" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INSTITUTIONLINE" MODIFY ("PLANCHANGE_AMT2" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INSTITUTIONLINE" MODIFY ("PLANCHANGE_AMT3" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INSTITUTIONLINE" ADD CONSTRAINT "UQ_INSTITUTIONLINE" UNIQUE ("BUDGET_ID", "FINYEAR", "RECIPIENT_ID", "INDUSTRYCODE_ID", "GRANTINVESTMENT_ID", "KOSGU", "KIF", "KVR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table NECESSITY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NECESSITY" ADD CONSTRAINT "CK_NECESSITYTYPE_NECTYPE" CHECK (necType is null or necType in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."NECESSITY" ADD CONSTRAINT "CK_NECESSITY_ACTUAL" CHECK (actual in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."NECESSITY" ADD CONSTRAINT "PK_NECESSITY" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."NECESSITY" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NECESSITY" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NECESSITY" MODIFY ("ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NECESSITY" ADD CONSTRAINT "UQ_NECESSITY_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TYPEDOCREQGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TYPEDOCREQGROUP" ADD CONSTRAINT "PK_TYPEDOCREQGROUP" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."TYPEDOCREQGROUP" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPEDOCREQGROUP" MODIFY ("PURCHASEMODE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPEDOCREQGROUP" MODIFY ("NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RQLOT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "CHK_RQLOT_ALLWMULTICONTRACTS" CHECK (AllowMultipleContracts IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "CHK_RQLOT_ENTERPRISE" CHECK (Enterprise in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "CHK_RQLOT_G_APP_P" CHECK (GUARANTEEAPPPERCENT BETWEEN 0 AND 100) ENABLE;
 
  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "CHK_RQLOT_G_CNTR_P" CHECK (GUARANTEECONTRACTPERCENT BETWEEN 0 AND 100) ENABLE;
 
  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "CHK_RQLOT_ISAMOUNTPERCENT" CHECK (IsAmountPercent in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "CK_RQLOT_ENERGYTYPE" CHECK (EnergyType is null or EnergyType in ('FV','FP','MIN','1','2','3')) ENABLE;
 
  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "CK_RQLOT_GUARANTEEAPP" CHECK (IsGuaranteeApp in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "CK_RQLOT_GUARANTEECON" CHECK (IsGuaranteeContract in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "CK_RQLOT_GUARCONBAIL" CHECK (GuaranteeContractIsBail in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "PK_RQLOT" PRIMARY KEY ("REQUEST_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RQLOT" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQLOT" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQLOT" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQLOT" MODIFY ("ENTERPRISE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQLOT" MODIFY ("ISAMOUNTPERCENT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQLOT" MODIFY ("CUSTCANCHANGECONTERMS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQLOT" MODIFY ("CUSTCANREFUSE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQLOT" MODIFY ("ALLOWMULTIPLECONTRACTS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table USERSESSION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."USERSESSION" ADD CONSTRAINT "PK_USERSESSION" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."USERSESSION" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERSESSION" MODIFY ("SYSUSER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERSESSION" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERSESSION" MODIFY ("WORK_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERSESSION" MODIFY ("OPEN_TIME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCDIGESTRULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCDIGESTRULE" ADD CONSTRAINT "PK_DOCDIGESTRULE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCDIGESTRULE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCDIGESTRULE" MODIFY ("ROLE_SEQUENCE_CONTROL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCDIGESTRULE" MODIFY ("FGROUPHEADER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table INVBUDGETLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."INVBUDGETLINE" ADD CONSTRAINT "PK_INVBUDGETLINE" PRIMARY KEY ("INVOICE_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."INVBUDGETLINE" MODIFY ("INVOICE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVBUDGETLINE" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVBUDGETLINE" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ROLEREFCLASS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLEREFCLASS" ADD CONSTRAINT "PK_ROLEREFNAME" PRIMARY KEY ("USERROLE_ID", "REF_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEREFCLASS" MODIFY ("USERROLE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEREFCLASS" MODIFY ("ACCESS_MODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEREFCLASS" MODIFY ("REF_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN3DOCCHILD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN3DOCCHILD" ADD CONSTRAINT "PK_PLAN3DOCCHILD" PRIMARY KEY ("DOC_ID", "PLAN3DOC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3DOCCHILD" MODIFY ("PLAN3DOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3DOCCHILD" MODIFY ("DOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3DOCCHILD" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table STOREPLACE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."STOREPLACE" ADD CONSTRAINT "PK_STOREPLACE" PRIMARY KEY ("GOODSID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."STOREPLACE" MODIFY ("GOODSID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."STOREPLACE" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."STOREPLACE" MODIFY ("TERRITORYCODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OLAPQUERY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OLAPQUERY" ADD CONSTRAINT "PK_OLAPQUERY" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OLAPQUERY" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OLAPQUERY" MODIFY ("NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ALTUNITFACTOR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ALTUNITFACTOR" ADD CONSTRAINT "PK_ALTUNIT" PRIMARY KEY ("UNIT_ID", "ALTGOODSGROUP_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ALTUNITFACTOR" MODIFY ("UNIT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ALTUNITFACTOR" MODIFY ("ALTGOODSGROUP_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ALTUNITFACTOR" MODIFY ("FACTOR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLACEMENTFEATURE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLACEMENTFEATURE" ADD CONSTRAINT "PK_PLACEMENTFEATURE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLACEMENTFEATURE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLACEMENTFEATURE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLACEMENTFEATURE" MODIFY ("TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLACEMENTFEATURE" MODIFY ("PREFVALUE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLACEMENTFEATURE" MODIFY ("ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLACEMENTFEATURE" MODIFY ("USETENDERPLANS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLACEMENTFEATURE" MODIFY ("BUDGETTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FACTDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FACTDOC" ADD CONSTRAINT "CHK_FACTDOC_FACTTYPE" CHECK (facttype in (0,-1,-2,-3,-4)) ENABLE;
 
  ALTER TABLE "GZVLG"."FACTDOC" ADD CONSTRAINT "CK_FACTDOC_EXPORT_FLAG" CHECK (Export_Flag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."FACTDOC" ADD CONSTRAINT "CK_FACTDOC_ISGROUPSMOREONE" CHECK (IsGroupsMoreOne is null or IsGroupsMoreOne=1) ENABLE;
 
  ALTER TABLE "GZVLG"."FACTDOC" ADD CONSTRAINT "PK_FACTDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FACTDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FACTDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FACTDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FACTDOC" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FACTDOC" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FACTDOC" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FACTDOC" MODIFY ("VENDORCOUNTRY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FACTDOC" MODIFY ("COUNTRY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FACTDOC" MODIFY ("TERRITORYCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FACTDOC" MODIFY ("FACTTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FACTDOC" MODIFY ("EXPORT_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FACTDOC" MODIFY ("PAYEDAMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MAILATTACH
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MAILATTACH" ADD CONSTRAINT "PK_MAILATTACH" PRIMARY KEY ("MAIL_ID", "ATTACH_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."MAILATTACH" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MAILATTACH" MODIFY ("MAIL_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MAILATTACH" MODIFY ("ATTACH_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MAILATTACH" MODIFY ("DEVICE_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REPFIELD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REPFIELD" ADD CONSTRAINT "CK_REFERENCE_FLAG" CHECK (reference_flag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."REPFIELD" ADD CONSTRAINT "CK_REPFIELD_REQUIRED" CHECK (required_flag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."REPFIELD" ADD CONSTRAINT "CK_REPFIELD_TYPE" CHECK (field_type in (0,1,2,3,4,5,6,7)) ENABLE;
 
  ALTER TABLE "GZVLG"."REPFIELD" ADD CONSTRAINT "PK_REPFIELD" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REPFIELD" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFIELD" MODIFY ("REPFORM_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFIELD" MODIFY ("SEQ_ORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFIELD" MODIFY ("FIELD_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFIELD" MODIFY ("REQUIRED_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFIELD" MODIFY ("REFERENCE_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFIELD" MODIFY ("FIELD_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFIELD" MODIFY ("CTRL_WIDTH" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFIELD" MODIFY ("CTRL_HEIGHT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFIELD" MODIFY ("LINES_COUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFIELD" MODIFY ("NEWLINE_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFIELD" ADD CONSTRAINT "UQ_REPFIELD" UNIQUE ("REPFORM_ID", "FIELD_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BANKGUARANTEEREFDOCREASON
--------------------------------------------------------

  ALTER TABLE "GZVLG"."BANKGUARANTEEREFDOCREASON" ADD CONSTRAINT "PK_BANKGUARANTEEREFDOCREASON" PRIMARY KEY ("BANKGUARANTEEREF_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEREFDOCREASON" MODIFY ("BANKGUARANTEEREF_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEREFDOCREASON" MODIFY ("POS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORGROLE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGROLE" ADD CONSTRAINT "PK_ORGROLE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGROLE" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MENUITEMWEB
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MENUITEMWEB" ADD CONSTRAINT "PK_MENUITEMWEB" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."MENUITEMWEB" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MENUITEMWEB" MODIFY ("MENU_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MENUITEMWEB" MODIFY ("SHOW_ORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MENUITEMWEB" MODIFY ("SUBSYSTEM" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TENDERCRITERIONPM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TENDERCRITERIONPM" ADD CONSTRAINT "PK_TENDERCRITERIONPM" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."TENDERCRITERIONPM" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERCRITERIONPM" MODIFY ("TENDERCRITERION_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERCRITERIONPM" MODIFY ("PURCHASEMODE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SIGNFORMAT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SIGNFORMAT" ADD CONSTRAINT "PK_SIGNFORMAT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SIGNFORMAT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SIGNFORMAT" MODIFY ("NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REPDOCUMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REPDOCUMENT" ADD CONSTRAINT "CK_REPDOCUMENT_TYPE" CHECK (DocumentType in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."REPDOCUMENT" ADD CONSTRAINT "PK_REPDOCUMENT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REPDOCUMENT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPDOCUMENT" MODIFY ("DOCUMENTTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPDOCUMENT" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPDOCUMENT" ADD CONSTRAINT "UQ_REPDOCUMENT_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DOCACTION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCACTION" ADD CONSTRAINT "PK_DOCACTION" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCACTION" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCACTION" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCACTION" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCACTION" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCACTION" MODIFY ("SHOW_ORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCACTION" MODIFY ("SHOW_MODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCACTION" MODIFY ("USER_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCACTION" ADD CONSTRAINT "UQ_DOCACTION" UNIQUE ("DOCUMENTCLASS_ID", "DISPSTATUS_ID", "NAME", "USER_TYPE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table EQUALITYCODES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."EQUALITYCODES" ADD CONSTRAINT "CHK_EQUALITYCODES_CODE" CHECK (replace (Code, ' ') is not null) ENABLE;
 
  ALTER TABLE "GZVLG"."EQUALITYCODES" ADD CONSTRAINT "PK_EQUALITYCODES" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."EQUALITYCODES" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."EQUALITYCODES" MODIFY ("EQUALITY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."EQUALITYCODES" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."EQUALITYCODES" ADD CONSTRAINT "UQ_EQUALITYCODES_CODE" UNIQUE ("CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DATASOURCE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DATASOURCE" ADD CONSTRAINT "PK_DATASOURCE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DATASOURCE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DATASOURCE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DATASOURCE" ADD CONSTRAINT "UQ_DATASOURCE_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table REQUIREMENTTYPEPM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REQUIREMENTTYPEPM" ADD CONSTRAINT "PK_REQUIREMENTTYPEPM" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REQUIREMENTTYPEPM" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUIREMENTTYPEPM" MODIFY ("REQUIREMENTTYPE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CACHEMAN
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CACHEMAN" ADD CONSTRAINT "PK_CACHEMAN" PRIMARY KEY ("GUID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CACHEMAN" MODIFY ("GUID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RQBUDGETLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQBUDGETLINE" ADD CONSTRAINT "CK_RQBUDGETLINE_CALCPRICE" CHECK (calcprice in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."RQBUDGETLINE" ADD CONSTRAINT "CK_RQBUDGETLINE_USEAMOUNT" CHECK (useamount in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."RQBUDGETLINE" ADD CONSTRAINT "PK_RQBUDGETLINE" PRIMARY KEY ("REQUEST_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RQBUDGETLINE" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQBUDGETLINE" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQBUDGETLINE" MODIFY ("COUNTRY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQBUDGETLINE" MODIFY ("TERRITORYCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQBUDGETLINE" MODIFY ("SUPPLYAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQBUDGETLINE" MODIFY ("USEAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQBUDGETLINE" MODIFY ("CALCPRICE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table NOTICEDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NOTICEDOC" ADD CONSTRAINT "CK_NOTICEDOC_SENDEMAIL" CHECK (SendEmail in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."NOTICEDOC" ADD CONSTRAINT "PK_NOTICEDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."NOTICEDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTICEDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTICEDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTICEDOC" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTICEDOC" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTICEDOC" MODIFY ("ISPUBLIC" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTICEDOC" MODIFY ("PUBLISHERORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTICEDOC" MODIFY ("SENDEMAIL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTICEDOC" ADD CHECK (isPublic in (0,1)) ENABLE;
--------------------------------------------------------
--  Constraints for Table OOSPROTOCOL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSPROTOCOL" ADD CONSTRAINT "CK_OOSPROTOCOL_ISACTUAL" CHECK (isActual in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OOSPROTOCOL" ADD CONSTRAINT "PK_OOSPROTOCOL" PRIMARY KEY ("NOTIFICATIONNUMBER", "PROTOCOLNUMBER", "VERSIONNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OOSPROTOCOL" MODIFY ("NOTIFICATIONNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSPROTOCOL" MODIFY ("PROTOCOLNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSPROTOCOL" MODIFY ("VERSIONNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSPROTOCOL" MODIFY ("PROTOCOLTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSPROTOCOL" MODIFY ("LOTCOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSPROTOCOL" MODIFY ("ISACTUAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CMPPAYSHEDULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPPAYSHEDULE" ADD CONSTRAINT "PK_CMPPAYSHEDULE" PRIMARY KEY ("ORDER_ID", "BUDGETLINEPOS", "PAYDATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPPAYSHEDULE" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPPAYSHEDULE" MODIFY ("BUDGETLINEPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPPAYSHEDULE" MODIFY ("PAYDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPPAYSHEDULE" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OOSNOTIFICATION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSNOTIFICATION" ADD CONSTRAINT "CHK_NTFGRNTCONTRISBAIL" CHECK (grntContrIsBail is null or grntContrIsBail in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OOSNOTIFICATION" ADD CONSTRAINT "CK_OOSNOTIFICATION_ISACTUAL" CHECK (isActual in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OOSNOTIFICATION" ADD CONSTRAINT "PK_OOSNOTIFICATION" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OOSNOTIFICATION" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSNOTIFICATION" MODIFY ("NOTIFICATIONNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSNOTIFICATION" MODIFY ("LOTCOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSNOTIFICATION" MODIFY ("ISACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSNOTIFICATION" MODIFY ("NOTIFICATIONTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PROCUREMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PROCUREMENT" ADD CONSTRAINT "CK_PROCUREMENT_ISARCHIVE" CHECK (IsArchive in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PROCUREMENT" ADD CONSTRAINT "PK_PROCUREMENT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PROCUREMENT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PROCUREMENT" MODIFY ("ISARCHIVE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBCONSTRAINT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DBCONSTRAINT" ADD CONSTRAINT "PK_CONSTRAINTS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DBCONSTRAINT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DBCONSTRAINT" MODIFY ("SUBSYSTEM" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCUMENTCLASS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCUMENTCLASS" ADD CONSTRAINT "PK_DOCUMENTCLASS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCUMENTCLASS" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONEXECSTEP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONEXECSTEP" ADD CONSTRAINT "PK_CONEXECSTEP" PRIMARY KEY ("CONTRACT_ID", "CONTRACTORPOS", "BUDGETLINEPOS", "EXECDATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONEXECSTEP" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONEXECSTEP" MODIFY ("CONTRACTORPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONEXECSTEP" MODIFY ("BUDGETLINEPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONEXECSTEP" MODIFY ("EXECDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONEXECSTEP" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CEREPARATIONLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CEREPARATIONLINE" ADD CONSTRAINT "PK_CEREPARATIONLINE" PRIMARY KEY ("CONTRACTEXECDOC_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CEREPARATIONLINE" MODIFY ("CONTRACTEXECDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CEREPARATIONLINE" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CEREPARATIONLINE" MODIFY ("DOCUMENTNAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CEREPARATIONLINE" MODIFY ("DOCUMENTDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CEREPARATIONLINE" MODIFY ("REPARATIONAMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table QUALREQ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."QUALREQ" ADD CONSTRAINT "PK_QUALREQ" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."QUALREQ" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."QUALREQ" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."QUALREQ" MODIFY ("PURCHASEMODE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."QUALREQ" MODIFY ("REQUIREMENTTYPE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AUCTIONBID
--------------------------------------------------------

  ALTER TABLE "GZVLG"."AUCTIONBID" ADD CONSTRAINT "PK_AUCTIONBID" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."AUCTIONBID" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."AUCTIONBID" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."AUCTIONBID" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."AUCTIONBID" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."AUCTIONBID" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."AUCTIONBID" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."AUCTIONBID" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."AUCTIONBID" MODIFY ("RECEIPTTIME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."AUCTIONBID" MODIFY ("COMPETITORPOS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APPMODULEDEPENDENCY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."APPMODULEDEPENDENCY" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."APPMODULEDEPENDENCY" MODIFY ("DEPENDID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SERVERPROCESSOR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SERVERPROCESSOR" ADD CONSTRAINT "CK_SERVERPROCESSOR_PUBLIC" CHECK (public_flag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."SERVERPROCESSOR" ADD CONSTRAINT "CK_SERVERPROCESSOR_SYSTEM" CHECK (system_flag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."SERVERPROCESSOR" ADD CONSTRAINT "PK_SERVERPROCESSOR" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SERVERPROCESSOR" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SERVERPROCESSOR" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SERVERPROCESSOR" MODIFY ("SYSTEM_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SERVERPROCESSOR" MODIFY ("PUBLIC_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SERVERPROCESSOR" MODIFY ("SUBSYSTEM" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SERVERPROCESSOR" ADD CONSTRAINT "UQ_SERVERPROCESSOR_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DOCRETENTION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCRETENTION" ADD CONSTRAINT "CHECK_ISACTIVE" CHECK (ISACTIVE IN (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."DOCRETENTION" ADD CONSTRAINT "PK_DOCRETENTION" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCRETENTION" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCRETENTION" MODIFY ("VERSION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCRETENTION" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCRETENTION" MODIFY ("CONDITION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCRETENTION" MODIFY ("FONT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCRETENTION" MODIFY ("DOCSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCRETENTION" MODIFY ("ISACTIVE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCRETENTION" MODIFY ("SUBSYSTEM" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table NOTIFYMSGRULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NOTIFYMSGRULE" ADD CONSTRAINT "PK_NMSGRULE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."NOTIFYMSGRULE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTIFYMSGRULE" MODIFY ("SENDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTIFYMSGRULE" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CMPCONDEALRESP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPCONDEALRESP" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCONDEALRESP" MODIFY ("PERSONAL_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCONDEALRESP" ADD CONSTRAINT "UQ_CMPCONDEALRESP" UNIQUE ("ORDER_ID", "CMPCUSTOMERPOS", "PERSONAL_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table INVGOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."INVGOODSPROP" ADD CONSTRAINT "PK_INVGOODSPROP" PRIMARY KEY ("INVOICE_ID", "GOODSPOS", "SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."INVGOODSPROP" MODIFY ("INVOICE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVGOODSPROP" MODIFY ("GOODSPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVGOODSPROP" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVGOODSPROP" MODIFY ("PROPTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVGOODSPROP" MODIFY ("CAPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FINSRC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FINSRC" ADD CONSTRAINT "CHK_ISBUDGET" CHECK (isbudget in (0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."FINSRC" ADD CONSTRAINT "CHK_ISCONINFONOTBUDGET" CHECK (isConInfoNotBudget in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."FINSRC" ADD CONSTRAINT "CK_FINSRC_ACTUAL" CHECK (actual in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."FINSRC" ADD CONSTRAINT "PK_FINSRC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FINSRC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FINSRC" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FINSRC" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FINSRC" MODIFY ("FINYEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FINSRC" MODIFY ("ISCONINFONOTBUDGET" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FINSRC" MODIFY ("ISBUDGET" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FINSRC" MODIFY ("ACTUAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RPLRULEOBJ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPLRULEOBJ" ADD CONSTRAINT "PK_RPLRULEOBJ" PRIMARY KEY ("RPLRULE_ID", "RPLOBJECT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RPLRULEOBJ" MODIFY ("RPLRULE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLRULEOBJ" MODIFY ("RPLOBJECT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OFRDECREASON
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRDECREASON" ADD CONSTRAINT "PK_OFRDECREASON" PRIMARY KEY ("OFFER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OFRDECREASON" MODIFY ("OFFER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRDECREASON" MODIFY ("POS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SCHPLAN
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SCHPLAN" ADD CONSTRAINT "PK_SCHPLAN" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SCHPLAN" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SCHPLAN" MODIFY ("SCHTASK_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SCHPLAN" MODIFY ("MODEL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SCHPLAN" MODIFY ("START_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SCHPLAN" MODIFY ("ISACTIVE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SCHPLAN" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SCHPLAN" MODIFY ("RUN_AFTER_SYS_START" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SCHPLAN" ADD CONSTRAINT "UQ_SCHPLAN_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table GCREGISTER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GCREGISTER" ADD CONSTRAINT "PK_GCREGISTER" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GCREGISTER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GCREGISTER" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GCREGISTER" MODIFY ("ATTACH_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GCREGISTER" MODIFY ("CAPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GCREGISTER" ADD CONSTRAINT "UQ_GCREGISTER" UNIQUE ("BUDGET_ID", "ATTACH_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SERVERACTION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SERVERACTION" ADD CONSTRAINT "CK_SERIALIZABLE_FLAG" CHECK (serializable_flag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."SERVERACTION" ADD CONSTRAINT "CK_SERVERACTION_EXTERNAL" CHECK (external_flag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."SERVERACTION" ADD CONSTRAINT "CK_SERVERACTION_READONLY" CHECK (readonly_flag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."SERVERACTION" ADD CONSTRAINT "PK_SERVERACTION" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SERVERACTION" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SERVERACTION" MODIFY ("SERVERPROCESSOR_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SERVERACTION" MODIFY ("ACTION_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SERVERACTION" MODIFY ("EXTERNAL_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SERVERACTION" MODIFY ("READONLY_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SERVERACTION" MODIFY ("SERIALIZABLE_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SERVERACTION" ADD CONSTRAINT "UQ_SERVERACTION" UNIQUE ("SERVERPROCESSOR_ID", "ACTION_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PLAN2OOSKBK
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2OOSKBK" ADD CONSTRAINT "PK_PLAN2OOSKBK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSKBK" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSKBK" MODIFY ("PLAN2OOSPOSITION_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSKBK" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSKBK" MODIFY ("FUTUREAMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TYPEDOCREQ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TYPEDOCREQ" ADD CONSTRAINT "CHK_TYPEDOCREQ_ISREQUIRED" CHECK (isRequired in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."TYPEDOCREQ" ADD CONSTRAINT "CHK_TYPEDOCREQ_VENDOR_TYPE" CHECK (vendor_type in (0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."TYPEDOCREQ" ADD CONSTRAINT "PK_TYPEDOCREQ" PRIMARY KEY ("TYPEDOCREQGROUPID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."TYPEDOCREQ" MODIFY ("TYPEDOCREQGROUPID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPEDOCREQ" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPEDOCREQ" MODIFY ("VENDOR_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPEDOCREQ" MODIFY ("ISREQUIRED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPEDOCREQ" MODIFY ("PURCHASEMODE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPEDOCREQ" MODIFY ("REQUIREMENTTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPEDOCREQ" MODIFY ("NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FUNCAT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FUNCAT" ADD CONSTRAINT "PK_FUNCAT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FUNCAT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FUNCAT" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FUNCAT" ADD CONSTRAINT "UQ_FUNCAT_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table OOSCUSTOMERREQUIREMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSCUSTOMERREQUIREMENT" ADD CONSTRAINT "CHK_GRNTCONTRISBAIL" CHECK (grntContrIsBail is null or grntContrIsBail in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OOSCUSTOMERREQUIREMENT" ADD CONSTRAINT "PK_OOSCUSTOMERREQ" PRIMARY KEY ("ID", "NOTIFICATION_ID", "LOT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OOSCUSTOMERREQUIREMENT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSCUSTOMERREQUIREMENT" MODIFY ("NOTIFICATION_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSCUSTOMERREQUIREMENT" MODIFY ("LOT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSCUSTOMERREQUIREMENT" MODIFY ("CUSTOMERREGNUM" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CERTREQUESTOID
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CERTREQUESTOID" MODIFY ("CERTREQUEST_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERTREQUESTOID" MODIFY ("OIDREF_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERTREQUESTOID" ADD CONSTRAINT "UQ_CERTREQUESTOID" UNIQUE ("CERTREQUEST_ID", "OIDREF_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PLAN2OOSPOSITION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" ADD CONSTRAINT "CHK_PLAN2OOSPOSITION_ORDERFORM" CHECK (OrderForm in (1, 2)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" ADD CONSTRAINT "CHK_PLAN2OOSPOS_PURCHASETYPE" CHECK (PurchaseType in (0,1,2,3,4,5,6,7,8,9,10,11)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" ADD CONSTRAINT "FK_PLAN2OOSPOS_EFORM" CHECK (Eform in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" ADD CONSTRAINT "PK_PLAN2OOSPOSITION" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" MODIFY ("POSITIONNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" MODIFY ("CONTRACTMAXPRICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" MODIFY ("PURCHASEMODE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" MODIFY ("ORDERFORM" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" MODIFY ("PAYMENTS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" MODIFY ("PURCHASEFINAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" MODIFY ("PURCHASETYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table KLADRSTREET
--------------------------------------------------------

  ALTER TABLE "GZVLG"."KLADRSTREET" ADD CONSTRAINT "CK_KLADRSTREET_ACTUAL" CHECK (Actual in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."KLADRSTREET" ADD CONSTRAINT "PK_KLADRSTREET" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."KLADRSTREET" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."KLADRSTREET" ADD CONSTRAINT "UQ_KLADRSTREET_CODE" UNIQUE ("CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DATAOBJECTCHANGELOG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DATAOBJECTCHANGELOG" ADD CONSTRAINT "PK_DATAOBJECTCHANGELOG" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DATAOBJECTCHANGELOG" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DATAOBJECTCHANGELOG" MODIFY ("CHANGE_TIME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DATAOBJECTCHANGELOG" MODIFY ("USER_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DATAOBJECTCHANGELOG" MODIFY ("USER_REALNAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DATAOBJECTCHANGELOG" MODIFY ("UK" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DATAOBJECTCHANGELOG" MODIFY ("OBJ_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DATAOBJECTCHANGELOG" MODIFY ("OBJ_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DATAOBJECTCHANGELOG" MODIFY ("OBJ_VERSION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GROUPPROPVALUE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GROUPPROPVALUE" ADD CONSTRAINT "PK_GROUPPROPVALUE" PRIMARY KEY ("GROUPPROP_ID", "SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GROUPPROPVALUE" MODIFY ("GROUPPROP_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GROUPPROPVALUE" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GROUPPROPVALUE" MODIFY ("CAPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table QUALIFYSELECT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."QUALIFYSELECT" ADD CONSTRAINT "PK_QUALIFYSELECT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."QUALIFYSELECT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."QUALIFYSELECT" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."QUALIFYSELECT" MODIFY ("QUALIFYREQPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."QUALIFYSELECT" MODIFY ("COMPETITORPOS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CERTREVOKEREQUEST
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CERTREVOKEREQUEST" ADD CONSTRAINT "PK_CERTREVOKEREQ" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CERTREVOKEREQUEST" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERTREVOKEREQUEST" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERTREVOKEREQUEST" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERTREVOKEREQUEST" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERTREVOKEREQUEST" MODIFY ("USERCERT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REQUIREMENTTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REQUIREMENTTYPE" ADD CONSTRAINT "CK_REQUIREMENTTYPE_ISACTUAL" CHECK (Is_Actual IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."REQUIREMENTTYPE" ADD CONSTRAINT "CK_REQUIREMENTTYPE_REFTYPE" CHECK (RefType IN (1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."REQUIREMENTTYPE" ADD CONSTRAINT "CK_REQUIREMENTTYPE_VISIBLE" CHECK (Visible IN (0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."REQUIREMENTTYPE" ADD CONSTRAINT "PK_REQUIREMENTTYPE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REQUIREMENTTYPE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUIREMENTTYPE" MODIFY ("REFTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUIREMENTTYPE" MODIFY ("QTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUIREMENTTYPE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUIREMENTTYPE" MODIFY ("IS_ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REQUIREMENTTYPE" MODIFY ("VISIBLE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RQVENDOR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQVENDOR" ADD CONSTRAINT "PK_RQVENDOR" PRIMARY KEY ("REQUEST_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RQVENDOR" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQVENDOR" MODIFY ("POS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table INVOICEDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "CK_INVOICEDOC_CONACCTYPE" CHECK (conAccType in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "CK_INVOICEDOC_EXPORT_FLAG" CHECK (Export_Flag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "CK_INVOICEDOC_ISGROUPSMOREONE" CHECK (IsGroupsMoreOne is null or IsGroupsMoreOne=1) ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "CK_INV_IS_TAXCODE_FREE" CHECK (ConIsTaxCodeFree in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "CK_INV_ORGTYPE" CHECK (ConOrgType IN (0, 1, 2, 3)) ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "PK_INVOICEDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVOICEDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVOICEDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVOICEDOC" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVOICEDOC" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVOICEDOC" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVOICEDOC" MODIFY ("CONACCTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVOICEDOC" MODIFY ("COUNTRY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVOICEDOC" MODIFY ("TERRITORYCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVOICEDOC" MODIFY ("EXPORT_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVOICEDOC" MODIFY ("CONTROLFLAGS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVOICEDOC" MODIFY ("NECESSITY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVOICEDOC" MODIFY ("SUPPLIEDAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVOICEDOC" MODIFY ("CONORGTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INVOICEDOC" MODIFY ("CONISTAXCODEFREE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OFRREQREASON
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRREQREASON" ADD CONSTRAINT "CK_OFRREQREASON_ACTUAL" CHECK (actual in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFRREQREASON" ADD CONSTRAINT "PK_OFRREQREASON" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OFRREQREASON" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRREQREASON" MODIFY ("ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRREQREASON" MODIFY ("BUDGETTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN2LEDGER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "CHK_PLAN2LEDGER_ISENTERPRISE" CHECK (IsEnterprise is null or IsEnterprise in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "CHK_PLAN2LEDGER_ISSMALL" CHECK (IsSmall in (0, 1, 2)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "PK_PLAN2LEDGER" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" MODIFY ("PLAN2DOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" MODIFY ("GROUP_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" MODIFY ("ISSMALL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" MODIFY ("AMOUNT_Q1" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" MODIFY ("AMOUNT_Q2" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" MODIFY ("AMOUNT_Q3" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" MODIFY ("AMOUNT_Q4" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "UQ_PLAN2LEDGER" UNIQUE ("PLAN2DOC_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CMPCUSTOMERLOT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" ADD CONSTRAINT "CHK_CMPCUSTOMERLOT_G_APP_P" CHECK (GUARANTEEAPPPERCENT BETWEEN 0 AND 100) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" ADD CONSTRAINT "CHK_CMPCUSTOMERLOT_G_CNTR_P" CHECK (GUARANTEECONTRACTPERCENT BETWEEN 0 AND 100) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" ADD CONSTRAINT "CK_CMPCUSTOMERLOT_GUARANTEEAPP" CHECK (IsGuaranteeApp in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" ADD CONSTRAINT "CK_CMPCUSTOMERLOT_GUARANTEECON" CHECK (IsGuaranteeContract in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" ADD CONSTRAINT "CK_CMPCUSTOMERLOT_GUARCONBAIL" CHECK (GuaranteeContractIsBail in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" ADD CONSTRAINT "PK_CMPCUSTOMERLOT" PRIMARY KEY ("ORDER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" MODIFY ("ISMAXINVITATIONDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" MODIFY ("CUSTCANCHANGECONTERMS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" MODIFY ("CUSTCANREFUSE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table USERCERT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."USERCERT" ADD CONSTRAINT "PK_USERCERT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."USERCERT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERCERT" MODIFY ("SERIALNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERCERT" MODIFY ("SUBJECT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERCERT" MODIFY ("ISSUERSERIALNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERCERT" MODIFY ("ISSUER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERCERT" MODIFY ("VALIDFROM" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERCERT" MODIFY ("VALIDBY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERCERT" MODIFY ("REVOKEDDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERCERT" MODIFY ("CHECKOID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERCERT" MODIFY ("SIGNTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERCERT" MODIFY ("BLOCKED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERCERT" ADD CONSTRAINT "UQ_USERCERT" UNIQUE ("SERIALNUMBER", "ISSUERSERIALNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DIGEST
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DIGEST" ADD CONSTRAINT "CK_DIGEST_ISACTIVE" CHECK (isactive in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."DIGEST" ADD CONSTRAINT "PK_DIGEST" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DIGEST" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DIGEST" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DIGEST" MODIFY ("TRANSFORMVERSION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONTRACTDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "CHK_CONTARCTDOC_CHANGETYPE" CHECK (ChangeType in (0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "CHK_CONTRACTDOC_KIND" CHECK (DocKind in (0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "CHK_CONTRACTDOC_PRICETYPE" CHECK (PriceType in (0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "CK_CONDOC_OOSPURCHORGOOSROLE" CHECK (OosPurchaseOrgOosRole in (0,1,2,3)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "CK_CONTRACTDOC_CONACCTYPE" CHECK (conAccType in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "CK_CONTRACTDOC_EXPORT_FLAG" CHECK (Export_Flag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "CK_CONTRACTDOC_ISCREDIT" CHECK (IsCredit IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "CK_CONTRACTDOC_ISGROUPSMOREONE" CHECK (IsGroupsMoreOne is null or IsGroupsMoreOne=1) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "CK_CON_ISCULTURE" CHECK (ConIsCulture IN (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "CK_CON_IS_TAXCODE_FREE" CHECK (ConIsTaxCodeFree in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "CK_CON_ORGTYPE" CHECK (ConOrgType IN (0, 1, 2, 3)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "PK_CONTRACTDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("CONACCTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("PAYEDAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("EXPORT_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("CONTROLFLAGS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("CHANGETYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("SUPPLIEDAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("OOSATTACHPACKETCNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("STARTINGAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("LOTNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("DOCKIND" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("CURYEARAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("FUTYEARAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("FORFEITAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("PRICETYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("SUBCONTRACTORSSUMINPERCENTS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("SUBCONTRACTORSSUMINRUB" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("NECESSITY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("ISCREDIT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("CONORGTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("CONISTAXCODEFREE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" MODIFY ("CONISCULTURE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCCOMMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCCOMMENT" ADD CONSTRAINT "PK_DOCCOMMENT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCCOMMENT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCOMMENT" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCOMMENT" MODIFY ("DATE_CREATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCOMMENT" MODIFY ("USERNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ROLEAPPOBJ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLEAPPOBJ" ADD CONSTRAINT "CK_ROLEAPPOBJ_ACCESS" CHECK (access_mode in (0,1,2,3)) ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEAPPOBJ" ADD CONSTRAINT "PK_ROLEAPPOBJ" PRIMARY KEY ("USERROLE_ID", "APPOBJNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEAPPOBJ" MODIFY ("USERROLE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEAPPOBJ" MODIFY ("APPOBJNAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEAPPOBJ" MODIFY ("ACCESS_MODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FETCHMODE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FETCHMODE" ADD CONSTRAINT "PK_FETCHMODE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FETCHMODE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FETCHMODE" ADD CONSTRAINT "UQ_FETCHMODE" UNIQUE ("DOCUMENTCLASS_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MAILRECEIVERGROUP_RECEIVER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MAILRECEIVERGROUP_RECEIVER" ADD CONSTRAINT "PK_MAILRECEIVERGROUP_RECEIVER" PRIMARY KEY ("MAILRECEIVERGROUP_ID", "SYSUSER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."MAILRECEIVERGROUP_RECEIVER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MAILRECEIVERGROUP_RECEIVER" MODIFY ("MAILRECEIVERGROUP_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MAILRECEIVERGROUP_RECEIVER" MODIFY ("SYSUSER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MAILRECEIVERGROUP_RECEIVER" ADD CONSTRAINT "UQ_MAILRECEIVERGROUP_RECEIVER" UNIQUE ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table KLADR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."KLADR" ADD CONSTRAINT "CK_KLADR_ACTUAL" CHECK (Actual in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."KLADR" ADD CONSTRAINT "PK_KLADR" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."KLADR" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."KLADR" ADD CONSTRAINT "UQ_KLADR_CODE" UNIQUE ("CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table REFJOURNAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REFJOURNAL" ADD CONSTRAINT "PK_REFJOURNAL_ID" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REFJOURNAL" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REFJOURNAL" MODIFY ("REF_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REFJOURNAL" MODIFY ("REF_OBJ_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REFJOURNAL" MODIFY ("ACTION_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OOS223PURCHASENOTICEINFO
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOS223PURCHASENOTICEINFO" ADD CONSTRAINT "PK_OOS223PURCHASENOTICEINFO" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OOS223PURCHASENOTICEINFO" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FINSRCSATISFY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FINSRCSATISFY" ADD CONSTRAINT "PK_FINSRCSATISFY" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FINSRCSATISFY" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FINSRCSATISFY" MODIFY ("FINYEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FINSRCSATISFY" ADD CONSTRAINT "UQ_FINSRCSATISFY" UNIQUE ("FINSRCSELECTEDYEARID", "FINSRCNEXTYEARID", "FINYEAR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ALTGOODSGROUPTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ALTGOODSGROUPTYPE" ADD CONSTRAINT "PK_ALTGOODSGROUPTYPE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ALTGOODSGROUPTYPE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ALTGOODSGROUPTYPE" MODIFY ("VERSION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ALTGOODSGROUPTYPE" MODIFY ("CAPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ALTGOODSGROUPTYPE" ADD CONSTRAINT "UQ_ALTGOODSGROUPTYPE" UNIQUE ("CAPTION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UPDPACKAGE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."UPDPACKAGE" ADD CONSTRAINT "CK_UPDPACKAGE_BUNDLEPATH" CHECK ((dispstatus <> 0) or (bundle_path is not null)) ENABLE;
 
  ALTER TABLE "GZVLG"."UPDPACKAGE" ADD CONSTRAINT "CK_UPDPACKAGE_DISPSTATUS" CHECK (dispstatus in (0,1,2,3,4)) ENABLE;
 
  ALTER TABLE "GZVLG"."UPDPACKAGE" ADD CONSTRAINT "PK_UPDPACKAGE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."UPDPACKAGE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."UPDPACKAGE" MODIFY ("VERSION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."UPDPACKAGE" MODIFY ("SOURCE_BUILD" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."UPDPACKAGE" MODIFY ("TARGET_BUILD" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."UPDPACKAGE" MODIFY ("MODEL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."UPDPACKAGE" MODIFY ("SENDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."UPDPACKAGE" MODIFY ("RECEIVER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."UPDPACKAGE" MODIFY ("DISPSTATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table NOTIFYMSGEVENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NOTIFYMSGEVENT" ADD CONSTRAINT "PK_NOTIFYMSGEVENT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."NOTIFYMSGEVENT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTIFYMSGEVENT" ADD CONSTRAINT "UQ_NOTIFYMSGEVENT" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PLANREQUEST
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLANREQUEST" ADD CONSTRAINT "PK_PLANREQUEST" PRIMARY KEY ("REQUEST_ID", "DOC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLANREQUEST" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLANREQUEST" MODIFY ("DOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLANREQUEST" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CRLPOINT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CRLPOINT" ADD CONSTRAINT "CK_CRLPOINT_ACTIVE" CHECK (actual in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CRLPOINT" ADD CONSTRAINT "PK_CRLPOINT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CRLPOINT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CRLPOINT" MODIFY ("VERSION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CRLPOINT" MODIFY ("ACTUAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OKTMO
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OKTMO" ADD CONSTRAINT "PK_OKTMO" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OKTMO" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OKTMO" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OKTMO" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OKTMO" MODIFY ("ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OKTMO" ADD CONSTRAINT "UQ_OKTMO_CODE" UNIQUE ("CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CONDAMAGEPAYMENTS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONDAMAGEPAYMENTS" ADD CONSTRAINT "PK_CONDAMAGEPAYMENTS" PRIMARY KEY ("CONTRACT_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONDAMAGEPAYMENTS" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONDAMAGEPAYMENTS" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONDAMAGEPAYMENTS" MODIFY ("DOCNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONDAMAGEPAYMENTS" MODIFY ("DOCDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONDAMAGEPAYMENTS" MODIFY ("DOCNAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONDAMAGEPAYMENTS" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GOODSBRANCH
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSBRANCH" ADD CONSTRAINT "CHK_BRANCHTYPE" CHECK (BranchType in (0,1,2,3,4)) ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSBRANCH" ADD CONSTRAINT "PK_GOODSBRANCH" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSBRANCH" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSBRANCH" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSBRANCH" MODIFY ("BRANCHTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSBRANCH" ADD CONSTRAINT "UQ_GOODSBRANCH_NAME_TYPE" UNIQUE ("NAME", "BRANCHTYPE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CACHELIST
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CACHELIST" ADD CONSTRAINT "PK_CACHELIST" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CACHELIST" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CACHELIST" MODIFY ("STORAGE_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CACHELIST" MODIFY ("USERSESSION_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CACHELIST" MODIFY ("CACHE_KEY" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ROLEREGISTER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLEREGISTER" ADD CONSTRAINT "PK_ROLEREGISTER" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" MODIFY ("GRANTEDROLE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" MODIFY ("GRANTINGUSER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" MODIFY ("USER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" MODIFY ("GRANTDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" MODIFY ("FROMDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" MODIFY ("TODATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" MODIFY ("OPERATION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table NOTIFYMSGRULE_RECEIVER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NOTIFYMSGRULE_RECEIVER" ADD CONSTRAINT "PK_NOTIFYMSGRULE_RECEIVER" PRIMARY KEY ("NOTIFYMSGRULE_ID", "PERSON_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."NOTIFYMSGRULE_RECEIVER" MODIFY ("NOTIFYMSGRULE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTIFYMSGRULE_RECEIVER" MODIFY ("PERSON_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OOSPROTOCOLLOT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSPROTOCOLLOT" ADD CONSTRAINT "CHK_ALLABSENT" CHECK (allAbsent is null or allAbsent in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OOSPROTOCOLLOT" ADD CONSTRAINT "PK_OOSPROTOCOLLOT" PRIMARY KEY ("NOTIFICATIONNUMBER", "PROTOCOLNUMBER", "PROTOCOLVERSIONNUMBER", "LOTNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OOSPROTOCOLLOT" MODIFY ("NOTIFICATIONNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSPROTOCOLLOT" MODIFY ("PROTOCOLNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSPROTOCOLLOT" MODIFY ("PROTOCOLVERSIONNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSPROTOCOLLOT" MODIFY ("PROTOCOLTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSPROTOCOLLOT" MODIFY ("LOTNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSPROTOCOLLOT" MODIFY ("APPLICATIONCOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SCHTASK
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SCHTASK" ADD CONSTRAINT "CK_SCHTASK_ALONE" CHECK (alone in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."SCHTASK" ADD CONSTRAINT "PK_SCHTASK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SCHTASK" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SCHTASK" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SCHTASK" MODIFY ("ALONE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SCHTASK" MODIFY ("SUBSYSTEM" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SCHTASK" ADD CONSTRAINT "UQ_SCHTASK_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PLGOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLGOODSPROP" ADD CONSTRAINT "PK_PLGOODSPROP" PRIMARY KEY ("GOODSID", "SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLGOODSPROP" MODIFY ("GOODSID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLGOODSPROP" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLGOODSPROP" MODIFY ("PROPTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLGOODSPROP" MODIFY ("CAPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FUNCPROVIDER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FUNCPROVIDER" ADD CONSTRAINT "PK_FUNCPROVIDER" PRIMARY KEY ("FUNUNIT_ID", "SERVERPROVIDER_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FUNCPROVIDER" MODIFY ("FUNUNIT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FUNCPROVIDER" MODIFY ("SERVERPROVIDER_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN2OOSOKVED
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2OOSOKVED" ADD CONSTRAINT "PK_PLAN2OOSOKVED" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSOKVED" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSOKVED" MODIFY ("PLAN2OOSPOSITION_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2OOSOKVED" MODIFY ("CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PURCHASECARRY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "CHK_PURCHASECARRY_ISENTERPRISE" CHECK (IsEnterprise in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "CHK_PURCHASECARRY_ISSMALL" CHECK (IsSmall in (0, 1, 2)) ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "CHK_PURCHASECARRY_VERSION" CHECK (PlanVersion in (1, 2)) ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "CK_PURCHCARRY_CARRYSTATUS" CHECK (CarryStatus in (0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "PK_PURCHCARRY" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("DOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("CARRYSTATUS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("RECIPIENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("GROUPCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("PLANYEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("NECESSITY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("AMOUNT1" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("AMOUNT2" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("AMOUNT3" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("AMOUNT4" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("ECONOMYAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("ECONOMYFINALAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("EXECUTEAMOUNT1" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("EXECUTEAMOUNT2" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("EXECUTEAMOUNT3" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("EXECUTEAMOUNT4" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("ISENTERPRISE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("ISSMALL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" MODIFY ("PLANVERSION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CLNDDAYTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CLNDDAYTYPE" ADD CONSTRAINT "PK_CLNDDAYTYPE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CLNDDAYTYPE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLNDDAYTYPE" MODIFY ("NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PREFERENCEGROUPFEATURE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PREFERENCEGROUPFEATURE" ADD CONSTRAINT "PK_PREFERENCEGROUPFEATURE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PREFERENCEGROUPFEATURE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PREFERENCEGROUPFEATURE" MODIFY ("PREFERENCEGROUP_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PREFERENCEGROUPFEATURE" MODIFY ("PLACEMENTFEATURE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PREFERENCEGROUPFEATURE" MODIFY ("PREFVALUE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PREFERENCEGROUPFEATURE" ADD CONSTRAINT "UQ_PREFERENCEGROUPFEATURE" UNIQUE ("PREFERENCEGROUP_ID", "PLACEMENTFEATURE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ORGHEARING
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGHEARING" ADD CONSTRAINT "PK_ORGHEARING" PRIMARY KEY ("ORG_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGHEARING" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGHEARING" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGHEARING" MODIFY ("YR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MSGSITE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MSGSITE" ADD CONSTRAINT "PK_MSGSITE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."MSGSITE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSGSITE" MODIFY ("REPLICATOR_VERSION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSGSITE" MODIFY ("SPLIT_QUEUES_BY_OBJECT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSGSITE" MODIFY ("SPLIT_QUEUES_BY_BUDGET" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table METACONSTRAINT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."METACONSTRAINT" ADD CONSTRAINT "PK_METACONSTRAINT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."METACONSTRAINT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."METACONSTRAINT" ADD CONSTRAINT "UQ_METACONSTRAINT" UNIQUE ("METAOBJECT_ID", "NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CONTYPEATTACH
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONTYPEATTACH" ADD CONSTRAINT "CK_CONTYPEATTACH_ATTACHTYPE" CHECK (Attach_Type IN (0,1,2,3,4)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTYPEATTACH" ADD CONSTRAINT "PK_CONTYPEATTACH" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONTYPEATTACH" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTYPEATTACH" MODIFY ("CONTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTYPEATTACH" MODIFY ("DEVICE_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTYPEATTACH" MODIFY ("ATTACH_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTYPEATTACH" MODIFY ("ATTACH_TYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OFRSUPPLYSHEDULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRSUPPLYSHEDULE" ADD CONSTRAINT "PK_OFRSUPPLYSHEDULE" PRIMARY KEY ("OFFER_ID", "PLACEPOS", "GOODSPOS", "SUPPLYDATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OFRSUPPLYSHEDULE" MODIFY ("OFFER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRSUPPLYSHEDULE" MODIFY ("PLACEPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRSUPPLYSHEDULE" MODIFY ("GOODSPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRSUPPLYSHEDULE" MODIFY ("SUPPLYDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRSUPPLYSHEDULE" MODIFY ("QTY" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table METAOBJECT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."METAOBJECT" ADD CONSTRAINT "PK_METAOBJECT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."METAOBJECT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."METAOBJECT" ADD CONSTRAINT "UQ_METAOBJECT" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BUDGETSTAGE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."BUDGETSTAGE" ADD CONSTRAINT "PK_BUDGETSTAGE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."BUDGETSTAGE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGETSTAGE" MODIFY ("STAGECODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REPFRAGMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REPFRAGMENT" ADD CONSTRAINT "CK_REPFRAGMENT_ISNOTICE" CHECK (isNotice in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."REPFRAGMENT" ADD CONSTRAINT "CK_REPFRAGMENT_TYPE" CHECK (FragmentType in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."REPFRAGMENT" ADD CONSTRAINT "PK_REPFRAGMENT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REPFRAGMENT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFRAGMENT" MODIFY ("FRAGMENTTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFRAGMENT" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFRAGMENT" MODIFY ("ISNOTICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFRAGMENT" ADD CONSTRAINT "UQ_REPFRAGMENT" UNIQUE ("NAME", "ISNOTICE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DOCSTATUS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCSTATUS" ADD CONSTRAINT "PK_DOCSTATUS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCSTATUS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCSTATUS" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCSTATUS" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCSTATUS" MODIFY ("PARALLEL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCSTATUS" ADD CONSTRAINT "UQ_DOCSTATUS" UNIQUE ("DOCUMENTCLASS_ID", "DISPSTATUS_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CONLOT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONLOT" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONLOT" MODIFY ("LOTPOS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RESPONSIBILITY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RESPONSIBILITY" ADD CONSTRAINT "PK_RESPONSIBILITY" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RESPONSIBILITY" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RESPONSIBILITY" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RESPONSIBILITY" ADD CONSTRAINT "UQ_RESPONSIBILITY_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table REPFRAGMENTCHILD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REPFRAGMENTCHILD" ADD CONSTRAINT "PK_REPFRAGMENTCHILD" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REPFRAGMENTCHILD" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFRAGMENTCHILD" MODIFY ("REPFRAGMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFRAGMENTCHILD" MODIFY ("CHILD_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONBUDGETLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONBUDGETLINE" ADD CONSTRAINT "PK_CONBUDGETLINE" PRIMARY KEY ("CONTRACT_ID", "CONTRACTORPOS", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONBUDGETLINE" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONBUDGETLINE" MODIFY ("CONTRACTORPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONBUDGETLINE" MODIFY ("POS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MAIL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MAIL" ADD CONSTRAINT "PK_MAIL" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."MAIL" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MAIL" MODIFY ("SENDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MAIL" MODIFY ("CREATE_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MAIL" MODIFY ("ARCHIVE_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MAIL" MODIFY ("READ_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MAIL" MODIFY ("STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table NUMPREFIX
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NUMPREFIX" ADD CONSTRAINT "PK_NUMPREFIX" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."NUMPREFIX" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NUMPREFIX" MODIFY ("NUMGENERATOR_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NUMPREFIX" MODIFY ("SYSUSER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NUMPREFIX" ADD CONSTRAINT "UQ_NUMPREFIX" UNIQUE ("NUMGENERATOR_ID", "SYSUSER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table NOTIFYMSGGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NOTIFYMSGGROUP" ADD CONSTRAINT "PK_NOTIFYMSGGROUP" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."NOTIFYMSGGROUP" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTIFYMSGGROUP" ADD CONSTRAINT "UQ_NOTIFYMSGGROUP" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TERRITORY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TERRITORY" ADD CONSTRAINT "PK_TERRITORY" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."TERRITORY" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TERRITORY" MODIFY ("COUNTRY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TERRITORY" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TERRITORY" MODIFY ("TERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TERRITORY" ADD CONSTRAINT "UQ_TERRITORY" UNIQUE ("COUNTRY_ID", "CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SERVERERROR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SERVERERROR" ADD CONSTRAINT "PK_SERVERERROR" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SERVERERROR" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SERVERERROR" MODIFY ("SUBSYSTEM" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLANDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLANDOC" ADD CONSTRAINT "CK_PLANDOC_ISGROUPSMOREONE" CHECK (IsGroupsMoreOne is null or IsGroupsMoreOne=1) ENABLE;
 
  ALTER TABLE "GZVLG"."PLANDOC" ADD CONSTRAINT "FK_PLANDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLANDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLANDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLANDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLANDOC" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLANDOC" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLANDOC" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLANDOC" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLANDOC" MODIFY ("PLANYEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLANDOC" MODIFY ("NECESSITY_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CRLFILE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CRLFILE" ADD CONSTRAINT "PK_CRLFILE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CRLFILE" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FGROUPATTACH
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FGROUPATTACH" ADD CONSTRAINT "PK_FGROUPATTACH" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FGROUPATTACH" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FGROUPATTACH" MODIFY ("DOCATTACH_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FGROUPATTACH" MODIFY ("FGROUP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GROUPPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GROUPPROP" ADD CONSTRAINT "PK_GROUPPROP" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GROUPPROP" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GROUPPROP" MODIFY ("GROUP_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GROUPPROP" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GROUPPROP" MODIFY ("CAPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GROUPPROP" MODIFY ("ISREQUIRED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GROUPPROP" MODIFY ("PROPTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GROUPPROP" ADD CONSTRAINT "UQ_GROUPPROP" UNIQUE ("GROUP_ID", "SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ALTGOODSGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ALTGOODSGROUP" ADD CONSTRAINT "PK_ALTGOODSGROUP" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ALTGOODSGROUP" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ALTGOODSGROUP" MODIFY ("VERSION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ALTGOODSGROUP" MODIFY ("CAPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ALTGOODSGROUP" MODIFY ("TYPE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GOODSGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSGROUP" ADD CONSTRAINT "CK_GOODSGROUP_CATEGORY" CHECK (CATEGORY in (1,2,3)) ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSGROUP" ADD CONSTRAINT "CK_GOODSGROUP_ISUNITFILTERED" CHECK (IsUnitFiltered in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSGROUP" ADD CONSTRAINT "CK_GOODSGROUP_IS_ACTUAL" CHECK (Is_Actual in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSGROUP" ADD CONSTRAINT "CK_GOODSGROUP_IS_CONTROLPRICE" CHECK (Is_ControlPrice in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSGROUP" ADD CONSTRAINT "PK_GOODSGROUP" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSGROUP" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSGROUP" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSGROUP" MODIFY ("ISUNITFILTERED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSGROUP" MODIFY ("IS_ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSGROUP" MODIFY ("HAS_PREFERENCE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSGROUP" MODIFY ("IS_ENTERPRISE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSGROUP" MODIFY ("IS_CONTROLPRICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSGROUP" MODIFY ("NOTFORPLAN" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSGROUP" ADD CONSTRAINT "UQ_GOODSGROUP_CODE" UNIQUE ("CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ORGGOODSGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGGOODSGROUP" ADD CONSTRAINT "CK_ORGGOODSGROUP_FIRST_IGN" CHECK (first_ignored in (0,1) or first_ignored is null) ENABLE;
 
  ALTER TABLE "GZVLG"."ORGGOODSGROUP" ADD CONSTRAINT "CK_ORGGOODSGROUP_ISSUPP" CHECK (issupplying in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORGGOODSGROUP" ADD CONSTRAINT "CK_ORGGOODSGROUP_SEC_IGN" CHECK (second_ignored in (0,1) or second_ignored is null) ENABLE;
 
  ALTER TABLE "GZVLG"."ORGGOODSGROUP" ADD CONSTRAINT "CK_ORGGOODSGROUP_SEL_RES" CHECK (selection_result in (0,1) or selection_result is null) ENABLE;
 
  ALTER TABLE "GZVLG"."ORGGOODSGROUP" ADD CONSTRAINT "PK_ORGGOODSGROUP" UNIQUE ("ORG_ID", "GROUP_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGGOODSGROUP" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGGOODSGROUP" MODIFY ("GROUP_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGGOODSGROUP" MODIFY ("ISSUPPLYING" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CSRECIPIENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CSRECIPIENT" ADD CONSTRAINT "PK_CSRECIPIENT" PRIMARY KEY ("CONSOLID_ID", "ORG_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CSRECIPIENT" MODIFY ("CONSOLID_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CSRECIPIENT" MODIFY ("ORG_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONPAYSHEDULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONPAYSHEDULE" ADD CONSTRAINT "PK_CONPAYSHEDULE" PRIMARY KEY ("CONTRACT_ID", "CONTRACTORPOS", "BUDGETLINEPOS", "PAYDATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONPAYSHEDULE" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONPAYSHEDULE" MODIFY ("CONTRACTORPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONPAYSHEDULE" MODIFY ("BUDGETLINEPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONPAYSHEDULE" MODIFY ("PAYDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONPAYSHEDULE" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table LICTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."LICTYPE" ADD CONSTRAINT "PK_LICTYPE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."LICTYPE" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORGCONCCONT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGCONCCONT" ADD CONSTRAINT "PK_ORGCONCCONT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGCONCCONT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGCONCCONT" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGCONCCONT" MODIFY ("CONTRACT_YEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGCONCCONT" MODIFY ("CONTRACT_COUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TERTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TERTYPE" ADD CONSTRAINT "PK_TERTYPE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."TERTYPE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TERTYPE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TERTYPE" ADD CONSTRAINT "UQ_TERTYPE_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table OPERTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OPERTYPE" ADD CONSTRAINT "PK_OPERTYPE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OPERTYPE" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RQCRITERIONLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQCRITERIONLINE" ADD CONSTRAINT "PK_RQCRITERIONLINE" PRIMARY KEY ("REQUEST_ID", "RQCRITERIONPOS", "SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RQCRITERIONLINE" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQCRITERIONLINE" MODIFY ("RQCRITERIONPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQCRITERIONLINE" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQCRITERIONLINE" MODIFY ("CAPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OFRRETREASON
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRRETREASON" ADD CONSTRAINT "CK_OFRRETREASON" CHECK (actual in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFRRETREASON" ADD CONSTRAINT "PK_OFRRETREASON" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OFRRETREASON" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRRETREASON" MODIFY ("VERSION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRRETREASON" MODIFY ("REASON" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRRETREASON" MODIFY ("ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRRETREASON" ADD CONSTRAINT "UQ_OFRRETREASON_REASON" UNIQUE ("REASON")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CONSOLIDDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONSOLIDDOC" ADD CONSTRAINT "PK_CONSOLIDDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONSOLIDDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONSOLIDDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONSOLIDDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONSOLIDDOC" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONSOLIDDOC" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONSOLIDDOC" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONSOLIDDOC" MODIFY ("EXPORT_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONSOLIDDOC" MODIFY ("PRICECONTROL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SYSPARAM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SYSPARAM" ADD CONSTRAINT "PK_SYSPARAM" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SYSPARAM" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSPARAM" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSPARAM" ADD CONSTRAINT "UQ_SYSPARAM" UNIQUE ("NAME", "SYSUSER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CMPEXPENSE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPEXPENSE" ADD CONSTRAINT "PK_CMPEXPENSE" PRIMARY KEY ("ORDER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPEXPENSE" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPEXPENSE" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPEXPENSE" MODIFY ("EXPDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPEXPENSE" MODIFY ("GROUPCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPEXPENSE" MODIFY ("QTY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPEXPENSE" MODIFY ("PRICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPEXPENSE" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPEXPENSE" MODIFY ("UNITNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DIGESTSIGN
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DIGESTSIGN" ADD CONSTRAINT "CK_DIGESTSIGN_SIGNTYPE" CHECK (SignType in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."DIGESTSIGN" ADD CONSTRAINT "PK_DIGESTSIGN" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DIGESTSIGN" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DIGESTSIGN" MODIFY ("SIGNTIME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DIGESTSIGN" MODIFY ("SIGNTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DIGESTSIGN" MODIFY ("SIGN_SEQ_CTRL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DIGESTSIGN" MODIFY ("SIGNVERSION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DIGESTSIGN" MODIFY ("ISIMPORTED" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN2CHANGEREASON
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2CHANGEREASON" ADD CONSTRAINT "CK_PLAN2CHANGEREASON_ACTUAL" CHECK (actual in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2CHANGEREASON" ADD CONSTRAINT "PK_PLAN2CHANGEREASON" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2CHANGEREASON" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2CHANGEREASON" MODIFY ("ACTUAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OFRORGSTATUS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRORGSTATUS" ADD CONSTRAINT "PK_OFRORGSTATUS" PRIMARY KEY ("OFFER_ID", "ORGSTATUS_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OFRORGSTATUS" MODIFY ("OFFER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRORGSTATUS" MODIFY ("ORGSTATUS_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TYPECRIT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TYPECRIT" ADD CONSTRAINT "CK_TYPEREQ_BESTPARAM" CHECK (BestParam is null or BestParam in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."TYPECRIT" ADD CONSTRAINT "CK_TYPEREQ_CALCMODE" CHECK (CalcMode is null or CalcMode in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."TYPECRIT" ADD CONSTRAINT "CK_TYPEREQ_CTYPE" CHECK (cType in (0,1,2,3,4,5,6,7,8,9,10,11,12)) ENABLE;
 
  ALTER TABLE "GZVLG"."TYPECRIT" ADD CONSTRAINT "PK_TYPECRIT" PRIMARY KEY ("TYPEREQCRITID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."TYPECRIT" MODIFY ("TYPEREQCRITID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPECRIT" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPECRIT" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPECRIT" MODIFY ("CTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCUMENTREPORTS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCUMENTREPORTS" ADD CONSTRAINT "PK_DOCUMENTREPORTS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCUMENTREPORTS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCUMENTREPORTS" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCUMENTREPORTS" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCUMENTREPORTS" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCUMENTREPORTS" MODIFY ("SUBSYSTEM" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCUMENTREPORTS" ADD CONSTRAINT "UQ_DOCREP_NAME" UNIQUE ("DISPSTATUS_ID", "NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table JAVACLASS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."JAVACLASS" ADD CONSTRAINT "CK_JAVACLASS_STATE" CHECK (state in(0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."JAVACLASS" ADD CONSTRAINT "PK_JAVACLASS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."JAVACLASS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."JAVACLASS" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."JAVACLASS" MODIFY ("STATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table USERBUDGET
--------------------------------------------------------

  ALTER TABLE "GZVLG"."USERBUDGET" ADD CONSTRAINT "CK_USERBUDGET_ACCESS" CHECK (access_mode in (0,1,3)) ENABLE;
 
  ALTER TABLE "GZVLG"."USERBUDGET" ADD CONSTRAINT "PK_USERBUDGET" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."USERBUDGET" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERBUDGET" MODIFY ("SYSUSER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERBUDGET" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERBUDGET" MODIFY ("ACCESS_MODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERBUDGET" ADD CONSTRAINT "UQ_USERBUDGET" UNIQUE ("SYSUSER_ID", "BUDGET_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table STATISTICSSOURCE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."STATISTICSSOURCE" ADD CONSTRAINT "PK_STATISTICSSOURCE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."STATISTICSSOURCE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."STATISTICSSOURCE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."STATISTICSSOURCE" ADD CONSTRAINT "UQ_STATISTICSSOURCE_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RQDOCCHILD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQDOCCHILD" ADD CONSTRAINT "PK_RQDOCCHILD" PRIMARY KEY ("REQUEST_ID", "DOC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RQDOCCHILD" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQDOCCHILD" MODIFY ("DOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQDOCCHILD" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORGFORM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGFORM" ADD CONSTRAINT "CHK_ORGFORM_ISACTUAL" CHECK (IsActual in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORGFORM" ADD CONSTRAINT "PK_ORGFORM_ID" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGFORM" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGFORM" MODIFY ("CAPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGFORM" MODIFY ("DESCRIPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGFORM" MODIFY ("ISACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGFORM" ADD CONSTRAINT "UQ_ORGFORM" UNIQUE ("CAPTION", "OOSCODE", "ISACTUAL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table REPORT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REPORT" ADD CONSTRAINT "PK_REPORT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REPORT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPORT" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPORT" ADD CONSTRAINT "UQ_REPORT_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BANKGUARANTEEREFREASON
--------------------------------------------------------

  ALTER TABLE "GZVLG"."BANKGUARANTEEREFREASON" ADD CONSTRAINT "CK_BANKGUARANTEEREFRS_ACTUAL" CHECK (Actual IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEREFREASON" ADD CONSTRAINT "PK_BANKGUARANTEEREFREASON" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEREFREASON" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEREFREASON" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEREFREASON" MODIFY ("ACTUAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table NOTICEORG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NOTICEORG" ADD CONSTRAINT "PK_NOTICEORG" PRIMARY KEY ("NOTICEDOC_ID", "ORG_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."NOTICEORG" MODIFY ("NOTICEDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTICEORG" MODIFY ("ORG_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CMPCUSTOMER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPCUSTOMER" ADD CONSTRAINT "PK_CMPCUSTOMER" PRIMARY KEY ("ORDER_ID", "CUSTOMER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMER" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCUSTOMER" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCUSTOMER" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORDERDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CHK_ENTERPRISE" CHECK (Enterprise in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CHK_ORDERDOC_ALLWMULTICONTRS" CHECK (AllowMultipleContracts IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CHK_ORDERDOC_ISAMOUNTPERCENT" CHECK (IsAmountPercent in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ISDOCFEEBAIL" CHECK (isDocFeeBail in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_AUCTIONAUTOSTEPDEC" CHECK (AuctionAutoStepDec in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_AUCTIONBIDBYSTEP" CHECK (AuctionBidByStep in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_AUCTIONDIVBID" CHECK (AuctionDivisibleBid in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_AUCTIONFINISHTYPE" CHECK (Auction_Finish_Type in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_AUCTIONSTEPTYPE" CHECK (AuctionStepType in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_AUCTIONWITHSTEP" CHECK (AuctionWithStep in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_AUCTIONZEROBID" CHECK (AuctionZeroBid in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_AUTHORITYTYPE" CHECK (Change_AuthorityType in ('FA','FO','S','M')) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_BIDAFTERYOURSELF" CHECK (BidAfterYourself in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_CANCEL_AUTHORITY" CHECK (Cancel_AuthorityType IS NULL OR Cancel_AuthorityType IN ('FA','FO','S','M')) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_CANCEL_INITIATIVE" CHECK (Cancel_InitiativeType IS NULL OR Cancel_InitiativeType IN ('U','Z','US','S','D')) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_CMPORGNEGCONTR" CHECK (CmpOrg_Negotiate_Contract in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_CMPORGOOSROLE" CHECK (CmpOrgOosRole in (0,1,2,3)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_CMPPARTICIPATION" CHECK (CmpParticipation in (0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_CMPTYPE" CHECK (CmpType in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_ENERGYTYPE" CHECK (EnergyType in ('FV','FP','MIN','1','2','3')) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_FIRSTPUBLIC" CHECK (FirstPublicDiscussionComplete in (0, 1, 2)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_HASCONTRACTORWORK" CHECK (HasContractorWork in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_INITIATIVETYPE" CHECK (Change_InitiativeType is null or Change_InitiativeType in ('U','Z','US','S','D')) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_ISGROUPSMOREONE" CHECK (IsGroupsMoreOne is null or IsGroupsMoreOne=1) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_ISVATAMOUNT" CHECK (IsVatAmount in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_OFFERS_OUTSIDE_ETP" CHECK (Offers_Outside_Etp in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "CK_ORDERDOC_VAT" CHECK (Vat in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "PK_ORDERDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("MINSCORE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("MAXSCORE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("HASCONTRACTORWORK" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("ENTERPRISE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("CONTROLFLAGS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("PROLONGCOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("EXPORT_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("ISASSIGNRELEASED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("OOSATTACHPACKETCNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("ISDOCFEEBAIL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("DOCFEEAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("ISAMOUNTPERCENT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("CURYEARAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("FUTYEARAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("NECESSITY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("NOPUBLICDISCUSSION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("FIRSTPUBLICDISCUSSIONCOMPLETE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("ALLOWMULTIPLECONTRACTS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("CMPTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("CMPPARTICIPATION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("ISVATAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("CMPORG_NEGOTIATE_CONTRACT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("OFFERS_OUTSIDE_ETP" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("AUCTION_FINISH_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("VAT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("BIDAFTERYOURSELF" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("AUCTIONWITHSTEP" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("AUCTIONSTEPTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("AUCTIONBIDBYSTEP" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("AUCTIONZEROBID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("AUCTIONDIVISIBLEBID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORDERDOC" MODIFY ("AUCTIONAUTOSTEPDEC" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CMPGOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPGOODSPROP" ADD CONSTRAINT "PK_CMPGOODSPROP" PRIMARY KEY ("ORDER_ID", "GOODSPOS", "SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPGOODSPROP" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPGOODSPROP" MODIFY ("GOODSPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPGOODSPROP" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPGOODSPROP" MODIFY ("PROPTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPGOODSPROP" MODIFY ("CAPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MSGLINKTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MSGLINKTYPE" ADD CONSTRAINT "PK_MSGLINKTYPE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."MSGLINKTYPE" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table USERORG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."USERORG" ADD CONSTRAINT "CK_USERORG_ACCESS" CHECK (access_mode in (1,3)) ENABLE;
 
  ALTER TABLE "GZVLG"."USERORG" ADD CONSTRAINT "PK_USERORG" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."USERORG" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERORG" MODIFY ("SYSUSER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERORG" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERORG" MODIFY ("ACCESS_MODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."USERORG" ADD CONSTRAINT "UQ_USERORG" UNIQUE ("SYSUSER_ID", "ORG_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PLAN3PURCHASEGOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODSPROP" ADD CONSTRAINT "PK_P3GOODSPROP" PRIMARY KEY ("PLAN3PURCHASEDOC_ID", "GOODSPOS", "SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODSPROP" MODIFY ("PLAN3PURCHASEDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODSPROP" MODIFY ("GOODSPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODSPROP" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODSPROP" MODIFY ("PROPTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODSPROP" MODIFY ("CAPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SIGNTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SIGNTYPE" ADD CONSTRAINT "PK_SIGNTYPE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SIGNTYPE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SIGNTYPE" MODIFY ("NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORGUNFAIR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGUNFAIR" ADD CONSTRAINT "CK_ORGUNFAIR_ISUNFAIR" CHECK (isUnfair in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORGUNFAIR" ADD CONSTRAINT "CK_ORGUNFAIR_MARK" CHECK (mark in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORGUNFAIR" ADD CONSTRAINT "PK_ORGUNFAIR" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGUNFAIR" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGUNFAIR" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGUNFAIR" MODIFY ("DT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGUNFAIR" MODIFY ("MARK" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGUNFAIR" MODIFY ("ISUNFAIR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORGATTACH
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGATTACH" ADD CONSTRAINT "PK_ORGATTACH" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGATTACH" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGATTACH" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGATTACH" MODIFY ("ATTACH_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGATTACH" ADD CONSTRAINT "UQ_ORGATTACH" UNIQUE ("ORG_ID", "ATTACH_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table APPOBJPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."APPOBJPROP" ADD CONSTRAINT "PK_APPOBJPROP" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."APPOBJPROP" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."APPOBJPROP" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."APPOBJPROP" ADD CONSTRAINT "UQ_APPOBJPROPS" UNIQUE ("APPOBJID", "NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PAYCONDITION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PAYCONDITION" ADD CONSTRAINT "CK_PAYCONDITION_ACTUAL" CHECK (Actual IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PAYCONDITION" ADD CONSTRAINT "CK_PAYCONDITION_SYSTEM_FLAG" CHECK (System_Flag in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PAYCONDITION" ADD CONSTRAINT "PK_PAYCONDITION" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PAYCONDITION" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PAYCONDITION" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PAYCONDITION" MODIFY ("SYSTEM_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PAYCONDITION" MODIFY ("ACTUAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCEVERRLOG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCEVERRLOG" ADD CONSTRAINT "PK_DOCEVERRLOG" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCEVERRLOG" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCEVERRLOG" MODIFY ("SYSUSER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCEVERRLOG" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCEVERRLOG" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REPFORM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REPFORM" ADD CONSTRAINT "PK_REPFORM" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REPFORM" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFORM" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFORM" MODIFY ("REPORT_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPFORM" ADD CONSTRAINT "UQ_REPFORM" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BUDGET
--------------------------------------------------------

  ALTER TABLE "GZVLG"."BUDGET" ADD CONSTRAINT "PK_BUDGET" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."BUDGET" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGET" MODIFY ("CAPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGET" MODIFY ("ISLOCAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGET" MODIFY ("ISRURALVILLAGE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGET" MODIFY ("ISBUDGETINSTITUTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGET" ADD CHECK ((IsBudgetInstitution in (0,1))) ENABLE;
 
  ALTER TABLE "GZVLG"."BUDGET" ADD CHECK ((IsRuralVillage in (0,1))) ENABLE;
 
  ALTER TABLE "GZVLG"."BUDGET" ADD CHECK ((ISLOCAL in (0,1))) ENABLE;
 
  ALTER TABLE "GZVLG"."BUDGET" ADD CONSTRAINT "UQ_BUDGET" UNIQUE ("CAPTION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CMPPERSONALRESP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPPERSONALRESP" ADD CONSTRAINT "PK_CMPPERSONALRESP" PRIMARY KEY ("ORDER_ID", "PERSONAL_ID", "RESPONSIBILITY_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPPERSONALRESP" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPPERSONALRESP" MODIFY ("PERSONAL_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPPERSONALRESP" MODIFY ("RESPONSIBILITY_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORGTITLE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGTITLE" ADD CONSTRAINT "PK_ORGTITLE" PRIMARY KEY ("ORG_ID", "DTBEGIN")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGTITLE" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGTITLE" MODIFY ("DTBEGIN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN3PURCHASEDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "CK_P3PURCHASEDOC_DISCUSSION" CHECK (PublicDiscussion in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "CK_P3PURCHASEDOC_EFORM" CHECK (EForm in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "CK_P3PURCHASEDOC_GUARANTEEAPP" CHECK (IsGuaranteeApp in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "CK_P3PURCHASEDOC_GUARANTEECON" CHECK (IsGuaranteeContract in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "CK_P3PURCHASEDOC_IDENT_CODE" CHECK (length(identification_code) = 36) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "CK_P3PURCHASEDOC_ISENTERPRISE" CHECK (IsEnterprise in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "CK_P3PURCHASEDOC_ORDERFORM" CHECK (OrderForm in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "CK_P3PURCHASEDOC_TYPE" CHECK (PurchaseType in (0,1,2,3,4,5,6,7,8,9)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "PK_PLAN3PURCHASEDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" MODIFY ("PLANYEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" MODIFY ("RECIPIENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" MODIFY ("PURCHASETYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" MODIFY ("NECESSITY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" MODIFY ("PUBLICDISCUSSION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" MODIFY ("ORDERFORM" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" MODIFY ("ISENTERPRISE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CMPLOT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "CHK_CMPLOT_ALLWMULTCONTRACTS" CHECK (AllowMultipleContracts IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "CHK_CMPLOT_ENTERPRISE" CHECK (Enterprise in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "CHK_CMPLOT_ISAMOUNTPERCENT" CHECK (IsAmountPercent in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "CK_CMPLOT_AUCTIONAUTOSTEPDEC" CHECK (AuctionAutoStepDec in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "CK_CMPLOT_AUCTIONBIDBYSTEP" CHECK (AuctionBidByStep in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "CK_CMPLOT_AUCTIONDIVISIBLEBID" CHECK (AuctionDivisibleBid in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "CK_CMPLOT_AUCTIONSTEPTYPE" CHECK (AuctionStepType in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "CK_CMPLOT_AUCTIONWITHSTEP" CHECK (AuctionWithStep in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "CK_CMPLOT_AUCTIONZEROBID" CHECK (AuctionZeroBid in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "CK_CMPLOT_BIDAFTERYOURSELF" CHECK (BidAfterYourself in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "CK_CMPLOT_ENERGYTYPE" CHECK (EnergyType in ('FV','FP','MIN','1','2','3')) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "CK_CMPLOT_FIRSTPUBLIC" CHECK (FirstPublicDiscussionComplete in (0, 1, 2)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "CK_CMPLOT_HASCONTRACTORWORK" CHECK (HasContractorWork in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "CK_CMPLOT_LOTDECLINED" CHECK (IsLotDeclined in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "CK_CMPLOT_LOTREREGISTERED" CHECK (islotreregistered in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "CK_CMPLOT_VAT" CHECK (Vat in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "PK_CMPLOT" PRIMARY KEY ("ORDER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("HASCONTRACTORWORK" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("MINSCORE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("MAXSCORE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("ISLOTDECLINED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("ENTERPRISE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("ISLOTREREGISTERED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("ISAMOUNTPERCENT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("NOPUBLICDISCUSSION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("FIRSTPUBLICDISCUSSIONCOMPLETE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("ALLOWMULTIPLECONTRACTS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("VAT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("BIDAFTERYOURSELF" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("AUCTIONWITHSTEP" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("AUCTIONSTEPTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("AUCTIONBIDBYSTEP" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("AUCTIONZEROBID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("AUCTIONDIVISIBLEBID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPLOT" MODIFY ("AUCTIONAUTOSTEPDEC" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CLASSOPER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CLASSOPER" ADD CONSTRAINT "PK_CLASSOPER" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CLASSOPER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLASSOPER" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLASSOPER" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLASSOPER" MODIFY ("CAPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLASSOPER" ADD CONSTRAINT "UQ_CLASSOPER" UNIQUE ("DOCUMENTCLASS_ID", "OPERTYPE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CONGOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONGOODSPROP" ADD CONSTRAINT "PK_CONGOODSPROP" PRIMARY KEY ("CONTRACT_ID", "GOODSPOS", "SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONGOODSPROP" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONGOODSPROP" MODIFY ("GOODSPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONGOODSPROP" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONGOODSPROP" MODIFY ("PROPTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONGOODSPROP" MODIFY ("CAPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table NOTIFYMSG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NOTIFYMSG" ADD CONSTRAINT "CK_NMSG_EMAILSENDED" CHECK (emailSended in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."NOTIFYMSG" ADD CONSTRAINT "CK_NMSG_TOEXEC" CHECK (toexec in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."NOTIFYMSG" ADD CONSTRAINT "PK_NMSG" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."NOTIFYMSG" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTIFYMSG" MODIFY ("CREATE_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTIFYMSG" MODIFY ("SENDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTIFYMSG" MODIFY ("RECEIVER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTIFYMSG" MODIFY ("EMAILSENDED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTIFYMSG" MODIFY ("TOEXEC" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NOTIFYMSG" MODIFY ("READED" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLNGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLNGOODS" ADD CONSTRAINT "PK_PLNGOODS" PRIMARY KEY ("PLANDOC_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLNGOODS" MODIFY ("PLANDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNGOODS" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNGOODS" MODIFY ("GROUPCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNGOODS" MODIFY ("QTY1" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNGOODS" MODIFY ("QTY2" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNGOODS" MODIFY ("QTY3" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNGOODS" MODIFY ("QTY4" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNGOODS" MODIFY ("QTYENABLEDMASK" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNGOODS" MODIFY ("PRICE1" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNGOODS" MODIFY ("PRICE2" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNGOODS" MODIFY ("PRICE3" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNGOODS" MODIFY ("PRICE4" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNGOODS" MODIFY ("AMOUNT1" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNGOODS" MODIFY ("AMOUNT2" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNGOODS" MODIFY ("AMOUNT3" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLNGOODS" MODIFY ("AMOUNT4" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RQCOMMEMBER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQCOMMEMBER" ADD CONSTRAINT "CK_RQCOMMEMBER_COMROLE" CHECK (comRole in (0,1,2,3,4)) ENABLE;
 
  ALTER TABLE "GZVLG"."RQCOMMEMBER" ADD CONSTRAINT "CK_RQCOMMEMBER_ISACTSECR" CHECK (ISACTINGFORSECRETARY IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."RQCOMMEMBER" ADD CONSTRAINT "PK_RQCOMMEMBER" PRIMARY KEY ("REQUEST_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RQCOMMEMBER" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQCOMMEMBER" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQCOMMEMBER" MODIFY ("ABSENT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQCOMMEMBER" MODIFY ("ISACTINGFORSECRETARY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQCOMMEMBER" ADD CHECK (absent in (0, 1)) ENABLE;
--------------------------------------------------------
--  Constraints for Table TENDER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TENDER" ADD CONSTRAINT "CK_TENDER_ISFINALFFER" CHECK (IsFinalOffer in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."TENDER" ADD CONSTRAINT "PK_TENDER" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."TENDER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDER" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDER" MODIFY ("CRITERIONPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDER" MODIFY ("COMPETITORPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDER" MODIFY ("ISFINALOFFER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDER" ADD CONSTRAINT "UQ_TENDER_COMPETITOR" UNIQUE ("ORDER_ID", "COMPETITORPOS", "CRITERIONPOS", "ISFINALOFFER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table WEBSTATCACHE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."WEBSTATCACHE" ADD CONSTRAINT "PK_WEBSTATCACHE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."WEBSTATCACHE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."WEBSTATCACHE" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."WEBSTATCACHE" MODIFY ("STATISTICSSOURCE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table NUMSEQUENCE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NUMSEQUENCE" ADD CONSTRAINT "CK_NUMSEQUENCE_TERM" CHECK (term_kind in (0,1,2,3,4)) ENABLE;
 
  ALTER TABLE "GZVLG"."NUMSEQUENCE" ADD CONSTRAINT "PK_NUMSEQUENCE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."NUMSEQUENCE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NUMSEQUENCE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NUMSEQUENCE" MODIFY ("NEXT_VALUE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NUMSEQUENCE" MODIFY ("TERM_KIND" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NUMSEQUENCE" ADD CONSTRAINT "UQ_NUMSEQUENCE_NAME" UNIQUE ("NAME", "BUDGET_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RQDOCREQ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQDOCREQ" ADD CONSTRAINT "CHK_RQDOCREQ_ISCONTENTTYPE" CHECK (isContentType in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."RQDOCREQ" ADD CONSTRAINT "CHK_RQDOCREQ_ISREQUIRED" CHECK (isRequired in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."RQDOCREQ" ADD CONSTRAINT "CK_RQDOCREQ_TYPE" CHECK (Type in (0,1,2,3,4,5,6,7,8,9,10,11)) ENABLE;
 
  ALTER TABLE "GZVLG"."RQDOCREQ" ADD CONSTRAINT "CK_RQDOCREQ_VENDOR_TYPE" CHECK (vendor_type in (0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."RQDOCREQ" ADD CONSTRAINT "PK_RQDOCREQ" PRIMARY KEY ("REQUEST_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RQDOCREQ" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQDOCREQ" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQDOCREQ" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQDOCREQ" MODIFY ("VENDOR_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQDOCREQ" MODIFY ("ISREQUIRED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQDOCREQ" MODIFY ("ISCONTENTTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQDOCREQ" MODIFY ("TYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CSGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CSGOODS" ADD CONSTRAINT "PK_CSGOODS" PRIMARY KEY ("CONSOLID_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CSGOODS" MODIFY ("CONSOLID_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CSGOODS" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CSGOODS" MODIFY ("GROUPCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CSGOODS" MODIFY ("PRICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CSGOODS" MODIFY ("UNITNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MSGSITEEXCHANGE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MSGSITEEXCHANGE" MODIFY ("MSGSITE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSGSITEEXCHANGE" MODIFY ("DOCEXCHANGESCHEME_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."MSGSITEEXCHANGE" ADD CONSTRAINT "UQ_MSGSITEEXCHANGE" UNIQUE ("MSGSITE_ID", "DOCEXCHANGESCHEME_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table GRANTINVESTMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GRANTINVESTMENT" ADD CONSTRAINT "PK_GRANTINVESTMENT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GRANTINVESTMENT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GRANTINVESTMENT" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GRANTINVESTMENT" MODIFY ("GRANTTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GRANTINVESTMENT" MODIFY ("FINYEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GRANTINVESTMENT" ADD CONSTRAINT "UQ_GRANTINVESTMENT" UNIQUE ("BUDGET_ID", "FINYEAR", "ORG_ID", "CODE", "FOREIGNKEY")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table WEBSTATCACHEVAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."WEBSTATCACHEVAL" ADD CONSTRAINT "PK_STATISTICSSOURCEVALUES" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."WEBSTATCACHEVAL" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."WEBSTATCACHEVAL" MODIFY ("WEBSTAT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."WEBSTATCACHEVAL" MODIFY ("PURCOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."WEBSTATCACHEVAL" MODIFY ("PURAMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCSELECT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCSELECT" ADD CONSTRAINT "CHK_DOCSELECT_ISREQUIRED" CHECK (isRequired in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."DOCSELECT" ADD CONSTRAINT "CK_DOCSELECT_TYPE" CHECK (Type in (0,1,2,3,4,5,6,7,8,9,10,11)) ENABLE;
 
  ALTER TABLE "GZVLG"."DOCSELECT" ADD CONSTRAINT "CK_DOCSELECT_VAL" CHECK (Val in (-1,0,1,null)) ENABLE;
 
  ALTER TABLE "GZVLG"."DOCSELECT" ADD CONSTRAINT "PK_DOCSELECT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCSELECT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCSELECT" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCSELECT" MODIFY ("DOCREQPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCSELECT" MODIFY ("COMPETITORPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCSELECT" MODIFY ("ISREQUIRED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCSELECT" MODIFY ("TYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RPLTABLINK
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPLTABLINK" ADD CONSTRAINT "PK_RPLTABLINK" PRIMARY KEY ("RPLTABLE_ID", "FIELD_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RPLTABLINK" MODIFY ("RPLTABLE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLTABLINK" MODIFY ("FIELD_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RPLTRANSACTMODE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPLTRANSACTMODE" ADD CONSTRAINT "PK_RPLTRANSACTMODE" PRIMARY KEY ("NUM_TRANSACTION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RPLTRANSACTMODE" MODIFY ("NUM_TRANSACTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DAYVERSION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DAYVERSION" ADD CONSTRAINT "PK_DAYVERSION" PRIMARY KEY ("DAY_DATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DAYVERSION" MODIFY ("DAY_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DAYVERSION" MODIFY ("DAY_VERSION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLACINGWAY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLACINGWAY" ADD CONSTRAINT "PK_PLACINGWAY" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLACINGWAY" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLACINGWAY" MODIFY ("OOSKEY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLACINGWAY" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLACINGWAY" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLACINGWAY" MODIFY ("ACTUAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCATTACH
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCATTACH" ADD CONSTRAINT "PK_DOCATTACH" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCATTACH" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCATTACH" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCATTACH" MODIFY ("ATTACH_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCATTACH" ADD CONSTRAINT "UQ_DOCATTACH" UNIQUE ("DOCUMENT_ID", "ATTACH_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BUDGETLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."BUDGETLINE" ADD CONSTRAINT "PK_BUDGETLINE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."BUDGETLINE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGETLINE" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGETLINE" MODIFY ("ESTIMATE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGETLINE" MODIFY ("RECIPIENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGETLINE" MODIFY ("FINYEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGETLINE" MODIFY ("ASSIGN_AMT1" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGETLINE" MODIFY ("REST_ASSIGN_AMT1" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGETLINE" MODIFY ("ASSIGN_AMT2" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGETLINE" MODIFY ("REST_ASSIGN_AMT2" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGETLINE" MODIFY ("ASSIGN_AMT3" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGETLINE" MODIFY ("REST_ASSIGN_AMT3" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BUDGETLINE" ADD CONSTRAINT "UQ_BUDGETLINE" UNIQUE ("ESTIMATE_ID", "RECIPIENT_ID", "CODE1", "CODE2", "CODE3", "CODE4", "CODE5", "CODE6", "CODE7", "CODE8", "CODE9", "CODE10", "FINYEAR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RPL$CONSTRAINTFIELDS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPL$CONSTRAINTFIELDS" ADD CONSTRAINT "PK_RPL$CONSTRAINTFIELDS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RPL$CONSTRAINTFIELDS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPL$CONSTRAINTFIELDS" MODIFY ("RPL$CONSTRAINTS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPL$CONSTRAINTFIELDS" MODIFY ("ENUM_ORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPL$CONSTRAINTFIELDS" MODIFY ("FIELDNAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPL$CONSTRAINTFIELDS" MODIFY ("TARGET_FIELDNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SUPPORTCRYPTOLIB
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIB" ADD CONSTRAINT "CK_SUPPORTCRYPTOLIB_LIBTYPE" CHECK (LibType in ('WIN_CSP', 'XMLDSIG', 'XADES', 'JCA')) ENABLE;
 
  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIB" ADD CONSTRAINT "PK_SUPPORTCRYPTOLIB" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIB" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIB" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIB" MODIFY ("LIBTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SUPPLYPLACE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SUPPLYPLACE" ADD CONSTRAINT "PK_SUPPLYPLACE" PRIMARY KEY ("GOODSID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SUPPLYPLACE" MODIFY ("GOODSID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SUPPLYPLACE" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SUPPLYPLACE" MODIFY ("TERRITORYCODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GOODSGROUPDOCDETAIL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSGROUPDOCDETAIL" ADD CONSTRAINT "PK_GOODSDOCDETAIL" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSGROUPDOCDETAIL" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSGROUPDOCDETAIL" MODIFY ("VERSION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSGROUPDOCDETAIL" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSGROUPDOCDETAIL" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSGROUPDOCDETAIL" ADD CONSTRAINT "UK_GOODSDOCDETAIL" UNIQUE ("DOCUMENT_ID", "GROUPCODE", "OKDP_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CSGOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CSGOODSPROP" ADD CONSTRAINT "PK_CSGOODSPROP" PRIMARY KEY ("CONSOLID_ID", "GOODSPOS", "SEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CSGOODSPROP" MODIFY ("CONSOLID_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CSGOODSPROP" MODIFY ("GOODSPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CSGOODSPROP" MODIFY ("SEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CSGOODSPROP" MODIFY ("PROPTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CSGOODSPROP" MODIFY ("CAPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APPOINTMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."APPOINTMENT" ADD CONSTRAINT "PK_APPOINTMENT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."APPOINTMENT" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ROLEEVENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLEEVENT" ADD CONSTRAINT "PK_ROLEEVENT" PRIMARY KEY ("USERROLE_ID", "DOCUMENTCLASS_ID", "DISPSTATUS_ID", "EVENT_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEEVENT" MODIFY ("USERROLE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEEVENT" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEEVENT" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEEVENT" MODIFY ("EVENT_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCCATEGORY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCCATEGORY" ADD CONSTRAINT "PK_DOCCATEGORY" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCCATEGORY" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCATEGORY" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCATEGORY" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCATEGORY" MODIFY ("SYSTEM_FLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCATEGORY" ADD CONSTRAINT "UQ_DOCCATEGORY_CODE" UNIQUE ("CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table GOODSGROUPPURCHASEMODE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSGROUPPURCHASEMODE" ADD CONSTRAINT "PK_GOODSGROUPPURCHASEMODE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSGROUPPURCHASEMODE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSGROUPPURCHASEMODE" MODIFY ("PURCHASEMODE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSGROUPPURCHASEMODE" MODIFY ("GOODSGROUP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FGROUP" ADD CONSTRAINT "PK_FGROUP" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FGROUP" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FGROUP" MODIFY ("OBJECT_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FGROUP" MODIFY ("FGROUPHEADER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FGROUP" MODIFY ("FG_VERSION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FGROUP" MODIFY ("FG_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FGROUP" MODIFY ("ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FGROUP" ADD CONSTRAINT "UQ_FGROUP" UNIQUE ("FGROUPHEADER_ID", "FG_VERSION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DBUPDATE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DBUPDATE" ADD CONSTRAINT "PK_DBUPDATE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DBUPDATE" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TENDERLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TENDERLINE" ADD CONSTRAINT "PK_TENDERLINE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."TENDERLINE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERLINE" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERLINE" MODIFY ("TENDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERLINE" MODIFY ("CRITERIONLINESEQORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERLINE" MODIFY ("CRITERIONPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERLINE" ADD CONSTRAINT "UQ_TENDERLINETENDERLI" UNIQUE ("TENDER_ID", "CRITERIONLINESEQORDER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DOCRETENTIONSTATUS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCRETENTIONSTATUS" ADD CONSTRAINT "DOCRETENTIONSTATUS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCRETENTIONSTATUS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCRETENTIONSTATUS" MODIFY ("DOCRETENTION_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCATTACHEX
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCATTACHEX" ADD CONSTRAINT "PK_DOCATTACHEX" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCATTACHEX" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCATTACHEX" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCATTACHEX" MODIFY ("ATTACH_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCATTACHEX" MODIFY ("DEVICE_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ESCHECKRULEREQUISITES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ESCHECKRULEREQUISITES" ADD CONSTRAINT "CK_ECHKRULREQS_ITEM_CONDITION" CHECK (item_condition in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ESCHECKRULEREQUISITES" ADD CONSTRAINT "PK_ESCHECKRULEREQUISITES" PRIMARY KEY ("ESCHECKRULE_ID", "RULEREQUISITE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ESCHECKRULEREQUISITES" MODIFY ("ESCHECKRULE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ESCHECKRULEREQUISITES" MODIFY ("RULEREQUISITE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ESCHECKRULEREQUISITES" MODIFY ("ITEM_CONDITION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APPOBJ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."APPOBJ" ADD CONSTRAINT "PK_APPOBJ" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."APPOBJ" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."APPOBJ" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."APPOBJ" MODIFY ("SHOWORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."APPOBJ" ADD CONSTRAINT "UQ_APPOBJ_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CLAIMPENALTYCHANGEDOCINFO
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CLAIMPENALTYCHANGEDOCINFO" ADD CONSTRAINT "PK_PENALTYCHANGEDOCINFO" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CLAIMPENALTYCHANGEDOCINFO" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMPENALTYCHANGEDOCINFO" MODIFY ("CLAIM_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMPENALTYCHANGEDOCINFO" MODIFY ("DOCDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMPENALTYCHANGEDOCINFO" MODIFY ("CAPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORG" ADD CONSTRAINT "CK_ORG_IKU" CHECK (length(IKU) = 20) ENABLE;
 
  ALTER TABLE "GZVLG"."ORG" ADD CONSTRAINT "CK_ORG_ISCONTRACTOR" CHECK (IsContractor in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORG" ADD CONSTRAINT "CK_ORG_ISDOCFEEBAIL" CHECK (isDocFeeBail in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORG" ADD CONSTRAINT "CK_ORG_IS_TAXCODE_FREE" CHECK (isTaxCodeFree in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORG" ADD CONSTRAINT "CK_ORG_ORGTYPE" CHECK (OrgType IN (0, 1, 2, 3)) ENABLE;
 
  ALTER TABLE "GZVLG"."ORG" ADD CONSTRAINT "PK_ORG" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORG" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORG" MODIFY ("ISDOCFEEBAIL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORG" MODIFY ("ISTAXCODEFREE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORG" MODIFY ("ISCONTRACTOR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORG" MODIFY ("ISPLPUBLIC" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORG" MODIFY ("ORGTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORG" ADD CHECK (isPlPublic in (0,1)) ENABLE;
--------------------------------------------------------
--  Constraints for Table BANK
--------------------------------------------------------

  ALTER TABLE "GZVLG"."BANK" ADD CONSTRAINT "CK_BANK_IS_ACTUAL" CHECK (IS_ACTUAL IN (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."BANK" ADD CONSTRAINT "PK_BANK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."BANK" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BANK" MODIFY ("BIC" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BANK" MODIFY ("IS_ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BANK" ADD CONSTRAINT "UQ_BANK_BIC" UNIQUE ("BIC")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DOCJOURNAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCJOURNAL" ADD CONSTRAINT "PK_DOCJOURNAL" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCJOURNAL" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCJOURNAL" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCJOURNAL" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCJOURNAL" MODIFY ("OLD_DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCJOURNAL" MODIFY ("ACTION_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PERSON
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PERSON" ADD CONSTRAINT "PK_PERSON" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PERSON" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN3PURCHASEGOODSOKVED
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODSOKVED" ADD CONSTRAINT "PK_P3GOODSOKVED" PRIMARY KEY ("PLAN3PURCHASEDOC_ID", "GOODSPOS", "OKVED")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODSOKVED" MODIFY ("PLAN3PURCHASEDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODSOKVED" MODIFY ("GOODSPOS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FCTGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FCTGOODS" ADD CONSTRAINT "CK_FCTGOODS_STATUS" CHECK (Status in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."FCTGOODS" ADD CONSTRAINT "PK_FCTGOODS" PRIMARY KEY ("FACT_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FCTGOODS" MODIFY ("FACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FCTGOODS" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FCTGOODS" MODIFY ("GROUPCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FCTGOODS" MODIFY ("QTY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FCTGOODS" MODIFY ("PRICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FCTGOODS" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FCTGOODS" MODIFY ("STATUS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FCTGOODS" MODIFY ("USEAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FCTGOODS" MODIFY ("UNITNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ABANDONEDREASON
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ABANDONEDREASON" ADD CONSTRAINT "CHK_ABANDONEDREASON_ACTUAL" CHECK (Actual in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ABANDONEDREASON" ADD CONSTRAINT "PK_ABANDONEDREASON" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ABANDONEDREASON" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ABANDONEDREASON" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ABANDONEDREASON" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ABANDONEDREASON" MODIFY ("REASONTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ABANDONEDREASON" MODIFY ("DOCTYPECODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ABANDONEDREASON" MODIFY ("PLACINGWAYCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ABANDONEDREASON" MODIFY ("ACTUAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OFFERDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "CK_OFFERDOC_FROM_WEB" CHECK (from_web in (0,1,2,3)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "CK_OFFERDOC_ISCORRECTED" CHECK (iscorrected in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "CK_OFFERDOC_ISGROUPSMOREONE" CHECK (IsGroupsMoreOne is null or IsGroupsMoreOne=1) ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "CK_OFFERDOC_VENDORACCTYPE" CHECK (VendorAccType in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "CK_OFFER_IS_TAXCODE_FREE" CHECK (VendorIsTaxCodeFree in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "CK_OFFER_ORGTYPE" CHECK (VendorOrgType IN (0, 1, 2, 3)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "PK_OFFERDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFFERDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFFERDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFFERDOC" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFFERDOC" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFFERDOC" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFFERDOC" MODIFY ("FROM_WEB" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFFERDOC" MODIFY ("ISCORRECTED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFFERDOC" MODIFY ("VENDORACCTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFFERDOC" MODIFY ("VENDORORGTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFFERDOC" MODIFY ("VENDORISTAXCODEFREE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CLNDTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CLNDTYPE" ADD CONSTRAINT "PK_CLNDTYPE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CLNDTYPE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLNDTYPE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLNDTYPE" MODIFY ("CLND_YEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLNDTYPE" ADD CONSTRAINT "UQ_CLNDTYPE" UNIQUE ("CLND_YEAR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CURHISTORY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CURHISTORY" ADD CONSTRAINT "PK_CURHISTORY" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CURHISTORY" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CURHISTORY" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CURHISTORY" MODIFY ("CURRENCY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CURHISTORY" MODIFY ("DT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CURHISTORY" ADD CONSTRAINT "UQ_CURHISTORY" UNIQUE ("BUDGET_ID", "CURRENCY_ID", "DT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ALTGOODSGROUPLINK
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ALTGOODSGROUPLINK" ADD CONSTRAINT "PK_ALTGOODSGROUPLINK" PRIMARY KEY ("TYPE_ID", "GOODSGROUP_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ALTGOODSGROUPLINK" MODIFY ("TYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ALTGOODSGROUPLINK" MODIFY ("GOODSGROUP_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ALTGOODSGROUPLINK" MODIFY ("ALTGOODSGROUP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONPLACE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONPLACE" ADD CONSTRAINT "CK_CONPLACE_CALCPRICE" CHECK (calcprice in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONPLACE" ADD CONSTRAINT "CK_CONPLACE_USEAMOUNT" CHECK (useamount in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONPLACE" ADD CONSTRAINT "PK_CONPLACE" PRIMARY KEY ("CONTRACT_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONPLACE" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONPLACE" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONPLACE" MODIFY ("COUNTRY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONPLACE" MODIFY ("TERRITORYCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONPLACE" MODIFY ("SUPPLYAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONPLACE" MODIFY ("USEAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONPLACE" MODIFY ("CALCPRICE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PACKTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PACKTYPE" ADD CONSTRAINT "PK_PACKTYPE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PACKTYPE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PACKTYPE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PACKTYPE" ADD CONSTRAINT "UQ_PACKTYPE_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CMPFEATURE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPFEATURE" ADD CONSTRAINT "PK_CMPFEATURE" PRIMARY KEY ("ORDER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPFEATURE" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPFEATURE" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPFEATURE" MODIFY ("PLACEMENTFEATURE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPFEATURE" MODIFY ("PREFVALUE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CLNDDAY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CLNDDAY" ADD CONSTRAINT "PK_CLNDDAY" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CLNDDAY" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLNDDAY" MODIFY ("CLNDTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLNDDAY" MODIFY ("CLNDDAYTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLNDDAY" MODIFY ("CLND_DAY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLNDDAY" ADD CONSTRAINT "UQ_CLNDDAY" UNIQUE ("CLNDTYPE_ID", "CLND_DAY")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CURRENCY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CURRENCY" ADD CONSTRAINT "PK_CURRENCY" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CURRENCY" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CURRENCY" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CURRENCY" ADD CONSTRAINT "UQ_CURRENCY_CODE" UNIQUE ("CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ORGROLES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGROLES" ADD CONSTRAINT "PK_ORGROLES" PRIMARY KEY ("ORG_ID", "ORGROLE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGROLES" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGROLES" MODIFY ("ORGROLE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCDIGESTREQUISITES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCDIGESTREQUISITES" ADD CONSTRAINT "CK_DOCDIGREQS_ITEM_CONDITION" CHECK (item_condition in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."DOCDIGESTREQUISITES" ADD CONSTRAINT "PK_DOCDIGESREQUISITES" PRIMARY KEY ("DOCDIGESTRULE_ID", "RULEREQUISITE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCDIGESTREQUISITES" MODIFY ("DOCDIGESTRULE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCDIGESTREQUISITES" MODIFY ("RULEREQUISITE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCDIGESTREQUISITES" MODIFY ("ITEM_CONDITION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TER_TREE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TER_TREE" ADD CONSTRAINT "PK_TER_TREE" PRIMARY KEY ("TER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."TER_TREE" MODIFY ("TER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TER_TREE" MODIFY ("TREE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TER_TREE" MODIFY ("PATH" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CEPENALTY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CEPENALTY" ADD CONSTRAINT "CK_CEPENALTY_CONPARTY" CHECK (contractParty in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CEPENALTY" ADD CONSTRAINT "CK_CEPENALTY_PENTYPE" CHECK (penaltyType in (1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."CEPENALTY" ADD CONSTRAINT "CK_CEPENALTY_REASON" CHECK (penaltyReason in (0,1,2,4,5)) ENABLE;
 
  ALTER TABLE "GZVLG"."CEPENALTY" ADD CONSTRAINT "PK_CEPENALTY" PRIMARY KEY ("CONTRACTEXECDOC_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CEPENALTY" MODIFY ("CONTRACTEXECDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CEPENALTY" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CEPENALTY" MODIFY ("PENALTYREASON" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONCONFIRMINGDOCS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONCONFIRMINGDOCS" ADD CONSTRAINT "CK_CONCONFIRMINGDOCS_DOCCODE" CHECK (DocCode in (1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONCONFIRMINGDOCS" ADD CONSTRAINT "PK_CONCONFIRMINGDOCS" PRIMARY KEY ("CONTRACT_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONCONFIRMINGDOCS" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONCONFIRMINGDOCS" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONCONFIRMINGDOCS" MODIFY ("DOCCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONCONFIRMINGDOCS" MODIFY ("DOCDATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PANELITEM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PANELITEM" ADD CONSTRAINT "PK_PANELITEM" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PANELITEM" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PANELITEM" MODIFY ("PANEL_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PANELITEM" MODIFY ("SHOW_ORDER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PANELITEM" MODIFY ("SUBSYSTEM" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONBANKGUARANTEERETURN
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONBANKGUARANTEERETURN" ADD CONSTRAINT "CK_CNBNKGRNTRTRN_INF" CHECK (Info is null or Info in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONBANKGUARANTEERETURN" ADD CONSTRAINT "PK_CNBNKGRNTRTRN" PRIMARY KEY ("CONTRACT_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONBANKGUARANTEERETURN" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONBANKGUARANTEERETURN" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONBANKGUARANTEERETURN" MODIFY ("RETURNDATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table UNIT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."UNIT" ADD CONSTRAINT "PK_UNIT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."UNIT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."UNIT" MODIFY ("IS_ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."UNIT" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."UNIT" ADD CONSTRAINT "UQ_UNIT_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PLAN2ARRANGEMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "CHK_P2ARRANGEMENT_ENTERPRISE" CHECK (IsEnterprise in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "CHK_P2ARRANGEMENT_ORDERFORM" CHECK (OrderForm in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "CHK_P2ARRANGEMENT_QUANTITYUDF" CHECK (QuantityUndefined in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "CHK_P2ARRANGEMENT_SMALL" CHECK (IsSmall in (0, 1, 2)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "CHK_P2ARRANGEMENT_STATUS" CHECK (Status in (0,1,2,3,4,5)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "CK_P2ARRANGEMENT_EFORM" CHECK (EForm in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "PK_PLAN2ARRANGEMENT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" MODIFY ("PLAN2GOODS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" MODIFY ("STATUS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" MODIFY ("ORDERFORM" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" MODIFY ("QUANTITYUNDEFINED" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GOODSGROUP_TREE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSGROUP_TREE" ADD CONSTRAINT "PK_GOODSGROUP_TREE" PRIMARY KEY ("GROUP_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSGROUP_TREE" MODIFY ("GROUP_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSGROUP_TREE" MODIFY ("TREE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RQOPTIMIZEDPRICE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQOPTIMIZEDPRICE" ADD CONSTRAINT "CK_RQOPTIMIZEDPRICE_PERCENT" CHECK (Percent BETWEEN 0 AND 100) ENABLE;
 
  ALTER TABLE "GZVLG"."RQOPTIMIZEDPRICE" ADD CONSTRAINT "PK_RQOPTIMIZEDPRICE" PRIMARY KEY ("REQUEST_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RQOPTIMIZEDPRICE" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQOPTIMIZEDPRICE" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQOPTIMIZEDPRICE" MODIFY ("PERCENT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQOPTIMIZEDPRICE" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CERETURNPENALTY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CERETURNPENALTY" ADD CONSTRAINT "PK_CERETPENALTY" PRIMARY KEY ("CONTRACTEXECDOC_ID", "PENALTYPOS", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CERETURNPENALTY" MODIFY ("CONTRACTEXECDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERETURNPENALTY" MODIFY ("PENALTYPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CERETURNPENALTY" MODIFY ("POS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORGOOS223FZUSER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGOOS223FZUSER" ADD CONSTRAINT "PK_ORGOOS223FZUSER" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGOOS223FZUSER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGOOS223FZUSER" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGOOS223FZUSER" MODIFY ("SYSUSER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGOOS223FZUSER" MODIFY ("LOGIN" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGOOS223FZUSER" MODIFY ("PSWD" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGOOS223FZUSER" ADD CONSTRAINT "UQ_ORGOOS223FZUSER" UNIQUE ("ORG_ID", "SYSUSER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CONTRACTTEMPLATEDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONTRACTTEMPLATEDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTTEMPLATEDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTTEMPLATEDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTTEMPLATEDOC" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTTEMPLATEDOC" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTTEMPLATEDOC" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTTEMPLATEDOC" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PURCHASEMETHOD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PURCHASEMETHOD" ADD CONSTRAINT "CK_PURCHASEMETHOD_ACTUAL" CHECK (Actual IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEMETHOD" ADD CONSTRAINT "CK_PURCHASEMETHOD_ELECTRO" CHECK (Electronic IN (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEMETHOD" ADD CONSTRAINT "PK_PURCHASEMETHOD" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEMETHOD" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEMETHOD" MODIFY ("OOSKEY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEMETHOD" MODIFY ("ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEMETHOD" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEMETHOD" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEMETHOD" MODIFY ("ELECTRONIC" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEMETHOD" ADD CONSTRAINT "UQ_PURCHASEMETHOD_CODE" UNIQUE ("CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PROCTREE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PROCTREE" ADD CONSTRAINT "CK_PROCTREE_PARAMS_ONLY" CHECK (params_only in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."PROCTREE" ADD CONSTRAINT "PK_PROCTREE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PROCTREE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PROCTREE" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PROCTREE" MODIFY ("COND_VALUE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PROCTREE" MODIFY ("PARAMS_ONLY" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SYSUSER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SYSUSER" ADD CONSTRAINT "CK_SYSUSER_ARCHIVED" CHECK (archived in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."SYSUSER" ADD CONSTRAINT "CK_SYSUSER_FORCE_CP_MODE" CHECK (force_cp_mode in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."SYSUSER" ADD CONSTRAINT "CK_SYSUSER_ROLES" CHECK (org_roles in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."SYSUSER" ADD CONSTRAINT "CK_SYSUSER_SIGNDEMAND" CHECK (SignDemand in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."SYSUSER" ADD CONSTRAINT "CK_SYSUSER_USER_LOCKED" CHECK (user_locked in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."SYSUSER" ADD CONSTRAINT "PK_SYSUSER" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SYSUSER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSUSER" MODIFY ("USERNAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSUSER" MODIFY ("ORG_ROLES" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSUSER" MODIFY ("SIGNDEMAND" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSUSER" MODIFY ("USER_LOCKED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSUSER" MODIFY ("FORCE_CP_MODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSUSER" MODIFY ("USER_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSUSER" MODIFY ("ARCHIVED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSUSER" MODIFY ("DOMEN_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSUSER" MODIFY ("NO_PASSWORD_EXPIRY_CHECK" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSUSER" ADD CONSTRAINT "UQ_SYSUSER" UNIQUE ("USERNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CLIENTOBJECTCOMMENTS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CLIENTOBJECTCOMMENTS" ADD CONSTRAINT "PK_CLIENTOBJECTCOMMENTS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CLIENTOBJECTCOMMENTS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLIENTOBJECTCOMMENTS" MODIFY ("CLIENTOBJECT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLIENTOBJECTCOMMENTS" ADD CONSTRAINT "UQ_CLIENTOBJECTCOMMENTS" UNIQUE ("CLIENTOBJECT_ID", "BUDGET_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CMPCOMPETITOR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPCOMPETITOR" ADD CONSTRAINT "CHK_CMPCOMPETITOR_ISQUALIFY" CHECK (ISQUALIFY is null or ISQUALIFY in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCOMPETITOR" ADD CONSTRAINT "CHK_CMPCOMPETITOR_ISSATISFY" CHECK (ISSATISFY is null or ISSATISFY in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCOMPETITOR" ADD CONSTRAINT "CHK_CMPCOMPETITOR_PREFERENCE" CHECK (PREFERENCE in (0,1,2,3)) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCOMPETITOR" ADD CONSTRAINT "PK_CMPCOMPETITOR" PRIMARY KEY ("ORDER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCOMPETITOR" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCOMPETITOR" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCOMPETITOR" MODIFY ("PREFERENCE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCOMPETITOR" MODIFY ("ABSENT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPCOMPETITOR" ADD CHECK (Absent in (0,1,2)) ENABLE;
--------------------------------------------------------
--  Constraints for Table OOSNOTIFICATIONLOT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSNOTIFICATIONLOT" ADD CONSTRAINT "CK_OOSNOTIFICATIONLOT_ISENT" CHECK (IsEnterprise in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OOSNOTIFICATIONLOT" ADD CONSTRAINT "PK_OOSNOTIFICATIONLOT" PRIMARY KEY ("ID", "NOTIFICATION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OOSNOTIFICATIONLOT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSNOTIFICATIONLOT" MODIFY ("NOTIFICATION_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSNOTIFICATIONLOT" MODIFY ("ORDINALNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSNOTIFICATIONLOT" MODIFY ("CUSTOMERCOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSNOTIFICATIONLOT" MODIFY ("ISENTERPRISE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CAVILDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CAVILDOC" ADD CONSTRAINT "PK_CAVILDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CAVILDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CAVILDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CAVILDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EQUALITY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."EQUALITY" ADD CONSTRAINT "PK_EQUALITY" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."EQUALITY" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."EQUALITY" MODIFY ("NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ATTACHCATEGORIES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ATTACHCATEGORIES" ADD CONSTRAINT "PK_ATTACHCATEGORIES" PRIMARY KEY ("DOCATTACHEX_ID", "DOCCATEGORY_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ATTACHCATEGORIES" MODIFY ("DOCATTACHEX_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ATTACHCATEGORIES" MODIFY ("DOCCATEGORY_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PROPTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PROPTYPE" ADD CONSTRAINT "PK_PROPTYPE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PROPTYPE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PROPTYPE" MODIFY ("CAPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CLAIMDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CLAIMDOC" ADD CONSTRAINT "CK_CLAIMDOC_PENALTYCHANGETYPE" CHECK (Penalty_Change_Type is null or Penalty_Change_Type in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CLAIMDOC" ADD CONSTRAINT "CK_CLAIMDOC_PENTYPE" CHECK (penalty_type in (0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."CLAIMDOC" ADD CONSTRAINT "CK_CLAIMDOC_REASON" CHECK (reason in (0,1,2,3,4,5)) ENABLE;
 
  ALTER TABLE "GZVLG"."CLAIMDOC" ADD CONSTRAINT "PK_CLAIMDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CLAIMDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMDOC" MODIFY ("OPERTYPE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMDOC" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMDOC" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMDOC" MODIFY ("REASON" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMDOC" MODIFY ("PENALTY_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMDOC" MODIFY ("OUTSTANDINGAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMDOC" MODIFY ("DELAYDAYS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMDOC" MODIFY ("EXECUTIONDAYS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CLAIMDOC" MODIFY ("PENALTY_RETURN_AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLANPOSITIONNUMBERERROR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLANPOSITIONNUMBERERROR" ADD CONSTRAINT "PK_PLANPOSITIONNUMBERERR" PRIMARY KEY ("DOCUMENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLANPOSITIONNUMBERERROR" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ESCHECKRULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ESCHECKRULE" ADD CONSTRAINT "CK_ESCHECKRULE_ISACTIVE" CHECK (isActive in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."ESCHECKRULE" ADD CONSTRAINT "PK_ESCHECKRULE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ESCHECKRULE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ESCHECKRULE" MODIFY ("ISACTIVE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ESCHECKRULE" MODIFY ("FGROUPHEADER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RQCONDEALRESP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQCONDEALRESP" ADD CONSTRAINT "PK_RQCONDEALRESP" PRIMARY KEY ("REQUEST_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RQCONDEALRESP" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQCONDEALRESP" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQCONDEALRESP" MODIFY ("PERSONAL_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SYSEVENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SYSEVENT" ADD CONSTRAINT "CK_SYSMSG_MSGTYPE" CHECK (msgtype in (0,1,2)) ENABLE;
 
  ALTER TABLE "GZVLG"."SYSEVENT" ADD CONSTRAINT "PK_SYSEVENT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SYSEVENT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSEVENT" MODIFY ("CREATETIME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSEVENT" MODIFY ("MSGTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSEVENT" MODIFY ("SRC" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSEVENT" MODIFY ("SERVERNAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SYSEVENT" MODIFY ("REPORT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table LIABILITYEXPENSE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."LIABILITYEXPENSE" ADD CONSTRAINT "CK_LIABILITYEXPENSE_ACTUAL" CHECK (IS_ACTUAL in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."LIABILITYEXPENSE" ADD CONSTRAINT "PK_LIABILITYEXPENSE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."LIABILITYEXPENSE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LIABILITYEXPENSE" MODIFY ("IS_ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LIABILITYEXPENSE" MODIFY ("CREDENTIAL_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LIABILITYEXPENSE" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LIABILITYEXPENSE" MODIFY ("FINYEAR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RQQUALREQ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQQUALREQ" ADD CONSTRAINT "CK_RQQUALREQ_QTYPE" CHECK (qType BETWEEN 0 AND 13) ENABLE;
 
  ALTER TABLE "GZVLG"."RQQUALREQ" ADD CONSTRAINT "PK_RQQUALREQ" PRIMARY KEY ("REQUEST_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RQQUALREQ" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQQUALREQ" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQQUALREQ" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RQQUALREQ" MODIFY ("QTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RPLVERSIONLOG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPLVERSIONLOG" MODIFY ("VER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLVERSIONLOG" MODIFY ("NUM_TRANSACTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLVERSIONLOG" MODIFY ("RPLTABLE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPLVERSIONLOG" MODIFY ("TASKJOURNAL_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ANYDATA
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ANYDATA" ADD CONSTRAINT "PK_ANYDATA" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ANYDATA" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ANYDATA" MODIFY ("DATA_KEY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ANYDATA" MODIFY ("STORAGE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ANYDATA" MODIFY ("DEVICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ANYDATA" ADD CONSTRAINT "UQ_ANYDATA" UNIQUE ("STORAGE", "DEVICE", "DATA_KEY")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CONREFUSALFACT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONREFUSALFACT" ADD CONSTRAINT "PK_CONREFUSALFACT" PRIMARY KEY ("CONTRACT_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONREFUSALFACT" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONREFUSALFACT" MODIFY ("POS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OFRQUALREQVAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRQUALREQVAL" ADD CONSTRAINT "PK_OFRQUALREQVAL" PRIMARY KEY ("OFFER_ID", "CMPQUALREQPOS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OFRQUALREQVAL" MODIFY ("OFFER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRQUALREQVAL" MODIFY ("CMPQUALREQPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRQUALREQVAL" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRQUALREQVAL" MODIFY ("QTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ROLEFUNC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLEFUNC" ADD CONSTRAINT "CK_ROLEOBJECT_ACCESS" CHECK (access_mode in (0,1,2,3)) ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEFUNC" ADD CONSTRAINT "PK_ROLEFUNC" PRIMARY KEY ("USERROLE_ID", "FUNUNIT_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEFUNC" MODIFY ("USERROLE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEFUNC" MODIFY ("FUNUNIT_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEFUNC" MODIFY ("ACCESS_MODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TYPEREQCRIT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TYPEREQCRIT" ADD CONSTRAINT "PK_TYPEREQCRIT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."TYPEREQCRIT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPEREQCRIT" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TYPEREQCRIT" MODIFY ("PURCHASEMODE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCDIGESTROLES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCDIGESTROLES" ADD CONSTRAINT "PK_DOCDIGESTROLES" PRIMARY KEY ("DOCDIGESTRULE_ID", "USERROLE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCDIGESTROLES" MODIFY ("DOCDIGESTRULE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCDIGESTROLES" MODIFY ("USERROLE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCDIGESTROLES" MODIFY ("SIGN_ORDER" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONCONTRACTOR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONCONTRACTOR" ADD CONSTRAINT "CK_CONCONTRACTOR_ISCULTURE" CHECK (OrgIsCulture IN (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONCONTRACTOR" ADD CONSTRAINT "CK_CONCONTRACTOR_ORGACCTYPE" CHECK (orgAccType in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONCONTRACTOR" ADD CONSTRAINT "CK_CONCONTRACTOR_ORGTYPE" CHECK (OrgOrgType IN (0, 1, 2, 3)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONCONTRACTOR" ADD CONSTRAINT "CK_CONTR_IS_TAXCODE_FREE" CHECK (OrgIsTaxCodeFree in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONCONTRACTOR" ADD CONSTRAINT "PK_CONCONTRACTOR" PRIMARY KEY ("CONTRACT_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONCONTRACTOR" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONCONTRACTOR" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONCONTRACTOR" MODIFY ("ORGACCTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONCONTRACTOR" MODIFY ("ORGORGTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONCONTRACTOR" MODIFY ("ORGISTAXCODEFREE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONCONTRACTOR" MODIFY ("ORGISCULTURE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ETPATTACH
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ETPATTACH" ADD CONSTRAINT "PK_ETPATTACH" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ETPATTACH" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ETPATTACH" MODIFY ("DOCATTACHEX_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ETPATTACH" ADD CONSTRAINT "UQ_ETPATTACH" UNIQUE ("DOCATTACHEX_ID", "ETP_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DBCONNECT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DBCONNECT" ADD CONSTRAINT "PK_DBCONNECT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DBCONNECT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DBCONNECT" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DBCONNECT" MODIFY ("URL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DBCONNECT" MODIFY ("USERNAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DBCONNECT" MODIFY ("PSWD" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DBCONNECT" MODIFY ("STATUS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DBCONNECT" MODIFY ("DBCONNECT_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DBCONNECT" ADD CONSTRAINT "UQ_DBCONNECT" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BANKGUARANTEEDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."BANKGUARANTEEDOC" ADD CONSTRAINT "CK_BANKGUARANTEEDOC_MODIFRSN" CHECK (ModificationReason IS NULL OR ModificationReason in ('M', 'C')) ENABLE;
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEDOC" ADD CONSTRAINT "PK_BANKGUARANTEEDOC" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEDOC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEDOC" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEDOC" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEDOC" MODIFY ("OOSKEY" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORGTURNOVER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGTURNOVER" ADD CONSTRAINT "PK_ORGTURNOVER" PRIMARY KEY ("ORG_ID", "YR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGTURNOVER" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGTURNOVER" MODIFY ("YR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGTURNOVER" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ORGTURNOVER" MODIFY ("CURRENCY_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OOS223PURCHNOTICELOTINFO
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOS223PURCHNOTICELOTINFO" ADD CONSTRAINT "PK_OOS223PURCHNOTICELOTINFO" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OOS223PURCHNOTICELOTINFO" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOS223PURCHNOTICELOTINFO" MODIFY ("OOS223PURCHASENOTICEINFO_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RPL$CONSTRAINTS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPL$CONSTRAINTS" ADD CONSTRAINT "PK_RPL$CONSTRAINTS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RPL$CONSTRAINTS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPL$CONSTRAINTS" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPL$CONSTRAINTS" MODIFY ("TRIGGERNAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPL$CONSTRAINTS" MODIFY ("TABLENAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPL$CONSTRAINTS" MODIFY ("TARGET_TABLENAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPL$CONSTRAINTS" ADD CONSTRAINT "UQ_RPL$CONSTRAINTS" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RPL$CONSTRAINTS" ADD CONSTRAINT "UQ_RPL$CONSTRAINTS_TRIG" UNIQUE ("TRIGGERNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CONORGSTATUS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONORGSTATUS" ADD CONSTRAINT "PK_CONORGSTATUS" PRIMARY KEY ("CONTRACT_ID", "ORGSTATUS_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONORGSTATUS" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONORGSTATUS" MODIFY ("ORGSTATUS_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SCHEXPDOCS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SCHEXPDOCS" ADD CONSTRAINT "PK_SCHEXPDOCS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SCHEXPDOCS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SCHEXPDOCS" MODIFY ("DOCCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SCHEXPDOCS" MODIFY ("STATUSES" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SCHEXPDOCS" MODIFY ("ROLES" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONSUPPLYSHEDULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONSUPPLYSHEDULE" ADD CONSTRAINT "PK_CONSUPPLYSHEDULE" PRIMARY KEY ("CONTRACT_ID", "GOODSPOS", "PLACEPOS", "SUPPLYDATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONSUPPLYSHEDULE" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONSUPPLYSHEDULE" MODIFY ("GOODSPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONSUPPLYSHEDULE" MODIFY ("PLACEPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONSUPPLYSHEDULE" MODIFY ("SUPPLYDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONSUPPLYSHEDULE" MODIFY ("QTY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONSUPPLYSHEDULE" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ROLEORG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLEORG" ADD CONSTRAINT "CK_ROLEORG_ACCESS" CHECK (access_mode in (0,1,3)) ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEORG" ADD CONSTRAINT "PK_ROLEORG" PRIMARY KEY ("USERROLE_ID", "ORG_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEORG" MODIFY ("USERROLE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEORG" MODIFY ("ORG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEORG" MODIFY ("ACCESS_MODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN3PURCHASEFEATURE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN3PURCHASEFEATURE" ADD CONSTRAINT "PK_P3PURFEATURE" PRIMARY KEY ("PLAN3PURCHASEDOC_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEFEATURE" MODIFY ("PLAN3PURCHASEDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEFEATURE" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEFEATURE" MODIFY ("PLACEMENTFEATURE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEFEATURE" MODIFY ("PREFVALUE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OOSORGANIZATION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSORGANIZATION" ADD CONSTRAINT "CHK_FACTFILLEDMANUALLY" CHECK (factFilledManually in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OOSORGANIZATION" ADD CONSTRAINT "PK_OOSORGANIZATION" PRIMARY KEY ("REGNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OOSORGANIZATION" MODIFY ("REGNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSORGANIZATION" MODIFY ("FACTFILLEDMANUALLY" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN2DOCCHILD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2DOCCHILD" ADD CONSTRAINT "PK_PLAN2DOCCHILD" PRIMARY KEY ("DOC_ID", "PLAN2DOC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DOCCHILD" MODIFY ("PLAN2DOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2DOCCHILD" MODIFY ("DOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2DOCCHILD" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SUPPORTCRYPTOLIBPARAM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIBPARAM" ADD CONSTRAINT "PK_SUPPORTCRYPTOLIBPARAM" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIBPARAM" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIBPARAM" MODIFY ("SUPPORTCRYPTOLIB_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIBPARAM" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIBPARAM" MODIFY ("VAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIBPARAM" ADD CONSTRAINT "UQ_SUPPORTCRYPTOLIBPARAM" UNIQUE ("SUPPORTCRYPTOLIB_ID", "NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TENDERLINECOMM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TENDERLINECOMM" ADD CONSTRAINT "PK_TENDERLINECOMM" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."TENDERLINECOMM" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERLINECOMM" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERLINECOMM" MODIFY ("TENDERLINE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERLINECOMM" MODIFY ("COMMEMBERPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERLINECOMM" ADD CONSTRAINT "UQ_TENDERLINECOMM" UNIQUE ("TENDERLINE_ID", "COMMEMBERPOS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table GOODSOKPDPURCHASEMODE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSOKPDPURCHASEMODE" ADD CONSTRAINT "PK_GOODSOKPDPURCHASEMODE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSOKPDPURCHASEMODE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKPDPURCHASEMODE" MODIFY ("PURCHASEMODE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."GOODSOKPDPURCHASEMODE" MODIFY ("GOODSOKPD_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DECREASON
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DECREASON" ADD CONSTRAINT "PK_DECREASON" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DECREASON" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DECREASON" MODIFY ("VERSION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DECREASON" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN2GOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2GOODS" ADD CONSTRAINT "CHECK_PLAN2GOODS" CHECK (goodsflag in (0,1,2,3,4)) ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" ADD CONSTRAINT "PK_PLAN2GOODS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" MODIFY ("PLAN2DOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" MODIFY ("GROUPCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" MODIFY ("PRICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" MODIFY ("QTY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" MODIFY ("AMOUNTARRANGED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" MODIFY ("PAYAMOUNTPROLONG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" MODIFY ("GOODSFLAG" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" MODIFY ("NECESSITY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" MODIFY ("CHANGE_PRICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" MODIFY ("CHANGE_QTY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" MODIFY ("CHANGE_AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" MODIFY ("RESULT_PRICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" MODIFY ("RESULT_QTY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" MODIFY ("RESULT_AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" MODIFY ("FROMPARENT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" MODIFY ("RECIPIENT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONPAYFACT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONPAYFACT" ADD CONSTRAINT "CK_CONPAYFACT_ISPREPAYMENT" CHECK (IsPrepayment in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONPAYFACT" ADD CONSTRAINT "PK_CONPAYFACT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONPAYFACT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONPAYFACT" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONPAYFACT" MODIFY ("CONTRACTORPOS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONPAYFACT" MODIFY ("PAYDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONPAYFACT" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONPAYFACT" MODIFY ("ISNOTFOREXPORTLINE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONPAYFACT" MODIFY ("ISPREPAYMENT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CDCAVILTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CDCAVILTYPE" ADD CONSTRAINT "PK_CDCAVILTYPE" PRIMARY KEY ("CAVILDOC_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CDCAVILTYPE" MODIFY ("CAVILDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CDCAVILTYPE" MODIFY ("POS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DESCRIPTION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DESCRIPTION" ADD CONSTRAINT "PK_DESCRIPTION" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DESCRIPTION" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REPSOURCE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REPSOURCE" ADD CONSTRAINT "CK_REPSOURCE_TYPE" CHECK (SourceType in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."REPSOURCE" ADD CONSTRAINT "PK_REPSOURCE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."REPSOURCE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPSOURCE" MODIFY ("SOURCETYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPSOURCE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."REPSOURCE" ADD CONSTRAINT "UQ_REPSOURCE_NAME" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ROLEBUDGET
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLEBUDGET" ADD CONSTRAINT "CK_ROLEBUDGET_ACCESS" CHECK (access_mode in (0,1,3)) ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEBUDGET" ADD CONSTRAINT "PK_ROLEBUDGET" PRIMARY KEY ("USERROLE_ID", "BUDGET_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEBUDGET" MODIFY ("USERROLE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEBUDGET" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEBUDGET" MODIFY ("ACCESS_MODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCCLASS_DISPSTATUS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCCLASS_DISPSTATUS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCLASS_DISPSTATUS" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCLASS_DISPSTATUS" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCLASS_DISPSTATUS" MODIFY ("PARDISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCLASS_DISPSTATUS" MODIFY ("PARALLEL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCCLASS_DISPSTATUS" ADD CONSTRAINT "UQ_DOCCLASS_DISPSTATUS" UNIQUE ("DOCUMENTCLASS_ID", "DISPSTATUS_ID", "PARDISPSTATUS_ID", "PARALLEL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCCLASS_DISPSTATUS" ADD CONSTRAINT "UQ_DOCCLASS_DISPSTATUS_ID" UNIQUE ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table LIABILITYCREDENTIAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."LIABILITYCREDENTIAL" ADD CONSTRAINT "PK_LIABILITYCREDENTIAL" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."LIABILITYCREDENTIAL" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LIABILITYCREDENTIAL" MODIFY ("STAGECODE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."LIABILITYCREDENTIAL" MODIFY ("LIABILITYGROUP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OFRGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRGOODS" ADD CONSTRAINT "PK_OFRGOODS" PRIMARY KEY ("OFFER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OFRGOODS" MODIFY ("OFFER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGOODS" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGOODS" MODIFY ("GROUPCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGOODS" MODIFY ("QTY" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGOODS" MODIFY ("PRICE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGOODS" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRGOODS" MODIFY ("UNITNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table INDUSTRYCODE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."INDUSTRYCODE" ADD CONSTRAINT "PK_INDUSTRYCODE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."INDUSTRYCODE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INDUSTRYCODE" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INDUSTRYCODE" MODIFY ("FINYEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INDUSTRYCODE" ADD CONSTRAINT "UQ_INDUSTRYCODE" UNIQUE ("BUDGET_ID", "FINYEAR", "ORG_ID", "CODE", "FOREIGNKEY")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table KBKLINEFIT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."KBKLINEFIT" ADD CONSTRAINT "PK_KBKLINEFIT" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."KBKLINEFIT" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."KBKLINEFIT" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."KBKLINEFIT" MODIFY ("FINYEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."KBKLINEFIT" MODIFY ("FINYEAR_TO" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."KBKLINEFIT" MODIFY ("ANAL_KIND" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PREFERENCEGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PREFERENCEGROUP" ADD CONSTRAINT "PK_PREFERENCEGROUP" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PREFERENCEGROUP" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PREFERENCEGROUP" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PREFERENCEGROUP" MODIFY ("CAPTION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PREFERENCEGROUP" MODIFY ("PURCHASEMODE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PREFERENCEGROUP" MODIFY ("BUDGETTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PREFERENCEGROUP" ADD CONSTRAINT "UQ_PREFERENCEGROUP" UNIQUE ("CUSTOMER_ID", "CAPTION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table OOSPRODUCTS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSPRODUCTS" ADD CONSTRAINT "PK_OOSPRODUCTS" PRIMARY KEY ("CODE", "NOTIFICATION_ID", "LOT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OOSPRODUCTS" MODIFY ("NOTIFICATION_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSPRODUCTS" MODIFY ("LOT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TENDERCRITERION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TENDERCRITERION" ADD CONSTRAINT "CK_TENDERCRITERION_BESTPARAM" CHECK (BestParam in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."TENDERCRITERION" ADD CONSTRAINT "CK_TENDERCRITERION_CALCMODE" CHECK (CalcMode in (0, 1)) ENABLE;
 
  ALTER TABLE "GZVLG"."TENDERCRITERION" ADD CONSTRAINT "CK_TENDERCRITERION_CTYPE" CHECK (CType in (0,1,2,3,4,5,6,7,8,9,10,11,12)) ENABLE;
 
  ALTER TABLE "GZVLG"."TENDERCRITERION" ADD CONSTRAINT "CK_TENDERCRITERION_ISACTUAL" CHECK (ISACTUAL in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."TENDERCRITERION" ADD CONSTRAINT "CK_TENDERCRITERION_ISCANCEL" CHECK (ISCANCELLABLE in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."TENDERCRITERION" ADD CONSTRAINT "CK_TENDERCRITERION_ISREQUIRED" CHECK (ISREQUIRED in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."TENDERCRITERION" ADD CONSTRAINT "CK_TENDERCRITERION_ISUNIQUE" CHECK (ISUNIQUE in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."TENDERCRITERION" ADD CONSTRAINT "PK_TENDERCRITERION" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."TENDERCRITERION" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERCRITERION" MODIFY ("ISACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERCRITERION" MODIFY ("ISUNIQUE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERCRITERION" MODIFY ("ISREQUIRED" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERCRITERION" MODIFY ("ISCANCELLABLE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."TENDERCRITERION" MODIFY ("OOSCODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GOODSBANPURCHASEMODE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSBANPURCHASEMODE" ADD CONSTRAINT "PK_GBPM" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSBANPURCHASEMODE" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ROLEATTACH
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLEATTACH" ADD CONSTRAINT "CK_ROLEATTACH_ACCESS" CHECK (access_mode in (0,1,2,3)) ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEATTACH" ADD CONSTRAINT "PK_ROLEATTACH" PRIMARY KEY ("USERROLE_ID", "DOCUMENTCLASS_ID", "DISPSTATUS_ID", "CATEGORY_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEATTACH" MODIFY ("USERROLE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEATTACH" MODIFY ("DOCUMENTCLASS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEATTACH" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEATTACH" MODIFY ("CATEGORY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."ROLEATTACH" MODIFY ("ACCESS_MODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONTRACTREASON
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONTRACTREASON" ADD CONSTRAINT "CK_CONTRACTREASON_ACTUAL" CHECK (actual in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTREASON" ADD CONSTRAINT "PK_CONTRACTREASON" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTREASON" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTREASON" MODIFY ("ACTUAL" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONTRACTREASON" MODIFY ("BUDGETTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FUNCMODULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FUNCMODULE" ADD CONSTRAINT "PK_FUNCMODULE" PRIMARY KEY ("FUNUNIT_ID", "MODULENAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."FUNCMODULE" MODIFY ("FUNUNIT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."FUNCMODULE" MODIFY ("MODULENAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SIGNEXPORTLOG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SIGNEXPORTLOG" ADD CONSTRAINT "CK_SIGNEXPORTLOG_SIGNTYPE" CHECK (SignType in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."SIGNEXPORTLOG" ADD CONSTRAINT "PK_SIGNEXPORTLOG" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."SIGNEXPORTLOG" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SIGNEXPORTLOG" MODIFY ("EXPORT_TIME" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SIGNEXPORTLOG" MODIFY ("SYSUSER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SIGNEXPORTLOG" MODIFY ("DISPSTATUS_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."SIGNEXPORTLOG" MODIFY ("SIGNTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONEXECSTEP2
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONEXECSTEP2" ADD CONSTRAINT "CK_CONEXECSTEP2_ISPAYIGNORED" CHECK (IsPayIgnored in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."CONEXECSTEP2" ADD CONSTRAINT "PK_CONEXECSTEP2" PRIMARY KEY ("CONTRACT_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CONEXECSTEP2" MODIFY ("CONTRACT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONEXECSTEP2" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONEXECSTEP2" MODIFY ("STEPNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONEXECSTEP2" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONEXECSTEP2" MODIFY ("FOREIGNAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONEXECSTEP2" MODIFY ("PLANSTARTDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONEXECSTEP2" MODIFY ("PLANFINISHDATE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CONEXECSTEP2" MODIFY ("ISPAYIGNORED" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table NUMUSAGE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NUMUSAGE" ADD CONSTRAINT "PK_NUMUSAGE" PRIMARY KEY ("NUMSEQUENCE_ID", "PERIOD_START", "NUM_VALUE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."NUMUSAGE" MODIFY ("NUMSEQUENCE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NUMUSAGE" MODIFY ("PERIOD_START" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NUMUSAGE" MODIFY ("NUM_VALUE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."NUMUSAGE" MODIFY ("USE_COUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CMPOOSMODIFICATION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPOOSMODIFICATION" ADD CONSTRAINT "CK_CMPOOSMODIF_AUTHORITYTYPE" CHECK (Change_AuthorityType in ('FA','FO','S','M')) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPOOSMODIFICATION" ADD CONSTRAINT "CK_CMPOOSMODIF_INITIATIVETYPE" CHECK (Change_InitiativeType is null or Change_InitiativeType in ('U','Z','US','S')) ENABLE;
 
  ALTER TABLE "GZVLG"."CMPOOSMODIFICATION" ADD CONSTRAINT "PK_CMPOOSMODIF" PRIMARY KEY ("ORDER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."CMPOOSMODIFICATION" MODIFY ("ORDER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."CMPOOSMODIFICATION" MODIFY ("POS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORGSTATUS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGSTATUS" ADD CONSTRAINT "PK_ORGSTATUS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."ORGSTATUS" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RPL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPL" ADD CONSTRAINT "CK_RPL_ACTIVE" CHECK (rpl_active in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."RPL" ADD CONSTRAINT "PK_RPL" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."RPL" MODIFY ("MASTER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPL" MODIFY ("CLIENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPL" MODIFY ("RPL_ACTIVE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPL" MODIFY ("SENT_VERSION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPL" MODIFY ("RECEIVED_VERSION" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."RPL" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCEXCHANGESCHEME
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCEXCHANGESCHEME" ADD CONSTRAINT "PK_DOCEXCHANGESCHEME" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."DOCEXCHANGESCHEME" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."DOCEXCHANGESCHEME" MODIFY ("CAPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OFRPLACE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRPLACE" ADD CONSTRAINT "CK_OFRPLACE_CALCPRICE" CHECK (calcprice in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFRPLACE" ADD CONSTRAINT "CK_OFRPLACE_USEAMOUNT" CHECK (useamount in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."OFRPLACE" ADD CONSTRAINT "PK_OFRPLACE" PRIMARY KEY ("OFFER_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OFRPLACE" MODIFY ("OFFER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRPLACE" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRPLACE" MODIFY ("COUNTRY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRPLACE" MODIFY ("TERRITORYCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRPLACE" MODIFY ("SUPPLYAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRPLACE" MODIFY ("USEAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OFRPLACE" MODIFY ("CALCPRICE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN3PURCHASELINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN3PURCHASELINE" ADD CONSTRAINT "PK_P3LINE" PRIMARY KEY ("PLAN3PURCHASEDOC_ID", "POS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASELINE" MODIFY ("PLAN3PURCHASEDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASELINE" MODIFY ("POS" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASELINE" MODIFY ("RECIPIENT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASELINE" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASELINE" MODIFY ("AMOUNT_2YEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASELINE" MODIFY ("AMOUNT_3YEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASELINE" MODIFY ("AMOUNT_FUTURE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table STOREDDOCUMENTS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."STOREDDOCUMENTS" ADD CONSTRAINT "PK_STOREDDOCUMENTS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."STOREDDOCUMENTS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."STOREDDOCUMENTS" MODIFY ("DOCUMENT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OOSORGROLE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSORGROLE" ADD CONSTRAINT "PK_OOSORGROLE" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."OOSORGROLE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSORGROLE" MODIFY ("CODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."OOSORGROLE" ADD CONSTRAINT "UQ_OOSORGROLE_CODE" UNIQUE ("CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PURCHASEPLAN
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PURCHASEPLAN" ADD CONSTRAINT "FK_PLAN" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("GROUPCODE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("PURCHASEPLANDOC_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("NECESSITY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("AMOUNT1" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("AMOUNT2" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("AMOUNT3" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("AMOUNT4" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("AMOUNT5" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("AMOUNT6" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("AMOUNT7" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("AMOUNT8" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("AMOUNT9" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("AMOUNT10" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("AMOUNT11" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("AMOUNT12" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("ENTAMOUNT1" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("ENTAMOUNT2" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("ENTAMOUNT3" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("ENTAMOUNT4" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("ENTAMOUNT5" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("ENTAMOUNT6" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("ENTAMOUNT7" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("ENTAMOUNT8" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("ENTAMOUNT9" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("ENTAMOUNT10" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("ENTAMOUNT11" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" MODIFY ("ENTAMOUNT12" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" ADD CONSTRAINT "UQ_PLAN" UNIQUE ("GROUPCODE", "CUSTOMER_ID", "CMPORG_ID", "PURCHASEMODE_ID", "PURCHASEPLANDOC_ID", "FINSRC_ID", "NECESSITY_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table INTERBUDGET
--------------------------------------------------------

  ALTER TABLE "GZVLG"."INTERBUDGET" ADD CONSTRAINT "CK_INTERBUDGETSYSTEMTYPE" CHECK (SystemType in (0,1)) ENABLE;
 
  ALTER TABLE "GZVLG"."INTERBUDGET" ADD CONSTRAINT "PK_INTERBUDGET" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."INTERBUDGET" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INTERBUDGET" MODIFY ("MSGSITE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INTERBUDGET" MODIFY ("BUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INTERBUDGET" MODIFY ("OUTERBUDGET_ID" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INTERBUDGET" MODIFY ("FINYEAR" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INTERBUDGET" MODIFY ("SYSTEMTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "GZVLG"."INTERBUDGET" ADD CONSTRAINT "UQ_INTERBUDGET_BUDGET" UNIQUE ("BUDGET_ID", "FINYEAR", "SYSTEMTYPE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
 
  ALTER TABLE "GZVLG"."INTERBUDGET" ADD CONSTRAINT "UQ_INTERBUDGET_OUTERBUDGET" UNIQUE ("MSGSITE_ID", "OUTERBUDGET_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ABANDONEDREASON
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ABANDONEDREASON" ADD CONSTRAINT "FK_ABANDONEDREASON_PM" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ALTGOODSGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ALTGOODSGROUP" ADD CONSTRAINT "FK_ALTGOODSGROUP_PARENT" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."ALTGOODSGROUP" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ALTGOODSGROUP" ADD CONSTRAINT "FK_ALTGOODSGROUP_TYPE" FOREIGN KEY ("TYPE_ID")
	  REFERENCES "GZVLG"."ALTGOODSGROUPTYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ALTGOODSGROUPLINK
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ALTGOODSGROUPLINK" ADD CONSTRAINT "FK_ALTGGLINK_ALTGOODSGROUP" FOREIGN KEY ("ALTGOODSGROUP_ID")
	  REFERENCES "GZVLG"."ALTGOODSGROUP" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."ALTGOODSGROUPLINK" ADD CONSTRAINT "FK_ALTGGLINK_GOODSGROUP" FOREIGN KEY ("GOODSGROUP_ID")
	  REFERENCES "GZVLG"."GOODSGROUP" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."ALTGOODSGROUPLINK" ADD CONSTRAINT "FK_ALTGGLINK_TYPE" FOREIGN KEY ("TYPE_ID")
	  REFERENCES "GZVLG"."ALTGOODSGROUPTYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ALTUNITFACTOR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ALTUNITFACTOR" ADD CONSTRAINT "FK_ALTUNIT_ALTGOODSGROUP" FOREIGN KEY ("ALTGOODSGROUP_ID")
	  REFERENCES "GZVLG"."ALTGOODSGROUP" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."ALTUNITFACTOR" ADD CONSTRAINT "FK_ALTUNIT_UNIT" FOREIGN KEY ("UNIT_ID")
	  REFERENCES "GZVLG"."UNIT" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table APPMODULEDEPENDENCY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."APPMODULEDEPENDENCY" ADD CONSTRAINT "FK_APPOBJ_APPMODULE1" FOREIGN KEY ("ID")
	  REFERENCES "GZVLG"."APPMODULE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."APPMODULEDEPENDENCY" ADD CONSTRAINT "FK_APPOBJ_APPMODULE2" FOREIGN KEY ("DEPENDID")
	  REFERENCES "GZVLG"."APPMODULE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table APPOBJ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."APPOBJ" ADD CONSTRAINT "FK_APPOBJ_APPMODULE" FOREIGN KEY ("MODULEID")
	  REFERENCES "GZVLG"."APPMODULE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table APPOBJPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."APPOBJPROP" ADD CONSTRAINT "FK_APPOBJPROP_APPOBJ" FOREIGN KEY ("APPOBJID")
	  REFERENCES "GZVLG"."APPOBJ" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ATTACHCATEGORIES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ATTACHCATEGORIES" ADD CONSTRAINT "FK_ATTACHCATEGORIES_CATEGORY" FOREIGN KEY ("DOCCATEGORY_ID")
	  REFERENCES "GZVLG"."DOCCATEGORY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ATTACHCATEGORIES" ADD CONSTRAINT "FK_ATTACHCATEGORIES_DOCATTACH" FOREIGN KEY ("DOCATTACHEX_ID")
	  REFERENCES "GZVLG"."DOCATTACHEX" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ATTACHEDPLANDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ATTACHEDPLANDOC" ADD CONSTRAINT "FK_ATTACHEDPLANDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ATTACHEDPLANDOC" ADD CONSTRAINT "FK_ATTACHEDPLANDOC_PLANDOC" FOREIGN KEY ("DOC_ID")
	  REFERENCES "GZVLG"."PLANDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ATTACHEDPLANDOC" ADD CONSTRAINT "FK_ATTACHPLANDOC_PURCHPLANDOC" FOREIGN KEY ("PURCHASEPLANDOC_ID")
	  REFERENCES "GZVLG"."PURCHASEPLANDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table AUCTIONBID
--------------------------------------------------------

  ALTER TABLE "GZVLG"."AUCTIONBID" ADD CONSTRAINT "FK_AUCTIONBID_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."AUCTIONBID" ADD CONSTRAINT "FK_AUCTIONBID_COMPETITOR" FOREIGN KEY ("ORDER_ID", "COMPETITORPOS")
	  REFERENCES "GZVLG"."CMPCOMPETITOR" ("ORDER_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."AUCTIONBID" ADD CONSTRAINT "FK_AUCTIONBID_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."AUCTIONBID" ADD CONSTRAINT "FK_AUCTIONBID_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."AUCTIONBID" ADD CONSTRAINT "FK_AUCTIONBID_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."AUCTIONBID" ADD CONSTRAINT "FK_AUCTIONBID_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."AUCTIONBID" ADD CONSTRAINT "FK_AUCTIONBID_ORDERDOC" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table AUCTIONLOG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."AUCTIONLOG" ADD CONSTRAINT "FK_AUCTIONLOG_CMPLOT" FOREIGN KEY ("ORDER_ID", "LOTPOS")
	  REFERENCES "GZVLG"."CMPLOT" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."AUCTIONLOG" ADD CONSTRAINT "FK_AUCTIONLOG_ORDERDOC" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BANKGUARANTEEDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."BANKGUARANTEEDOC" ADD CONSTRAINT "FK_BANKGUARANTEEDOC_CUSTORG" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEDOC" ADD CONSTRAINT "FK_BANKGUARANTEEDOC_DISPSTAT" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEDOC" ADD CONSTRAINT "FK_BANKGUARANTEEDOC_DOCCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEDOC" ADD CONSTRAINT "FK_BANKGUARANTEEDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BANKGUARANTEEREFDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."BANKGUARANTEEREFDOC" ADD CONSTRAINT "FK_BANKGUARANTEEREFDOC_CLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEREFDOC" ADD CONSTRAINT "FK_BANKGUARANTEEREFDOC_DOCUM" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."BANKGUARANTEEREFDOC" ADD CONSTRAINT "FK_BANKGUARANTEEREFDOC_STAT" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BANKGUARANTEEREFDOCREASON
--------------------------------------------------------

  ALTER TABLE "GZVLG"."BANKGUARANTEEREFDOCREASON" ADD CONSTRAINT "FK_BANKGUARANTEEREFDOCRS_REF" FOREIGN KEY ("BANKGUARANTEEREF_ID")
	  REFERENCES "GZVLG"."BANKGUARANTEEREFDOC" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BUDGCODE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."BUDGCODE" ADD CONSTRAINT "FK_BUDGCODE_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."BUDGCODE" ADD CONSTRAINT "FK_BUDGCODE_CODETYPE" FOREIGN KEY ("BUDGET_ID", "SEQORDER")
	  REFERENCES "GZVLG"."CODETYPE" ("BUDGET_ID", "SEQORDER") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BUDGET
--------------------------------------------------------

  ALTER TABLE "GZVLG"."BUDGET" ADD CONSTRAINT "FK_BUDGET_FINSRC" FOREIGN KEY ("FINSRC_ID")
	  REFERENCES "GZVLG"."FINSRC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."BUDGET" ADD CONSTRAINT "FK_BUDGET_PARENT" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."BUDGET" ADD CONSTRAINT "FK_BUDGET_RELATION" FOREIGN KEY ("RELATIONBUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."BUDGET" ADD CONSTRAINT "FK_BUDGET_TERRITORY" FOREIGN KEY ("TERRITORY_ID")
	  REFERENCES "GZVLG"."TERRITORY" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BUDGETLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."BUDGETLINE" ADD CONSTRAINT "FK_BUDGETLINE_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."BUDGETLINE" ADD CONSTRAINT "FK_BUDGETLINE_ESTIMATE" FOREIGN KEY ("ESTIMATE_ID")
	  REFERENCES "GZVLG"."ESTIMATE" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."BUDGETLINE" ADD CONSTRAINT "FK_BUDGETLINE_RECIPIENT" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CACHELIST
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CACHELIST" ADD CONSTRAINT "FK_CACHELIST_USERSESSION" FOREIGN KEY ("USERSESSION_ID")
	  REFERENCES "GZVLG"."USERSESSION" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CAVILDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CAVILDOC" ADD CONSTRAINT "FK_CAVILDOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CAVILDOC" ADD CONSTRAINT "FK_CAVILDOC_CMPORG" FOREIGN KEY ("CMPORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CAVILDOC" ADD CONSTRAINT "FK_CAVILDOC_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CAVILDOC" ADD CONSTRAINT "FK_CAVILDOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CAVILDOC" ADD CONSTRAINT "FK_CAVILDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CAVILDOC" ADD CONSTRAINT "FK_CAVILDOC_DOCUMNETCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CAVILDOC" ADD CONSTRAINT "FK_CAVILDOC_RESPPERSON" FOREIGN KEY ("RESPPERSON_ID")
	  REFERENCES "GZVLG"."PERSONAL" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CDCAVILTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CDCAVILTYPE" ADD CONSTRAINT "FK_CDCAVILTYPE_CAVILDOC" FOREIGN KEY ("CAVILDOC_ID")
	  REFERENCES "GZVLG"."CAVILDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CDCAVILTYPE" ADD CONSTRAINT "FK_CDCAVILTYPE_CAVILTYPE" FOREIGN KEY ("CAVILTYPE_ID")
	  REFERENCES "GZVLG"."CAVILTYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CEEXECUTIONLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CEEXECUTIONLINE" ADD CONSTRAINT "FK_CEEXECLINE_CONEXECDOCTYPE" FOREIGN KEY ("CONTRACTEXECDOCTYPE_ID")
	  REFERENCES "GZVLG"."CONTRACTREASON" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CEEXECUTIONLINE" ADD CONSTRAINT "FK_CEEXECUTIONLINE_CONTREXEC" FOREIGN KEY ("CONTRACTEXECDOC_ID")
	  REFERENCES "GZVLG"."CONTRACTEXECDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CEEXECUTIONLINE" ADD CONSTRAINT "FK_CEEXECUTIONLINE_FACTDOC" FOREIGN KEY ("FACTDOC_ID")
	  REFERENCES "GZVLG"."FACTDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CEPAYMENTPENALTY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CEPAYMENTPENALTY" ADD CONSTRAINT "FK_CEPAYPENALTY_CONTREXEC" FOREIGN KEY ("CONTRACTEXECDOC_ID")
	  REFERENCES "GZVLG"."CONTRACTEXECDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CEPAYMENTPENALTY" ADD CONSTRAINT "FK_CEPAYPENALTY_POS" FOREIGN KEY ("CONTRACTEXECDOC_ID", "PENALTYPOS")
	  REFERENCES "GZVLG"."CEPENALTY" ("CONTRACTEXECDOC_ID", "POS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CEPENALTY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CEPENALTY" ADD CONSTRAINT "FK_CEPENALTY_CLAIMDOC" FOREIGN KEY ("DOC_ID")
	  REFERENCES "GZVLG"."CLAIMDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CEPENALTY" ADD CONSTRAINT "FK_CEPENALTY_CONTRACTEXECDOC" FOREIGN KEY ("CONTRACTEXECDOC_ID")
	  REFERENCES "GZVLG"."CONTRACTEXECDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CEPENALTY" ADD CONSTRAINT "FK_CEPENALTY_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CEPENALTY" ADD CONSTRAINT "FK_CEPENALTY_DOCUMENTCLASS" FOREIGN KEY ("CLAIM_DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CEREPARATIONLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CEREPARATIONLINE" ADD CONSTRAINT "FK_CEREPARATIONLINE_CONEXEC" FOREIGN KEY ("CONTRACTEXECDOC_ID")
	  REFERENCES "GZVLG"."CONTRACTEXECDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CEREPARATIONLINE" ADD CONSTRAINT "FK_CEREPARATIONLINE_REPDOCID" FOREIGN KEY ("CONTRACTREPARATIONDOC_ID")
	  REFERENCES "GZVLG"."CONTRACTREASON" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CERETURNPENALTY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CERETURNPENALTY" ADD CONSTRAINT "FK_CERETPENALTY_CONTREXEC" FOREIGN KEY ("CONTRACTEXECDOC_ID")
	  REFERENCES "GZVLG"."CONTRACTEXECDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CERETURNPENALTY" ADD CONSTRAINT "FK_CERETPENALTY_POS" FOREIGN KEY ("CONTRACTEXECDOC_ID", "PENALTYPOS")
	  REFERENCES "GZVLG"."CEPENALTY" ("CONTRACTEXECDOC_ID", "POS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CERTINTERCHANGEREQUEST
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CERTINTERCHANGEREQUEST" ADD CONSTRAINT "FK_CERTICREQ_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CERTINTERCHANGEREQUEST" ADD CONSTRAINT "FK_CERTICREQ_DOCCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CERTINTERCHANGEREQUEST" ADD CONSTRAINT "FK_CERTICREQ_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CERTINTERCHANGEREQUEST" ADD CONSTRAINT "FK_CERTICREQ_USERCERT" FOREIGN KEY ("USERCERT_ID")
	  REFERENCES "GZVLG"."USERCERT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CERTREQUEST
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CERTREQUEST" ADD CONSTRAINT "FK_CERTREQUEST_USER_ORG" FOREIGN KEY ("USER_ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CERTREQUEST" ADD CONSTRAINT "FK_CERTREQ_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CERTREQUEST" ADD CONSTRAINT "FK_CERTREQ_DOCCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CERTREQUEST" ADD CONSTRAINT "FK_CERTREQ_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CERTREQUESTOID
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CERTREQUESTOID" ADD CONSTRAINT "FK_CERTREQUESTOID_CERTREQUEST" FOREIGN KEY ("CERTREQUEST_ID")
	  REFERENCES "GZVLG"."CERTREQUEST" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CERTREQUESTOID" ADD CONSTRAINT "FK_CERTREQUESTOID_OIDREF" FOREIGN KEY ("OIDREF_ID")
	  REFERENCES "GZVLG"."OIDREF" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CERTREVOKEREQUEST
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CERTREVOKEREQUEST" ADD CONSTRAINT "FK_CERTREVOKEREQ_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CERTREVOKEREQUEST" ADD CONSTRAINT "FK_CERTREVOKEREQ_DOCCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CERTREVOKEREQUEST" ADD CONSTRAINT "FK_CERTREVOKEREQ_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CERTREVOKEREQUEST" ADD CONSTRAINT "FK_CERTREVOKEREQ_USERCERT" FOREIGN KEY ("USERCERT_ID")
	  REFERENCES "GZVLG"."USERCERT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CETERMINATIONLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CETERMINATIONLINE" ADD CONSTRAINT "FK_CETERMINATIONLINE_CONTREXEC" FOREIGN KEY ("CONTRACTEXECDOC_ID")
	  REFERENCES "GZVLG"."CONTRACTEXECDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CETERMINATIONLINE" ADD CONSTRAINT "FK_CETERMLINE_TERMREASON" FOREIGN KEY ("TERMINATIONREASON_ID")
	  REFERENCES "GZVLG"."CONTRACTREASON" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CETERMINATIONLINE" ADD CONSTRAINT "FK_CETERMLINE_TERMREASONDOC" FOREIGN KEY ("TERMINATIONREASONDOC_ID")
	  REFERENCES "GZVLG"."CONTRACTREASON_DOCLINES" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CLAIMDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CLAIMDOC" ADD CONSTRAINT "FK_CLAIMDOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CLAIMDOC" ADD CONSTRAINT "FK_CLAIMDOC_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CLAIMDOC" ADD CONSTRAINT "FK_CLAIMDOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CLAIMDOC" ADD CONSTRAINT "FK_CLAIMDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CLAIMDOC" ADD CONSTRAINT "FK_CLAIMDOC_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CLAIMDOC" ADD CONSTRAINT "FK_CLAIMDOC_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CLAIMDOC" ADD CONSTRAINT "FK_CLAIMDOC_PARENT" FOREIGN KEY ("PARENT_CONTRACT_ID")
	  REFERENCES "GZVLG"."CONTRACTDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CLAIMPAYFACT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CLAIMPAYFACT" ADD CONSTRAINT "FK_CLAIMPAYFACT_CLAIM" FOREIGN KEY ("CLAIM_ID")
	  REFERENCES "GZVLG"."CLAIMDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CLAIMPENALTYCHANGEDOCINFO
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CLAIMPENALTYCHANGEDOCINFO" ADD CONSTRAINT "FK_PENALTYCHANGEDOCINFO_CLAIM" FOREIGN KEY ("CLAIM_ID")
	  REFERENCES "GZVLG"."CLAIMDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CLASSOPER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CLASSOPER" ADD CONSTRAINT "FK_CLASSOPER_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CLASSOPER" ADD CONSTRAINT "FK_CLASSOPER_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CLIENTOBJECTCOMMENTS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CLIENTOBJECTCOMMENTS" ADD CONSTRAINT "FK_CLIOBJCOMM_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CLIENTOBJECTCOMMENTS" ADD CONSTRAINT "FK_CLIOBJCOMM_CLIENTOBJ" FOREIGN KEY ("CLIENTOBJECT_ID")
	  REFERENCES "GZVLG"."CLIENTOBJECT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CLNDDAY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CLNDDAY" ADD CONSTRAINT "FK_CLNDDAY_CLNDDAYTYPE" FOREIGN KEY ("CLNDDAYTYPE_ID")
	  REFERENCES "GZVLG"."CLNDDAYTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CLNDDAY" ADD CONSTRAINT "FK_CLNDDAY_CLNDTYPE" FOREIGN KEY ("CLNDTYPE_ID")
	  REFERENCES "GZVLG"."CLNDTYPE" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPCOMMEMBER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPCOMMEMBER" ADD CONSTRAINT "FK_CMPCOMMEMBER_CMPPHASE" FOREIGN KEY ("ORDER_ID", "PHASEPOS")
	  REFERENCES "GZVLG"."CMPPHASE" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCOMMEMBER" ADD CONSTRAINT "FK_CMPCOMMEMBER_ORDERDOC" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCOMMEMBER" ADD CONSTRAINT "FK_CMPCOMMEMBER_PERSONAL" FOREIGN KEY ("COMMEMBER_ID")
	  REFERENCES "GZVLG"."PERSONAL" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPCOMPETITOR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPCOMPETITOR" ADD CONSTRAINT "FK_CMPCOMPETITOR_CMPLOT" FOREIGN KEY ("ORDER_ID", "LOTPOS")
	  REFERENCES "GZVLG"."CMPLOT" ("ORDER_ID", "POS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPCONDEALRESP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPCONDEALRESP" ADD CONSTRAINT "FK_CMPCONDEALRESP_LOTPOS" FOREIGN KEY ("ORDER_ID", "CMPCUSTOMERPOS")
	  REFERENCES "GZVLG"."CMPCUSTOMERLOT" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCONDEALRESP" ADD CONSTRAINT "FK_CMPCONDEALRESP_PERSONAL" FOREIGN KEY ("PERSONAL_ID")
	  REFERENCES "GZVLG"."PERSONAL" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPCRITERION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPCRITERION" ADD CONSTRAINT "FK_CMPCRITERION_CMPLOT" FOREIGN KEY ("ORDER_ID", "LOTPOS")
	  REFERENCES "GZVLG"."CMPLOT" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCRITERION" ADD CONSTRAINT "FK_CMPCRITERION_ORDER" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCRITERION" ADD CONSTRAINT "FK_CMPCRITERION_TENDERCRIT" FOREIGN KEY ("TENDERCRITERION_ID")
	  REFERENCES "GZVLG"."TENDERCRITERION" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPCRITERIONLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPCRITERIONLINE" ADD CONSTRAINT "FK_CMPCRITERIONLINE_CMPCRIT" FOREIGN KEY ("ORDER_ID", "CMPCRITERIONPOS")
	  REFERENCES "GZVLG"."CMPCRITERION" ("ORDER_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCRITERIONLINE" ADD CONSTRAINT "FK_CMPCRITERIONLINE_ORDER" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPCUSTOMER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPCUSTOMER" ADD CONSTRAINT "FK_CMPCUSTOMER_CUSTFACTCODE" FOREIGN KEY ("CUSTOMERFACTCOUNTRY_ID", "CUSTOMERFACTTERRITORYCODE")
	  REFERENCES "GZVLG"."TERRITORY" ("COUNTRY_ID", "CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMER" ADD CONSTRAINT "FK_CMPCUSTOMER_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMER" ADD CONSTRAINT "FK_CMPCUSTOMER_CUSTPOSTCODE" FOREIGN KEY ("CUSTOMERPOSTCOUNTRY_ID", "CUSTOMERPOSTTERRITORYCODE")
	  REFERENCES "GZVLG"."TERRITORY" ("COUNTRY_ID", "CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMER" ADD CONSTRAINT "FK_CMPCUSTOMER_FACTCOUNTRY" FOREIGN KEY ("CUSTOMERFACTCOUNTRY_ID")
	  REFERENCES "GZVLG"."COUNTRY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMER" ADD CONSTRAINT "FK_CMPCUSTOMER_ORDERDOC" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMER" ADD CONSTRAINT "FK_CMPCUSTOMER_POSTCOUNTRY" FOREIGN KEY ("CUSTOMERPOSTCOUNTRY_ID")
	  REFERENCES "GZVLG"."COUNTRY" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPCUSTOMERLOT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" ADD CONSTRAINT "FK_CMPCUSTLOT_CONMNGRRESP" FOREIGN KEY ("CONMNGRRESP_ID")
	  REFERENCES "GZVLG"."PERSONAL" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" ADD CONSTRAINT "FK_CMPCUSTOMERLOT_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" ADD CONSTRAINT "FK_CMPCUSTOMERLOT_ORDERDOC" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" ADD CONSTRAINT "FK_CUSTOMERLOT_APPBANK" FOREIGN KEY ("GUARAPPBIC")
	  REFERENCES "GZVLG"."BANK" ("BIC") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" ADD CONSTRAINT "FK_CUSTOMERLOT_APPPERSACC_ID" FOREIGN KEY ("GUARAPPPERSONALACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" ADD CONSTRAINT "FK_CUSTOMERLOT_APPSETTACC_ID" FOREIGN KEY ("GUARAPPSETTLEMENTACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" ADD CONSTRAINT "FK_CUSTOMERLOT_CMPLOT" FOREIGN KEY ("ORDER_ID", "LOTPOS")
	  REFERENCES "GZVLG"."CMPLOT" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" ADD CONSTRAINT "FK_CUSTOMERLOT_CONBANK" FOREIGN KEY ("GUARANTEECONTRACTBIC")
	  REFERENCES "GZVLG"."BANK" ("BIC") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" ADD CONSTRAINT "FK_CUSTOMERLOT_CONPERSACC_ID" FOREIGN KEY ("GUARCONTRPERSONALACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPCUSTOMERLOT" ADD CONSTRAINT "FK_CUSTOMERLOT_CONSETTACC_ID" FOREIGN KEY ("GUARCONTRSETTLEMENTACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPDECISION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPDECISION" ADD CONSTRAINT "FK_CMPDECISION_CMPCOMPETITOR" FOREIGN KEY ("ORDER_ID", "COMPETITORPOS")
	  REFERENCES "GZVLG"."CMPCOMPETITOR" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."CMPDECISION" ADD CONSTRAINT "FK_CMPDECISION_CMPPHASE" FOREIGN KEY ("ORDER_ID", "PHASEPOS")
	  REFERENCES "GZVLG"."CMPPHASE" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."CMPDECISION" ADD CONSTRAINT "FK_CMPDECISION_ORDERDOC" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPDISCUSSION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPDISCUSSION" ADD CONSTRAINT "FK_CMPDISCUSSION_CMPLOT" FOREIGN KEY ("ORDER_ID", "LOTPOS")
	  REFERENCES "GZVLG"."CMPLOT" ("ORDER_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPDISCUSSION" ADD CONSTRAINT "FK_CMPDISCUSSION_CMPPHASE" FOREIGN KEY ("ORDER_ID", "PHASEPOS")
	  REFERENCES "GZVLG"."CMPPHASE" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPDOCREQ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPDOCREQ" ADD CONSTRAINT "FK_CMPDOCREQ_CMPLOT" FOREIGN KEY ("ORDER_ID", "LOTPOS")
	  REFERENCES "GZVLG"."CMPLOT" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."CMPDOCREQ" ADD CONSTRAINT "FK_CMPDOCREQ_ORDERDOC" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPDOCREQ" ADD CONSTRAINT "FK_CMPDOCREQ_REQTYPE" FOREIGN KEY ("REQUIREMENTTYPE_ID")
	  REFERENCES "GZVLG"."REQUIREMENTTYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPEXPENSE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPEXPENSE" ADD CONSTRAINT "FK_CMPEXPENSE_GROUP" FOREIGN KEY ("GROUPCODE")
	  REFERENCES "GZVLG"."GOODSGROUP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPEXPENSE" ADD CONSTRAINT "FK_CMPEXPENSE_ORDERDOC" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPFEATURE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPFEATURE" ADD CONSTRAINT "FK_CMPFEATURE_CMPLOT" FOREIGN KEY ("ORDER_ID", "LOTPOS")
	  REFERENCES "GZVLG"."CMPLOT" ("ORDER_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPFEATURE" ADD CONSTRAINT "FK_CMPFEATURE_ORDER" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPFEATURE" ADD CONSTRAINT "FK_CMPFEATURE_PLFEATURE" FOREIGN KEY ("PLACEMENTFEATURE_ID")
	  REFERENCES "GZVLG"."PLACEMENTFEATURE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPGOODS" ADD CONSTRAINT "FK_CMPGOODS_CMPLOT" FOREIGN KEY ("ORDER_ID", "LOTPOS")
	  REFERENCES "GZVLG"."CMPLOT" ("ORDER_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPGOODS" ADD CONSTRAINT "FK_CMPGOODS_GROUP" FOREIGN KEY ("GROUPCODE")
	  REFERENCES "GZVLG"."GOODSGROUP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPGOODS" ADD CONSTRAINT "FK_CMPGOODS_OKDP_CODE" FOREIGN KEY ("OKDP_CODE")
	  REFERENCES "GZVLG"."GOODSOKDP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPGOODS" ADD CONSTRAINT "FK_CMPGOODS_OKPD" FOREIGN KEY ("OKPD_ID")
	  REFERENCES "GZVLG"."GOODSOKPD" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPGOODS" ADD CONSTRAINT "FK_CMPGOODS_OKVED" FOREIGN KEY ("OKVED_ID")
	  REFERENCES "GZVLG"."GOODSOKVED" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPGOODS" ADD CONSTRAINT "FK_CMPGOODS_ORDERDOC" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPGOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPGOODSPROP" ADD CONSTRAINT "FK_CMPGOODSPROP_CMPGOODS" FOREIGN KEY ("ORDER_ID", "GOODSPOS")
	  REFERENCES "GZVLG"."CMPGOODS" ("ORDER_ID", "POS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPLOT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "FK_CMPLOT_CHILDORDERDOC" FOREIGN KEY ("CHILD_ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "FK_CMPLOT_CONTYPE" FOREIGN KEY ("CONTYPE_ID")
	  REFERENCES "GZVLG"."CONTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "FK_CMPLOT_CURRENCY" FOREIGN KEY ("CURRENCY_ID")
	  REFERENCES "GZVLG"."CURRENCY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPLOT" ADD CONSTRAINT "FK_CMPLOT_ORDERDOC" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPOOSMODIFICATION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPOOSMODIFICATION" ADD CONSTRAINT "FK_CMPOOSMODIF_CMPPHASE" FOREIGN KEY ("ORDER_ID", "PHASEPOS")
	  REFERENCES "GZVLG"."CMPPHASE" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."CMPOOSMODIFICATION" ADD CONSTRAINT "FK_CMPOOSMODIF_ORDERDOC" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPPAYSHEDULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPPAYSHEDULE" ADD CONSTRAINT "FK_CMPPAYSHEDULE_PLACE" FOREIGN KEY ("ORDER_ID", "BUDGETLINEPOS")
	  REFERENCES "GZVLG"."CMPPLACE" ("ORDER_ID", "POS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPPERSONAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPPERSONAL" ADD CONSTRAINT "FK_CMPPERSONAL_ORDER" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPPERSONAL" ADD CONSTRAINT "FK_CMPPERSONAL_PERSONAL" FOREIGN KEY ("PERSONAL_ID")
	  REFERENCES "GZVLG"."PERSONAL" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPPERSONALRESP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPPERSONALRESP" ADD CONSTRAINT "FK_CMPPERSONALRESP_CMPPERSONAL" FOREIGN KEY ("ORDER_ID", "PERSONAL_ID")
	  REFERENCES "GZVLG"."CMPPERSONAL" ("ORDER_ID", "PERSONAL_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."CMPPERSONALRESP" ADD CONSTRAINT "FK_CMPPERSONALRESP_RESP" FOREIGN KEY ("RESPONSIBILITY_ID")
	  REFERENCES "GZVLG"."RESPONSIBILITY" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPPHASE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPPHASE" ADD CONSTRAINT "FK_CMPPHASE_COMMISSION" FOREIGN KEY ("COMMISSION_ID")
	  REFERENCES "GZVLG"."COMMISSION" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPPHASE" ADD CONSTRAINT "FK_CMPPHASE_ORDERDOC" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPPLACE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPPLACE" ADD CONSTRAINT "FK_CMPPLACE_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPPLACE" ADD CONSTRAINT "FK_CMPPLACE_ESTIMATE" FOREIGN KEY ("ESTIMATE_ID")
	  REFERENCES "GZVLG"."ESTIMATE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPPLACE" ADD CONSTRAINT "FK_CMPPLACE_FINSRC" FOREIGN KEY ("FINSRC_ID")
	  REFERENCES "GZVLG"."FINSRC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPPLACE" ADD CONSTRAINT "FK_CMPPLACE_GRANTINVESTMENT" FOREIGN KEY ("GRANTINVESTMENT_ID")
	  REFERENCES "GZVLG"."GRANTINVESTMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPPLACE" ADD CONSTRAINT "FK_CMPPLACE_INDUSTRYCODE" FOREIGN KEY ("INDUSTRYCODE_ID")
	  REFERENCES "GZVLG"."INDUSTRYCODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPPLACE" ADD CONSTRAINT "FK_CMPPLACE_ORDERDOC" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPPLACE" ADD CONSTRAINT "FK_CMPPLACE_RECIPIENT" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPPLACE" ADD CONSTRAINT "FK_CMPPLACE_TERRITORY" FOREIGN KEY ("COUNTRY_ID", "TERRITORYCODE")
	  REFERENCES "GZVLG"."TERRITORY" ("COUNTRY_ID", "CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPQUALREQ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPQUALREQ" ADD CONSTRAINT "FK_CMPQUALREQ_CMPLOT" FOREIGN KEY ("ORDER_ID", "LOTPOS")
	  REFERENCES "GZVLG"."CMPLOT" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."CMPQUALREQ" ADD CONSTRAINT "FK_CMPQUALREQ_PLACEMENTFEAT" FOREIGN KEY ("PLACEMENTFEATURE_ID")
	  REFERENCES "GZVLG"."PLACEMENTFEATURE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPQUALREQ" ADD CONSTRAINT "FK_CMPQUALREQ_REQTYPE" FOREIGN KEY ("REQUIREMENTTYPE_ID")
	  REFERENCES "GZVLG"."REQUIREMENTTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPQUALREQ" ADD CONSTRAINT "FK_CMPQUAL_ORDERDOC" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPREPDOCUMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPREPDOCUMENT" ADD CONSTRAINT "FK_CMPREPDOCUMENT_ORDER" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPREPDOCUMENT" ADD CONSTRAINT "FK_CMPREPDOCUMENT_REPDOCUMENT" FOREIGN KEY ("REPDOCUMENT_ID")
	  REFERENCES "GZVLG"."REPDOCUMENT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPSUPPLYSHEDULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPSUPPLYSHEDULE" ADD CONSTRAINT "FK_CMPSUPPLYSHEDULE_CMPGOODS" FOREIGN KEY ("ORDER_ID", "GOODSPOS")
	  REFERENCES "GZVLG"."CMPGOODS" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."CMPSUPPLYSHEDULE" ADD CONSTRAINT "FK_CMPSUPPLYSHEDULE_CMPLOT" FOREIGN KEY ("ORDER_ID", "LOTPOS")
	  REFERENCES "GZVLG"."CMPLOT" ("ORDER_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPSUPPLYSHEDULE" ADD CONSTRAINT "FK_CMPSUPPLYSHEDULE_CMPPLACE" FOREIGN KEY ("ORDER_ID", "PLACEPOS")
	  REFERENCES "GZVLG"."CMPPLACE" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPVENDOR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPVENDOR" ADD CONSTRAINT "FK_CMPVENDOR_ORDERDOC" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPVENDOR" ADD CONSTRAINT "FK_CMPVENDOR_ORGFORM" FOREIGN KEY ("PROPFORM_ID")
	  REFERENCES "GZVLG"."ORGFORM" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CMPVENDOR" ADD CONSTRAINT "FK_CMPVENDOR_VENDOR" FOREIGN KEY ("VENDOR_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPVOTERESULT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPVOTERESULT" ADD CONSTRAINT "FK_CMPVOTERESULT_CMPCOMMEMBERS" FOREIGN KEY ("ORDER_ID", "CMPCOMMEMBERPOS")
	  REFERENCES "GZVLG"."CMPCOMMEMBER" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."CMPVOTERESULT" ADD CONSTRAINT "FK_CMPVOTERESULT_CMPDECISION" FOREIGN KEY ("ORDER_ID", "DECISIONPOS")
	  REFERENCES "GZVLG"."CMPDECISION" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."CMPVOTERESULT" ADD CONSTRAINT "FK_CMPVOTERESULT_ORDERDOC" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CMPWORKGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CMPWORKGROUP" ADD CONSTRAINT "FK_CMPWORKGROUP_ORDER" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CODETYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CODETYPE" ADD CONSTRAINT "FK_CODETYPE_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table COMMEMBER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."COMMEMBER" ADD CONSTRAINT "FK_COMMEMBER_COMMISSION" FOREIGN KEY ("COMMISSION_ID")
	  REFERENCES "GZVLG"."COMMISSION" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."COMMEMBER" ADD CONSTRAINT "FK_COMMEMBER_PERSONAL" FOREIGN KEY ("COMMEMBER_ID")
	  REFERENCES "GZVLG"."PERSONAL" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table COMMISSION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."COMMISSION" ADD CONSTRAINT "FK_COMMISSION_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table COMPLAINTDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."COMPLAINTDOC" ADD CONSTRAINT "FK_COMPLAINTDOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."COMPLAINTDOC" ADD CONSTRAINT "FK_COMPLAINTDOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."COMPLAINTDOC" ADD CONSTRAINT "FK_COMPLAINTDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."COMPLAINTDOC" ADD CONSTRAINT "FK_COMPLAINTDOC_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."COMPLAINTDOC" ADD CONSTRAINT "FK_COMPLAINTDOC_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONAGREEMENTSDOCS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONAGREEMENTSDOCS" ADD CONSTRAINT "FK_CONAGREEMENTSDOCS_CONTRACT" FOREIGN KEY ("CONTRACT_ID")
	  REFERENCES "GZVLG"."CONTRACTDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONBANKGUARANTEERETURN
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONBANKGUARANTEERETURN" ADD CONSTRAINT "FK_CONBNKGRNTRTRN_CNTR" FOREIGN KEY ("CONTRACT_ID")
	  REFERENCES "GZVLG"."CONTRACTDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONBUDGETLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONBUDGETLINE" ADD CONSTRAINT "FK_CONBL_GRANTINVESTMENT" FOREIGN KEY ("GRANTINVESTMENT_ID")
	  REFERENCES "GZVLG"."GRANTINVESTMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONBUDGETLINE" ADD CONSTRAINT "FK_CONBL_INDUSTRYCODE" FOREIGN KEY ("INDUSTRYCODE_ID")
	  REFERENCES "GZVLG"."INDUSTRYCODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONBUDGETLINE" ADD CONSTRAINT "FK_CONBUDGETLINE_CONCONTRACTOR" FOREIGN KEY ("CONTRACT_ID", "CONTRACTORPOS")
	  REFERENCES "GZVLG"."CONCONTRACTOR" ("CONTRACT_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."CONBUDGETLINE" ADD CONSTRAINT "FK_CONBUDGETLINE_CONPLACE" FOREIGN KEY ("CONTRACT_ID", "PLACEPOS")
	  REFERENCES "GZVLG"."CONPLACE" ("CONTRACT_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."CONBUDGETLINE" ADD CONSTRAINT "FK_CONBUDGETLINE_CONTRACT" FOREIGN KEY ("CONTRACT_ID")
	  REFERENCES "GZVLG"."CONTRACTDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONBUDGETLINE" ADD CONSTRAINT "FK_CONBUDGETLINE_ESTIMATE" FOREIGN KEY ("ESTIMATE_ID")
	  REFERENCES "GZVLG"."ESTIMATE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONBUDGETLINE" ADD CONSTRAINT "FK_CONBUDGETLINE_FINSRC" FOREIGN KEY ("FINSRC_ID")
	  REFERENCES "GZVLG"."FINSRC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONBUDGETLINE" ADD CONSTRAINT "FK_CONBUDGETLINE_LIABILITY" FOREIGN KEY ("LIABILITYEXPENSE_ID")
	  REFERENCES "GZVLG"."LIABILITYEXPENSE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONBUDGETLINE" ADD CONSTRAINT "FK_CONBUDGETLINE_ORGACC" FOREIGN KEY ("RECIPIENTACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONBUDGETLINE" ADD CONSTRAINT "FK_CONBUDGETLINE_RECIPIENT" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONCONFIRMINGDOCS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONCONFIRMINGDOCS" ADD CONSTRAINT "FK_CONCONFIRMINGDOCS_CONTRACT" FOREIGN KEY ("CONTRACT_ID")
	  REFERENCES "GZVLG"."CONTRACTDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONCONTRACTOR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONCONTRACTOR" ADD CONSTRAINT "FK_CONCONTRACTOR_CONTRACT" FOREIGN KEY ("CONTRACT_ID")
	  REFERENCES "GZVLG"."CONTRACTDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONCONTRACTOR" ADD CONSTRAINT "FK_CONCONTRACTOR_EXECUTER" FOREIGN KEY ("ORGEXECUTER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONCONTRACTOR" ADD CONSTRAINT "FK_CONCONTRACTOR_EXECUTERACC" FOREIGN KEY ("ORGEXECUTERACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONCONTRACTOR" ADD CONSTRAINT "FK_CONCONTRACTOR_OKTMO" FOREIGN KEY ("ORGOKTMO_ID")
	  REFERENCES "GZVLG"."OKTMO" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONCONTRACTOR" ADD CONSTRAINT "FK_CONCONTRACTOR_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONCONTRACTOR" ADD CONSTRAINT "FK_CONCONTRACTOR_ORGACC" FOREIGN KEY ("ORGACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONCONTRACTOR" ADD CONSTRAINT "FK_CONCONTRACTOR_PROPFORMID" FOREIGN KEY ("ORGPROPFORM_ID")
	  REFERENCES "GZVLG"."ORGFORM" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONDAMAGEPAYMENTS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONDAMAGEPAYMENTS" ADD CONSTRAINT "FK_CONDAMAGEPAYMENTS_CONTRACT" FOREIGN KEY ("CONTRACT_ID")
	  REFERENCES "GZVLG"."CONTRACTDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONEXECSTEP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONEXECSTEP" ADD CONSTRAINT "FK_CONEXECSTEP_CONBUDGETLINE" FOREIGN KEY ("CONTRACT_ID", "CONTRACTORPOS", "BUDGETLINEPOS")
	  REFERENCES "GZVLG"."CONBUDGETLINE" ("CONTRACT_ID", "CONTRACTORPOS", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."CONEXECSTEP" ADD CONSTRAINT "FK_CONEXECSTEP_CONTRACT" FOREIGN KEY ("CONTRACT_ID")
	  REFERENCES "GZVLG"."CONTRACTDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONEXECSTEP2
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONEXECSTEP2" ADD CONSTRAINT "FK_CONEXECSTEP2_CONTRACT" FOREIGN KEY ("CONTRACT_ID")
	  REFERENCES "GZVLG"."CONTRACTDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONFCONCLUSIONCONTRACT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONFCONCLUSIONCONTRACT" ADD CONSTRAINT "FK_CCCONTRACT_PLACINGWAY" FOREIGN KEY ("PLACINGWAY_ID")
	  REFERENCES "GZVLG"."PLACINGWAY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONFCONCLUSIONCONTRACT" ADD CONSTRAINT "FK_CCCONTRACT_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONGOODS" ADD CONSTRAINT "FK_CONGOODS_CONTRACT" FOREIGN KEY ("CONTRACT_ID")
	  REFERENCES "GZVLG"."CONTRACTDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONGOODS" ADD CONSTRAINT "FK_CONGOODS_GROUP" FOREIGN KEY ("GROUPCODE")
	  REFERENCES "GZVLG"."GOODSGROUP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."CONGOODS" ADD CONSTRAINT "FK_CONGOODS_OKDP_CODE" FOREIGN KEY ("OKDP_CODE")
	  REFERENCES "GZVLG"."GOODSOKDP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."CONGOODS" ADD CONSTRAINT "FK_CONGOODS_OKPD" FOREIGN KEY ("OKPD_ID")
	  REFERENCES "GZVLG"."GOODSOKPD" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONGOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONGOODSPROP" ADD CONSTRAINT "FK_CONGOODSPROP_CONGOODS" FOREIGN KEY ("CONTRACT_ID", "GOODSPOS")
	  REFERENCES "GZVLG"."CONGOODS" ("CONTRACT_ID", "POS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONLOT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONLOT" ADD CONSTRAINT "FK_CONTRACTLOT_CONTRACT" FOREIGN KEY ("CONTRACT_ID")
	  REFERENCES "GZVLG"."CONTRACTDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONORGSTATUS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONORGSTATUS" ADD CONSTRAINT "FK_CONORGSTATUS_CONTRACT" FOREIGN KEY ("CONTRACT_ID")
	  REFERENCES "GZVLG"."CONTRACTDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONORGSTATUS" ADD CONSTRAINT "FK_CONORGSTATUS_ORGSTATUS" FOREIGN KEY ("ORGSTATUS_ID")
	  REFERENCES "GZVLG"."ORGSTATUS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONPAYFACT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONPAYFACT" ADD CONSTRAINT "FK_CONPAYFACT_CONTRACT" FOREIGN KEY ("CONTRACT_ID")
	  REFERENCES "GZVLG"."CONTRACTDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONPAYSHEDULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONPAYSHEDULE" ADD CONSTRAINT "FK_CONPAYSHEDULE_CONBUDGETLINE" FOREIGN KEY ("CONTRACT_ID", "CONTRACTORPOS", "BUDGETLINEPOS")
	  REFERENCES "GZVLG"."CONBUDGETLINE" ("CONTRACT_ID", "CONTRACTORPOS", "POS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONPLACE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONPLACE" ADD CONSTRAINT "FK_CONPLACE_CONTRACTDOC" FOREIGN KEY ("CONTRACT_ID")
	  REFERENCES "GZVLG"."CONTRACTDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONPLACE" ADD CONSTRAINT "FK_CONPLACE_EXECSTEP2POS" FOREIGN KEY ("CONTRACT_ID", "EXECSTEP2POS")
	  REFERENCES "GZVLG"."CONEXECSTEP2" ("CONTRACT_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."CONPLACE" ADD CONSTRAINT "FK_CONPLACE_RECIPIENT" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONPLACE" ADD CONSTRAINT "FK_CONPLACE_TERRITORY" FOREIGN KEY ("COUNTRY_ID", "TERRITORYCODE")
	  REFERENCES "GZVLG"."TERRITORY" ("COUNTRY_ID", "CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONPRODUCTSCHANGEDOCS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONPRODUCTSCHANGEDOCS" ADD CONSTRAINT "FK_CONPRODUCTSCHANGEDOCS_CONTR" FOREIGN KEY ("CONTRACT_ID")
	  REFERENCES "GZVLG"."CONTRACTDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONREFUSALFACT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONREFUSALFACT" ADD CONSTRAINT "FK_CONREFUSALFACT_CONTRACTDOC" FOREIGN KEY ("CONTRACT_ID")
	  REFERENCES "GZVLG"."CONTRACTDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONREFUSALFACT" ADD CONSTRAINT "FK_CONREFUSALFACT_REFFACTFNDTN" FOREIGN KEY ("REFUSALFACTFOUNDATION_ID")
	  REFERENCES "GZVLG"."REFUSALFACTFOUNDATION" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONSOLIDDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONSOLIDDOC" ADD CONSTRAINT "FK_CONSOLIDDOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONSOLIDDOC" ADD CONSTRAINT "FK_CONSOLIDDOC_CMPORG" FOREIGN KEY ("CMPORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONSOLIDDOC" ADD CONSTRAINT "FK_CONSOLIDDOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONSOLIDDOC" ADD CONSTRAINT "FK_CONSOLIDDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONSOLIDDOC" ADD CONSTRAINT "FK_CONSOLIDDOC_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONSOLIDDOC" ADD CONSTRAINT "FK_CONSOLIDDOC_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONSOLIDDOC" ADD CONSTRAINT "FK_CONSOLIDDOC_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONSUPPLYSHEDULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONSUPPLYSHEDULE" ADD CONSTRAINT "FK_CONSUPPLYSHEDULE_CONGOODS" FOREIGN KEY ("CONTRACT_ID", "GOODSPOS")
	  REFERENCES "GZVLG"."CONGOODS" ("CONTRACT_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."CONSUPPLYSHEDULE" ADD CONSTRAINT "FK_CONSUPPLYSHEDULE_CONPLACE" FOREIGN KEY ("CONTRACT_ID", "PLACEPOS")
	  REFERENCES "GZVLG"."CONPLACE" ("CONTRACT_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."CONSUPPLYSHEDULE" ADD CONSTRAINT "FK_CONSUPPLYSHEDULE_CONTRACT" FOREIGN KEY ("CONTRACT_ID")
	  REFERENCES "GZVLG"."CONTRACTDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONTRACTCARDDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONTRACTCARDDOC" ADD CONSTRAINT "FK_CONTRCARDDOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTCARDDOC" ADD CONSTRAINT "FK_CONTRCARDDOC_CON" FOREIGN KEY ("CON_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTCARDDOC" ADD CONSTRAINT "FK_CONTRCARDDOC_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTCARDDOC" ADD CONSTRAINT "FK_CONTRCARDDOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTCARDDOC" ADD CONSTRAINT "FK_CONTRCARDDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTCARDDOC" ADD CONSTRAINT "FK_CONTRCARDDOC_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTCARDDOC" ADD CONSTRAINT "FK_CONTRCARDDOC_ETPID" FOREIGN KEY ("ETP_ID")
	  REFERENCES "GZVLG"."ETP" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONTRACTDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_BANKGUARANTEE" FOREIGN KEY ("GRNTREGNUMBER_ID")
	  REFERENCES "GZVLG"."BANKGUARANTEEDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_CCCONTRACT" FOREIGN KEY ("CONFCONCCONTRACT_ID")
	  REFERENCES "GZVLG"."CONFCONCLUSIONCONTRACT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_CMPORG" FOREIGN KEY ("CMPORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_CON" FOREIGN KEY ("CON_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_CONACC" FOREIGN KEY ("CONACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_CONCOUNTRY" FOREIGN KEY ("CONCOUNTRY_ID")
	  REFERENCES "GZVLG"."COUNTRY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_CONEXECUTER" FOREIGN KEY ("CONEXECUTER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_CONEXECUTERACC" FOREIGN KEY ("CONEXECUTERACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_CONSTRUCTION" FOREIGN KEY ("CONSTRUCTION_ID")
	  REFERENCES "GZVLG"."CONSTRUCTION" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_CONTERCODE" FOREIGN KEY ("CONCOUNTRY_ID", "CONTERRITORYCODE")
	  REFERENCES "GZVLG"."TERRITORY" ("COUNTRY_ID", "CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_CONTYPE" FOREIGN KEY ("CONTYPE_ID")
	  REFERENCES "GZVLG"."CONTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_CURRENCY" FOREIGN KEY ("CURRENCY_ID")
	  REFERENCES "GZVLG"."CURRENCY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_MODIFICATION" FOREIGN KEY ("MODIFICATIONREASON_ID")
	  REFERENCES "GZVLG"."CONTRACTREASON" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_MODIFICATIONDOC" FOREIGN KEY ("MODIFICATIONREASONDOC_ID")
	  REFERENCES "GZVLG"."CONTRACTREASON_DOCLINES" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_NECESSITY" FOREIGN KEY ("NECESSITY_ID")
	  REFERENCES "GZVLG"."NECESSITY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_OFRREQREASON" FOREIGN KEY ("OFRREQREASON_ID")
	  REFERENCES "GZVLG"."OFRREQREASON" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_OKTMO" FOREIGN KEY ("CONOKTMO_ID")
	  REFERENCES "GZVLG"."OKTMO" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_OOSPURCHASE" FOREIGN KEY ("OOSPURCHASEORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_PRICECHANGE" FOREIGN KEY ("PRICECHANGEREASON_ID")
	  REFERENCES "GZVLG"."CONTRACTREASON" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_PROPFORM" FOREIGN KEY ("CONPROPFORM_ID")
	  REFERENCES "GZVLG"."ORGFORM" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_RECIPIENT" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACTDOC_SINGLECUSTOMER" FOREIGN KEY ("SINGLECUSTOMERREASON_ID")
	  REFERENCES "GZVLG"."CONTRACTREASON" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTDOC" ADD CONSTRAINT "FK_CONTRACT_SINGLECUSTOMERDOC" FOREIGN KEY ("SINGLECUSTOMERREASONDOC_ID")
	  REFERENCES "GZVLG"."CONTRACTREASON_DOCLINES" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONTRACTEXECDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" ADD CONSTRAINT "FK_CONTREXECDOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" ADD CONSTRAINT "FK_CONTREXECDOC_CUST" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" ADD CONSTRAINT "FK_CONTREXECDOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" ADD CONSTRAINT "FK_CONTREXECDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" ADD CONSTRAINT "FK_CONTREXECDOC_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTEXECDOC" ADD CONSTRAINT "FK_CONTREXECDOC_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONTRACTOR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONTRACTOR" ADD CONSTRAINT "FK_CONTRACTOR_INSPECTOR" FOREIGN KEY ("INSPECTOR_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTOR" ADD CONSTRAINT "PK_CONTRACTOR_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONTRACTREASON_DOCLINES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONTRACTREASON_DOCLINES" ADD CONSTRAINT "FK_CONREASONLINE_CONREASON" FOREIGN KEY ("CONTRACTREASON_ID")
	  REFERENCES "GZVLG"."CONTRACTREASON" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONTRACTTEMPLATEDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONTRACTTEMPLATEDOC" ADD CONSTRAINT "FK_CONTEMPDOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTTEMPLATEDOC" ADD CONSTRAINT "FK_CONTEMPDOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTTEMPLATEDOC" ADD CONSTRAINT "FK_CONTEMPDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CONTRACTTEMPLATEDOC" ADD CONSTRAINT "FK_CONTEMPDOC_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONTYPEATTACH
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CONTYPEATTACH" ADD CONSTRAINT "FK_CONTYPEATTACH" FOREIGN KEY ("CONTYPE_ID")
	  REFERENCES "GZVLG"."CONTYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CRLFILE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CRLFILE" ADD CONSTRAINT "FK_CRLFILE_CRLPOINT" FOREIGN KEY ("CRLPOINT_ID")
	  REFERENCES "GZVLG"."CRLPOINT" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CSGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CSGOODS" ADD CONSTRAINT "FK_CSGOODS_CONSOLIDDOC" FOREIGN KEY ("CONSOLID_ID")
	  REFERENCES "GZVLG"."CONSOLIDDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CSGOODS" ADD CONSTRAINT "FK_CSGOODS_GROUP" FOREIGN KEY ("GROUPCODE")
	  REFERENCES "GZVLG"."GOODSGROUP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."CSGOODS" ADD CONSTRAINT "FK_CSGOODS_OKDP_CODE" FOREIGN KEY ("OKDP_CODE")
	  REFERENCES "GZVLG"."GOODSOKDP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."CSGOODS" ADD CONSTRAINT "FK_CSGOODS_OKPD" FOREIGN KEY ("OKPD_ID")
	  REFERENCES "GZVLG"."GOODSOKPD" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CSGOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CSGOODSPROP" ADD CONSTRAINT "FK_CSGOODSPROP_CSGOODS" FOREIGN KEY ("CONSOLID_ID", "GOODSPOS")
	  REFERENCES "GZVLG"."CSGOODS" ("CONSOLID_ID", "POS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CURHISTORY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."CURHISTORY" ADD CONSTRAINT "FK_CURHISTORY_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."CURHISTORY" ADD CONSTRAINT "FK_CURHISTORY_CURRENCY" FOREIGN KEY ("CURRENCY_ID")
	  REFERENCES "GZVLG"."CURRENCY" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DECREASON
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DECREASON" ADD CONSTRAINT "FK_DECREASON_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DECREASON" ADD CONSTRAINT "FK_DECREASON_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DESCRIPTION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DESCRIPTION" ADD CONSTRAINT "FK_DESCRIPTION_DESCGROUP" FOREIGN KEY ("DESCGROUP_ID")
	  REFERENCES "GZVLG"."DESCGROUP" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DIGEST
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DIGEST" ADD CONSTRAINT "FK_DIGEST_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DIGEST" ADD CONSTRAINT "FK_DIGEST_FGROUP" FOREIGN KEY ("FGROUP_ID")
	  REFERENCES "GZVLG"."FGROUP" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DIGESTSIGN
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DIGESTSIGN" ADD CONSTRAINT "FK_DIGESTSIGN_DIGEST" FOREIGN KEY ("DIGEST_ID")
	  REFERENCES "GZVLG"."DIGEST" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DIGESTSIGN" ADD CONSTRAINT "FK_DIGESTSIGN_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DIGESTSIGN" ADD CONSTRAINT "FK_DIGESTSIGN_DOCATTACHEX" FOREIGN KEY ("DOCATTACHEX_ID")
	  REFERENCES "GZVLG"."DOCATTACHEX" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."DIGESTSIGN" ADD CONSTRAINT "FK_DIGESTSIGN_IMPORTUSER_ID" FOREIGN KEY ("IMPORTUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."DIGESTSIGN" ADD CONSTRAINT "FK_DIGESTSIGN_SIGNFORMAT" FOREIGN KEY ("SIGNVERSION")
	  REFERENCES "GZVLG"."SIGNFORMAT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DIGESTSIGN" ADD CONSTRAINT "FK_DIGESTSIGN_SYSUSER" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DIGESTSIGN" ADD CONSTRAINT "FK_DIGESTSIGN_USERROLE" FOREIGN KEY ("USERROLE_ID")
	  REFERENCES "GZVLG"."USERROLE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCACTION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCACTION" ADD CONSTRAINT "FK_DOCACTION_CLIENTOBJECT" FOREIGN KEY ("CLIENTOBJECT_ID")
	  REFERENCES "GZVLG"."CLIENTOBJECT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCACTION" ADD CONSTRAINT "FK_DOCACTION_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCACTION" ADD CONSTRAINT "FK_DOCACTION_DOCSTATUS" FOREIGN KEY ("DOCUMENTCLASS_ID", "DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DOCSTATUS" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCACTION" ADD CONSTRAINT "FK_DOCACTION_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCATTACH
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCATTACH" ADD CONSTRAINT "FK_DOCATTACH_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCATTACHEX
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCATTACHEX" ADD CONSTRAINT "FK_DOCATTACHEX_DOC" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."DOCATTACHEX" ADD CONSTRAINT "FK_FMTCONVERTER_CONVERTER_ID" FOREIGN KEY ("CONVERTER_ID")
	  REFERENCES "GZVLG"."FORMATCONVERTER" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCCLASS_DISPSTATUS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCCLASS_DISPSTATUS" ADD CONSTRAINT "FK_DOCCL_DISPST_DISPST" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCCLASS_DISPSTATUS" ADD CONSTRAINT "FK_DOCCL_DISPST_DOCCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCCLASS_DISPSTATUS" ADD CONSTRAINT "FK_DOCCL_DISPST_PARDISPST" FOREIGN KEY ("PARDISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCCOMMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCCOMMENT" ADD CONSTRAINT "FK_DOCCOMMENT_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."DOCCOMMENT" ADD CONSTRAINT "FK_DOCCOMMENT_SYSUSER" FOREIGN KEY ("USER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCCUSTOMFIELDS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCCUSTOMFIELDS" ADD CONSTRAINT "FK_DOCCUSTOMFIELDS_DOCCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCCUSTOMFIELDVALUES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCCUSTOMFIELDVALUES" ADD CONSTRAINT "FK_DOCCSTMFLDVALUES_CUSTFLDID" FOREIGN KEY ("CUSTFIELD_ID")
	  REFERENCES "GZVLG"."DOCCUSTOMFIELDS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCCUSTOMFIELDVALUES" ADD CONSTRAINT "FK_DOCCSTMFLDVALUES_DOCID" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCDIGESTREQUISITES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCDIGESTREQUISITES" ADD CONSTRAINT "FK_DOCDIGREQS_DOCDIGRULE" FOREIGN KEY ("DOCDIGESTRULE_ID")
	  REFERENCES "GZVLG"."DOCDIGESTRULE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCDIGESTREQUISITES" ADD CONSTRAINT "FK_DOCDIGREQS_RULEREQUISITE" FOREIGN KEY ("RULEREQUISITE_ID")
	  REFERENCES "GZVLG"."RULEREQUISITE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCDIGESTROLES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCDIGESTROLES" ADD CONSTRAINT "FK_DOCDIGESTROLES_DOCACTION" FOREIGN KEY ("DOCACTION_ID")
	  REFERENCES "GZVLG"."DOCACTION" ("ID") ON DELETE SET NULL ENABLE;
 
  ALTER TABLE "GZVLG"."DOCDIGESTROLES" ADD CONSTRAINT "FK_DOCDIGROLES_DOCDIGRULE" FOREIGN KEY ("DOCDIGESTRULE_ID")
	  REFERENCES "GZVLG"."DOCDIGESTRULE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCDIGESTROLES" ADD CONSTRAINT "FK_DOCDIGROLES_USERROLE" FOREIGN KEY ("USERROLE_ID")
	  REFERENCES "GZVLG"."USERROLE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCDIGESTRULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCDIGESTRULE" ADD CONSTRAINT "FK_DDS_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCDIGESTRULE" ADD CONSTRAINT "FK_DDS_OIDREF" FOREIGN KEY ("OIDREF_ID")
	  REFERENCES "GZVLG"."OIDREF" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCDIGESTRULE" ADD CONSTRAINT "FK_DOCDIGESTRULE_FGROUPHEADER" FOREIGN KEY ("FGROUPHEADER_ID")
	  REFERENCES "GZVLG"."FGROUPHEADER" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCDIGESTRULE" ADD CONSTRAINT "FK_DOCDIGESTRULE_RULESCRIPT" FOREIGN KEY ("RULESCRIPT_ID")
	  REFERENCES "GZVLG"."RULESCRIPT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCDIGESTRULE" ADD CONSTRAINT "FK_DODIGESTULE_PARDISPSTATUS" FOREIGN KEY ("PARDISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCEVENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCEVENT" ADD CONSTRAINT "FK_DOCEVENT_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCEVENT" ADD CONSTRAINT "FK_DOCEVENT_DOCSTATUS" FOREIGN KEY ("DOCUMENTCLASS_ID", "DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DOCSTATUS" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCEVENT" ADD CONSTRAINT "FK_DOCEVENT_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCEVENT" ADD CONSTRAINT "FK_DOCEVENT_PROCTREE" FOREIGN KEY ("PROCTREE_ID")
	  REFERENCES "GZVLG"."PROCTREE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCEVENT" ADD CONSTRAINT "FK_DOCEVENT_USERPROCTREE" FOREIGN KEY ("USERPROCTREE_ID")
	  REFERENCES "GZVLG"."PROCTREE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCEVERRLOG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCEVERRLOG" ADD CONSTRAINT "FK_DOCEVERRLOG_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCEVERRLOG" ADD CONSTRAINT "FK_DOCEVERRLOG_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCEVERRLOG" ADD CONSTRAINT "FK_DOCEVERRLOG_SYSUSER" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCFLAG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCFLAG" ADD CONSTRAINT "FK_DOCFLAG_DOCFLAGTYPE" FOREIGN KEY ("DOCFLAGTYPE_ID")
	  REFERENCES "GZVLG"."DOCFLAGTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCFLAG" ADD CONSTRAINT "FK_DOCFLAG_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCFLAGTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCFLAGTYPE" ADD CONSTRAINT "FK_DOCFLAGTYPE_CATEGORY" FOREIGN KEY ("CATEGORY_ID")
	  REFERENCES "GZVLG"."DOCFLAGCATEGORY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCFLAGTYPE" ADD CONSTRAINT "FK_DOCFLAGTYPE_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCGROUP" ADD CONSTRAINT "FK_DOCGROUP_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCGROUP" ADD CONSTRAINT "FK_DOCGROUP_PARENT" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."DOCGROUP" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCJOURNAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCJOURNAL" ADD CONSTRAINT "FK_DOCJOURNAL_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCJOURNAL" ADD CONSTRAINT "FK_DOCJOURNAL_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."DOCJOURNAL" ADD CONSTRAINT "FK_DOCJOURNAL_OLD_DISPSTATUS" FOREIGN KEY ("OLD_DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCREQ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCREQ" ADD CONSTRAINT "FK_DOCREQ_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCREQ" ADD CONSTRAINT "FK_DOCREQ_REQTYPE" FOREIGN KEY ("REQUIREMENTTYPE_ID")
	  REFERENCES "GZVLG"."REQUIREMENTTYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCRETENTION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCRETENTION" ADD CONSTRAINT "FK_DOCRETENTIONR_DOCACTION" FOREIGN KEY ("DOCACTION_ID")
	  REFERENCES "GZVLG"."DOCACTION" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCRETENTION" ADD CONSTRAINT "FK_DOCRETENTION_DOCSTATUS" FOREIGN KEY ("DOCSTATUS_ID")
	  REFERENCES "GZVLG"."DOCSTATUS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCRETENTIONSTATITEMS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCRETENTIONSTATITEMS" ADD CONSTRAINT "FK_DOCRESTATITMS_DOC" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCRETENTIONSTATITEMS" ADD CONSTRAINT "FK_DOCRESTATITMS_RET" FOREIGN KEY ("DOCRETENTION_ID")
	  REFERENCES "GZVLG"."DOCRETENTION" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCRETENTIONSTATUS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCRETENTIONSTATUS" ADD CONSTRAINT "FK_DOCRESTATUS_DOC" FOREIGN KEY ("ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCRETENTIONSTATUS" ADD CONSTRAINT "FK_DOCRESTAT_DOCRET" FOREIGN KEY ("DOCRETENTION_ID")
	  REFERENCES "GZVLG"."DOCRETENTION" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCSELECT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCSELECT" ADD CONSTRAINT "FK_DOCSELECT_CMPCOMPETITOR" FOREIGN KEY ("ORDER_ID", "COMPETITORPOS")
	  REFERENCES "GZVLG"."CMPCOMPETITOR" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."DOCSELECT" ADD CONSTRAINT "FK_DOCSELECT_CMPDOCREQ" FOREIGN KEY ("ORDER_ID", "DOCREQPOS")
	  REFERENCES "GZVLG"."CMPDOCREQ" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCSITELINK
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCSITELINK" ADD CONSTRAINT "FK_DOCSITELINK_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCSTATUS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCSTATUS" ADD CONSTRAINT "FK_DOCSTATUS_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCSTATUS" ADD CONSTRAINT "FK_DOCSTATUS_DOCSTATUS" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."DOCSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCSTATUS" ADD CONSTRAINT "FK_DOCSTATUS_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCSTATUS" ADD CONSTRAINT "FK_DOCSTATUS_PROCTREE" FOREIGN KEY ("PROCTREE_ID")
	  REFERENCES "GZVLG"."PROCTREE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCSTATUS" ADD CONSTRAINT "FK_DOCSTATUS_USERPROCTREE" FOREIGN KEY ("USERPROCTREE_ID")
	  REFERENCES "GZVLG"."PROCTREE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCUMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCUMENT" ADD CONSTRAINT "FK_DOCUMENT_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCUMENT" ADD CONSTRAINT "FK_DOCUMENT_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCUMENT" ADD CONSTRAINT "FK_DOCUMENT_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCUMENT" ADD CONSTRAINT "FK_DOCUMENT_PARDISPSTATUS" FOREIGN KEY ("PARDISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCUMENT" ADD CONSTRAINT "FK_DOCUMENT_PARENT" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCUMENT" ADD CONSTRAINT "FK_DOCUMENT_SYSUSER" FOREIGN KEY ("AUTHOR_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCUMENTBLOCKINFO
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCUMENTBLOCKINFO" ADD CONSTRAINT "FK_DOCUMENTBLOCKINFO_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."DOCUMENTBLOCKINFO" ADD CONSTRAINT "FK_DOCUMENTBLOCKINFO_SYSUSER" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCUMENTCLASS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCUMENTCLASS" ADD CONSTRAINT "FK_DOCUMENTCLASS_DOCPRINTER" FOREIGN KEY ("DOCPRINTER_ID")
	  REFERENCES "GZVLG"."SERVERPROCESSOR" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCUMENTCLASS" ADD CONSTRAINT "FK_DOCUMENTCLASS_DOCUMENT" FOREIGN KEY ("CLIENTDOCUMENT_ID")
	  REFERENCES "GZVLG"."CLIENTOBJECT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCUMENTCLASS" ADD CONSTRAINT "FK_DOCUMENTCLASS_MODULE" FOREIGN KEY ("CLIENTMODULE_ID")
	  REFERENCES "GZVLG"."CLIENTOBJECT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCUMENTCLASS" ADD CONSTRAINT "FK_DOCUMENTCLASS_NUMGENERATOR" FOREIGN KEY ("NUMGENERATOR_ID")
	  REFERENCES "GZVLG"."NUMGENERATOR" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCUMENTCLASS" ADD CONSTRAINT "FK_DOCUMENTCLASS_PRINT" FOREIGN KEY ("PRINTCLIENTOBJECT_ID")
	  REFERENCES "GZVLG"."CLIENTOBJECT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCUMENTCLASS" ADD CONSTRAINT "FK_DOCUMENTCLASS_SERVERACTION" FOREIGN KEY ("DOCPRINTER_ID", "PRINTER_ACTION")
	  REFERENCES "GZVLG"."SERVERACTION" ("SERVERPROCESSOR_ID", "ACTION_NAME") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCUMENTCLASS" ADD CONSTRAINT "FK_DOCUMENTCLASS_SERVERPROC" FOREIGN KEY ("SERVERPROCESSOR_ID")
	  REFERENCES "GZVLG"."SERVERPROCESSOR" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCUMENTREPORTS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCUMENTREPORTS" ADD CONSTRAINT "FK_DOCREP_DOCPRINTER" FOREIGN KEY ("DOCPRINTER_ID")
	  REFERENCES "GZVLG"."SERVERPROCESSOR" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."DOCUMENTREPORTS" ADD CONSTRAINT "FK_DOCREP_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCWEBLINK
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOCWEBLINK" ADD CONSTRAINT "FK_DOCWEBLINK_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOMEN
--------------------------------------------------------

  ALTER TABLE "GZVLG"."DOMEN" ADD CONSTRAINT "FK_DOMEN_PARENT" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."DOMEN" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EQUALITYCODES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."EQUALITYCODES" ADD CONSTRAINT "FK_EQUALITYCODES_EQUALITY" FOREIGN KEY ("EQUALITY_ID")
	  REFERENCES "GZVLG"."EQUALITY" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ESCHECKRULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ESCHECKRULE" ADD CONSTRAINT "FK_ESCHECKRULE_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ESCHECKRULE" ADD CONSTRAINT "FK_ESCHECKRULE_FGROUPHEADER" FOREIGN KEY ("FGROUPHEADER_ID")
	  REFERENCES "GZVLG"."FGROUPHEADER" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ESCHECKRULE" ADD CONSTRAINT "FK_ESCHECKRULE_PARDISPSTATUS" FOREIGN KEY ("PARDISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ESCHECKRULE" ADD CONSTRAINT "FK_ESCHECKRULE_SCRIPT" FOREIGN KEY ("RULESCRIPT_ID")
	  REFERENCES "GZVLG"."RULESCRIPT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ESCHECKRULEREQUISITES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ESCHECKRULEREQUISITES" ADD CONSTRAINT "FK_ECHKRULREQS_ESCHECKRULE" FOREIGN KEY ("ESCHECKRULE_ID")
	  REFERENCES "GZVLG"."ESCHECKRULE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ESCHECKRULEREQUISITES" ADD CONSTRAINT "FK_ECHKRULREQS_RULEREQUISTE" FOREIGN KEY ("RULEREQUISITE_ID")
	  REFERENCES "GZVLG"."RULEREQUISITE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ESCRROLE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ESCRROLE" ADD CONSTRAINT "FK_ESCRROLE_ESCHECKRULE" FOREIGN KEY ("ESCHECKRULE_ID")
	  REFERENCES "GZVLG"."ESCHECKRULE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ESCRROLE" ADD CONSTRAINT "FK_ESCRROLE_USERROLE" FOREIGN KEY ("USERROLE_ID")
	  REFERENCES "GZVLG"."USERROLE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ESTIMATE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ESTIMATE" ADD CONSTRAINT "FK_ESTIMATE_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ESTIMATE" ADD CONSTRAINT "FK_ESTIMATE_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ETP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ETP" ADD CONSTRAINT "FK_ETP_MSGSITE" FOREIGN KEY ("MSGSITE_ID")
	  REFERENCES "GZVLG"."MSGSITE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ETP" ADD CONSTRAINT "FK_ETP_OOSETPCODE" FOREIGN KEY ("OOSETPCODE")
	  REFERENCES "GZVLG"."ETPTYPE" ("CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ETPATTACH
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ETPATTACH" ADD CONSTRAINT "FK_ETPATTACH_ETP" FOREIGN KEY ("ETP_ID")
	  REFERENCES "GZVLG"."ETP" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EXCHANGECLASSES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."EXCHANGECLASSES" ADD CONSTRAINT "FK_EXCHANGECLASSES_CLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."EXCHANGECLASSES" ADD CONSTRAINT "FK_EXCHANGECLASSES_SCHEME" FOREIGN KEY ("DOCEXCHANGESCHEME_ID")
	  REFERENCES "GZVLG"."DOCEXCHANGESCHEME" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FACTDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FACTDOC" ADD CONSTRAINT "FK_FACTDOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."FACTDOC" ADD CONSTRAINT "FK_FACTDOC_COUNTRY" FOREIGN KEY ("COUNTRY_ID")
	  REFERENCES "GZVLG"."COUNTRY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."FACTDOC" ADD CONSTRAINT "FK_FACTDOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."FACTDOC" ADD CONSTRAINT "FK_FACTDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."FACTDOC" ADD CONSTRAINT "FK_FACTDOC_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."FACTDOC" ADD CONSTRAINT "FK_FACTDOC_EXPORT_PARENT" FOREIGN KEY ("EXPORT_PARENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."FACTDOC" ADD CONSTRAINT "FK_FACTDOC_FACTDOCTYPE" FOREIGN KEY ("TYPENAME")
	  REFERENCES "GZVLG"."FACTDOCTYPE" ("NAME") ENABLE;
 
  ALTER TABLE "GZVLG"."FACTDOC" ADD CONSTRAINT "FK_FACTDOC_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."FACTDOC" ADD CONSTRAINT "FK_FACTDOC_RECIPIENT" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."FACTDOC" ADD CONSTRAINT "FK_FACTDOC_TERRITORY" FOREIGN KEY ("COUNTRY_ID", "TERRITORYCODE")
	  REFERENCES "GZVLG"."TERRITORY" ("COUNTRY_ID", "CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."FACTDOC" ADD CONSTRAINT "FK_FACTDOC_VENDER" FOREIGN KEY ("VENDOR_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."FACTDOC" ADD CONSTRAINT "FK_FACTDOC_VENDORCOUNTRY" FOREIGN KEY ("VENDORCOUNTRY_ID")
	  REFERENCES "GZVLG"."COUNTRY" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FCTGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FCTGOODS" ADD CONSTRAINT "FK_FCTGOODS_FACTDOC" FOREIGN KEY ("FACT_ID")
	  REFERENCES "GZVLG"."FACTDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."FCTGOODS" ADD CONSTRAINT "FK_FCTGOODS_GROUP" FOREIGN KEY ("GROUPCODE")
	  REFERENCES "GZVLG"."GOODSGROUP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."FCTGOODS" ADD CONSTRAINT "FK_FCTGOODS_OKDP_CODE" FOREIGN KEY ("OKDP_CODE")
	  REFERENCES "GZVLG"."GOODSOKDP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."FCTGOODS" ADD CONSTRAINT "FK_FCTGOODS_OKPD" FOREIGN KEY ("OKPD_ID")
	  REFERENCES "GZVLG"."GOODSOKPD" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FCTGOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FCTGOODSPROP" ADD CONSTRAINT "FK_FCTGOODSPROP_FCTGOODS" FOREIGN KEY ("FACT_ID", "GOODSPOS")
	  REFERENCES "GZVLG"."FCTGOODS" ("FACT_ID", "POS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FGROUP" ADD CONSTRAINT "FK_FGROUP_FGROUPHEADER" FOREIGN KEY ("FGROUPHEADER_ID")
	  REFERENCES "GZVLG"."FGROUPHEADER" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FGROUPATTACH
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FGROUPATTACH" ADD CONSTRAINT "FK_FGROUPATTACH_DOCATTACHEX" FOREIGN KEY ("DOCATTACH_ID")
	  REFERENCES "GZVLG"."DOCATTACHEX" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."FGROUPATTACH" ADD CONSTRAINT "FK_FGROUPATTACH_FGROUP" FOREIGN KEY ("FGROUP_ID")
	  REFERENCES "GZVLG"."FGROUP" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FINSRCSATISFY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FINSRCSATISFY" ADD CONSTRAINT "FINSRCNEXTYEAR" FOREIGN KEY ("FINSRCNEXTYEARID")
	  REFERENCES "GZVLG"."FINSRC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."FINSRCSATISFY" ADD CONSTRAINT "FINSRCSELECTEDYEAR" FOREIGN KEY ("FINSRCSELECTEDYEARID")
	  REFERENCES "GZVLG"."FINSRC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FUNCDOCUMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FUNCDOCUMENT" ADD CONSTRAINT "FK_FUNCDOCUMENT_FUNUNIT" FOREIGN KEY ("FUNUNIT_ID")
	  REFERENCES "GZVLG"."FUNUNIT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FUNCMODULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FUNCMODULE" ADD CONSTRAINT "FK_FUNCMODULE_FUNUNIT" FOREIGN KEY ("FUNUNIT_ID")
	  REFERENCES "GZVLG"."FUNUNIT" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FUNCOBJECT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FUNCOBJECT" ADD CONSTRAINT "FK_FUNCOBJECT_FUNUNIT" FOREIGN KEY ("FUNUNIT_ID")
	  REFERENCES "GZVLG"."FUNUNIT" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FUNCPROCESSOR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FUNCPROCESSOR" ADD CONSTRAINT "FK_FUNCPROCESSOR_FUNUNIT" FOREIGN KEY ("FUNUNIT_ID")
	  REFERENCES "GZVLG"."FUNUNIT" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FUNCPROVIDER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FUNCPROVIDER" ADD CONSTRAINT "FK_FUNCPROVIDER_FUNUNIT" FOREIGN KEY ("FUNUNIT_ID")
	  REFERENCES "GZVLG"."FUNUNIT" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FUNCREFERENCE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FUNCREFERENCE" ADD CONSTRAINT "FK_FUNCREFERENCE_FUNUNIT" FOREIGN KEY ("FUNUNIT_ID")
	  REFERENCES "GZVLG"."FUNUNIT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FUNCUNIT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FUNCUNIT" ADD CONSTRAINT "FK_FUNCUNIT_FUNUNIT" FOREIGN KEY ("FUNUNIT_ID")
	  REFERENCES "GZVLG"."FUNUNIT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FUNUNIT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."FUNUNIT" ADD CONSTRAINT "FK_FUNUNIT_FUNCAT" FOREIGN KEY ("FUNCAT_ID")
	  REFERENCES "GZVLG"."FUNCAT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GCREGISTER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GCREGISTER" ADD CONSTRAINT "FK_GCREGISTER_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODS" ADD CONSTRAINT "FK_GOODS_GROUP" FOREIGN KEY ("GROUP_ID")
	  REFERENCES "GZVLG"."GOODSGROUP" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."GOODS" ADD CONSTRAINT "FK_GOODS_UNIT" FOREIGN KEY ("UNITNAME")
	  REFERENCES "GZVLG"."UNIT" ("NAME") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GOODSBANGOODSOKPD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSBANGOODSOKPD" ADD CONSTRAINT "FK_GBGO_GOODSBAN_ID" FOREIGN KEY ("GOODSBAN_ID")
	  REFERENCES "GZVLG"."GOODSBAN" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSBANGOODSOKPD" ADD CONSTRAINT "FK_GBGO_GOODSOKPD_ID" FOREIGN KEY ("GOODSOKPD_ID")
	  REFERENCES "GZVLG"."GOODSOKPD" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GOODSBANPURCHASEMODE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSBANPURCHASEMODE" ADD CONSTRAINT "FK_GBPM_GOODSBAN_ID" FOREIGN KEY ("GOODSBAN_ID")
	  REFERENCES "GZVLG"."GOODSBAN" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSBANPURCHASEMODE" ADD CONSTRAINT "FK_GBPM_PMODE_ID" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GOODSGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSGROUP" ADD CONSTRAINT "FK_GOODSGROUP_OKDP" FOREIGN KEY ("OKDP_CODE")
	  REFERENCES "GZVLG"."GOODSOKDP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSGROUP" ADD CONSTRAINT "FK_GOODSGROUP_OKPD" FOREIGN KEY ("OKPD_ID")
	  REFERENCES "GZVLG"."GOODSOKPD" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSGROUP" ADD CONSTRAINT "FK_GOODSGROUP_PARENT" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."GOODSGROUP" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSGROUP" ADD CONSTRAINT "FK_GOODSGROUP_UNIT" FOREIGN KEY ("UNITNAME")
	  REFERENCES "GZVLG"."UNIT" ("NAME") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GOODSGROUPDOCDETAIL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSGROUPDOCDETAIL" ADD CONSTRAINT "FK_GOODSDOCDETAIL_DOC" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSGROUPDOCDETAIL" ADD CONSTRAINT "FK_GOODSDOCDETAIL_GOODSGROUP" FOREIGN KEY ("GROUPCODE")
	  REFERENCES "GZVLG"."GOODSGROUP" ("CODE") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSGROUPDOCDETAIL" ADD CONSTRAINT "FK_GOODSDOCDETAIL_OKDP_CODE" FOREIGN KEY ("OKDP_CODE")
	  REFERENCES "GZVLG"."GOODSOKDP" ("CODE") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GOODSGROUPPURCHASEMODE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSGROUPPURCHASEMODE" ADD CONSTRAINT "FK_GPM_GOODSGROUP" FOREIGN KEY ("GOODSGROUP_ID")
	  REFERENCES "GZVLG"."GOODSGROUP" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSGROUPPURCHASEMODE" ADD CONSTRAINT "FK_GPM_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GOODSGROUP_TREE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSGROUP_TREE" ADD CONSTRAINT "FK_TREE_GOODSGROUP" FOREIGN KEY ("GROUP_ID")
	  REFERENCES "GZVLG"."GOODSGROUP" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GOODSOKDP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSOKDP" ADD CONSTRAINT "FK_GOODSOKDP_OKVED" FOREIGN KEY ("OKVED_ID")
	  REFERENCES "GZVLG"."GOODSOKVED" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSOKDP" ADD CONSTRAINT "FK_GOODSOKDP_PARENT" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."GOODSOKDP" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GOODSOKDPCOUNTRYPREF
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSOKDPCOUNTRYPREF" ADD CONSTRAINT "FK_GOODSOKDPPREF_COUNTRY" FOREIGN KEY ("COUNTRY_ID")
	  REFERENCES "GZVLG"."COUNTRY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSOKDPCOUNTRYPREF" ADD CONSTRAINT "FK_GOODSOKDPPREF_OKDP" FOREIGN KEY ("GOODSOKDP_ID")
	  REFERENCES "GZVLG"."GOODSOKDP" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GOODSOKDPPURCHASEMODE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSOKDPPURCHASEMODE" ADD CONSTRAINT "FK_GOODSOKDP_OKDP" FOREIGN KEY ("GOODSOKDP_ID")
	  REFERENCES "GZVLG"."GOODSOKDP" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSOKDPPURCHASEMODE" ADD CONSTRAINT "FK_GOODSOKDP_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GOODSOKPD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSOKPD" ADD CONSTRAINT "FK_GOODSOKPD_PARENT" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."GOODSOKPD" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GOODSOKPDCOUNTRYPREF
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSOKPDCOUNTRYPREF" ADD CONSTRAINT "FK_GOODSOKPDPREF_COUNTRY" FOREIGN KEY ("COUNTRY_ID")
	  REFERENCES "GZVLG"."COUNTRY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSOKPDCOUNTRYPREF" ADD CONSTRAINT "FK_GOODSOKPDPREF_OKPD" FOREIGN KEY ("GOODSOKPD_ID")
	  REFERENCES "GZVLG"."GOODSOKPD" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GOODSOKPDPURCHASEMODE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSOKPDPURCHASEMODE" ADD CONSTRAINT "FK_GOODSOKPD_OKPD" FOREIGN KEY ("GOODSOKPD_ID")
	  REFERENCES "GZVLG"."GOODSOKPD" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSOKPDPURCHASEMODE" ADD CONSTRAINT "FK_GOODSOKPD_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GOODSOKVED
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSOKVED" ADD CONSTRAINT "FK_GOODSOKVED_PARENT" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."GOODSOKVED" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GOODSPRICE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSPRICE" ADD CONSTRAINT "FK_GOODSPRICE_GOODS" FOREIGN KEY ("GOODS_ID")
	  REFERENCES "GZVLG"."GOODS" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GOODSPROP" ADD CONSTRAINT "FK_GOODSPROP_GOODS" FOREIGN KEY ("GOODS_ID")
	  REFERENCES "GZVLG"."GOODS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."GOODSPROP" ADD CONSTRAINT "FK_GOODSPROP_GROUPPROP" FOREIGN KEY ("GROUP_ID", "SEQORDER")
	  REFERENCES "GZVLG"."GROUPPROP" ("GROUP_ID", "SEQORDER") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GRANTINVESTMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GRANTINVESTMENT" ADD CONSTRAINT "FK_GRANTINVESTMENT_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."GRANTINVESTMENT" ADD CONSTRAINT "FK_GRANTINVESTMENT_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GROUPPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GROUPPROP" ADD CONSTRAINT "FK_GROUPPROP_GROUP" FOREIGN KEY ("GROUP_ID")
	  REFERENCES "GZVLG"."GOODSGROUP" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."GROUPPROP" ADD CONSTRAINT "FK_GROUPPROP_PROPTYPE" FOREIGN KEY ("PROPTYPE_ID")
	  REFERENCES "GZVLG"."PROPTYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GROUPPROPVALUE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GROUPPROPVALUE" ADD CONSTRAINT "FK_GROUPPROPVALUE_GROUPPROP" FOREIGN KEY ("GROUPPROP_ID")
	  REFERENCES "GZVLG"."GROUPPROP" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GROUPUNIT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."GROUPUNIT" ADD CONSTRAINT "FK_GOODSGROUP_GROUPUNIT" FOREIGN KEY ("GROUP_ID")
	  REFERENCES "GZVLG"."GOODSGROUP" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."GROUPUNIT" ADD CONSTRAINT "FK_GROUPUNIT_UNIT" FOREIGN KEY ("UNITNAME")
	  REFERENCES "GZVLG"."UNIT" ("NAME") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HISTORYMODIFY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."HISTORYMODIFY" ADD CONSTRAINT "FK_HISTORYMODIFY_SYSUSER" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table INDUSTRYCODE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."INDUSTRYCODE" ADD CONSTRAINT "FK_INDUSTRYCODE_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INDUSTRYCODE" ADD CONSTRAINT "FK_INDUSTRYCODE_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INDUSTRYCODE" ADD CONSTRAINT "FK_INDUSTRYCODE_PARENT" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."INDUSTRYCODE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table INSTITUTIONLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."INSTITUTIONLINE" ADD CONSTRAINT "FK_INSTITUTIONLINE_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INSTITUTIONLINE" ADD CONSTRAINT "FK_INSTITUTIONLINE_GI" FOREIGN KEY ("GRANTINVESTMENT_ID")
	  REFERENCES "GZVLG"."GRANTINVESTMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INSTITUTIONLINE" ADD CONSTRAINT "FK_INSTITUTIONLINE_IC" FOREIGN KEY ("INDUSTRYCODE_ID")
	  REFERENCES "GZVLG"."INDUSTRYCODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INSTITUTIONLINE" ADD CONSTRAINT "FK_INSTITUTIONLINE_ORG" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table INTERBUDGET
--------------------------------------------------------

  ALTER TABLE "GZVLG"."INTERBUDGET" ADD CONSTRAINT "FK_INTERBUDGET_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INTERBUDGET" ADD CONSTRAINT "FK_INTERBUDGET_MSGSITE" FOREIGN KEY ("MSGSITE_ID")
	  REFERENCES "GZVLG"."MSGSITE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table INVBUDGETLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."INVBUDGETLINE" ADD CONSTRAINT "FK_INVBL_GRANTINVESTMENT" FOREIGN KEY ("GRANTINVESTMENT_ID")
	  REFERENCES "GZVLG"."GRANTINVESTMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVBUDGETLINE" ADD CONSTRAINT "FK_INVBL_INDUSTRYCODE" FOREIGN KEY ("INDUSTRYCODE_ID")
	  REFERENCES "GZVLG"."INDUSTRYCODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVBUDGETLINE" ADD CONSTRAINT "FK_INVBUDGETLINE_ESTIMATE" FOREIGN KEY ("ESTIMATE_ID")
	  REFERENCES "GZVLG"."ESTIMATE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVBUDGETLINE" ADD CONSTRAINT "FK_INVBUDGETLINE_FINSRC" FOREIGN KEY ("FINSRC_ID")
	  REFERENCES "GZVLG"."FINSRC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVBUDGETLINE" ADD CONSTRAINT "FK_INVBUDGETLINE_INVOICE" FOREIGN KEY ("INVOICE_ID")
	  REFERENCES "GZVLG"."INVOICEDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVBUDGETLINE" ADD CONSTRAINT "FK_INVBUDGETLINE_LIABILITY" FOREIGN KEY ("LIABILITYEXPENSE_ID")
	  REFERENCES "GZVLG"."LIABILITYEXPENSE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVBUDGETLINE" ADD CONSTRAINT "FK_INVBUDGETLINE_ORGACC" FOREIGN KEY ("RECIPIENTACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVBUDGETLINE" ADD CONSTRAINT "FK_INVBUDGETLINE_RECIPIENT" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table INVGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."INVGOODS" ADD CONSTRAINT "FK_INVGOODS_GROUP" FOREIGN KEY ("GROUPCODE")
	  REFERENCES "GZVLG"."GOODSGROUP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."INVGOODS" ADD CONSTRAINT "FK_INVGOODS_INVOICE" FOREIGN KEY ("INVOICE_ID")
	  REFERENCES "GZVLG"."INVOICEDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVGOODS" ADD CONSTRAINT "FK_INVGOODS_OKDP_CODE" FOREIGN KEY ("OKDP_CODE")
	  REFERENCES "GZVLG"."GOODSOKDP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."INVGOODS" ADD CONSTRAINT "FK_INVGOODS_OKPD" FOREIGN KEY ("OKPD_ID")
	  REFERENCES "GZVLG"."GOODSOKPD" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table INVGOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."INVGOODSPROP" ADD CONSTRAINT "FK_INVGOODSPROP_INVGOODS" FOREIGN KEY ("INVOICE_ID", "GOODSPOS")
	  REFERENCES "GZVLG"."INVGOODS" ("INVOICE_ID", "POS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table INVOICEDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "FK_INVOICEDOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "FK_INVOICEDOC_CON" FOREIGN KEY ("CON_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "FK_INVOICEDOC_CONACC" FOREIGN KEY ("CONACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "FK_INVOICEDOC_CONEXECUTER" FOREIGN KEY ("CONEXECUTER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "FK_INVOICEDOC_CONEXECUTERACC" FOREIGN KEY ("CONEXECUTERACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "FK_INVOICEDOC_CONTRACTREASON" FOREIGN KEY ("SINGLECUSTOMERREASON_ID")
	  REFERENCES "GZVLG"."CONTRACTREASON" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "FK_INVOICEDOC_COUNTRY" FOREIGN KEY ("COUNTRY_ID")
	  REFERENCES "GZVLG"."COUNTRY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "FK_INVOICEDOC_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "FK_INVOICEDOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "FK_INVOICEDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "FK_INVOICEDOC_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "FK_INVOICEDOC_NECESSITY" FOREIGN KEY ("NECESSITY_ID")
	  REFERENCES "GZVLG"."NECESSITY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "FK_INVOICEDOC_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "FK_INVOICEDOC_TERRITORY" FOREIGN KEY ("COUNTRY_ID", "TERRITORYCODE")
	  REFERENCES "GZVLG"."TERRITORY" ("COUNTRY_ID", "CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."INVOICEDOC" ADD CONSTRAINT "FK_INV_PROPFORMID" FOREIGN KEY ("CONPROPFORM_ID")
	  REFERENCES "GZVLG"."ORGFORM" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table KBKLINEFIT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."KBKLINEFIT" ADD CONSTRAINT "FK_KBKLINEFIT_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table KLADR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."KLADR" ADD CONSTRAINT "FK_KLADR_PARENT" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."KLADR" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table KLADRSTREET
--------------------------------------------------------

  ALTER TABLE "GZVLG"."KLADRSTREET" ADD CONSTRAINT "FK_KLADRSTREET_KLADR" FOREIGN KEY ("KLADR_ID")
	  REFERENCES "GZVLG"."KLADR" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table LEDGER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "FK_LEDGER_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "FK_LEDGER_DELIVERYBASIS" FOREIGN KEY ("DELIVERYBASIS_ID")
	  REFERENCES "GZVLG"."DELIVERYBASIS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "FK_LEDGER_DESCRIPTION" FOREIGN KEY ("DESCRIPTIONCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "FK_LEDGER_FINSRC" FOREIGN KEY ("FINSRC_ID")
	  REFERENCES "GZVLG"."FINSRC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "FK_LEDGER_GOODS" FOREIGN KEY ("GOODS_ID")
	  REFERENCES "GZVLG"."GOODS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "FK_LEDGER_GOODSGROUP" FOREIGN KEY ("GROUP_ID")
	  REFERENCES "GZVLG"."GOODSGROUP" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "FK_LEDGER_GRANTINVESTMENT" FOREIGN KEY ("GRANTINVESTMENT_ID")
	  REFERENCES "GZVLG"."GRANTINVESTMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "FK_LEDGER_INDUSTRYCODE" FOREIGN KEY ("INDUSTRYCODE_ID")
	  REFERENCES "GZVLG"."INDUSTRYCODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "FK_LEDGER_NECESSITY" FOREIGN KEY ("NECESSITY_ID")
	  REFERENCES "GZVLG"."NECESSITY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "FK_LEDGER_OKDP" FOREIGN KEY ("OKDP_ID")
	  REFERENCES "GZVLG"."GOODSOKDP" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "FK_LEDGER_ORG_CMPORG" FOREIGN KEY ("CMPORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "FK_LEDGER_ORG_CONTRACTOR" FOREIGN KEY ("CONTRACTOR_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "FK_LEDGER_ORG_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "FK_LEDGER_PAYCONDITION" FOREIGN KEY ("PAYCONDITIONCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "FK_LEDGER_PLAN2DOC" FOREIGN KEY ("PLAN2DOC_ID")
	  REFERENCES "GZVLG"."PLAN2DOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "FK_LEDGER_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LEDGER" ADD CONSTRAINT "FK_LEDGER_UNIT" FOREIGN KEY ("UNITNAME")
	  REFERENCES "GZVLG"."UNIT" ("NAME") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table LIABILITYCREDENTIAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."LIABILITYCREDENTIAL" ADD CONSTRAINT "FK_LIABILITYCRED_BUDGETSTAGE" FOREIGN KEY ("STAGECODE_ID")
	  REFERENCES "GZVLG"."BUDGETSTAGE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LIABILITYCREDENTIAL" ADD CONSTRAINT "FK_LIABILITYCRED_LIABILITYGRP" FOREIGN KEY ("LIABILITYGROUP_ID")
	  REFERENCES "GZVLG"."LIABILITYGROUP" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table LIABILITYEXPENSE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."LIABILITYEXPENSE" ADD CONSTRAINT "FK_LIABILITYEXPENSE_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LIABILITYEXPENSE" ADD CONSTRAINT "FK_LIABILITYEXPENSE_CREDENTIAL" FOREIGN KEY ("CREDENTIAL_ID")
	  REFERENCES "GZVLG"."LIABILITYCREDENTIAL" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LIABILITYEXPENSE" ADD CONSTRAINT "FK_LIABILITYEXPENSE_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table LIABILITYEXPENSE_DOCLINES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."LIABILITYEXPENSE_DOCLINES" ADD CONSTRAINT "FK_LIABILITY_LINES_EXPENSE" FOREIGN KEY ("LIABILITYEXPENSE_ID")
	  REFERENCES "GZVLG"."LIABILITYEXPENSE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."LIABILITYEXPENSE_DOCLINES" ADD CONSTRAINT "FK_LIABILITY_LINES_ORG" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MAILATTACH
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MAILATTACH" ADD CONSTRAINT "FK_MAILATTACH_MAIL" FOREIGN KEY ("MAIL_ID")
	  REFERENCES "GZVLG"."MAIL" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MAILRECEIVERGROUP_RECEIVER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MAILRECEIVERGROUP_RECEIVER" ADD CONSTRAINT "FK_MAILRECEIVERGROUP_GRP" FOREIGN KEY ("MAILRECEIVERGROUP_ID")
	  REFERENCES "GZVLG"."MAILRECEIVERGROUP" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."MAILRECEIVERGROUP_RECEIVER" ADD CONSTRAINT "FK_MAILRECEIVERGROUP_USR" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MENUITEM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MENUITEM" ADD CONSTRAINT "FK_MENUITEM_CLIENTOBJECT" FOREIGN KEY ("CLIENTOBJECT_ID")
	  REFERENCES "GZVLG"."CLIENTOBJECT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."MENUITEM" ADD CONSTRAINT "FK_MENUITEM_MENU" FOREIGN KEY ("MENU_ID")
	  REFERENCES "GZVLG"."MENU" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."MENUITEM" ADD CONSTRAINT "FK_MENUITEM_PARENT" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."MENUITEM" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MENUITEMWEB
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MENUITEMWEB" ADD CONSTRAINT "FK_MENUITEMWEB_MENU" FOREIGN KEY ("MENU_ID")
	  REFERENCES "GZVLG"."MENU" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."MENUITEMWEB" ADD CONSTRAINT "FK_MENUITEMWEB_PARENT" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."MENUITEMWEB" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table METACONSTRAINT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."METACONSTRAINT" ADD CONSTRAINT "FK_METACONSTRAINT_METAOBJECT" FOREIGN KEY ("METAOBJECT_ID")
	  REFERENCES "GZVLG"."METAOBJECT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MSG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MSG" ADD CONSTRAINT "FK_MSG_RECEIVER" FOREIGN KEY ("RECEIVER_ID")
	  REFERENCES "GZVLG"."MSGSITE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."MSG" ADD CONSTRAINT "FK_MSG_SENDER" FOREIGN KEY ("SENDER_ID")
	  REFERENCES "GZVLG"."MSGSITE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."MSG" ADD CONSTRAINT "FK_MSG_SYSUSER" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MSGQUEUE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MSGQUEUE" ADD CONSTRAINT "FK_MSGQUEUE_RECEIVER" FOREIGN KEY ("RECEIVER_ID")
	  REFERENCES "GZVLG"."MSGSITE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."MSGQUEUE" ADD CONSTRAINT "FK_MSGQUEUE_SENDER" FOREIGN KEY ("SENDER_ID")
	  REFERENCES "GZVLG"."MSGSITE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MSGSITE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MSGSITE" ADD CONSTRAINT "FK_MSGSITE_MSGLINKTYPE" FOREIGN KEY ("MSGLINKTYPE_ID")
	  REFERENCES "GZVLG"."MSGLINKTYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MSGSITEEXCHANGE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."MSGSITEEXCHANGE" ADD CONSTRAINT "FK_MSGSITEEXCHANGE_MSGSITE" FOREIGN KEY ("MSGSITE_ID")
	  REFERENCES "GZVLG"."MSGSITE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."MSGSITEEXCHANGE" ADD CONSTRAINT "FK_MSGSITEEXCHANGE_SCHEME" FOREIGN KEY ("DOCEXCHANGESCHEME_ID")
	  REFERENCES "GZVLG"."DOCEXCHANGESCHEME" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table NOTICEDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NOTICEDOC" ADD CONSTRAINT "FK_NOTICEDOC_AUTHORORG" FOREIGN KEY ("AUTHORORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."NOTICEDOC" ADD CONSTRAINT "FK_NOTICEDOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."NOTICEDOC" ADD CONSTRAINT "FK_NOTICEDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."NOTICEDOC" ADD CONSTRAINT "FK_NOTICEDOC_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."NOTICEDOC" ADD CONSTRAINT "FK_NOTICEDOC_ETP" FOREIGN KEY ("ETP_ID")
	  REFERENCES "GZVLG"."ETP" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."NOTICEDOC" ADD CONSTRAINT "FK_NOTICEDOC_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."NOTICEDOC" ADD CONSTRAINT "FK_NOTICEDOC_PUBLISHERORG" FOREIGN KEY ("PUBLISHERORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."NOTICEDOC" ADD CONSTRAINT "FK_NOTICEORG_DOCGROUP" FOREIGN KEY ("DOCGROUP_ID")
	  REFERENCES "GZVLG"."DOCGROUP" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."NOTICEDOC" ADD CONSTRAINT "FK_NOTICEORG_SYSDOCGROUP" FOREIGN KEY ("SYSDOCGROUP_ID")
	  REFERENCES "GZVLG"."DOCGROUP" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table NOTICEEMAILORG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NOTICEEMAILORG" ADD CONSTRAINT "FK_NOTICEEMAILORG_NOTICEDOC" FOREIGN KEY ("NOTICEDOC_ID")
	  REFERENCES "GZVLG"."NOTICEDOC" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."NOTICEEMAILORG" ADD CONSTRAINT "FK_NOTICEEMAILORG_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table NOTICEORG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NOTICEORG" ADD CONSTRAINT "FK_NOTICEORG_NOTICEDOC" FOREIGN KEY ("NOTICEDOC_ID")
	  REFERENCES "GZVLG"."NOTICEDOC" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."NOTICEORG" ADD CONSTRAINT "FK_NOTICEORG_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table NOTIFYMSG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NOTIFYMSG" ADD CONSTRAINT "FK_NMSG_NOTIFYMSGEVENT" FOREIGN KEY ("NOTIFYMSGEVENT_ID")
	  REFERENCES "GZVLG"."NOTIFYMSGEVENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."NOTIFYMSG" ADD CONSTRAINT "FK_NMSG_NOTIFYMSGGROUP" FOREIGN KEY ("NOTIFYMSGGROUP_ID")
	  REFERENCES "GZVLG"."NOTIFYMSGGROUP" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."NOTIFYMSG" ADD CONSTRAINT "FK_NMSG_RECEIVER" FOREIGN KEY ("RECEIVER_ID")
	  REFERENCES "GZVLG"."PERSON" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."NOTIFYMSG" ADD CONSTRAINT "FK_NMSG_SENDER" FOREIGN KEY ("SENDER_ID")
	  REFERENCES "GZVLG"."PERSON" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table NOTIFYMSGDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NOTIFYMSGDOC" ADD CONSTRAINT "FK_NMSGDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."NOTIFYMSGDOC" ADD CONSTRAINT "FK_NMSGDOC_NOTIFYMSGRULE" FOREIGN KEY ("NOTIFYMSGRULE_ID")
	  REFERENCES "GZVLG"."NOTIFYMSGRULE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table NOTIFYMSGRULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NOTIFYMSGRULE" ADD CONSTRAINT "FK_NMSGRULE_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."NOTIFYMSGRULE" ADD CONSTRAINT "FK_NMSGRULE_NOTIFYMSGEVENT" FOREIGN KEY ("NOTIFYMSGEVENT_ID")
	  REFERENCES "GZVLG"."NOTIFYMSGEVENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."NOTIFYMSGRULE" ADD CONSTRAINT "FK_NMSGRULE_NOTIFYMSGGROUP" FOREIGN KEY ("NOTIFYMSGGROUP_ID")
	  REFERENCES "GZVLG"."NOTIFYMSGGROUP" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."NOTIFYMSGRULE" ADD CONSTRAINT "FK_NMSGRULE_SENDER" FOREIGN KEY ("SENDER_ID")
	  REFERENCES "GZVLG"."PERSON" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table NOTIFYMSGRULE_RECEIVER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NOTIFYMSGRULE_RECEIVER" ADD CONSTRAINT "FK_NTFYMSGRLE_RCVR_NTFYMSGRLE" FOREIGN KEY ("NOTIFYMSGRULE_ID")
	  REFERENCES "GZVLG"."NOTIFYMSGRULE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."NOTIFYMSGRULE_RECEIVER" ADD CONSTRAINT "FK_NTFYMSGRLE_RCVR_PERSON" FOREIGN KEY ("PERSON_ID")
	  REFERENCES "GZVLG"."PERSON" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table NUMPREFIX
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NUMPREFIX" ADD CONSTRAINT "FK_NUMPREFIX_NUMGENERATOR" FOREIGN KEY ("NUMGENERATOR_ID")
	  REFERENCES "GZVLG"."NUMGENERATOR" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."NUMPREFIX" ADD CONSTRAINT "FK_NUMPREFIX_SYSUSER" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table NUMSEQUENCE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NUMSEQUENCE" ADD CONSTRAINT "FK_NUMSEQUENCE_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table NUMUSAGE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."NUMUSAGE" ADD CONSTRAINT "FK_NUMUSAGE_NUMSEQUENCE" FOREIGN KEY ("NUMSEQUENCE_ID")
	  REFERENCES "GZVLG"."NUMSEQUENCE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OFFERDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "FK_OFFERDOC_ACC" FOREIGN KEY ("VENDORACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "FK_OFFERDOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "FK_OFFERDOC_CMPORG" FOREIGN KEY ("CMPORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "FK_OFFERDOC_CUSTOMER" FOREIGN KEY ("VENDOR_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "FK_OFFERDOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "FK_OFFERDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "FK_OFFERDOC_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "FK_OFFERDOC_ETP" FOREIGN KEY ("ETP_ID")
	  REFERENCES "GZVLG"."ETP" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "FK_OFFERDOC_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "FK_OFFERDOC_PROPFORM" FOREIGN KEY ("VENDORPROPFORM_ID")
	  REFERENCES "GZVLG"."ORGFORM" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "FK_OFFERDOC_VENDORCOUNTRY" FOREIGN KEY ("VENDORCOUNTRY_ID")
	  REFERENCES "GZVLG"."COUNTRY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "FK_OFFERDOC_VENDOREXECUTER" FOREIGN KEY ("VENDOREXECUTER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "FK_OFFERDOC_VENDOREXECUTERACC" FOREIGN KEY ("VENDOREXECUTERACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "FK_OFFERDOC_VENDORPOSTCOUNTRY" FOREIGN KEY ("VENDORPOSTCOUNTRY_ID")
	  REFERENCES "GZVLG"."COUNTRY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFFERDOC" ADD CONSTRAINT "FK_OFFERDOC_VENDORTERCODE" FOREIGN KEY ("VENDORCOUNTRY_ID", "VENDORTERRITORYCODE")
	  REFERENCES "GZVLG"."TERRITORY" ("COUNTRY_ID", "CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OFRCRITERIONLINEVAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRCRITERIONLINEVAL" ADD CONSTRAINT "FK_OFRCRITERIONLINEVAL_OFFER" FOREIGN KEY ("OFFER_ID")
	  REFERENCES "GZVLG"."OFFERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRCRITERIONLINEVAL" ADD CONSTRAINT "FK_OFRCRITERIONLINEVAL_OFRCRIT" FOREIGN KEY ("OFFER_ID", "CMPCRITERIONPOS", "ISFINALOFFER")
	  REFERENCES "GZVLG"."OFRCRITERIONVAL" ("OFFER_ID", "CMPCRITERIONPOS", "ISFINALOFFER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OFRCRITERIONVAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRCRITERIONVAL" ADD CONSTRAINT "FK_OFRCRITERIONVALLOT" FOREIGN KEY ("OFFER_ID", "LOTPOS")
	  REFERENCES "GZVLG"."OFRLOT" ("OFFER_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRCRITERIONVAL" ADD CONSTRAINT "FK_OFRCRITERIONVAL_OFFERDOC" FOREIGN KEY ("OFFER_ID")
	  REFERENCES "GZVLG"."OFFERDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OFRDECREASON
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRDECREASON" ADD CONSTRAINT "FK_OFRDECREASON_LOT" FOREIGN KEY ("OFFER_ID", "LOTPOS")
	  REFERENCES "GZVLG"."OFRLOT" ("OFFER_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRDECREASON" ADD CONSTRAINT "FK_OFRDECREASON_OFFERDOC" FOREIGN KEY ("OFFER_ID")
	  REFERENCES "GZVLG"."OFFERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRDECREASON" ADD CONSTRAINT "FK_OFRDECREASON_OFRRETREASON" FOREIGN KEY ("OFRRETREASON_ID")
	  REFERENCES "GZVLG"."OFRRETREASON" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OFRDOCREQVAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRDOCREQVAL" ADD CONSTRAINT "FK_OFRDOCREQVAL_LOT" FOREIGN KEY ("OFFER_ID", "LOTPOS")
	  REFERENCES "GZVLG"."OFRLOT" ("OFFER_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRDOCREQVAL" ADD CONSTRAINT "FK_OFRDOCREQVAL_OFFERDOC" FOREIGN KEY ("OFFER_ID")
	  REFERENCES "GZVLG"."OFFERDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OFRGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRGOODS" ADD CONSTRAINT "FK_OFRGOODS_COMPREQUEST" FOREIGN KEY ("OFFER_ID")
	  REFERENCES "GZVLG"."OFFERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRGOODS" ADD CONSTRAINT "FK_OFRGOODS_GROUP" FOREIGN KEY ("GROUPCODE")
	  REFERENCES "GZVLG"."GOODSGROUP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRGOODS" ADD CONSTRAINT "FK_OFRGOODS_LOT" FOREIGN KEY ("OFFER_ID", "LOTPOS")
	  REFERENCES "GZVLG"."OFRLOT" ("OFFER_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRGOODS" ADD CONSTRAINT "FK_OFRGOODS_OKDP_CODE" FOREIGN KEY ("OKDP_CODE")
	  REFERENCES "GZVLG"."GOODSOKDP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRGOODS" ADD CONSTRAINT "FK_OFRGOODS_OKPD" FOREIGN KEY ("OKPD_ID")
	  REFERENCES "GZVLG"."GOODSOKPD" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OFRGOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRGOODSPROP" ADD CONSTRAINT "FK_OFRGOODSPROP_RQGOODS" FOREIGN KEY ("OFFER_ID", "GOODSPOS")
	  REFERENCES "GZVLG"."OFRGOODS" ("OFFER_ID", "POS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OFRGROUPPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRGROUPPROP" ADD CONSTRAINT "FK_OFRGROUPPROP_GOODSGROUP" FOREIGN KEY ("GROUPCODE")
	  REFERENCES "GZVLG"."GOODSGROUP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRGROUPPROP" ADD CONSTRAINT "FK_OFRGROUPPROP_GROUPPROP" FOREIGN KEY ("GROUPPROP_ID")
	  REFERENCES "GZVLG"."GROUPPROP" ("ID") ON DELETE SET NULL ENABLE;
 
  ALTER TABLE "GZVLG"."OFRGROUPPROP" ADD CONSTRAINT "FK_OFRGROUPPROP_OFFERDOC" FOREIGN KEY ("OFFER_ID")
	  REFERENCES "GZVLG"."OFFERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRGROUPPROP" ADD CONSTRAINT "FK_OFRGROUPPROP_PROPTYPE" FOREIGN KEY ("PROPTYPE_ID")
	  REFERENCES "GZVLG"."PROPTYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OFRGROUPPROPVALUE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRGROUPPROPVALUE" ADD CONSTRAINT "FK_OFRGROUPPROPVALUE_PROP" FOREIGN KEY ("OFFER_ID", "GROUPPROPPOS")
	  REFERENCES "GZVLG"."OFRGROUPPROP" ("OFFER_ID", "POS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OFRLOT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRLOT" ADD CONSTRAINT "FK_OFRLOT_OFFERDOC" FOREIGN KEY ("OFFER_ID")
	  REFERENCES "GZVLG"."OFFERDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OFRORGSTATUS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRORGSTATUS" ADD CONSTRAINT "FK_OFRORGSTATUS_OFFER" FOREIGN KEY ("OFFER_ID")
	  REFERENCES "GZVLG"."OFFERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRORGSTATUS" ADD CONSTRAINT "FK_OFRORGSTATUS_ORGSTATUS" FOREIGN KEY ("ORGSTATUS_ID")
	  REFERENCES "GZVLG"."ORGSTATUS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OFRPLACE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRPLACE" ADD CONSTRAINT "FK_OFRPLACE_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRPLACE" ADD CONSTRAINT "FK_OFRPLACE_LOT" FOREIGN KEY ("OFFER_ID", "LOTPOS")
	  REFERENCES "GZVLG"."OFRLOT" ("OFFER_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRPLACE" ADD CONSTRAINT "FK_OFRPLACE_OFFERDOC" FOREIGN KEY ("OFFER_ID")
	  REFERENCES "GZVLG"."OFFERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRPLACE" ADD CONSTRAINT "FK_OFRPLACE_RECIPIENT" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRPLACE" ADD CONSTRAINT "FK_OFRPLACE_TERRITORY" FOREIGN KEY ("COUNTRY_ID", "TERRITORYCODE")
	  REFERENCES "GZVLG"."TERRITORY" ("COUNTRY_ID", "CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OFRQUALREQVAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRQUALREQVAL" ADD CONSTRAINT "FK_OFRQUALREQVAL_LOT" FOREIGN KEY ("OFFER_ID", "LOTPOS")
	  REFERENCES "GZVLG"."OFRLOT" ("OFFER_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRQUALREQVAL" ADD CONSTRAINT "FK_OFRQUALREQVAL_OFFERDOC" FOREIGN KEY ("OFFER_ID")
	  REFERENCES "GZVLG"."OFFERDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OFRRETREASON
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRRETREASON" ADD CONSTRAINT "FK_OFRRETREASON_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OFRSUPPLYSHEDULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OFRSUPPLYSHEDULE" ADD CONSTRAINT "FK_OFRSUPPLYSHEDULE_OFFER" FOREIGN KEY ("OFFER_ID")
	  REFERENCES "GZVLG"."OFFERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRSUPPLYSHEDULE" ADD CONSTRAINT "FK_OFRSUPPLYSHEDULE_OFRGOODS" FOREIGN KEY ("OFFER_ID", "GOODSPOS")
	  REFERENCES "GZVLG"."OFRGOODS" ("OFFER_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRSUPPLYSHEDULE" ADD CONSTRAINT "FK_OFRSUPPLYSHEDULE_OFRLOT" FOREIGN KEY ("OFFER_ID", "LOTPOS")
	  REFERENCES "GZVLG"."OFRLOT" ("OFFER_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."OFRSUPPLYSHEDULE" ADD CONSTRAINT "FK_OFRSUPPLYSHEDULE_OFRPLACE" FOREIGN KEY ("OFFER_ID", "PLACEPOS")
	  REFERENCES "GZVLG"."OFRPLACE" ("OFFER_ID", "POS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OKTMO
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OKTMO" ADD CONSTRAINT "FK_OKTMO_PARENT" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."OKTMO" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OOSCONTRACTPRODUCTS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSCONTRACTPRODUCTS" ADD CONSTRAINT "FK_OOSPRODUCTS_CONTRACT" FOREIGN KEY ("CONTRACT_ID")
	  REFERENCES "GZVLG"."OOSCONTRACT" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OOSCONTRACTSUPPLIER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSCONTRACTSUPPLIER" ADD CONSTRAINT "FK_OOSSUPPLIER_CONTRACT" FOREIGN KEY ("CONTRACT_ID")
	  REFERENCES "GZVLG"."OOSCONTRACT" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OOSCUSTOMERREQUIREMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSCUSTOMERREQUIREMENT" ADD CONSTRAINT "FK_CUSTOMERREQ_NOTIFICATION" FOREIGN KEY ("NOTIFICATION_ID")
	  REFERENCES "GZVLG"."OOSNOTIFICATION" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."OOSCUSTOMERREQUIREMENT" ADD CONSTRAINT "FK_CUSTOMERREQ_NOTIFICATIONLOT" FOREIGN KEY ("LOT_ID", "NOTIFICATION_ID")
	  REFERENCES "GZVLG"."OOSNOTIFICATIONLOT" ("ID", "NOTIFICATION_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OOSNOTIFICATIONLOT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSNOTIFICATIONLOT" ADD CONSTRAINT "FK_LOT_OOSNOTIFICATION" FOREIGN KEY ("NOTIFICATION_ID")
	  REFERENCES "GZVLG"."OOSNOTIFICATION" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OOSORGANIZATIONROLE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSORGANIZATIONROLE" ADD CONSTRAINT "FK_OOSORGROLE_ORGANIZATION" FOREIGN KEY ("REGNUMBER")
	  REFERENCES "GZVLG"."OOSORGANIZATION" ("REGNUMBER") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OOSORGROLES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSORGROLES" ADD CONSTRAINT "FK_OOSORGROLES_OOSORGROLE" FOREIGN KEY ("ROLECODE")
	  REFERENCES "GZVLG"."OOSORGROLE" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."OOSORGROLES" ADD CONSTRAINT "FK_OOSORGROLES_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OOSPRODUCTS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSPRODUCTS" ADD CONSTRAINT "FK_PRODUCTS_NOTIFICATION" FOREIGN KEY ("NOTIFICATION_ID")
	  REFERENCES "GZVLG"."OOSNOTIFICATION" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."OOSPRODUCTS" ADD CONSTRAINT "FK_PRODUCTS_NOTIFICATIONLOT" FOREIGN KEY ("LOT_ID", "NOTIFICATION_ID")
	  REFERENCES "GZVLG"."OOSNOTIFICATIONLOT" ("ID", "NOTIFICATION_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OOSPROTOCOLLOT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOSPROTOCOLLOT" ADD CONSTRAINT "FK_OOSPROTOCOLLOT_PROTOCOL" FOREIGN KEY ("NOTIFICATIONNUMBER", "PROTOCOLNUMBER", "PROTOCOLVERSIONNUMBER")
	  REFERENCES "GZVLG"."OOSPROTOCOL" ("NOTIFICATIONNUMBER", "PROTOCOLNUMBER", "VERSIONNUMBER") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OOS223PURCHNOTICELOTINFO
--------------------------------------------------------

  ALTER TABLE "GZVLG"."OOS223PURCHNOTICELOTINFO" ADD CONSTRAINT "FK_OOS223PNLI_PURCHNOTICEINFO" FOREIGN KEY ("OOS223PURCHASENOTICEINFO_ID")
	  REFERENCES "GZVLG"."OOS223PURCHASENOTICEINFO" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORDERDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_BANK" FOREIGN KEY ("DOCFEESETTLEMENTBIC")
	  REFERENCES "GZVLG"."BANK" ("BIC") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_CMPORG" FOREIGN KEY ("CMPORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_CMPORGFACTCODE" FOREIGN KEY ("CMPORGFACTCOUNTRY_ID", "CMPORGFACTTERRITORYCODE")
	  REFERENCES "GZVLG"."TERRITORY" ("COUNTRY_ID", "CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_CMPORGFACTCOUNTRY" FOREIGN KEY ("CMPORGFACTCOUNTRY_ID")
	  REFERENCES "GZVLG"."COUNTRY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_CMPORGPOSTCODE" FOREIGN KEY ("CMPORGPOSTCOUNTRY_ID", "CMPORGPOSTTERRITORYCODE")
	  REFERENCES "GZVLG"."TERRITORY" ("COUNTRY_ID", "CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_CMPORGPOSTCOUNTRY" FOREIGN KEY ("CMPORGPOSTCOUNTRY_ID")
	  REFERENCES "GZVLG"."COUNTRY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_COMMISSION" FOREIGN KEY ("COMMISSION_ID")
	  REFERENCES "GZVLG"."COMMISSION" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_CONTYPE" FOREIGN KEY ("CONTYPE_ID")
	  REFERENCES "GZVLG"."CONTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_CURRENCY" FOREIGN KEY ("CURRENCY_ID")
	  REFERENCES "GZVLG"."CURRENCY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_DOCDEVELOPER" FOREIGN KEY ("DOCDEVELOPER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_ETP" FOREIGN KEY ("ETP_ID")
	  REFERENCES "GZVLG"."ETP" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_NECESSITY" FOREIGN KEY ("NECESSITY_ID")
	  REFERENCES "GZVLG"."NECESSITY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_OFRREQREASON" FOREIGN KEY ("OFRREQREASON_ID")
	  REFERENCES "GZVLG"."OFRREQREASON" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_OOSETPCODE" FOREIGN KEY ("OOSETPCODE")
	  REFERENCES "GZVLG"."ETPTYPE" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_ORGFORM" FOREIGN KEY ("VENDORPROPFORM_ID")
	  REFERENCES "GZVLG"."ORGFORM" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_PURCHASEORGCACHE" FOREIGN KEY ("PURCHASEORGNAMECACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_PURCHASEORG_ID" FOREIGN KEY ("PURCHASEORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_RECIPIENT" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_REPNOTICE" FOREIGN KEY ("REPNOTICE_ID")
	  REFERENCES "GZVLG"."REPFRAGMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_SINGLECUSTOMER" FOREIGN KEY ("SINGLECUSTOMERREASON_ID")
	  REFERENCES "GZVLG"."CONTRACTREASON" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_SPECIALORG" FOREIGN KEY ("SPECIALORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERDOC" ADD CONSTRAINT "FK_ORDERDOC_VENDOR" FOREIGN KEY ("VENDOR_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORDERSUMMARY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORDERSUMMARY" ADD CONSTRAINT "FK_ORDERSUMMARY_CMPBUDGETLINE" FOREIGN KEY ("ORDER_ID", "CMPBUDGETLINEPOS")
	  REFERENCES "GZVLG"."CMPPLACE" ("ORDER_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERSUMMARY" ADD CONSTRAINT "FK_ORDERSUMMARY_CMPGOODS" FOREIGN KEY ("ORDER_ID", "CMPGOODSPOS")
	  REFERENCES "GZVLG"."CMPGOODS" ("ORDER_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERSUMMARY" ADD CONSTRAINT "FK_ORDERSUMMARY_CMPLOT" FOREIGN KEY ("ORDER_ID", "CMPLOTPOS")
	  REFERENCES "GZVLG"."CMPLOT" ("ORDER_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERSUMMARY" ADD CONSTRAINT "FK_ORDERSUMMARY_ORDERDOC" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORDERSUMMARY" ADD CONSTRAINT "FK_ORDERSUMMARY_ORG" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORG" ADD CONSTRAINT "FK_ORG_ACCOUNTANT" FOREIGN KEY ("ACCOUNTANT_ID")
	  REFERENCES "GZVLG"."PERSONAL" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORG" ADD CONSTRAINT "FK_ORG_CERT" FOREIGN KEY ("CERT_ID")
	  REFERENCES "GZVLG"."USERCERT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORG" ADD CONSTRAINT "FK_ORG_COUNTRY" FOREIGN KEY ("COUNTRY_ID")
	  REFERENCES "GZVLG"."COUNTRY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORG" ADD CONSTRAINT "FK_ORG_DIRECTOR" FOREIGN KEY ("DIRECTOR_ID")
	  REFERENCES "GZVLG"."PERSONAL" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORG" ADD CONSTRAINT "FK_ORG_FACTERRITORY" FOREIGN KEY ("FACTERRITORY_ID")
	  REFERENCES "GZVLG"."TERRITORY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORG" ADD CONSTRAINT "FK_ORG_LAWTER" FOREIGN KEY ("LAWTERRITORY_ID")
	  REFERENCES "GZVLG"."TERRITORY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORG" ADD CONSTRAINT "FK_ORG_OKTMO" FOREIGN KEY ("OKTMO_ID")
	  REFERENCES "GZVLG"."OKTMO" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORG" ADD CONSTRAINT "FK_ORG_OKVEDID" FOREIGN KEY ("OKVED_ID")
	  REFERENCES "GZVLG"."GOODSOKVED" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORG" ADD CONSTRAINT "FK_ORG_ORGFORM" FOREIGN KEY ("PROPFORM_ID")
	  REFERENCES "GZVLG"."ORGFORM" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORG" ADD CONSTRAINT "FK_ORG_PARENT" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORG" ADD CONSTRAINT "FK_ORG_SERVEORG" FOREIGN KEY ("SERVEORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORG" ADD CONSTRAINT "FK_ORG_TERRITORY" FOREIGN KEY ("TERRITORY_ID")
	  REFERENCES "GZVLG"."TERRITORY" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORGACCOUNT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGACCOUNT" ADD CONSTRAINT "FK_ORGACCOUNT_BANK" FOREIGN KEY ("BANK_ID")
	  REFERENCES "GZVLG"."BANK" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORGACCOUNT" ADD CONSTRAINT "FK_ORGACCOUNT_KEEPER" FOREIGN KEY ("KEEPER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORGACCOUNT" ADD CONSTRAINT "FK_ORGACCOUNT_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."ORGACCOUNT" ADD CONSTRAINT "FK_ORGACCOUNT_ORGACCTYPE" FOREIGN KEY ("ORGACCTYPE_ID")
	  REFERENCES "GZVLG"."ORGACCTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORGACCOUNT" ADD CONSTRAINT "FK_ORGACC_EXECUTER_ORG" FOREIGN KEY ("EXECUTER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORGACCOUNT" ADD CONSTRAINT "FK_ORGACC_EXECUTER_ORGACC" FOREIGN KEY ("EXECUTERACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORGACCOUNT" ADD CONSTRAINT "FK_ORGACC_KEEPER_ORGACC" FOREIGN KEY ("KEEPERACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORGADDKPP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGADDKPP" ADD CONSTRAINT "FK_ORGADDKPP_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORGADDKPP" ADD CONSTRAINT "FK_ORGADDKPP_ORGFORM" FOREIGN KEY ("PROPFORM_ID")
	  REFERENCES "GZVLG"."ORGFORM" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORGATTACH
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGATTACH" ADD CONSTRAINT "FK_ORGATTACH_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORGCHILD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGCHILD" ADD CONSTRAINT "FK_ORGCHILDCHILD_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORGCHILD" ADD CONSTRAINT "FK_ORGCHILDORG_ORG" FOREIGN KEY ("CHILD_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORGETP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGETP" ADD CONSTRAINT "FK_ORGETP_ETP" FOREIGN KEY ("ETP_ID")
	  REFERENCES "GZVLG"."ETP" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."ORGETP" ADD CONSTRAINT "FK_ORGETP_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."ORGETP" ADD CONSTRAINT "FK_ORGETP_ORGROLE" FOREIGN KEY ("ORGROLE_ID")
	  REFERENCES "GZVLG"."ORGROLE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORGETP" ADD CONSTRAINT "FK_ORGETP_SYSUSER" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORGGOODSGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGGOODSGROUP" ADD CONSTRAINT "FK_ORGGOODSGROUP_GROUP" FOREIGN KEY ("GROUP_ID")
	  REFERENCES "GZVLG"."GOODSGROUP" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."ORGGOODSGROUP" ADD CONSTRAINT "FK_ORGGOODSGROUP_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORGHEARING
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGHEARING" ADD CONSTRAINT "FK_ORGHEARING_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORGLICENCE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGLICENCE" ADD CONSTRAINT "FK_ORGLICENCE_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."ORGLICENCE" ADD CONSTRAINT "FK_ORGLICENSE_LICTYPE" FOREIGN KEY ("LICTYPE_ID")
	  REFERENCES "GZVLG"."LICTYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORGOOS223FZUSER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGOOS223FZUSER" ADD CONSTRAINT "FK_ORGOOS223FZUSER_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."ORGOOS223FZUSER" ADD CONSTRAINT "FK_ORGOOS223FZUSER_SYSUSER" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORGPERSONAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGPERSONAL" ADD CONSTRAINT "FK_ORGPERSONAL_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORGPERSONAL" ADD CONSTRAINT "FK_ORGPERSONAL_PERSONAL" FOREIGN KEY ("PERSONAL_ID")
	  REFERENCES "GZVLG"."PERSONAL" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORGPERSONALRESP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGPERSONALRESP" ADD CONSTRAINT "FK_ORGPERSONALRESP_ORGPERSONAL" FOREIGN KEY ("ORG_ID", "PERSONAL_ID")
	  REFERENCES "GZVLG"."ORGPERSONAL" ("ORG_ID", "PERSONAL_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."ORGPERSONALRESP" ADD CONSTRAINT "FK_ORGPERSONALRESP_RESP" FOREIGN KEY ("RESPONSIBILITY_ID")
	  REFERENCES "GZVLG"."RESPONSIBILITY" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORGROLES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGROLES" ADD CONSTRAINT "FK_ORGROLES_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORGROLES" ADD CONSTRAINT "FK_ORGROLES_ORGROLE" FOREIGN KEY ("ORGROLE_ID")
	  REFERENCES "GZVLG"."ORGROLE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORGSELSTATUS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGSELSTATUS" ADD CONSTRAINT "FK_ORGSELSTATUS_ORGSTATUS" FOREIGN KEY ("ORGSTATUS_ID")
	  REFERENCES "GZVLG"."ORGSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORGSELSTATUS" ADD CONSTRAINT "FK_ORGSTATUS_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORGTITLE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGTITLE" ADD CONSTRAINT "FK_ORGTITLE_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORGTURNOVER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGTURNOVER" ADD CONSTRAINT "FK_ORGTURNOVER_CURRENCY" FOREIGN KEY ("CURRENCY_ID")
	  REFERENCES "GZVLG"."CURRENCY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ORGTURNOVER" ADD CONSTRAINT "FK_ORGTURNOVER_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORGUNFAIR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ORGUNFAIR" ADD CONSTRAINT "FK_ORGUNFAIR_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."ORGUNFAIR" ADD CONSTRAINT "FK_ORGUNFAIR_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PANELITEM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PANELITEM" ADD CONSTRAINT "FK_PANELITEM_CLIENTOBJECT" FOREIGN KEY ("CLIENTOBJECT_ID")
	  REFERENCES "GZVLG"."CLIENTOBJECT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PANELITEM" ADD CONSTRAINT "FK_PANELITEM_PANEL" FOREIGN KEY ("PANEL_ID")
	  REFERENCES "GZVLG"."PANEL" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PERSONAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PERSONAL" ADD CONSTRAINT "FK_PERSONAL_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLACEMENTFEATUREPM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLACEMENTFEATUREPM" ADD CONSTRAINT "FK_PFPM_PLACEMENTFEATURE" FOREIGN KEY ("PLACEMENTFEATURE_ID")
	  REFERENCES "GZVLG"."PLACEMENTFEATURE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLACEMENTFEATUREPM" ADD CONSTRAINT "FK_PFPM_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLACINGWAY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLACINGWAY" ADD CONSTRAINT "FK_PLACINGWAY_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLANDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLANDOC" ADD CONSTRAINT "FK_PLANDOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLANDOC" ADD CONSTRAINT "FK_PLANDOC_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLANDOC" ADD CONSTRAINT "FK_PLANDOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLANDOC" ADD CONSTRAINT "FK_PLANDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLANDOC" ADD CONSTRAINT "FK_PLANDOC_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLANDOC" ADD CONSTRAINT "FK_PLANDOC_NECESSITY" FOREIGN KEY ("NECESSITY_ID")
	  REFERENCES "GZVLG"."NECESSITY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLANDOC" ADD CONSTRAINT "FK_PLANDOC_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLANDOC" ADD CONSTRAINT "FK_PLANDOC_RECIPIENT" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLANPOSITIONNUMBERERROR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLANPOSITIONNUMBERERROR" ADD CONSTRAINT "FK_PLANPOSITIONNUMBERERR_DOC" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLANREQUEST
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLANREQUEST" ADD CONSTRAINT "FK_PLANREQUEST_DOC" FOREIGN KEY ("DOC_ID")
	  REFERENCES "GZVLG"."PLANDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLANREQUEST" ADD CONSTRAINT "FK_PLANREQUEST_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLANREQUEST" ADD CONSTRAINT "FK_PLANREQUEST_REQUEST" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "GZVLG"."REQUESTDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN2ARRANGEMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_CHANGEDESCR" FOREIGN KEY ("CHANGEDESCRIPTIONCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_CHANGEREASON" FOREIGN KEY ("CHANGEREASON_ID")
	  REFERENCES "GZVLG"."PLANPOSITIONCHANGEREASON" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_CMPORG" FOREIGN KEY ("CMPORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_CONEXECSTAGES" FOREIGN KEY ("CONEXECSTAGESCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_CONTRACTOR" FOREIGN KEY ("CONTRACTOR_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_CONTRPAYORDER" FOREIGN KEY ("CONTRACTPAYORDERCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_CONTRPROV" FOREIGN KEY ("CONTRACTPROVIDINGCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_COUNTRY" FOREIGN KEY ("COUNTRY_ID")
	  REFERENCES "GZVLG"."COUNTRY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_CURRENCY" FOREIGN KEY ("CURRENCY_ID")
	  REFERENCES "GZVLG"."CURRENCY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_DELIVADDR" FOREIGN KEY ("DELIVERYADDRESS_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_DELIVBASIS" FOREIGN KEY ("DELIVERYBASIS_ID")
	  REFERENCES "GZVLG"."DELIVERYBASIS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_EXPLANATION" FOREIGN KEY ("EXPLANATIONCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_ORDERNAME" FOREIGN KEY ("ORDERNAMECACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_PAYCOND" FOREIGN KEY ("PAYCONDITIONCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_PERIODICITY" FOREIGN KEY ("PERIODICITYCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_PROHIBITIONS" FOREIGN KEY ("PROHIBITIONSCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_PUBLICDISCUSS" FOREIGN KEY ("PUBLICDISCUSSCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_P2ARRANGEMENT_TERRITORY" FOREIGN KEY ("COUNTRY_ID", "TERRITORYCODE")
	  REFERENCES "GZVLG"."TERRITORY" ("COUNTRY_ID", "CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_PLAN2ARRANGEMENT_LOTNAME" FOREIGN KEY ("LOTNAMECACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_PLAN2ARRANGEMENT_LOTNUMBER" FOREIGN KEY ("LOTNUMBERCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_PLAN2ARRANGEMENT_PLAN2GOODS" FOREIGN KEY ("PLAN2GOODS_ID")
	  REFERENCES "GZVLG"."PLAN2GOODS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2ARRANGEMENT" ADD CONSTRAINT "FK_PLAN2ARRANGEMENT_PREFERENCE" FOREIGN KEY ("PREFERENCEGROUP_ID")
	  REFERENCES "GZVLG"."PREFERENCEGROUP" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN2DAILYTOTALS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2DAILYTOTALS" ADD CONSTRAINT "FK_PLAN2DAILYTOTALS_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DAILYTOTALS" ADD CONSTRAINT "FK_PLAN2DAILYTOTALS_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DAILYTOTALS" ADD CONSTRAINT "FK_PLAN2DAILYTOTALS_PURCHMDE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN2DOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2DOC" ADD CONSTRAINT "FK_PLAN2DOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DOC" ADD CONSTRAINT "FK_PLAN2DOC_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DOC" ADD CONSTRAINT "FK_PLAN2DOC_DESCRIPTION" FOREIGN KEY ("DESCRIPTION_ID")
	  REFERENCES "GZVLG"."DESCRIPTION" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DOC" ADD CONSTRAINT "FK_PLAN2DOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DOC" ADD CONSTRAINT "FK_PLAN2DOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DOC" ADD CONSTRAINT "FK_PLAN2DOC_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DOC" ADD CONSTRAINT "FK_PLAN2DOC_NECESSITY" FOREIGN KEY ("NECESSITY_ID")
	  REFERENCES "GZVLG"."NECESSITY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DOC" ADD CONSTRAINT "FK_PLAN2DOC_OOSDISPSTATUS" FOREIGN KEY ("OOSDISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DOC" ADD CONSTRAINT "FK_PLAN2DOC_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DOC" ADD CONSTRAINT "FK_PLAN2DOC_OWNER" FOREIGN KEY ("OWNER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DOC" ADD CONSTRAINT "FK_PLAN2DOC_RECIPIENT" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DOC" ADD CONSTRAINT "FK_PLAN2DOC_RESPPERSONAL" FOREIGN KEY ("RESPPERSONAL_ID")
	  REFERENCES "GZVLG"."PERSONAL" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN2DOCCHILD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2DOCCHILD" ADD CONSTRAINT "FK_PLAN2DOCCHILD_DOCID" FOREIGN KEY ("DOC_ID")
	  REFERENCES "GZVLG"."PLAN2DOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DOCCHILD" ADD CONSTRAINT "FK_PLAN2DOCCHILD_DOCUMENTID" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2DOCCHILD" ADD CONSTRAINT "FK_PLAN2DOCCHILD_PLAN2DOC" FOREIGN KEY ("PLAN2DOC_ID")
	  REFERENCES "GZVLG"."PLAN2DOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN2GOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2GOODS" ADD CONSTRAINT "FK_P2GOODS_MEDICINEPROPVALUE" FOREIGN KEY ("MEDICINEPROPVALUECACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" ADD CONSTRAINT "FK_PLAN2GOODS_FINSRC" FOREIGN KEY ("FINSRC_ID")
	  REFERENCES "GZVLG"."FINSRC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" ADD CONSTRAINT "FK_PLAN2GOODS_GOODSBRANCH" FOREIGN KEY ("GOODSBRANCH_ID")
	  REFERENCES "GZVLG"."GOODSBRANCH" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" ADD CONSTRAINT "FK_PLAN2GOODS_GOODSGROUP" FOREIGN KEY ("GROUPCODE")
	  REFERENCES "GZVLG"."GOODSGROUP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" ADD CONSTRAINT "FK_PLAN2GOODS_GRANTINVESTMENT" FOREIGN KEY ("GRANTINVESTMENT_ID")
	  REFERENCES "GZVLG"."GRANTINVESTMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" ADD CONSTRAINT "FK_PLAN2GOODS_INDUSTRYCODE" FOREIGN KEY ("INDUSTRYCODE_ID")
	  REFERENCES "GZVLG"."INDUSTRYCODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" ADD CONSTRAINT "FK_PLAN2GOODS_NECESSITY" FOREIGN KEY ("NECESSITY_ID")
	  REFERENCES "GZVLG"."NECESSITY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" ADD CONSTRAINT "FK_PLAN2GOODS_OKDP_CODE" FOREIGN KEY ("OKDP_CODE")
	  REFERENCES "GZVLG"."GOODSOKDP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" ADD CONSTRAINT "FK_PLAN2GOODS_OKPD" FOREIGN KEY ("OKPD_ID")
	  REFERENCES "GZVLG"."GOODSOKPD" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" ADD CONSTRAINT "FK_PLAN2GOODS_OKVED" FOREIGN KEY ("OKVED_ID")
	  REFERENCES "GZVLG"."GOODSOKVED" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" ADD CONSTRAINT "FK_PLAN2GOODS_OLD" FOREIGN KEY ("OLDPLAN2GOODS_ID")
	  REFERENCES "GZVLG"."PLAN2GOODS" ("ID") ON DELETE SET NULL ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" ADD CONSTRAINT "FK_PLAN2GOODS_PLAN2DOC" FOREIGN KEY ("PLAN2DOC_ID")
	  REFERENCES "GZVLG"."PLAN2DOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" ADD CONSTRAINT "FK_PLAN2GOODS_RECIPIENT" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2GOODS" ADD CONSTRAINT "FK_PLAN2GOODS_UNITNAME" FOREIGN KEY ("UNITNAME")
	  REFERENCES "GZVLG"."UNIT" ("NAME") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN2LEDGER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "FK_PLAN2LEDGER_CMPORG" FOREIGN KEY ("CMPORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "FK_PLAN2LEDGER_CONTRACTOR" FOREIGN KEY ("CONTRACTOR_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "FK_PLAN2LEDGER_DELIVERYBASIS" FOREIGN KEY ("DELIVERYBASIS_ID")
	  REFERENCES "GZVLG"."DELIVERYBASIS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "FK_PLAN2LEDGER_DESCRIPTION" FOREIGN KEY ("DESCRIPTIONCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "FK_PLAN2LEDGER_FINSRC" FOREIGN KEY ("FINSRC_ID")
	  REFERENCES "GZVLG"."FINSRC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "FK_PLAN2LEDGER_GOODS" FOREIGN KEY ("GOODS_ID")
	  REFERENCES "GZVLG"."GOODS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "FK_PLAN2LEDGER_GOODSGROUP" FOREIGN KEY ("GROUP_ID")
	  REFERENCES "GZVLG"."GOODSGROUP" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "FK_PLAN2LEDGER_GRANTINVESTMENT" FOREIGN KEY ("GRANTINVESTMENT_ID")
	  REFERENCES "GZVLG"."GRANTINVESTMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "FK_PLAN2LEDGER_IDENTIFICCODE" FOREIGN KEY ("IDENTIFICCODECACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "FK_PLAN2LEDGER_INDUSTRYCODE" FOREIGN KEY ("INDUSTRYCODE_ID")
	  REFERENCES "GZVLG"."INDUSTRYCODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "FK_PLAN2LEDGER_NECESSITY" FOREIGN KEY ("NECESSITY_ID")
	  REFERENCES "GZVLG"."NECESSITY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "FK_PLAN2LEDGER_OKDP" FOREIGN KEY ("OKDP_ID")
	  REFERENCES "GZVLG"."GOODSOKDP" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "FK_PLAN2LEDGER_PAYCONDITION" FOREIGN KEY ("PAYCONDITIONCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "FK_PLAN2LEDGER_PLAN2DOC" FOREIGN KEY ("PLAN2DOC_ID")
	  REFERENCES "GZVLG"."PLAN2DOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "FK_PLAN2LEDGER_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2LEDGER" ADD CONSTRAINT "FK_PLAN2LEDGER_UNITNAME" FOREIGN KEY ("UNITNAME")
	  REFERENCES "GZVLG"."UNIT" ("NAME") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN2OOSFEATURE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2OOSFEATURE" ADD CONSTRAINT "FK_PK_PLAN2OOSFEATURE_POSITION" FOREIGN KEY ("PLAN2OOSPOSITION_ID")
	  REFERENCES "GZVLG"."PLAN2OOSPOSITION" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSFEATURE" ADD CONSTRAINT "FK_PLAN2OOSFEATURE_PLFEATURE" FOREIGN KEY ("PLACEMENTFEATURE_ID")
	  REFERENCES "GZVLG"."PLACEMENTFEATURE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN2OOSKBK
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2OOSKBK" ADD CONSTRAINT "FK_PLAN2OOSKBK_POSITION" FOREIGN KEY ("PLAN2OOSPOSITION_ID")
	  REFERENCES "GZVLG"."PLAN2OOSPOSITION" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN2OOSKBKYEAR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2OOSKBKYEAR" ADD CONSTRAINT "FK_PLAN2OOSKBKYEAR_KBK" FOREIGN KEY ("PLAN2OOSKBK_ID")
	  REFERENCES "GZVLG"."PLAN2OOSKBK" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN2OOSOKVED
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2OOSOKVED" ADD CONSTRAINT "FK_PLAN2OOSOKVED_OKVED" FOREIGN KEY ("OKVED_ID")
	  REFERENCES "GZVLG"."GOODSOKVED" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSOKVED" ADD CONSTRAINT "FK_PLAN2OOSOKVED_POSITION" FOREIGN KEY ("PLAN2OOSPOSITION_ID")
	  REFERENCES "GZVLG"."PLAN2OOSPOSITION" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN2OOSPOSITION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" ADD CONSTRAINT "FK_PLAN2OOSPOSITION_CHREASON" FOREIGN KEY ("CHANGEREASON_ID")
	  REFERENCES "GZVLG"."PLANPOSITIONCHANGEREASON" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" ADD CONSTRAINT "FK_PLAN2OOSPOSITION_CURRENCY" FOREIGN KEY ("CONTRACTCURRENCY_ID")
	  REFERENCES "GZVLG"."CURRENCY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" ADD CONSTRAINT "FK_PLAN2OOSPOSITION_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" ADD CONSTRAINT "FK_PLAN2OOSPOSITION_DOCUMENTID" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" ADD CONSTRAINT "FK_PLAN2OOSPOSITION_PURCHMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" ADD CONSTRAINT "FK_PLAN2OOSPOS_ADVANCE" FOREIGN KEY ("ADVANCECACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" ADD CONSTRAINT "FK_PLAN2OOSPOS_CONEXECSTAGES" FOREIGN KEY ("CONEXECSTAGESCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" ADD CONSTRAINT "FK_PLAN2OOSPOS_ORGANIZER" FOREIGN KEY ("CMPORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" ADD CONSTRAINT "FK_PLAN2OOSPOS_PERIODICITY" FOREIGN KEY ("PERIODICITYCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" ADD CONSTRAINT "FK_PLAN2OOSPOS_PROHIBITIONS" FOREIGN KEY ("PROHIBITIONSCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" ADD CONSTRAINT "FK_PLAN2OOSPOS_PUBLICDISCUSS" FOREIGN KEY ("PUBLICDISCUSSCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" ADD CONSTRAINT "FK_PLAN2OOSPOS_PURCHASEFINPROC" FOREIGN KEY ("PURCHASEFINPROCEDURECACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPOSITION" ADD CONSTRAINT "FK_PLAN2OOSPOS_PURCHMETHOD" FOREIGN KEY ("PURCHASEMETHOD_ID")
	  REFERENCES "GZVLG"."PURCHASEMETHOD" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN2OOSPRODUCT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN2OOSPRODUCT" ADD CONSTRAINT "FK_PLAN2OOSPRODUCT_OKPD" FOREIGN KEY ("OKPD_ID")
	  REFERENCES "GZVLG"."GOODSOKPD" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPRODUCT" ADD CONSTRAINT "FK_PLAN2OOSPRODUCT_OKVED" FOREIGN KEY ("OKVED_ID")
	  REFERENCES "GZVLG"."GOODSOKVED" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPRODUCT" ADD CONSTRAINT "FK_PLAN2OOSPRODUCT_POSITION" FOREIGN KEY ("PLAN2OOSPOSITION_ID")
	  REFERENCES "GZVLG"."PLAN2OOSPOSITION" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN2OOSPRODUCT" ADD CONSTRAINT "FK_PLAN2OOSPRODUCT_UNIT" FOREIGN KEY ("UNITNAME")
	  REFERENCES "GZVLG"."UNIT" ("NAME") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN3DOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN3DOC" ADD CONSTRAINT "FK_PLAN3DOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3DOC" ADD CONSTRAINT "FK_PLAN3DOC_CONFIRMPERSON" FOREIGN KEY ("CONFIRMPERSON_ID")
	  REFERENCES "GZVLG"."PERSONAL" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3DOC" ADD CONSTRAINT "FK_PLAN3DOC_COUNTRY" FOREIGN KEY ("CUSTOMERCOUNTRY_ID")
	  REFERENCES "GZVLG"."COUNTRY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3DOC" ADD CONSTRAINT "FK_PLAN3DOC_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3DOC" ADD CONSTRAINT "FK_PLAN3DOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3DOC" ADD CONSTRAINT "FK_PLAN3DOC_DOCCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3DOC" ADD CONSTRAINT "FK_PLAN3DOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3DOC" ADD CONSTRAINT "FK_PLAN3DOC_FACTTERRITORY" FOREIGN KEY ("CUSTOMERFACTTERRITORY_ID")
	  REFERENCES "GZVLG"."TERRITORY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3DOC" ADD CONSTRAINT "FK_PLAN3DOC_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3DOC" ADD CONSTRAINT "FK_PLAN3DOC_ORGFORM" FOREIGN KEY ("CUSTOMERPROPFORM_ID")
	  REFERENCES "GZVLG"."ORGFORM" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3DOC" ADD CONSTRAINT "FK_PLAN3DOC_RESPEXECUTER" FOREIGN KEY ("RESPEXECUTER_ID")
	  REFERENCES "GZVLG"."PERSONAL" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3DOC" ADD CONSTRAINT "FK_PLAN3DOC_RESPORG" FOREIGN KEY ("RESPORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN3DOCCHILD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN3DOCCHILD" ADD CONSTRAINT "FK_PLAN3DOCCHILD_DOCID" FOREIGN KEY ("DOC_ID")
	  REFERENCES "GZVLG"."PLAN3PURCHASEDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3DOCCHILD" ADD CONSTRAINT "FK_PLAN3DOCCHILD_DOCUMENTID" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3DOCCHILD" ADD CONSTRAINT "FK_PLAN3DOCCHILD_PLAN3DOC" FOREIGN KEY ("PLAN3DOC_ID")
	  REFERENCES "GZVLG"."PLAN3DOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN3PURCHASEDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_CHANGEREASON" FOREIGN KEY ("CHANGEREASON_ID")
	  REFERENCES "GZVLG"."PLANPOSITIONCHANGEREASON" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_CMPORG" FOREIGN KEY ("CMPORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_CONBANKSUPP" FOREIGN KEY ("CONBANKSUPPORTCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_CONEXECSTAGES" FOREIGN KEY ("CONEXECSTAGESCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_CONTRACTOR" FOREIGN KEY ("CONTRACTOR_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_CONTRPAYORDER" FOREIGN KEY ("CONTRACTPAYORDERCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_COUNTRY" FOREIGN KEY ("COUNTRY_ID")
	  REFERENCES "GZVLG"."COUNTRY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_CURRENCY" FOREIGN KEY ("CURRENCY_ID")
	  REFERENCES "GZVLG"."CURRENCY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_DELIVADDR" FOREIGN KEY ("DELIVERYADDRESS_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_DELIVBASIS" FOREIGN KEY ("DELIVERYBASIS_ID")
	  REFERENCES "GZVLG"."DELIVERYBASIS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_DESCRIPTION" FOREIGN KEY ("DESCRIPTION_ID")
	  REFERENCES "GZVLG"."DESCRIPTION" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_DISCUSSION" FOREIGN KEY ("PUBLICDISCUSSCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_DISPSTAT" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_DOCCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_IKOKPDID" FOREIGN KEY ("IKOKPD_ID")
	  REFERENCES "GZVLG"."GOODSOKPD" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_NECESSITY" FOREIGN KEY ("NECESSITY_ID")
	  REFERENCES "GZVLG"."NECESSITY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_OFRREQRSN" FOREIGN KEY ("OFRREQREASON_ID")
	  REFERENCES "GZVLG"."OFRREQREASON" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_ORDERNAME" FOREIGN KEY ("ORDERNAMECACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_PAYCOND" FOREIGN KEY ("PAYCONDITIONCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_PERIODICITY" FOREIGN KEY ("PERIODICITYCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_PLAN2REASON" FOREIGN KEY ("PLANCHANGEREASON_ID")
	  REFERENCES "GZVLG"."PLAN2CHANGEREASON" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_PROHIBITIONS" FOREIGN KEY ("PROHIBITIONSCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_PURCHMETHOD" FOREIGN KEY ("PURCHASEMETHOD_ID")
	  REFERENCES "GZVLG"."PURCHASEMETHOD" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_RCPT" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_SINGLECUST" FOREIGN KEY ("SINGLECUSTOMERREASON_ID")
	  REFERENCES "GZVLG"."CONTRACTREASON" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEDOC" ADD CONSTRAINT "FK_P3PURCHASEDOC_TERRITORY" FOREIGN KEY ("COUNTRY_ID", "TERRITORYCODE")
	  REFERENCES "GZVLG"."TERRITORY" ("COUNTRY_ID", "CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN3PURCHASEFEATURE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN3PURCHASEFEATURE" ADD CONSTRAINT "FK_P3PF_PLANPURCHASEDOC" FOREIGN KEY ("PLAN3PURCHASEDOC_ID")
	  REFERENCES "GZVLG"."PLAN3PURCHASEDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEFEATURE" ADD CONSTRAINT "FK_P3PF_PLFEATURE" FOREIGN KEY ("PLACEMENTFEATURE_ID")
	  REFERENCES "GZVLG"."PLACEMENTFEATURE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN3PURCHASEGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" ADD CONSTRAINT "FK_P3GOODS_GOODSGROUP" FOREIGN KEY ("GROUPCODE")
	  REFERENCES "GZVLG"."GOODSGROUP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" ADD CONSTRAINT "FK_P3GOODS_OKDP_CODE" FOREIGN KEY ("OKDP_CODE")
	  REFERENCES "GZVLG"."GOODSOKDP" ("CODE") ON DELETE SET NULL ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" ADD CONSTRAINT "FK_P3GOODS_OKPD" FOREIGN KEY ("OKPD_ID")
	  REFERENCES "GZVLG"."GOODSOKPD" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" ADD CONSTRAINT "FK_P3GOODS_OKVED" FOREIGN KEY ("OKVED_ID")
	  REFERENCES "GZVLG"."GOODSOKVED" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" ADD CONSTRAINT "FK_P3GOODS_PLANPURCHASEDOC" FOREIGN KEY ("PLAN3PURCHASEDOC_ID")
	  REFERENCES "GZVLG"."PLAN3PURCHASEDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" ADD CONSTRAINT "FK_P3GOODS_PURCHASEPLANLINE" FOREIGN KEY ("PLAN3PURCHASEDOC_ID", "PLAN3PURCHASELINEPOS")
	  REFERENCES "GZVLG"."PLAN3PURCHASELINE" ("PLAN3PURCHASEDOC_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODS" ADD CONSTRAINT "FK_P3GOODS_UNITNAME" FOREIGN KEY ("UNITNAME")
	  REFERENCES "GZVLG"."UNIT" ("NAME") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN3PURCHASEGOODSOKVED
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODSOKVED" ADD CONSTRAINT "FK_P3GOODSOKVED_P3GOODS" FOREIGN KEY ("PLAN3PURCHASEDOC_ID", "GOODSPOS")
	  REFERENCES "GZVLG"."PLAN3PURCHASEGOODS" ("PLAN3PURCHASEDOC_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODSOKVED" ADD CONSTRAINT "FK_P3GO_OKVED" FOREIGN KEY ("OKVED_ID")
	  REFERENCES "GZVLG"."GOODSOKVED" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODSOKVED" ADD CONSTRAINT "FK_P3GO_PLANPURCHASEDOC" FOREIGN KEY ("PLAN3PURCHASEDOC_ID")
	  REFERENCES "GZVLG"."PLAN3PURCHASEDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN3PURCHASEGOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODSPROP" ADD CONSTRAINT "FK_P3GOODSPROP_P3GOODS" FOREIGN KEY ("PLAN3PURCHASEDOC_ID", "GOODSPOS")
	  REFERENCES "GZVLG"."PLAN3PURCHASEGOODS" ("PLAN3PURCHASEDOC_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASEGOODSPROP" ADD CONSTRAINT "FK_P3GOODSPROP_PLANPURCHASEDOC" FOREIGN KEY ("PLAN3PURCHASEDOC_ID")
	  REFERENCES "GZVLG"."PLAN3PURCHASEDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN3PURCHASELINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN3PURCHASELINE" ADD CONSTRAINT "FK_P3LINE_ESTIMATE" FOREIGN KEY ("ESTIMATE_ID")
	  REFERENCES "GZVLG"."ESTIMATE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASELINE" ADD CONSTRAINT "FK_P3LINE_FINSRC" FOREIGN KEY ("FINSRC_ID")
	  REFERENCES "GZVLG"."FINSRC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASELINE" ADD CONSTRAINT "FK_P3LINE_GRANTINVESTMENT" FOREIGN KEY ("GRANTINVESTMENT_ID")
	  REFERENCES "GZVLG"."GRANTINVESTMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASELINE" ADD CONSTRAINT "FK_P3LINE_INDUSTRYCODE" FOREIGN KEY ("INDUSTRYCODE_ID")
	  REFERENCES "GZVLG"."INDUSTRYCODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASELINE" ADD CONSTRAINT "FK_P3LINE_PLANPURCHASEDOC" FOREIGN KEY ("PLAN3PURCHASEDOC_ID")
	  REFERENCES "GZVLG"."PLAN3PURCHASEDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASELINE" ADD CONSTRAINT "FK_P3LINE_RCPT" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLAN3PURCHASELINESHEDULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLAN3PURCHASELINESHEDULE" ADD CONSTRAINT "FK_P3SHED_PLANPURCHASEDOC" FOREIGN KEY ("PLAN3PURCHASEDOC_ID")
	  REFERENCES "GZVLG"."PLAN3PURCHASEDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLAN3PURCHASELINESHEDULE" ADD CONSTRAINT "FK_P3SHED_PURCHASEPLANLINE" FOREIGN KEY ("PLAN3PURCHASEDOC_ID", "PLAN3PURCHASELINEPOS")
	  REFERENCES "GZVLG"."PLAN3PURCHASELINE" ("PLAN3PURCHASEDOC_ID", "POS") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLGOODS" ADD CONSTRAINT "FK_PLGOODS_GROUPCODE" FOREIGN KEY ("GROUPCODE")
	  REFERENCES "GZVLG"."GOODSGROUP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."PLGOODS" ADD CONSTRAINT "FK_PLGOODS_ORG" FOREIGN KEY ("ORGID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLGOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLGOODSPROP" ADD CONSTRAINT "FK_PLGOODSPROP_GOODS" FOREIGN KEY ("GOODSID")
	  REFERENCES "GZVLG"."PLGOODS" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLNBUDGETLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLNBUDGETLINE" ADD CONSTRAINT "FK_PLNBL_GRANTINVESTMENT" FOREIGN KEY ("GRANTINVESTMENT_ID")
	  REFERENCES "GZVLG"."GRANTINVESTMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLNBUDGETLINE" ADD CONSTRAINT "FK_PLNBL_INDUSTRYCODE" FOREIGN KEY ("INDUSTRYCODE_ID")
	  REFERENCES "GZVLG"."INDUSTRYCODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLNBUDGETLINE" ADD CONSTRAINT "FK_PLNBUDGETLINE_ESTIMATE" FOREIGN KEY ("ESTIMATE_ID")
	  REFERENCES "GZVLG"."ESTIMATE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLNBUDGETLINE" ADD CONSTRAINT "FK_PLNBUDGETLINE_FINSRC" FOREIGN KEY ("FINSRC_ID")
	  REFERENCES "GZVLG"."FINSRC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLNBUDGETLINE" ADD CONSTRAINT "FK_PLNBUDGETLINE_PLANDOC" FOREIGN KEY ("PLANDOC_ID")
	  REFERENCES "GZVLG"."PLANDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLNBUDGETLINE" ADD CONSTRAINT "FK_PLNBUDGETLINE_RECIPIENT" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLNGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLNGOODS" ADD CONSTRAINT "FK_PLNGOODS_GOODSGROUP" FOREIGN KEY ("GROUPCODE")
	  REFERENCES "GZVLG"."GOODSGROUP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."PLNGOODS" ADD CONSTRAINT "FK_PLNGOODS_OKDP" FOREIGN KEY ("OKDP_CODE")
	  REFERENCES "GZVLG"."GOODSOKDP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."PLNGOODS" ADD CONSTRAINT "FK_PLNGOODS_OKPD" FOREIGN KEY ("OKPD_ID")
	  REFERENCES "GZVLG"."GOODSOKPD" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLNGOODS" ADD CONSTRAINT "FK_PLNGOODS_OKVED" FOREIGN KEY ("OKVED_ID")
	  REFERENCES "GZVLG"."GOODSOKVED" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PLNGOODS" ADD CONSTRAINT "FK_PLNGOODS_PLANDOC" FOREIGN KEY ("PLANDOC_ID")
	  REFERENCES "GZVLG"."PLANDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PLNSHEDULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PLNSHEDULE" ADD CONSTRAINT "FK_PLNSHEDULE_PLANDOC" FOREIGN KEY ("PLANDOC_ID")
	  REFERENCES "GZVLG"."PLANDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PREFERENCEGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PREFERENCEGROUP" ADD CONSTRAINT "FK_PREFERENCEGROUP_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PREFERENCEGROUP" ADD CONSTRAINT "FK_PREFERENCEGROUP_PURCHASE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PREFERENCEGROUPFEATURE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PREFERENCEGROUPFEATURE" ADD CONSTRAINT "FK_PREFERENCEFEATURE_GROUP" FOREIGN KEY ("PREFERENCEGROUP_ID")
	  REFERENCES "GZVLG"."PREFERENCEGROUP" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PREFERENCEGROUPFEATURE" ADD CONSTRAINT "FK_PREFERENCEFEATURE_PLFEATURE" FOREIGN KEY ("PLACEMENTFEATURE_ID")
	  REFERENCES "GZVLG"."PLACEMENTFEATURE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PROCTREE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PROCTREE" ADD CONSTRAINT "FK_PROCTREE_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PROCTREE" ADD CONSTRAINT "FK_PROCTREE_PARENT" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."PROCTREE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PROCUREMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PROCUREMENT" ADD CONSTRAINT "FK_PROCUREMENT_COMMISSION" FOREIGN KEY ("COMMISSION_ID")
	  REFERENCES "GZVLG"."COMMISSION" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PROCUREMENT" ADD CONSTRAINT "FK_PROCUREMENT_ORDER" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PROCUREMENT" ADD CONSTRAINT "FK_PROCUREMENT_PERSONAL" FOREIGN KEY ("RESPPERSONAL_ID")
	  REFERENCES "GZVLG"."PERSONAL" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PROCUREMENT" ADD CONSTRAINT "FK_PROCUREMENT_REQUEST" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "GZVLG"."REQUESTDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PURCHASECARRY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "FK_PURCHASECARRY_CONTRACTOR" FOREIGN KEY ("CONTRACTOR_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "FK_PURCHASECARRY_DELIV" FOREIGN KEY ("DELIVERYBASIS_ID")
	  REFERENCES "GZVLG"."DELIVERYBASIS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "FK_PURCHASECARRY_DESCRIPTION" FOREIGN KEY ("DESCRIPTIONCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "FK_PURCHASECARRY_GRANTINVEST" FOREIGN KEY ("GRANTINVESTMENT_ID")
	  REFERENCES "GZVLG"."GRANTINVESTMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "FK_PURCHASECARRY_INDUSTRYCODE" FOREIGN KEY ("INDUSTRYCODE_ID")
	  REFERENCES "GZVLG"."INDUSTRYCODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "FK_PURCHASECARRY_NECESSITY" FOREIGN KEY ("NECESSITY_ID")
	  REFERENCES "GZVLG"."NECESSITY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "FK_PURCHASECARRY_OKDP_CODE" FOREIGN KEY ("OKDP_CODE")
	  REFERENCES "GZVLG"."GOODSOKDP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "FK_PURCHASECARRY_PAYCONDITION" FOREIGN KEY ("PAYCONDITIONCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "FK_PURCHASECARRY_UNIT" FOREIGN KEY ("UNITNAME")
	  REFERENCES "GZVLG"."UNIT" ("NAME") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "FK_PURCHCARRY_CMPORG" FOREIGN KEY ("CMPORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "FK_PURCHCARRY_DOCUMENT" FOREIGN KEY ("DOC_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "FK_PURCHCARRY_FINSRC" FOREIGN KEY ("FINSRC_ID")
	  REFERENCES "GZVLG"."FINSRC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "FK_PURCHCARRY_GOODSGROUPCODE" FOREIGN KEY ("GROUPCODE")
	  REFERENCES "GZVLG"."GOODSGROUP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "FK_PURCHCARRY_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASECARRY" ADD CONSTRAINT "FK_PURCHCARRY_RECIPIENT" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PURCHASEMETHOD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PURCHASEMETHOD" ADD CONSTRAINT "FK_PURCHASEMETHOD_ORG" FOREIGN KEY ("CREATORORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PURCHASEPLAN
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PURCHASEPLAN" ADD CONSTRAINT "FK_DESC_PLANDESC" FOREIGN KEY ("DESC_ID")
	  REFERENCES "GZVLG"."DESCRIPTION" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" ADD CONSTRAINT "FK_PLAN_CMPORG" FOREIGN KEY ("CMPORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" ADD CONSTRAINT "FK_PLAN_GOODSGROUPCODE" FOREIGN KEY ("GROUPCODE")
	  REFERENCES "GZVLG"."GOODSGROUP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" ADD CONSTRAINT "FK_PLAN_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" ADD CONSTRAINT "FK_PURCHASEPLAN_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" ADD CONSTRAINT "FK_PURCHASEPLAN_FINSRC" FOREIGN KEY ("FINSRC_ID")
	  REFERENCES "GZVLG"."FINSRC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" ADD CONSTRAINT "FK_PURCHASEPLAN_NECESSITY" FOREIGN KEY ("NECESSITY_ID")
	  REFERENCES "GZVLG"."NECESSITY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEPLAN" ADD CONSTRAINT "FK_PURCHPLAN_PURCHPLANDOC" FOREIGN KEY ("PURCHASEPLANDOC_ID")
	  REFERENCES "GZVLG"."PURCHASEPLANDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PURCHASEPLANDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."PURCHASEPLANDOC" ADD CONSTRAINT "FK_PURCHPLANDOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEPLANDOC" ADD CONSTRAINT "FK_PURCHPLANDOC_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEPLANDOC" ADD CONSTRAINT "FK_PURCHPLANDOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEPLANDOC" ADD CONSTRAINT "FK_PURCHPLANDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEPLANDOC" ADD CONSTRAINT "FK_PURCHPLANDOC_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."PURCHASEPLANDOC" ADD CONSTRAINT "FK_PURCHPLANDOC_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table QUALIFYSELECT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."QUALIFYSELECT" ADD CONSTRAINT "FK_QUALIFYSELECT_CMPCOMPETITOR" FOREIGN KEY ("ORDER_ID", "COMPETITORPOS")
	  REFERENCES "GZVLG"."CMPCOMPETITOR" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."QUALIFYSELECT" ADD CONSTRAINT "FK_QUALIFYSELECT_CMPQUALREQ" FOREIGN KEY ("ORDER_ID", "QUALIFYREQPOS")
	  REFERENCES "GZVLG"."CMPQUALREQ" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table QUALREQ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."QUALREQ" ADD CONSTRAINT "FK_QUALREQ_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."QUALREQ" ADD CONSTRAINT "FK_QUALREQ_REQTYPE" FOREIGN KEY ("REQUIREMENTTYPE_ID")
	  REFERENCES "GZVLG"."REQUIREMENTTYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RECOILDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RECOILDOC" ADD CONSTRAINT "FK_RECOILDOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILDOC" ADD CONSTRAINT "FK_RECOILDOC_CMPORG" FOREIGN KEY ("CMPORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILDOC" ADD CONSTRAINT "FK_RECOILDOC_CONTRACTOR" FOREIGN KEY ("CON_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILDOC" ADD CONSTRAINT "FK_RECOILDOC_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILDOC" ADD CONSTRAINT "FK_RECOILDOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILDOC" ADD CONSTRAINT "FK_RECOILDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILDOC" ADD CONSTRAINT "FK_RECOILDOC_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILDOC" ADD CONSTRAINT "FK_RECOILDOC_NECESSITY" FOREIGN KEY ("NECESSITY_ID")
	  REFERENCES "GZVLG"."NECESSITY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILDOC" ADD CONSTRAINT "FK_RECOILDOC_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILDOC" ADD CONSTRAINT "FK_RECOILDOC_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RECOILLINES
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RECOILLINES" ADD CONSTRAINT "FK_RECOILLINES_DELIV" FOREIGN KEY ("DELIVERYBASIS_ID")
	  REFERENCES "GZVLG"."DELIVERYBASIS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILLINES" ADD CONSTRAINT "FK_RECOILLINES_FINSRC" FOREIGN KEY ("FINSRC_ID")
	  REFERENCES "GZVLG"."FINSRC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILLINES" ADD CONSTRAINT "FK_RECOILLINES_GOODSGROUPCODE" FOREIGN KEY ("GROUPCODE")
	  REFERENCES "GZVLG"."GOODSGROUP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILLINES" ADD CONSTRAINT "FK_RECOILLINES_GRANTINVEST" FOREIGN KEY ("GRANTINVESTMENT_ID")
	  REFERENCES "GZVLG"."GRANTINVESTMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILLINES" ADD CONSTRAINT "FK_RECOILLINES_INDUSTRYCODE" FOREIGN KEY ("INDUSTRYCODE_ID")
	  REFERENCES "GZVLG"."INDUSTRYCODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILLINES" ADD CONSTRAINT "FK_RECOILLINES_OKDP_CODE" FOREIGN KEY ("OKDP_CODE")
	  REFERENCES "GZVLG"."GOODSOKDP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILLINES" ADD CONSTRAINT "FK_RECOILLINES_PAYCONDITION" FOREIGN KEY ("PAYCONDITIONCACHE_ID")
	  REFERENCES "GZVLG"."DESCRIPTIONCACHE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILLINES" ADD CONSTRAINT "FK_RECOILLINES_RECOILDOC" FOREIGN KEY ("RECOILDOC_ID")
	  REFERENCES "GZVLG"."RECOILDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RECOILLINES" ADD CONSTRAINT "FK_RECOILLINES_UNIT" FOREIGN KEY ("UNITNAME")
	  REFERENCES "GZVLG"."UNIT" ("NAME") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REFDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REFDOC" ADD CONSTRAINT "FK_REFDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REFDOC" ADD CONSTRAINT "FK_REFDOC_REF" FOREIGN KEY ("REF_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REFJOURNAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REFJOURNAL" ADD CONSTRAINT "FK_REFJOURNAL_REFCLASS" FOREIGN KEY ("REF_ID")
	  REFERENCES "GZVLG"."REFERENCECLASS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REPDOCFRAGMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REPDOCFRAGMENT" ADD CONSTRAINT "FK_REPDOCFRAGMENT_REPDOCUMENT" FOREIGN KEY ("REPDOCUMENT_ID")
	  REFERENCES "GZVLG"."REPDOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REPDOCFRAGMENT" ADD CONSTRAINT "FK_REPDOCFRAGMENT_REPFRAGMENT" FOREIGN KEY ("REPFRAGMENT_ID")
	  REFERENCES "GZVLG"."REPFRAGMENT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REPFIELD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REPFIELD" ADD CONSTRAINT "FK_REPFORMLINE_REPFORM" FOREIGN KEY ("REPFORM_ID")
	  REFERENCES "GZVLG"."REPFORM" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REPFORM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REPFORM" ADD CONSTRAINT "FK_REPFORM_SERVERACTION" FOREIGN KEY ("SERVERPROCESSOR_ID", "SERVERACTION_NAME")
	  REFERENCES "GZVLG"."SERVERACTION" ("SERVERPROCESSOR_ID", "ACTION_NAME") ON DELETE SET NULL ENABLE;
 
  ALTER TABLE "GZVLG"."REPFORM" ADD CONSTRAINT "FK_REPFORM_SERVERPROCESSOR" FOREIGN KEY ("SERVERPROCESSOR_ID")
	  REFERENCES "GZVLG"."SERVERPROCESSOR" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REPFRAGMENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REPFRAGMENT" ADD CONSTRAINT "FK_REPFRAGMENT_REPSOURCE" FOREIGN KEY ("REPSOURCE_ID")
	  REFERENCES "GZVLG"."REPSOURCE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REPFRAGMENTCHILD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REPFRAGMENTCHILD" ADD CONSTRAINT "FK_REPFRAGMENTCHILD_CHILD" FOREIGN KEY ("CHILD_ID")
	  REFERENCES "GZVLG"."REPFRAGMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REPFRAGMENTCHILD" ADD CONSTRAINT "FK_REPFRAGMENTCHILD_FRAGMENT" FOREIGN KEY ("REPFRAGMENT_ID")
	  REFERENCES "GZVLG"."REPFRAGMENT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REPTEMPLATEATTACH
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REPTEMPLATEATTACH" ADD CONSTRAINT "FK_REPATTACH_REPDOCUMENT" FOREIGN KEY ("REPDOCUMENT_ID")
	  REFERENCES "GZVLG"."REPDOCUMENT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REQUESTDOC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_APPBANK" FOREIGN KEY ("GUARAPPBIC")
	  REFERENCES "GZVLG"."BANK" ("BIC") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_APPPERSACC_ID" FOREIGN KEY ("GUARAPPPERSONALACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_APPSETTACC_ID" FOREIGN KEY ("GUARAPPSETTLEMENTACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_CMPORG" FOREIGN KEY ("CMPORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_COMMISSION" FOREIGN KEY ("COMMISSION_ID")
	  REFERENCES "GZVLG"."COMMISSION" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_CONBANK" FOREIGN KEY ("GUARANTEECONTRACTBIC")
	  REFERENCES "GZVLG"."BANK" ("BIC") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_CONMNGRRESP" FOREIGN KEY ("CONMNGRRESP_ID")
	  REFERENCES "GZVLG"."PERSONAL" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_CONPERSACC_ID" FOREIGN KEY ("GUARCONTRPERSONALACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_CONSETTACC_ID" FOREIGN KEY ("GUARCONTRSETTLEMENTACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_CONSOLIDDOC" FOREIGN KEY ("CONSOLIDDOC_ID")
	  REFERENCES "GZVLG"."CONSOLIDDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_CONTRACTREASON" FOREIGN KEY ("SINGLECUSTOMERREASON_ID")
	  REFERENCES "GZVLG"."CONTRACTREASON" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_CONTYPE" FOREIGN KEY ("CONTYPE_ID")
	  REFERENCES "GZVLG"."CONTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_CURRENCY" FOREIGN KEY ("CURRENCY_ID")
	  REFERENCES "GZVLG"."CURRENCY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_ETP" FOREIGN KEY ("ETP_ID")
	  REFERENCES "GZVLG"."ETP" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_NECESSITY" FOREIGN KEY ("NECESSITY_ID")
	  REFERENCES "GZVLG"."NECESSITY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_OFRREQREASON" FOREIGN KEY ("OFRREQREASON_ID")
	  REFERENCES "GZVLG"."OFRREQREASON" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_PERSONAL" FOREIGN KEY ("RESPPERSONAL_ID")
	  REFERENCES "GZVLG"."PERSONAL" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_PLACINGWAY" FOREIGN KEY ("PLACINGWAY_ID")
	  REFERENCES "GZVLG"."PLACINGWAY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_RECIPIENT" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTDOC" ADD CONSTRAINT "FK_REQUESTDOC_REPNOTICE" FOREIGN KEY ("REPNOTICE_ID")
	  REFERENCES "GZVLG"."REPDOCUMENT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REQUESTORDER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REQUESTORDER" ADD CONSTRAINT "FK_REQUESTORDER_DOC" FOREIGN KEY ("DOC_ID")
	  REFERENCES "GZVLG"."REQUESTDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTORDER" ADD CONSTRAINT "FK_REQUESTORDER_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUESTORDER" ADD CONSTRAINT "FK_REQUESTORDER_ORDER" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REQUIREMENTTYPEPM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."REQUIREMENTTYPEPM" ADD CONSTRAINT "FK_REQUIREMENTTYPEPM_PURCHMD" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."REQUIREMENTTYPEPM" ADD CONSTRAINT "FK_REQUIREMENTTYPEPM_REQTYPE" FOREIGN KEY ("REQUIREMENTTYPE_ID")
	  REFERENCES "GZVLG"."REQUIREMENTTYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RESERVEDBUDGETLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RESERVEDBUDGETLINE" ADD CONSTRAINT "FK_RBL_GRANTINVESTMENT" FOREIGN KEY ("GRANTINVESTMENT_ID")
	  REFERENCES "GZVLG"."GRANTINVESTMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RESERVEDBUDGETLINE" ADD CONSTRAINT "FK_RBL_INDUSTRYCODE" FOREIGN KEY ("INDUSTRYCODE_ID")
	  REFERENCES "GZVLG"."INDUSTRYCODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RESERVEDBUDGETLINE" ADD CONSTRAINT "FK_RESERVEDLINE_CUST" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RESERVEDBUDGETLINE" ADD CONSTRAINT "FK_RESERVEDLINE_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RESERVEDBUDGETLINE" ADD CONSTRAINT "FK_RESERVEDLINE_ESTIMATE" FOREIGN KEY ("ESTIMATE_ID")
	  REFERENCES "GZVLG"."ESTIMATE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RESERVEDBUDGETLINE" ADD CONSTRAINT "FK_RESERVEDLINE_ORDERDOC" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "GZVLG"."ORDERDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RESERVEDBUDGETLINE" ADD CONSTRAINT "FK_RESERVEDLINE_PARENT_ID" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."RESERVEDBUDGETLINE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RESERVEDBUDGETLINE" ADD CONSTRAINT "FK_RESERVEDLINE_RECP" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ROLEAPPOBJ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLEAPPOBJ" ADD CONSTRAINT "FK_ROLEAPPOBJ_APPOBJNAME" FOREIGN KEY ("APPOBJNAME")
	  REFERENCES "GZVLG"."APPOBJ" ("NAME") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEAPPOBJ" ADD CONSTRAINT "FK_ROLEAPPOBJ_USERROLE" FOREIGN KEY ("USERROLE_ID")
	  REFERENCES "GZVLG"."USERROLE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ROLEATTACH
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLEATTACH" ADD CONSTRAINT "FK_ROLEATTACH_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEATTACH" ADD CONSTRAINT "FK_ROLEATTACH_DOCCATEGORY" FOREIGN KEY ("CATEGORY_ID")
	  REFERENCES "GZVLG"."DOCCATEGORY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEATTACH" ADD CONSTRAINT "FK_ROLEATTACH_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEATTACH" ADD CONSTRAINT "FK_ROLEATTACH_USERROLE" FOREIGN KEY ("USERROLE_ID")
	  REFERENCES "GZVLG"."USERROLE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ROLEBUDGET
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLEBUDGET" ADD CONSTRAINT "FK_ROLEBUDGET_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEBUDGET" ADD CONSTRAINT "FK_ROLEBUDGET_USERROLE" FOREIGN KEY ("USERROLE_ID")
	  REFERENCES "GZVLG"."USERROLE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ROLECLASS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLECLASS" ADD CONSTRAINT "FK_ROLECLASS_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."ROLECLASS" ADD CONSTRAINT "FK_ROLECLASS_USERROLE" FOREIGN KEY ("USERROLE_ID")
	  REFERENCES "GZVLG"."USERROLE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ROLEEVENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLEEVENT" ADD CONSTRAINT "FK_ROLEACTION_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEEVENT" ADD CONSTRAINT "FK_ROLEACTION_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEEVENT" ADD CONSTRAINT "FK_ROLEACTION_USERROLE" FOREIGN KEY ("USERROLE_ID")
	  REFERENCES "GZVLG"."USERROLE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ROLEFUNC
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLEFUNC" ADD CONSTRAINT "FK_ROLEOBJECT_USERROLE" FOREIGN KEY ("USERROLE_ID")
	  REFERENCES "GZVLG"."USERROLE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ROLEORG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLEORG" ADD CONSTRAINT "FK_ROLEORG_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEORG" ADD CONSTRAINT "FK_ROLEORG_USERROLE" FOREIGN KEY ("USERROLE_ID")
	  REFERENCES "GZVLG"."USERROLE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ROLEREFCLASS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLEREFCLASS" ADD CONSTRAINT "FK_ROLEREF_REFNAME" FOREIGN KEY ("REF_NAME")
	  REFERENCES "GZVLG"."REFERENCECLASS" ("NAME") ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEREFCLASS" ADD CONSTRAINT "FK_ROLEREF_USERROLE" FOREIGN KEY ("USERROLE_ID")
	  REFERENCES "GZVLG"."USERROLE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ROLEREGISTER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLEREGISTER" ADD CONSTRAINT "FK_ROLEREGISTER_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" ADD CONSTRAINT "FK_ROLEREGISTER_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" ADD CONSTRAINT "FK_ROLEREGISTER_DOCUMENTCLASS" FOREIGN KEY ("DOCUMENTCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" ADD CONSTRAINT "FK_ROLEREGISTER_GRANTEDROLE" FOREIGN KEY ("GRANTEDROLE_ID")
	  REFERENCES "GZVLG"."USERROLE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" ADD CONSTRAINT "FK_ROLEREGISTER_GRANTINGUSER" FOREIGN KEY ("GRANTINGUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" ADD CONSTRAINT "FK_ROLEREGISTER_OPERTYPE" FOREIGN KEY ("OPERTYPE_ID")
	  REFERENCES "GZVLG"."OPERTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."ROLEREGISTER" ADD CONSTRAINT "FK_ROLEREGISTER_SYSUSER" FOREIGN KEY ("USER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ROLERIGHT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."ROLERIGHT" ADD CONSTRAINT "FK_ROLERIGHT_SYSRIGHT" FOREIGN KEY ("SYSRIGHT_NAME")
	  REFERENCES "GZVLG"."SYSRIGHT" ("NAME") ENABLE;
 
  ALTER TABLE "GZVLG"."ROLERIGHT" ADD CONSTRAINT "FK_ROLERIGHT_USERROLE" FOREIGN KEY ("USERROLE_ID")
	  REFERENCES "GZVLG"."USERROLE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RPL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPL" ADD CONSTRAINT "FK_RPL_CLIENT" FOREIGN KEY ("CLIENT_ID")
	  REFERENCES "GZVLG"."MSGSITE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RPL" ADD CONSTRAINT "FK_RPL_MASTER" FOREIGN KEY ("MASTER_ID")
	  REFERENCES "GZVLG"."MSGSITE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RPL" ADD CONSTRAINT "FK_RPL_RPLOBJECT" FOREIGN KEY ("RPLOBJECT_ID")
	  REFERENCES "GZVLG"."RPLOBJECT" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RPL$CONSTRAINTFIELDS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPL$CONSTRAINTFIELDS" ADD CONSTRAINT "FK_CONSTRFIELDS_CONSTRAINTS" FOREIGN KEY ("RPL$CONSTRAINTS_ID")
	  REFERENCES "GZVLG"."RPL$CONSTRAINTS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RPLRULEOBJ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPLRULEOBJ" ADD CONSTRAINT "FK_RPLRULEOBJ_RPLOBJECT" FOREIGN KEY ("RPLOBJECT_ID")
	  REFERENCES "GZVLG"."RPLOBJECT" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."RPLRULEOBJ" ADD CONSTRAINT "FK_RPLRULEOBJ_RPLRULE" FOREIGN KEY ("RPLRULE_ID")
	  REFERENCES "GZVLG"."RPLRULE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RPLSITE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPLSITE" ADD CONSTRAINT "FK_RPLSITE_CLIENT" FOREIGN KEY ("CLIENT_ID")
	  REFERENCES "GZVLG"."MSGSITE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RPLSITE" ADD CONSTRAINT "FK_RPLSITE_MASTER" FOREIGN KEY ("MASTER_ID")
	  REFERENCES "GZVLG"."MSGSITE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RPLSITE" ADD CONSTRAINT "FK_RPLSITE_RPLRULE" FOREIGN KEY ("RPLRULE_ID")
	  REFERENCES "GZVLG"."RPLRULE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RPLTABLEPLUGIN
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPLTABLEPLUGIN" ADD CONSTRAINT "FK_PLUGIN_PARENTRPL" FOREIGN KEY ("PLUGIN_RPLTABLE_ID")
	  REFERENCES "GZVLG"."RPLTABLE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RPLTABLEPLUGIN" ADD CONSTRAINT "FK_PLUGIN_RPLTABLE" FOREIGN KEY ("RPLTABLE_ID")
	  REFERENCES "GZVLG"."RPLTABLE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RPLTABLINK
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPLTABLINK" ADD CONSTRAINT "FK_RPLTABLINK_RPLTABLE" FOREIGN KEY ("RPLTABLE_ID")
	  REFERENCES "GZVLG"."RPLTABLE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RPLVERSIONLOG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RPLVERSIONLOG" ADD CONSTRAINT "FK_RPLVERSIONLOG_RPLTABLE" FOREIGN KEY ("RPLTABLE_ID")
	  REFERENCES "GZVLG"."RPLTABLE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RQBUDGETLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQBUDGETLINE" ADD CONSTRAINT "FK_RQBL_GRANTINVESTMENT" FOREIGN KEY ("GRANTINVESTMENT_ID")
	  REFERENCES "GZVLG"."GRANTINVESTMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQBUDGETLINE" ADD CONSTRAINT "FK_RQBL_INDUSTRYCODE" FOREIGN KEY ("INDUSTRYCODE_ID")
	  REFERENCES "GZVLG"."INDUSTRYCODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQBUDGETLINE" ADD CONSTRAINT "FK_RQBUDGETLINE_ESTIMATE" FOREIGN KEY ("ESTIMATE_ID")
	  REFERENCES "GZVLG"."ESTIMATE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQBUDGETLINE" ADD CONSTRAINT "FK_RQBUDGETLINE_FINSRC" FOREIGN KEY ("FINSRC_ID")
	  REFERENCES "GZVLG"."FINSRC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQBUDGETLINE" ADD CONSTRAINT "FK_RQBUDGETLINE_RECIPIENT" FOREIGN KEY ("RECIPIENT_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQBUDGETLINE" ADD CONSTRAINT "FK_RQBUDGETLINE_REQUESTDOC" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "GZVLG"."REQUESTDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQBUDGETLINE" ADD CONSTRAINT "FK_RQBUDGETLINE_TERRITORY" FOREIGN KEY ("COUNTRY_ID", "TERRITORYCODE")
	  REFERENCES "GZVLG"."TERRITORY" ("COUNTRY_ID", "CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RQCOMMEMBER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQCOMMEMBER" ADD CONSTRAINT "FK_RQCOMMEMBER_PERSONAL" FOREIGN KEY ("COMMEMBER_ID")
	  REFERENCES "GZVLG"."PERSONAL" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQCOMMEMBER" ADD CONSTRAINT "FK_RQCOMMEMBER_REQUESTDOC" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "GZVLG"."REQUESTDOC" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RQCONDEALRESP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQCONDEALRESP" ADD CONSTRAINT "FK_RQCONDEALRESP_LOTPOS" FOREIGN KEY ("REQUEST_ID", "LOTPOS")
	  REFERENCES "GZVLG"."RQLOT" ("REQUEST_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."RQCONDEALRESP" ADD CONSTRAINT "FK_RQCONDEALRESP_PERSONAL" FOREIGN KEY ("PERSONAL_ID")
	  REFERENCES "GZVLG"."PERSONAL" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RQCRITERION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQCRITERION" ADD CONSTRAINT "FK_RQCRITERION_REQUEST" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "GZVLG"."REQUESTDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQCRITERION" ADD CONSTRAINT "FK_RQCRITERION_RQLOT" FOREIGN KEY ("REQUEST_ID", "LOTPOS")
	  REFERENCES "GZVLG"."RQLOT" ("REQUEST_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."RQCRITERION" ADD CONSTRAINT "FK_RQCRITERION_TENDERCRITERION" FOREIGN KEY ("TENDERCRITERION_ID")
	  REFERENCES "GZVLG"."TENDERCRITERION" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RQCRITERIONLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQCRITERIONLINE" ADD CONSTRAINT "FK_RQCRITERIONLINE_REQUEST" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "GZVLG"."REQUESTDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQCRITERIONLINE" ADD CONSTRAINT "FK_RQCRITERIONLINE_RQCRITERION" FOREIGN KEY ("REQUEST_ID", "RQCRITERIONPOS")
	  REFERENCES "GZVLG"."RQCRITERION" ("REQUEST_ID", "POS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RQDOCCHILD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQDOCCHILD" ADD CONSTRAINT "FK_RQDOCCHILD_DOC" FOREIGN KEY ("DOC_ID")
	  REFERENCES "GZVLG"."REQUESTDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQDOCCHILD" ADD CONSTRAINT "FK_RQDOCCHILD_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQDOCCHILD" ADD CONSTRAINT "FK_RQDOCCHILD_ORDER" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "GZVLG"."REQUESTDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RQDOCREQ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQDOCREQ" ADD CONSTRAINT "FK_RQDOCREQ_REQTYPE" FOREIGN KEY ("REQUIREMENTTYPE_ID")
	  REFERENCES "GZVLG"."REQUIREMENTTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQDOCREQ" ADD CONSTRAINT "FK_RQDOCREQ_REQUESTDOC" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "GZVLG"."REQUESTDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQDOCREQ" ADD CONSTRAINT "FK_RQDOCREQ_RQLOT" FOREIGN KEY ("REQUEST_ID", "LOTPOS")
	  REFERENCES "GZVLG"."RQLOT" ("REQUEST_ID", "POS") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RQFEATURE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQFEATURE" ADD CONSTRAINT "FK_RQFEATURE_PLFEATURE" FOREIGN KEY ("PLACEMENTFEATURE_ID")
	  REFERENCES "GZVLG"."PLACEMENTFEATURE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQFEATURE" ADD CONSTRAINT "FK_RQFEATURE_REQUEST" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "GZVLG"."REQUESTDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQFEATURE" ADD CONSTRAINT "FK_RQFEATURE_RQLOT" FOREIGN KEY ("REQUEST_ID", "LOTPOS")
	  REFERENCES "GZVLG"."RQLOT" ("REQUEST_ID", "POS") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RQGOODS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQGOODS" ADD CONSTRAINT "FK_RQGOODS_GROUP" FOREIGN KEY ("GROUPCODE")
	  REFERENCES "GZVLG"."GOODSGROUP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."RQGOODS" ADD CONSTRAINT "FK_RQGOODS_OKDP_CODE" FOREIGN KEY ("OKDP_CODE")
	  REFERENCES "GZVLG"."GOODSOKDP" ("CODE") ENABLE;
 
  ALTER TABLE "GZVLG"."RQGOODS" ADD CONSTRAINT "FK_RQGOODS_OKPD" FOREIGN KEY ("OKPD_ID")
	  REFERENCES "GZVLG"."GOODSOKPD" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQGOODS" ADD CONSTRAINT "FK_RQGOODS_OKVED" FOREIGN KEY ("OKVED_ID")
	  REFERENCES "GZVLG"."GOODSOKVED" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQGOODS" ADD CONSTRAINT "FK_RQGOODS_REQUESTDOC" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "GZVLG"."REQUESTDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RQGOODSPROP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQGOODSPROP" ADD CONSTRAINT "FK_RQGOODSPROP_RQGOODS" FOREIGN KEY ("REQUEST_ID", "GOODSPOS")
	  REFERENCES "GZVLG"."RQGOODS" ("REQUEST_ID", "POS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RQLOT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "FK_RQLOT_APPBANK" FOREIGN KEY ("GUARAPPBIC")
	  REFERENCES "GZVLG"."BANK" ("BIC") ENABLE;
 
  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "FK_RQLOT_APPPERSACC_ID" FOREIGN KEY ("GUARAPPPERSONALACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "FK_RQLOT_APPSETTACC_ID" FOREIGN KEY ("GUARAPPSETTLEMENTACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "FK_RQLOT_CONBANK" FOREIGN KEY ("GUARANTEECONTRACTBIC")
	  REFERENCES "GZVLG"."BANK" ("BIC") ENABLE;
 
  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "FK_RQLOT_CONMNGRRESP" FOREIGN KEY ("CONMNGRRESP_ID")
	  REFERENCES "GZVLG"."PERSONAL" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "FK_RQLOT_CONPERSACC_ID" FOREIGN KEY ("GUARCONTRPERSONALACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "FK_RQLOT_CONSETTACC_ID" FOREIGN KEY ("GUARCONTRSETTLEMENTACC_ID")
	  REFERENCES "GZVLG"."ORGACCOUNT" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "FK_RQLOT_CONTYPE" FOREIGN KEY ("CONTYPE_ID")
	  REFERENCES "GZVLG"."CONTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQLOT" ADD CONSTRAINT "FK_RQLOT_CURRENCY" FOREIGN KEY ("CURRENCY_ID")
	  REFERENCES "GZVLG"."CURRENCY" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RQOPTIMIZEDPRICE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQOPTIMIZEDPRICE" ADD CONSTRAINT "FK_RQOPTIMIZEDPRICE_REQUEST" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "GZVLG"."REQUESTDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RQPAYSHEDULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQPAYSHEDULE" ADD CONSTRAINT "FK_RQPAYSHEDULE_RQBUDGETLINE" FOREIGN KEY ("REQUEST_ID", "BUDGETLINEPOS")
	  REFERENCES "GZVLG"."RQBUDGETLINE" ("REQUEST_ID", "POS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RQQUALREQ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQQUALREQ" ADD CONSTRAINT "FK_RQQUALREQ_PLACEMENTFEAT" FOREIGN KEY ("PLACEMENTFEATURE_ID")
	  REFERENCES "GZVLG"."PLACEMENTFEATURE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQQUALREQ" ADD CONSTRAINT "FK_RQQUALREQ_REQTYPE" FOREIGN KEY ("REQUIREMENTTYPE_ID")
	  REFERENCES "GZVLG"."REQUIREMENTTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQQUALREQ" ADD CONSTRAINT "FK_RQQUALREQ_RQLOT" FOREIGN KEY ("REQUEST_ID", "LOTPOS")
	  REFERENCES "GZVLG"."RQLOT" ("REQUEST_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."RQQUALREQ" ADD CONSTRAINT "FK_RQQUAL_REQUESTDOC" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "GZVLG"."REQUESTDOC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RQSUPPLYSHEDULE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQSUPPLYSHEDULE" ADD CONSTRAINT "FK_RQSUPPLYSHEDULE_RQBDGTLINE" FOREIGN KEY ("REQUEST_ID", "BUDGETLINEPOS")
	  REFERENCES "GZVLG"."RQBUDGETLINE" ("REQUEST_ID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."RQSUPPLYSHEDULE" ADD CONSTRAINT "FK_RQSUPPLYSHEDULE_RQGOODS" FOREIGN KEY ("REQUEST_ID", "GOODSPOS")
	  REFERENCES "GZVLG"."RQGOODS" ("REQUEST_ID", "POS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RQVENDOR
--------------------------------------------------------

  ALTER TABLE "GZVLG"."RQVENDOR" ADD CONSTRAINT "FK_RQVENDOR_ORGFORM" FOREIGN KEY ("PROPFORM_ID")
	  REFERENCES "GZVLG"."ORGFORM" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQVENDOR" ADD CONSTRAINT "FK_RQVENDOR_REQUESTDOC" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "GZVLG"."REQUESTDOC" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."RQVENDOR" ADD CONSTRAINT "FK_RQVENDOR_VENDOR" FOREIGN KEY ("VENDOR_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SCHEXPDOCS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SCHEXPDOCS" ADD CONSTRAINT "FK_SCHEXPDOCS_DOCUMENTCLASS" FOREIGN KEY ("DOCCLASS_ID")
	  REFERENCES "GZVLG"."DOCUMENTCLASS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SCHPLAN
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SCHPLAN" ADD CONSTRAINT "FK_SCHPLAN_SCHTASK" FOREIGN KEY ("SCHTASK_ID")
	  REFERENCES "GZVLG"."SCHTASK" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SERVERACTION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SERVERACTION" ADD CONSTRAINT "FK_SRVRACTION_SRVRPROCESSOR" FOREIGN KEY ("SERVERPROCESSOR_ID")
	  REFERENCES "GZVLG"."SERVERPROCESSOR" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SIGNEXPORTLOG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SIGNEXPORTLOG" ADD CONSTRAINT "FK_SEL_DIGEST" FOREIGN KEY ("DIGEST_ID")
	  REFERENCES "GZVLG"."DIGEST" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."SIGNEXPORTLOG" ADD CONSTRAINT "FK_SEL_DISPSTATUS" FOREIGN KEY ("DISPSTATUS_ID")
	  REFERENCES "GZVLG"."DISPSTATUS" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."SIGNEXPORTLOG" ADD CONSTRAINT "FK_SEL_DOCATTACHEX" FOREIGN KEY ("DOCATTACHEX_ID")
	  REFERENCES "GZVLG"."DOCATTACHEX" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."SIGNEXPORTLOG" ADD CONSTRAINT "FK_SEL_SYSUSER" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SIGNTYPE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SIGNTYPE" ADD CONSTRAINT "FK_SIGNTYPE_SIGNFORMAT" FOREIGN KEY ("SIGNFORMAT_ID")
	  REFERENCES "GZVLG"."SIGNFORMAT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table STOREDDOCUMENTS
--------------------------------------------------------

  ALTER TABLE "GZVLG"."STOREDDOCUMENTS" ADD CONSTRAINT "FK_STOREDDOCUMENTS_DOCUMENT" FOREIGN KEY ("DOCUMENT_ID")
	  REFERENCES "GZVLG"."DOCUMENT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table STOREPLACE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."STOREPLACE" ADD CONSTRAINT "FK_STOREPLACE_GOODS" FOREIGN KEY ("GOODSID")
	  REFERENCES "GZVLG"."PLGOODS" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SUPPLYPLACE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SUPPLYPLACE" ADD CONSTRAINT "FK_SUPPLYPLACE_GOODS" FOREIGN KEY ("GOODSID")
	  REFERENCES "GZVLG"."PLGOODS" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SUPPORTCRYPTOLIBFORMAT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIBFORMAT" ADD CONSTRAINT "FK_FORMAT_SUPPORTCRYPTOLIB_ID" FOREIGN KEY ("SUPPORTCRYPTOLIB_ID")
	  REFERENCES "GZVLG"."SUPPORTCRYPTOLIB" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIBFORMAT" ADD CONSTRAINT "FK_SIGNFORMAT_ID" FOREIGN KEY ("SIGNFORMAT_ID")
	  REFERENCES "GZVLG"."SIGNFORMAT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SUPPORTCRYPTOLIBPARAM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SUPPORTCRYPTOLIBPARAM" ADD CONSTRAINT "FK_PARAM_SUPPORTCRYPTOLIB_ID" FOREIGN KEY ("SUPPORTCRYPTOLIB_ID")
	  REFERENCES "GZVLG"."SUPPORTCRYPTOLIB" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SYSEVENT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SYSEVENT" ADD CONSTRAINT "FK_SYSMSG_SYSUSER" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SYSPARAM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SYSPARAM" ADD CONSTRAINT "FK_SYSPARAM_SYSUSER" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SYSUSER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SYSUSER" ADD CONSTRAINT "FK_SYSUSER_DOMEN" FOREIGN KEY ("DOMEN_ID")
	  REFERENCES "GZVLG"."DOMEN" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."SYSUSER" ADD CONSTRAINT "FK_SYSUSER_MENU" FOREIGN KEY ("MENU_ID")
	  REFERENCES "GZVLG"."MENU" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."SYSUSER" ADD CONSTRAINT "FK_SYSUSER_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."SYSUSER" ADD CONSTRAINT "FK_SYSUSER_PANEL" FOREIGN KEY ("PANEL_ID")
	  REFERENCES "GZVLG"."PANEL" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."SYSUSER" ADD CONSTRAINT "FK_SYSUSER_PERSON" FOREIGN KEY ("PERSON_ID")
	  REFERENCES "GZVLG"."PERSON" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SYSUSEREXT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."SYSUSEREXT" ADD CONSTRAINT "FK_SYSUSEREXT_SYSUSER" FOREIGN KEY ("ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TASKJOURNAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TASKJOURNAL" ADD CONSTRAINT "FK_TASKJOURNAL_SYSUSER" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TENDER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TENDER" ADD CONSTRAINT "FK_TENDER_CMPCOMPETITOR" FOREIGN KEY ("ORDER_ID", "COMPETITORPOS")
	  REFERENCES "GZVLG"."CMPCOMPETITOR" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."TENDER" ADD CONSTRAINT "FK_TENDER_CMPCRITERION" FOREIGN KEY ("ORDER_ID", "CRITERIONPOS")
	  REFERENCES "GZVLG"."CMPCRITERION" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."TENDER" ADD CONSTRAINT "FK_TENDER_TENDERCRITERION" FOREIGN KEY ("TENDERCRITERION_ID")
	  REFERENCES "GZVLG"."TENDERCRITERION" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TENDERCRITERIONCHILD
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TENDERCRITERIONCHILD" ADD CONSTRAINT "FK_TENDERCRITERIONCHILD_CHILD" FOREIGN KEY ("CHILD_ID")
	  REFERENCES "GZVLG"."TENDERCRITERION" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."TENDERCRITERIONCHILD" ADD CONSTRAINT "FK_TENDERCRITERIONCHILD_CRIT" FOREIGN KEY ("TENDERCRITERION_ID")
	  REFERENCES "GZVLG"."TENDERCRITERION" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TENDERCRITERIONPM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TENDERCRITERIONPM" ADD CONSTRAINT "FK_TCPM_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."TENDERCRITERIONPM" ADD CONSTRAINT "FK_TCPM_TENDERCRITERION" FOREIGN KEY ("TENDERCRITERION_ID")
	  REFERENCES "GZVLG"."TENDERCRITERION" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TENDERLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TENDERLINE" ADD CONSTRAINT "FK_TENDERLINE_CMPCRITERIONLINE" FOREIGN KEY ("ORDER_ID", "CRITERIONPOS", "CRITERIONLINESEQORDER")
	  REFERENCES "GZVLG"."CMPCRITERIONLINE" ("ORDER_ID", "CMPCRITERIONPOS", "SEQORDER") ENABLE;
 
  ALTER TABLE "GZVLG"."TENDERLINE" ADD CONSTRAINT "FK_TENDERLINE_TENDER" FOREIGN KEY ("TENDER_ID")
	  REFERENCES "GZVLG"."TENDER" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TENDERLINECOMM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TENDERLINECOMM" ADD CONSTRAINT "FK_TENDERCOMMLINE_TENDERLINE" FOREIGN KEY ("TENDERLINE_ID")
	  REFERENCES "GZVLG"."TENDERLINE" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."TENDERLINECOMM" ADD CONSTRAINT "FK_TENDERLINECOMM_CMPCOMMEMBER" FOREIGN KEY ("ORDER_ID", "COMMEMBERPOS")
	  REFERENCES "GZVLG"."CMPCOMMEMBER" ("ORDER_ID", "POS") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TERRITORY
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TERRITORY" ADD CONSTRAINT "FK_TERRITORY_COUNTRY" FOREIGN KEY ("COUNTRY_ID")
	  REFERENCES "GZVLG"."COUNTRY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."TERRITORY" ADD CONSTRAINT "FK_TERRITORY_PARENT" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "GZVLG"."TERRITORY" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."TERRITORY" ADD CONSTRAINT "FK_TERRITORY_TERTYPE" FOREIGN KEY ("TERTYPE_ID")
	  REFERENCES "GZVLG"."TERTYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TER_TREE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TER_TREE" ADD CONSTRAINT "FK_TER_TREE_TERRITORY" FOREIGN KEY ("TER_ID")
	  REFERENCES "GZVLG"."TERRITORY" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TYPECRIT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TYPECRIT" ADD CONSTRAINT "FK_TYPECRIT_TENDERCRITERION" FOREIGN KEY ("TENDERCRITERION_ID")
	  REFERENCES "GZVLG"."TENDERCRITERION" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."TYPECRIT" ADD CONSTRAINT "FK_TYPECRIT_TYPEREQCRIT" FOREIGN KEY ("TYPEREQCRITID")
	  REFERENCES "GZVLG"."TYPEREQCRIT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TYPECRITLINE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TYPECRITLINE" ADD CONSTRAINT "FK_TYPECRITLINE_TYPECRIT" FOREIGN KEY ("TYPEREQCRIT_ID", "TYPECRITPOS")
	  REFERENCES "GZVLG"."TYPECRIT" ("TYPEREQCRITID", "POS") ENABLE;
 
  ALTER TABLE "GZVLG"."TYPECRITLINE" ADD CONSTRAINT "FK_TYPECRITLINE_TYPEREQCRIT" FOREIGN KEY ("TYPEREQCRIT_ID")
	  REFERENCES "GZVLG"."TYPEREQCRIT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TYPEDOCREQ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TYPEDOCREQ" ADD CONSTRAINT "FK_TYPEDOCREQ_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."TYPEDOCREQ" ADD CONSTRAINT "FK_TYPEDOCREQ_REQTYPE" FOREIGN KEY ("REQUIREMENTTYPE_ID")
	  REFERENCES "GZVLG"."REQUIREMENTTYPE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TYPEDOCREQGROUP
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TYPEDOCREQGROUP" ADD CONSTRAINT "FK_TYPEDOCREQGROUP_PURCHMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TYPEREQ
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TYPEREQ" ADD CONSTRAINT "FK_TYPEREQ_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."TYPEREQ" ADD CONSTRAINT "FK_TYPEREQ_REQTYPE" FOREIGN KEY ("REQUIREMENTTYPE_ID")
	  REFERENCES "GZVLG"."REQUIREMENTTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."TYPEREQ" ADD CONSTRAINT "FK_TYPEREQ_TYPEREQCRIT" FOREIGN KEY ("TYPEREQCRITID")
	  REFERENCES "GZVLG"."TYPEREQCRIT" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TYPEREQCRIT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."TYPEREQCRIT" ADD CONSTRAINT "FK_TYPEREQCRIT_PURCHASEMODE" FOREIGN KEY ("PURCHASEMODE_ID")
	  REFERENCES "GZVLG"."PURCHASEMODE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UPDPACKAGE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."UPDPACKAGE" ADD CONSTRAINT "FK_UPDPACKAGE_RECEIVER" FOREIGN KEY ("RECEIVER_ID")
	  REFERENCES "GZVLG"."MSGSITE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."UPDPACKAGE" ADD CONSTRAINT "FK_UPDPACKAGE_SENDER" FOREIGN KEY ("SENDER_ID")
	  REFERENCES "GZVLG"."MSGSITE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table USERBUDGET
--------------------------------------------------------

  ALTER TABLE "GZVLG"."USERBUDGET" ADD CONSTRAINT "FK_USERBUDGET_ORG" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."USERBUDGET" ADD CONSTRAINT "FK_USERBUDGET_SYSUSER" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table USERCERT
--------------------------------------------------------

  ALTER TABLE "GZVLG"."USERCERT" ADD CONSTRAINT "FK_USERCERT_CRLPOINT" FOREIGN KEY ("CRLPOINT_ID")
	  REFERENCES "GZVLG"."CRLPOINT" ("ID") ON DELETE SET NULL ENABLE;
 
  ALTER TABLE "GZVLG"."USERCERT" ADD CONSTRAINT "FK_USERCERT_SIGNTYPE" FOREIGN KEY ("SIGNTYPE_ID")
	  REFERENCES "GZVLG"."SIGNTYPE" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."USERCERT" ADD CONSTRAINT "FK_USERCERT_SYSUSER" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table USERCERTSYSUSER
--------------------------------------------------------

  ALTER TABLE "GZVLG"."USERCERTSYSUSER" ADD CONSTRAINT "FK_SYSUSER_USSU" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."USERCERTSYSUSER" ADD CONSTRAINT "FK_USERCERT_USSU" FOREIGN KEY ("USERCERT_ID")
	  REFERENCES "GZVLG"."USERCERT" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table USERORG
--------------------------------------------------------

  ALTER TABLE "GZVLG"."USERORG" ADD CONSTRAINT "FK_USERORG_ORG" FOREIGN KEY ("ORG_ID")
	  REFERENCES "GZVLG"."ORG" ("ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "GZVLG"."USERORG" ADD CONSTRAINT "FK_USERORG_SYSUSER" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table USERPROFILE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."USERPROFILE" ADD CONSTRAINT "FK_USERPROFILE_SYSUSER" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table USERSESSION
--------------------------------------------------------

  ALTER TABLE "GZVLG"."USERSESSION" ADD CONSTRAINT "FK_USERSESSION_SYSUSER" FOREIGN KEY ("SYSUSER_ID")
	  REFERENCES "GZVLG"."SYSUSER" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table USESCRYPTOLIB
--------------------------------------------------------

  ALTER TABLE "GZVLG"."USESCRYPTOLIB" ADD CONSTRAINT "FK_USESCRYPLIB_SUPPORTCRYPLIB" FOREIGN KEY ("SUPPORTCRYPTOLIB_ID")
	  REFERENCES "GZVLG"."SUPPORTCRYPTOLIB" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table USESCRYPTOLIBPARAM
--------------------------------------------------------

  ALTER TABLE "GZVLG"."USESCRYPTOLIBPARAM" ADD CONSTRAINT "FK_USESCRYPTOLIBPARAM" FOREIGN KEY ("USESCRYPTOLIB_ID")
	  REFERENCES "GZVLG"."USESCRYPTOLIB" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table WEBSTATCACHE
--------------------------------------------------------

  ALTER TABLE "GZVLG"."WEBSTATCACHE" ADD CONSTRAINT "FK_WEBSTAT_BUDGET" FOREIGN KEY ("BUDGET_ID")
	  REFERENCES "GZVLG"."BUDGET" ("ID") ENABLE;
 
  ALTER TABLE "GZVLG"."WEBSTATCACHE" ADD CONSTRAINT "FK_WEBSTAT_STATSOURCE" FOREIGN KEY ("STATISTICSSOURCE_ID")
	  REFERENCES "GZVLG"."STATISTICSSOURCE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table WEBSTATCACHEVAL
--------------------------------------------------------

  ALTER TABLE "GZVLG"."WEBSTATCACHEVAL" ADD CONSTRAINT "FK_WEBSTATVAL_WEBSTATCACHE" FOREIGN KEY ("WEBSTAT_ID")
	  REFERENCES "GZVLG"."WEBSTATCACHE" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  DDL for Index PK_ORGSTATUS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGSTATUS" ON "GZVLG"."ORGSTATUS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_USERBUDGET
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_USERBUDGET" ON "GZVLG"."USERBUDGET" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2LEDGER_PAYCONDITION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2LEDGER_PAYCONDITION" ON "GZVLG"."PLAN2LEDGER" ("PAYCONDITIONCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCUMENTCLASS_NUMGENERATO
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCUMENTCLASS_NUMGENERATO" ON "GZVLG"."DOCUMENTCLASS" ("NUMGENERATOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RQCRITERION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RQCRITERION" ON "GZVLG"."RQCRITERION" ("REQUEST_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_NUMGENERATOR_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_NUMGENERATOR_NAME" ON "GZVLG"."NUMGENERATOR" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_RQDOCREQ_LOTPOSREQUEST_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_RQDOCREQ_LOTPOSREQUEST_ID" ON "GZVLG"."RQDOCREQ" ("REQUEST_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_NOTICEORG
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_NOTICEORG" ON "GZVLG"."NOTICEORG" ("NOTICEDOC_ID", "ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONTRACTDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONTRACTDOC" ON "GZVLG"."CONTRACTDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_INVBUDGE_RECIPIENTACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_INVBUDGE_RECIPIENTACC_ID" ON "GZVLG"."INVBUDGETLINE" ("RECIPIENTACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SIGNEXPORTLOG
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SIGNEXPORTLOG" ON "GZVLG"."SIGNEXPORTLOG" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_PREFERENCEGROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_PREFERENCEGROUP" ON "GZVLG"."PREFERENCEGROUP" ("CUSTOMER_ID", "CAPTION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_SYSUSER_MENU
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_SYSUSER_MENU" ON "GZVLG"."SYSUSER" ("MENU_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_INTERBUDGET
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_INTERBUDGET" ON "GZVLG"."INTERBUDGET" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CLAIMDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CLAIMDOC_DISPSTATUS" ON "GZVLG"."CLAIMDOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONSTRAINTS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONSTRAINTS" ON "GZVLG"."DBCONSTRAINT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GBGO_GOODSBAN_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GBGO_GOODSBAN_ID" ON "GZVLG"."GOODSBANGOODSOKPD" ("GOODSBAN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_PLAN2LEDGER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_PLAN2LEDGER" ON "GZVLG"."PLAN2LEDGER" ("PLAN2DOC_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_CONTRACTDOC_NI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_CONTRACTDOC_NI" ON "GZVLG"."CONTRACTDOC" (COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_STOREPLACE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_STOREPLACE" ON "GZVLG"."STOREPLACE" ("GOODSID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCRETENTION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCRETENTION" ON "GZVLG"."DOCRETENTION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CERETPENALTY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CERETPENALTY" ON "GZVLG"."CERETURNPENALTY" ("CONTRACTEXECDOC_ID", "PENALTYPOS", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_OFFERDOC_CMPORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_OFFERDOC_CMPORG_ID" ON "GZVLG"."OFFERDOC" ("CMPORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_NUMUSAGE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_NUMUSAGE" ON "GZVLG"."NUMUSAGE" ("NUMSEQUENCE_ID", "PERIOD_START", "NUM_VALUE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPVOTER_CMPCOMMEMBERPOSO
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPVOTER_CMPCOMMEMBERPOSO" ON "GZVLG"."CMPVOTERESULT" ("ORDER_ID", "CMPCOMMEMBERPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_OOSAPPLICATION_NUMBER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_OOSAPPLICATION_NUMBER" ON "GZVLG"."OOSAPPLICATION" ("JOURNALNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_PLACINGWAY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_PLACINGWAY" ON "GZVLG"."REQUESTDOC" ("PLACINGWAY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPWORKGROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPWORKGROUP" ON "GZVLG"."CMPWORKGROUP" ("ORDER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONCONTRACTOR
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONCONTRACTOR" ON "GZVLG"."CONCONTRACTOR" ("CONTRACT_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LEDGER_ORG_CONTRACTOR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LEDGER_ORG_CONTRACTOR" ON "GZVLG"."LEDGER" ("CONTRACTOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPPHASE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPPHASE" ON "GZVLG"."CMPPHASE" ("ORDER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCUMENTCLASS_MODULE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCUMENTCLASS_MODULE" ON "GZVLG"."DOCUMENTCLASS" ("CLIENTMODULE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PURCHASEMETHOD
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PURCHASEMETHOD" ON "GZVLG"."PURCHASEMETHOD" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_COMMISSION_ORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_COMMISSION_ORG" ON "GZVLG"."COMMISSION" ("ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_CURRENCY_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_CURRENCY_CODE" ON "GZVLG"."CURRENCY" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2DOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2DOC_DOCUMENT" ON "GZVLG"."PLAN2DOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_USSU
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_USSU" ON "GZVLG"."USERCERTSYSUSER" ("SYSUSER_ID", "USERCERT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_DBCONNECT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_DBCONNECT" ON "GZVLG"."DBCONNECT" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OFFERDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OFFERDOC" ON "GZVLG"."OFFERDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORGACCOU_KEEPERACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORGACCOU_KEEPERACC_ID" ON "GZVLG"."ORGACCOUNT" ("KEEPERACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRCARDDOC_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRCARDDOC_BUDGET" ON "GZVLG"."CONTRACTCARDDOC" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LEDGER_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LEDGER_BUDGET" ON "GZVLG"."LEDGER" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RESERVEDLINE_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RESERVEDLINE_DISPSTATUS" ON "GZVLG"."RESERVEDBUDGETLINE" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CAVILDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CAVILDOC_DISPSTATUS" ON "GZVLG"."CAVILDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONCONFIRMINGDOCS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONCONFIRMINGDOCS" ON "GZVLG"."CONCONFIRMINGDOCS" ("CONTRACT_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGPERSONAL
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGPERSONAL" ON "GZVLG"."ORGPERSONAL" ("ORG_ID", "PERSONAL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_DOCREP_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_DOCREP_NAME" ON "GZVLG"."DOCUMENTREPORTS" ("DISPSTATUS_ID", "NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OOSCONTRACTSUPPLIER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OOSCONTRACTSUPPLIER" ON "GZVLG"."OOSCONTRACTSUPPLIER" ("CONTRACT_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_USERORG
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_USERORG" ON "GZVLG"."USERORG" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RECOILDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RECOILDOC_DISPSTATUS" ON "GZVLG"."RECOILDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORGACCOU_EXECUTERACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORGACCOU_EXECUTERACC_ID" ON "GZVLG"."ORGACCOUNT" ("EXECUTERACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_NMSG_SENDER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_NMSG_SENDER" ON "GZVLG"."NOTIFYMSG" ("SENDER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORGETP_ETP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORGETP_ETP" ON "GZVLG"."ORGETP" ("ETP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPPLACE_CUSTOMER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPPLACE_CUSTOMER" ON "GZVLG"."CMPPLACE" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DATASOURCE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DATASOURCE" ON "GZVLG"."DATASOURCE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GOODSGROUP_OKPD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GOODSGROUP_OKPD" ON "GZVLG"."GOODSGROUP" ("OKPD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RBL_GRANTINVESTMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RBL_GRANTINVESTMENT" ON "GZVLG"."RESERVEDBUDGETLINE" ("GRANTINVESTMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFRGOODS_OKPD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFRGOODS_OKPD" ON "GZVLG"."OFRGOODS" ("OKPD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCCOMMENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCCOMMENT" ON "GZVLG"."DOCCOMMENT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_REPPROFILE_FORM_NAME
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_REPPROFILE_FORM_NAME" ON "GZVLG"."REPPROFILE" ("FORM_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_GROUPPROP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_GROUPPROP" ON "GZVLG"."GROUPPROP" ("GROUP_ID", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_CMPORGPOSTCOUNTR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_CMPORGPOSTCOUNTR" ON "GZVLG"."ORDERDOC" ("CMPORGPOSTCOUNTRY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P2ARRANGEMENT_CURRENCY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P2ARRANGEMENT_CURRENCY" ON "GZVLG"."PLAN2ARRANGEMENT" ("CURRENCY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_APPMODULE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_APPMODULE" ON "GZVLG"."APPMODULE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GOODSDOCDETAIL
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GOODSDOCDETAIL" ON "GZVLG"."GOODSGROUPDOCDETAIL" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ROLEREGISTER_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ROLEREGISTER_DOCUMENT" ON "GZVLG"."ROLEREGISTER" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPOOSMODIF_CMPPHASE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPOOSMODIF_CMPPHASE" ON "GZVLG"."CMPOOSMODIFICATION" ("ORDER_ID", "PHASEPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_APPOBJ_APPMODULE2
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_APPOBJ_APPMODULE2" ON "GZVLG"."APPMODULEDEPENDENCY" ("DEPENDID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSPRODUCT_UNIT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSPRODUCT_UNIT" ON "GZVLG"."PLAN2OOSPRODUCT" ("UNITNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2GOODS_GRANTINVESTMEN
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2GOODS_GRANTINVESTMEN" ON "GZVLG"."PLAN2GOODS" ("GRANTINVESTMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2LEDGER_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2LEDGER_PURCHASEMODE" ON "GZVLG"."PLAN2LEDGER" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_FCTGOODS_OKPD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_FCTGOODS_OKPD" ON "GZVLG"."FCTGOODS" ("OKPD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ROLEREF_REFNAME
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ROLEREF_REFNAME" ON "GZVLG"."ROLEREFCLASS" ("REF_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPVENDOR_ORGFORM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPVENDOR_ORGFORM" ON "GZVLG"."CMPVENDOR" ("PROPFORM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_NECESSITY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_NECESSITY" ON "GZVLG"."NECESSITY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ROLEREGISTER_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ROLEREGISTER_OPERTYPE" ON "GZVLG"."ROLEREGISTER" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPCRITE_LOTPOSORDER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPCRITE_LOTPOSORDER_ID" ON "GZVLG"."CMPCRITERION" ("ORDER_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SUPPORTCRYPTOLIB
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SUPPORTCRYPTOLIB" ON "GZVLG"."SUPPORTCRYPTOLIB" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LEDGER_INDUSTRYCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LEDGER_INDUSTRYCODE" ON "GZVLG"."LEDGER" ("INDUSTRYCODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORGACCOU_BANK_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORGACCOU_BANK_ID" ON "GZVLG"."ORGACCOUNT" ("BANK_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_PREFERENCEGROUPFEATURE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_PREFERENCEGROUPFEATURE" ON "GZVLG"."PREFERENCEGROUPFEATURE" ("PREFERENCEGROUP_ID", "PLACEMENTFEATURE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONTYPE" ON "GZVLG"."CONTYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFFERDOC_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFFERDOC_OPERTYPE" ON "GZVLG"."OFFERDOC" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_REPFORM
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_REPFORM" ON "GZVLG"."REPFORM" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GOODSOKDP_PARENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GOODSOKDP_PARENT" ON "GZVLG"."GOODSOKDP" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GOODSOKDPPREFCOUNTRY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GOODSOKDPPREFCOUNTRY" ON "GZVLG"."GOODSOKDPCOUNTRYPREF" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCDIGESTROLES_DOCACTION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCDIGESTROLES_DOCACTION" ON "GZVLG"."DOCDIGESTROLES" ("DOCACTION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_SUPPORTCRYPTOLIBPARAM
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_SUPPORTCRYPTOLIBPARAM" ON "GZVLG"."SUPPORTCRYPTOLIBPARAM" ("SUPPORTCRYPTOLIB_ID", "NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_PROHIBITION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_PROHIBITION" ON "GZVLG"."PLAN3PURCHASEDOC" ("PROHIBITIONSCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3GOODS_OKVED
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3GOODS_OKVED" ON "GZVLG"."PLAN3PURCHASEGOODS" ("OKVED_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CAVILDOC_CUSTOMER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CAVILDOC_CUSTOMER" ON "GZVLG"."CAVILDOC" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_SYSRIGHT_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_SYSRIGHT_NAME" ON "GZVLG"."SYSRIGHT" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CAVILDOC_CMPORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CAVILDOC_CMPORG" ON "GZVLG"."CAVILDOC" ("CMPORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLANDOC_NECESSITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLANDOC_NECESSITY" ON "GZVLG"."PLANDOC" ("NECESSITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSOKVED_POSITION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSOKVED_POSITION" ON "GZVLG"."PLAN2OOSOKVED" ("PLAN2OOSPOSITION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_MSG_RECEIVER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_MSG_RECEIVER" ON "GZVLG"."MSG" ("RECEIVER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONSOLIDDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONSOLIDDOC_DISPSTATUS" ON "GZVLG"."CONSOLIDDOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_DOCUMENT_DOCUMENTCLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_DOCUMENT_DOCUMENTCLASS" ON "GZVLG"."DOCUMENT" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONTEMPDOC_DATENUM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONTEMPDOC_DATENUM" ON "GZVLG"."CONTRACTTEMPLATEDOC" ("DOC_DATE", "DOC_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_PLANDOC_RECIPIENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_PLANDOC_RECIPIENT_ID" ON "GZVLG"."PLANDOC" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LEDGER_PAYCONDITION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LEDGER_PAYCONDITION" ON "GZVLG"."LEDGER" ("PAYCONDITIONCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_DOCFLAG_DOC_FLAGTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_DOCFLAG_DOC_FLAGTYPE" ON "GZVLG"."DOCFLAG" ("DOCUMENT_ID", "DOCFLAGTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RPL_CLIENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RPL_CLIENT" ON "GZVLG"."RPL" ("CLIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CETERMLINE_TERMREASON
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CETERMLINE_TERMREASON" ON "GZVLG"."CETERMINATIONLINE" ("TERMINATIONREASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LIABILITYEXPENSE_CREDENTI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LIABILITYEXPENSE_CREDENTI" ON "GZVLG"."LIABILITYEXPENSE" ("CREDENTIAL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_DOCSELEC_COMPETITORPOSORD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_DOCSELEC_COMPETITORPOSORD" ON "GZVLG"."DOCSELECT" ("ORDER_ID", "COMPETITORPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPVENDO_VENDOR_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPVENDO_VENDOR_ID" ON "GZVLG"."CMPVENDOR" ("VENDOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_NMSGRULE_DOCUMENTCLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_NMSGRULE_DOCUMENTCLASS" ON "GZVLG"."NOTIFYMSGRULE" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PURCHCARRY_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PURCHCARRY_PURCHASEMODE" ON "GZVLG"."PURCHASECARRY" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQBL_GRANTINVESTMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQBL_GRANTINVESTMENT" ON "GZVLG"."RQBUDGETLINE" ("GRANTINVESTMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ESCHECKRULE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ESCHECKRULE" ON "GZVLG"."ESCHECKRULE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_GOODSOKPD_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_GOODSOKPD_CODE" ON "GZVLG"."GOODSOKPD" ("CODE", "CLASSIFIER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_CONTRACTDOC_DNI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_CONTRACTDOC_DNI" ON "GZVLG"."CONTRACTDOC" ("DOCUMENTCLASS_ID", COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_CONTEMPDOC_NI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_CONTEMPDOC_NI" ON "GZVLG"."CONTRACTTEMPLATEDOC" (COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORGUNFAIR_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORGUNFAIR_PURCHASEMODE" ON "GZVLG"."ORGUNFAIR" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFFERDOC_ETP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFFERDOC_ETP" ON "GZVLG"."OFFERDOC" ("ETP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_METACONSTRAINT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_METACONSTRAINT" ON "GZVLG"."METACONSTRAINT" ("METAOBJECT_ID", "NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFRDECREASON_LOT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFRDECREASON_LOT" ON "GZVLG"."OFRDECREASON" ("OFFER_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FACTDOCTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FACTDOCTYPE" ON "GZVLG"."FACTDOCTYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CLAIMDOC_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CLAIMDOC_BUDGET" ON "GZVLG"."CLAIMDOC" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DECREASON_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DECREASON_BUDGET" ON "GZVLG"."DECREASON" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_MENUITEM_MENU
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_MENUITEM_MENU" ON "GZVLG"."MENUITEM" ("MENU_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DIGEST_FGROUP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DIGEST_FGROUP" ON "GZVLG"."DIGEST" ("FGROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_NOTICEDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_NOTICEDOC_DISPSTATUS" ON "GZVLG"."NOTICEDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_OOSPROTOCOL_TYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_OOSPROTOCOL_TYPE" ON "GZVLG"."OOSPROTOCOL" ("NOTIFICATIONNUMBER", "PROTOCOLTYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LIABILITYEXPENSE_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LIABILITYEXPENSE_BUDGET" ON "GZVLG"."LIABILITYEXPENSE" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2LEDGER_IDENTIFICCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2LEDGER_IDENTIFICCODE" ON "GZVLG"."PLAN2LEDGER" ("IDENTIFICCODECACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_APPOBJ
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_APPOBJ" ON "GZVLG"."APPOBJ" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2LEDGER_DESCRIPTION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2LEDGER_DESCRIPTION" ON "GZVLG"."PLAN2LEDGER" ("DESCRIPTIONCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GPM_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GPM_PURCHASEMODE" ON "GZVLG"."GOODSGROUPPURCHASEMODE" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_NUMSEQUENCE_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_NUMSEQUENCE_BUDGET" ON "GZVLG"."NUMSEQUENCE" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_APPOBJPROP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_APPOBJPROP" ON "GZVLG"."APPOBJPROP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCSELECT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCSELECT" ON "GZVLG"."DOCSELECT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_CONPERSACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_CONPERSACC_ID" ON "GZVLG"."REQUESTDOC" ("GUARCONTRPERSONALACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_REPDOCUMENT_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_REPDOCUMENT_NAME" ON "GZVLG"."REPDOCUMENT" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_TCPM_TENDERCRITERION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_TCPM_TENDERCRITERION" ON "GZVLG"."TENDERCRITERIONPM" ("TENDERCRITERION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONGOODS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONGOODS" ON "GZVLG"."CONGOODS" ("CONTRACT_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REQUESTDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REQUESTDOC" ON "GZVLG"."REQUESTDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OKTMO
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OKTMO" ON "GZVLG"."OKTMO" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RPLTABLINK
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RPLTABLINK" ON "GZVLG"."RPLTABLINK" ("RPLTABLE_ID", "FIELD_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ATTACHED_DOCUMENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ATTACHED_DOCUMENT_ID" ON "GZVLG"."ATTACHEDPLANDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_P3SHED
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_P3SHED" ON "GZVLG"."PLAN3PURCHASELINESHEDULE" ("PLAN3PURCHASEDOC_ID", "PLAN3PURCHASELINEPOS", "FINYEAR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_KLADRSTREET_CODE2
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_KLADRSTREET_CODE2" ON "GZVLG"."KLADRSTREET" ("CODE2") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCWEBLINK
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCWEBLINK" ON "GZVLG"."DOCWEBLINK" ("DOCUMENT_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3GO_OKVED
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3GO_OKVED" ON "GZVLG"."PLAN3PURCHASEGOODSOKVED" ("OKVED_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_MAILRECEIVERGROUP_RECEIVER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_MAILRECEIVERGROUP_RECEIVER" ON "GZVLG"."MAILRECEIVERGROUP_RECEIVER" ("MAILRECEIVERGROUP_ID", "SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2DOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2DOC_DISPSTATUS" ON "GZVLG"."PLAN2DOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_COMMISSION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_COMMISSION" ON "GZVLG"."ORDERDOC" ("COMMISSION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN3DOC_RESPORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN3DOC_RESPORG" ON "GZVLG"."PLAN3DOC" ("RESPORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_UNIT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_UNIT" ON "GZVLG"."UNIT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCEVERRLOG
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCEVERRLOG" ON "GZVLG"."DOCEVERRLOG" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_SYSUSER_DOMEN
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_SYSUSER_DOMEN" ON "GZVLG"."SYSUSER" ("DOMEN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORGETP_SYSUSER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORGETP_SYSUSER" ON "GZVLG"."ORGETP" ("SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORDERSUM_ORDER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORDERSUM_ORDER_ID" ON "GZVLG"."ORDERSUMMARY" ("ORDER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_OFFERDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_OFFERDOC_DISPSTATUS" ON "GZVLG"."OFFERDOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_USERSESSION_SYSUSER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_USERSESSION_SYSUSER" ON "GZVLG"."USERSESSION" ("SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_P2ARRANGEMENT_CMPORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_P2ARRANGEMENT_CMPORG" ON "GZVLG"."PLAN2ARRANGEMENT" ("CMPORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_COMPLAINTDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_COMPLAINTDOC_DISPSTATUS" ON "GZVLG"."COMPLAINTDOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONTRACTEXECDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONTRACTEXECDOC_DISPSTATUS" ON "GZVLG"."CONTRACTEXECDOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_DOCUMENT_INSTANCE_LINK
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_DOCUMENT_INSTANCE_LINK" ON "GZVLG"."DOCUMENT" ("INSTANCE_LINK", "DOCUMENTCLASS_ID", "BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FGROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FGROUP" ON "GZVLG"."FGROUP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INDUSTRYCODE_PARENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INDUSTRYCODE_PARENT" ON "GZVLG"."INDUSTRYCODE" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_FACTDOC_EXPORT_PARENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_FACTDOC_EXPORT_PARENT" ON "GZVLG"."FACTDOC" ("EXPORT_PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2LEDGER_CMPORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2LEDGER_CMPORG" ON "GZVLG"."PLAN2LEDGER" ("CMPORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_RECIPIENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_RECIPIENT" ON "GZVLG"."ORDERDOC" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_TYPECRIT_TENDERCRITERION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_TYPECRIT_TENDERCRITERION" ON "GZVLG"."TYPECRIT" ("TENDERCRITERION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORG_SERVEORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORG_SERVEORG_ID" ON "GZVLG"."ORG" ("SERVEORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_REQUESTD_CUSTOMER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_REQUESTD_CUSTOMER_ID" ON "GZVLG"."REQUESTDOC" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_DOCUMENT_DIGEST
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_DOCUMENT_DIGEST" ON "GZVLG"."DIGEST" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DECREASON_DOCUMENTCLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DECREASON_DOCUMENTCLASS" ON "GZVLG"."DECREASON" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_COMMEMBER_PERSONAL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_COMMEMBER_PERSONAL" ON "GZVLG"."COMMEMBER" ("COMMEMBER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CERTREQ_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CERTREQ_DISPSTATUS" ON "GZVLG"."CERTREQUEST" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CEPENALTY_DOCUMENTCLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CEPENALTY_DOCUMENTCLASS" ON "GZVLG"."CEPENALTY" ("CLAIM_DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_PROPFORM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_PROPFORM" ON "GZVLG"."CONTRACTDOC" ("CONPROPFORM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2DOC_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2DOC_OPERTYPE" ON "GZVLG"."PLAN2DOC" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_CERTREQUESTOID
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_CERTREQUESTOID" ON "GZVLG"."CERTREQUESTOID" ("CERTREQUEST_ID", "OIDREF_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_RECOILDOC_DOC_DATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_RECOILDOC_DOC_DATE" ON "GZVLG"."RECOILDOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_LIABILITYGROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_LIABILITYGROUP" ON "GZVLG"."LIABILITYGROUP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN3DOC_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN3DOC_BUDGET" ON "GZVLG"."PLAN3DOC" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ROLEREGISTER_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ROLEREGISTER_DISPSTATUS" ON "GZVLG"."ROLEREGISTER" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFFERDOC_ACC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFFERDOC_ACC" ON "GZVLG"."OFFERDOC" ("VENDORACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PREFERENCEGROUPFEATURE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PREFERENCEGROUPFEATURE" ON "GZVLG"."PREFERENCEGROUPFEATURE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CURHISTORY_CURRENCY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CURHISTORY_CURRENCY" ON "GZVLG"."CURHISTORY" ("CURRENCY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLAN3DOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLAN3DOC" ON "GZVLG"."PLAN3DOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RECOILDOC_CMPORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RECOILDOC_CMPORG" ON "GZVLG"."RECOILDOC" ("CMPORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_REFCLASS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_REFCLASS" ON "GZVLG"."REFERENCECLASS" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_RPLRULE_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_RPLRULE_NAME" ON "GZVLG"."RPLRULE" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CEPENALTY_DOC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CEPENALTY_DOC_ID" ON "GZVLG"."CEPENALTY" ("DOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGOOS223FZUSER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGOOS223FZUSER" ON "GZVLG"."ORGOOS223FZUSER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_USERSESSIONACESS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_USERSESSIONACESS" ON "GZVLG"."USERSESSIONACCESS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GRANTINVESTMENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GRANTINVESTMENT" ON "GZVLG"."GRANTINVESTMENT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_ROLEREGISTER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_ROLEREGISTER" ON "GZVLG"."ROLEREGISTER" ("USER_ID", "GRANTEDROLE_ID", "GRANTDATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPCUSTOMER_FACTCOUNTRY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPCUSTOMER_FACTCOUNTRY" ON "GZVLG"."CMPCUSTOMER" ("CUSTOMERFACTCOUNTRY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFFERDOC_VENDOREXECUTERAC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFFERDOC_VENDOREXECUTERAC" ON "GZVLG"."OFFERDOC" ("VENDOREXECUTERACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_GOODSOKDP_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_GOODSOKDP_CODE" ON "GZVLG"."GOODSOKDP" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P2ARRANGEMENT_PERIODICITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P2ARRANGEMENT_PERIODICITY" ON "GZVLG"."PLAN2ARRANGEMENT" ("PERIODICITYCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_INSTITUTIONLINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_INSTITUTIONLINE" ON "GZVLG"."INSTITUTIONLINE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_ORDERDOC_DI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_ORDERDOC_DI" ON "GZVLG"."ORDERDOC" (COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_CURRENCY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_CURRENCY" ON "GZVLG"."PLAN3PURCHASEDOC" ("CURRENCY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_RQDOCCHI_DOCUMENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_RQDOCCHI_DOCUMENT_ID" ON "GZVLG"."RQDOCCHILD" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORG_PARENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORG_PARENT_ID" ON "GZVLG"."ORG" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCJOURNAL
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCJOURNAL" ON "GZVLG"."DOCJOURNAL" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DODIGESTULE_PARDISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DODIGESTULE_PARDISPSTATUS" ON "GZVLG"."DOCDIGESTRULE" ("PARDISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLAN2OOSEXTNUMBER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLAN2OOSEXTNUMBER" ON "GZVLG"."PLAN2OOSEXTNUMBER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQQUALREQ_REQTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQQUALREQ_REQTYPE" ON "GZVLG"."RQQUALREQ" ("REQUIREMENTTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PROCUREMENT_PERSONAL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PROCUREMENT_PERSONAL" ON "GZVLG"."PROCUREMENT" ("RESPPERSONAL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_ORGOOS223FZUSER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_ORGOOS223FZUSER" ON "GZVLG"."ORGOOS223FZUSER" ("ORG_ID", "SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONCONTRACTOR_EXECUTERACC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONCONTRACTOR_EXECUTERACC" ON "GZVLG"."CONCONTRACTOR" ("ORGEXECUTERACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_CODETYPE_DISPLAY_ORDER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_CODETYPE_DISPLAY_ORDER" ON "GZVLG"."CODETYPE" ("BUDGET_ID", "DISPLAY_ORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2DOC_OWNER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2DOC_OWNER" ON "GZVLG"."PLAN2DOC" ("OWNER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLANDOC_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLANDOC_BUDGET" ON "GZVLG"."PLANDOC" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CRLFILE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CRLFILE" ON "GZVLG"."CRLFILE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_TENDERLINECOMM
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_TENDERLINECOMM" ON "GZVLG"."TENDERLINECOMM" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_OFRCRITE_LOTPOSOFFER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_OFRCRITE_LOTPOSOFFER_ID" ON "GZVLG"."OFRCRITERIONVAL" ("OFFER_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CUSTOMERLOT_CMPLOT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CUSTOMERLOT_CMPLOT" ON "GZVLG"."CMPCUSTOMERLOT" ("ORDER_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P2ARRANGEMENT_EXPLANATION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P2ARRANGEMENT_EXPLANATION" ON "GZVLG"."PLAN2ARRANGEMENT" ("EXPLANATIONCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_RECOILDOC_DATENUM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_RECOILDOC_DATENUM" ON "GZVLG"."RECOILDOC" ("DOC_DATE", "DOC_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CUSTOMERLOT_APPBANK
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CUSTOMERLOT_APPBANK" ON "GZVLG"."CMPCUSTOMERLOT" ("GUARAPPBIC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLAN2OOSPOSITION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLAN2OOSPOSITION" ON "GZVLG"."PLAN2OOSPOSITION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DIGESTSIGN_USERROLE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DIGESTSIGN_USERROLE" ON "GZVLG"."DIGESTSIGN" ("USERROLE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLANDOC_PLANYEAR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLANDOC_PLANYEAR" ON "GZVLG"."PLANDOC" ("PLANYEAR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PURCHASEMETHOD_ORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PURCHASEMETHOD_ORG" ON "GZVLG"."PURCHASEMETHOD" ("CREATORORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_OFRQUALR_LOTPOSOFFER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_OFRQUALR_LOTPOSOFFER_ID" ON "GZVLG"."OFRQUALREQVAL" ("OFFER_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RQLOT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RQLOT" ON "GZVLG"."RQLOT" ("REQUEST_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2LEDGER_INDUSTRYCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2LEDGER_INDUSTRYCODE" ON "GZVLG"."PLAN2LEDGER" ("INDUSTRYCODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RQOPTIMIZEDPRICE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RQOPTIMIZEDPRICE" ON "GZVLG"."RQOPTIMIZEDPRICE" ("REQUEST_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_KLADRSTREET_CODE5
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_KLADRSTREET_CODE5" ON "GZVLG"."KLADRSTREET" ("CODE5") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_REQUESTDOC_DATENUM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_REQUESTDOC_DATENUM" ON "GZVLG"."REQUESTDOC" ("DOC_DATE", "DOC_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PRODUCTS_NOTIFICATIONLOT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PRODUCTS_NOTIFICATIONLOT" ON "GZVLG"."OOSPRODUCTS" ("LOT_ID", "NOTIFICATION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_PLGOODS_ORGID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_PLGOODS_ORGID" ON "GZVLG"."PLGOODS" ("ORGID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFRORGSTATUS_ORGSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFRORGSTATUS_ORGSTATUS" ON "GZVLG"."OFRORGSTATUS" ("ORGSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_PLANREQU_DOCUMENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_PLANREQU_DOCUMENT_ID" ON "GZVLG"."PLANREQUEST" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CAVILDOC_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CAVILDOC_BUDGET" ON "GZVLG"."CAVILDOC" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REPFRAGMENT_REPSOURCE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REPFRAGMENT_REPSOURCE" ON "GZVLG"."REPFRAGMENT" ("REPSOURCE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_DOCSELEC_DOCREQPOSORDER_I
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_DOCSELEC_DOCREQPOSORDER_I" ON "GZVLG"."DOCSELECT" ("ORDER_ID", "DOCREQPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PFPM_PLACEMENTFEATURE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PFPM_PLACEMENTFEATURE" ON "GZVLG"."PLACEMENTFEATUREPM" ("PLACEMENTFEATURE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_ORGATTACH
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_ORGATTACH" ON "GZVLG"."ORGATTACH" ("ORG_ID", "ATTACH_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCDIGESTRULE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCDIGESTRULE" ON "GZVLG"."DOCDIGESTRULE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DESC_PLANDESC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DESC_PLANDESC" ON "GZVLG"."PURCHASEPLAN" ("DESC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_KLADR_ACTUAL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_KLADR_ACTUAL" ON "GZVLG"."KLADR" ("ACTUAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPCUSTOMER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPCUSTOMER" ON "GZVLG"."CMPCUSTOMER" ("ORDER_ID", "CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CRLPOINT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CRLPOINT" ON "GZVLG"."CRLPOINT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPPLACE_INDUSTRYCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPPLACE_INDUSTRYCODE" ON "GZVLG"."CMPPLACE" ("INDUSTRYCODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCFLAG_DOCFLAGTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCFLAG_DOCFLAGTYPE" ON "GZVLG"."DOCFLAG" ("DOCFLAGTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_OOSCUSTOMER_REGNUM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_OOSCUSTOMER_REGNUM" ON "GZVLG"."OOSCUSTOMERREQUIREMENT" ("CUSTOMERREGNUM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RQGOODS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RQGOODS" ON "GZVLG"."RQGOODS" ("REQUEST_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ROLEACTION_DOCUMENTCLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ROLEACTION_DOCUMENTCLASS" ON "GZVLG"."ROLEEVENT" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLNBUDGETLINE_FINSRC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLNBUDGETLINE_FINSRC" ON "GZVLG"."PLNBUDGETLINE" ("FINSRC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CONPLACE_RECIPIENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CONPLACE_RECIPIENT_ID" ON "GZVLG"."CONPLACE" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_OFFERDOC_DI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_OFFERDOC_DI" ON "GZVLG"."OFFERDOC" (COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LIABILITY_LINES_ORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LIABILITY_LINES_ORG" ON "GZVLG"."LIABILITYEXPENSE_DOCLINES" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DIGEST
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DIGEST" ON "GZVLG"."DIGEST" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CAVILDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CAVILDOC_DOCUMENT" ON "GZVLG"."CAVILDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGHEARING
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGHEARING" ON "GZVLG"."ORGHEARING" ("ORG_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LEDGER_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LEDGER_PURCHASEMODE" ON "GZVLG"."LEDGER" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCEVENT_PROCTREE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCEVENT_PROCTREE" ON "GZVLG"."DOCEVENT" ("PROCTREE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_DESCGROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_DESCGROUP" ON "GZVLG"."DESCGROUP" ("CAPTION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REPFRAGMENTCHILD_FRAGMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REPFRAGMENTCHILD_FRAGMENT" ON "GZVLG"."REPFRAGMENTCHILD" ("REPFRAGMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_CONCOUNTRY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_CONCOUNTRY" ON "GZVLG"."CONTRACTDOC" ("CONCOUNTRY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INV_PROPFORMID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INV_PROPFORMID" ON "GZVLG"."INVOICEDOC" ("CONPROPFORM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_NMSG
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_NMSG" ON "GZVLG"."NOTIFYMSG" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ALTUNIT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ALTUNIT" ON "GZVLG"."ALTUNITFACTOR" ("UNIT_ID", "ALTGOODSGROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPCOMME_PHASEPOSORDER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPCOMME_PHASEPOSORDER_ID" ON "GZVLG"."CMPCOMMEMBER" ("ORDER_ID", "PHASEPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_FACTDOC_VENDORCOUNTRY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_FACTDOC_VENDORCOUNTRY" ON "GZVLG"."FACTDOC" ("VENDORCOUNTRY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONCONTRACTOR_PROPFORMID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONCONTRACTOR_PROPFORMID" ON "GZVLG"."CONCONTRACTOR" ("ORGPROPFORM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_KLADRSTREET
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_KLADRSTREET" ON "GZVLG"."KLADRSTREET" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_PACKTYPE_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_PACKTYPE_NAME" ON "GZVLG"."PACKTYPE" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN3DOC_FACTTERRITORY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN3DOC_FACTTERRITORY" ON "GZVLG"."PLAN3DOC" ("CUSTOMERFACTTERRITORY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REFINANCINGRATE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REFINANCINGRATE" ON "GZVLG"."REFINANCINGRATE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3GOODS_PURCHASEPLANLINE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3GOODS_PURCHASEPLANLINE" ON "GZVLG"."PLAN3PURCHASEGOODS" ("PLAN3PURCHASEDOC_ID", "PLAN3PURCHASELINEPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCUMENTCLASS_SERVERPROC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCUMENTCLASS_SERVERPROC" ON "GZVLG"."DOCUMENTCLASS" ("SERVERPROCESSOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSPOSITION_PURCHMOD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSPOSITION_PURCHMOD" ON "GZVLG"."PLAN2OOSPOSITION" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN2DOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN2DOC_DISPSTATUS" ON "GZVLG"."PLAN2DOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OOSORGROLES
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OOSORGROLES" ON "GZVLG"."OOSORGROLES" ("ORG_ID", "ROLECODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CUSTOMERLOT_APPSETTACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CUSTOMERLOT_APPSETTACC_ID" ON "GZVLG"."CMPCUSTOMERLOT" ("GUARAPPSETTLEMENTACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GROUPPROP_PROPTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GROUPPROP_PROPTYPE" ON "GZVLG"."GROUPPROP" ("PROPTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GBGO_GOODSOKPD_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GBGO_GOODSOKPD_ID" ON "GZVLG"."GOODSBANGOODSOKPD" ("GOODSOKPD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_LIABILITYCREDENTIAL
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_LIABILITYCREDENTIAL" ON "GZVLG"."LIABILITYCREDENTIAL" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2ARRANGEMENT_LOTNUMBE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2ARRANGEMENT_LOTNUMBE" ON "GZVLG"."PLAN2ARRANGEMENT" ("LOTNUMBERCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_PLANDOC_DI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_PLANDOC_DI" ON "GZVLG"."PLANDOC" (COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_NMSGRULE_SENDER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_NMSGRULE_SENDER" ON "GZVLG"."NOTIFYMSGRULE" ("SENDER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OOSORGROLE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OOSORGROLE" ON "GZVLG"."OOSORGROLE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLNGOODS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLNGOODS" ON "GZVLG"."PLNGOODS" ("PLANDOC_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2GOODS_OKPD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2GOODS_OKPD" ON "GZVLG"."PLAN2GOODS" ("OKPD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_TENDERCRITERIONCHILD_CHIL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_TENDERCRITERIONCHILD_CHIL" ON "GZVLG"."TENDERCRITERIONCHILD" ("CHILD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_TENDER_TENDERCRITERION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_TENDER_TENDERCRITERION" ON "GZVLG"."TENDER" ("TENDERCRITERION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_CONTEMPDOC_DNI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_CONTEMPDOC_DNI" ON "GZVLG"."CONTRACTTEMPLATEDOC" ("DOCUMENTCLASS_ID", COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RQSUPPLYSHEDULE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RQSUPPLYSHEDULE" ON "GZVLG"."RQSUPPLYSHEDULE" ("REQUEST_ID", "GOODSPOS", "BUDGETLINEPOS", "SUPPLYDATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCREQ_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCREQ_PURCHASEMODE" ON "GZVLG"."DOCREQ" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_DOCCLASS_DISPSTATUS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_DOCCLASS_DISPSTATUS" ON "GZVLG"."DOCCLASS_DISPSTATUS" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID", "PARDISPSTATUS_ID", "PARALLEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_ETPATTACH
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_ETPATTACH" ON "GZVLG"."ETPATTACH" ("ETPKEY", "ETP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN2GOODS_CODE8
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN2GOODS_CODE8" ON "GZVLG"."PLAN2GOODS" ("CODE8") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_TENDERLINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_TENDERLINE" ON "GZVLG"."TENDERLINE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_INVBUDGETLINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_INVBUDGETLINE" ON "GZVLG"."INVBUDGETLINE" ("INVOICE_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REPFORM
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REPFORM" ON "GZVLG"."REPFORM" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTREXECDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTREXECDOC_DISPSTATUS" ON "GZVLG"."CONTRACTEXECDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RQDOCCHILD
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RQDOCCHILD" ON "GZVLG"."RQDOCCHILD" ("REQUEST_ID", "DOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCACTION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCACTION" ON "GZVLG"."DOCACTION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_BUDGETLINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_BUDGETLINE" ON "GZVLG"."BUDGETLINE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CLIOBJCOMM_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CLIOBJCOMM_BUDGET" ON "GZVLG"."CLIENTOBJECTCOMMENTS" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_USESCRYPTOLIB
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_USESCRYPTOLIB" ON "GZVLG"."USESCRYPTOLIB" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CLAIMDOC_CUSTOMER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CLAIMDOC_CUSTOMER" ON "GZVLG"."CLAIMDOC" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLACEMENTFEATURE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLACEMENTFEATURE" ON "GZVLG"."PLACEMENTFEATURE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DEVFACTFOUNDATION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DEVFACTFOUNDATION" ON "GZVLG"."DEVIATIONFACTFOUNDATION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCFLAGTYPE_CATEGORY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCFLAGTYPE_CATEGORY" ON "GZVLG"."DOCFLAGTYPE" ("CATEGORY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_DIGESTSIGN_DOCATTACHEX
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_DIGESTSIGN_DOCATTACHEX" ON "GZVLG"."DIGESTSIGN" ("DOCATTACHEX_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PANELITEM_CLIENTOBJECT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PANELITEM_CLIENTOBJECT" ON "GZVLG"."PANELITEM" ("CLIENTOBJECT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQLOT_APPPERSACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQLOT_APPPERSACC_ID" ON "GZVLG"."RQLOT" ("GUARAPPPERSONALACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RQCONDEALRESP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RQCONDEALRESP" ON "GZVLG"."RQCONDEALRESP" ("REQUEST_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_RESERVED_RECIPIENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_RESERVED_RECIPIENT_ID" ON "GZVLG"."RESERVEDBUDGETLINE" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORGOOS223FZUSER_SYSUSER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORGOOS223FZUSER_SYSUSER" ON "GZVLG"."ORGOOS223FZUSER" ("SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RECOILDOC_CUSTOMER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RECOILDOC_CUSTOMER" ON "GZVLG"."RECOILDOC" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_FUNUNIT_FUNCAT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_FUNUNIT_FUNCAT" ON "GZVLG"."FUNUNIT" ("FUNCAT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ESTIMATE_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ESTIMATE_BUDGET" ON "GZVLG"."ESTIMATE" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPPHASE_COMMISSION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPPHASE_COMMISSION" ON "GZVLG"."CMPPHASE" ("COMMISSION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORGACCOUNT_ORGACCTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORGACCOUNT_ORGACCTYPE" ON "GZVLG"."ORGACCOUNT" ("ORGACCTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_FACTDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_FACTDOC_DISPSTATUS" ON "GZVLG"."FACTDOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CONLOT_CONTRACT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CONLOT_CONTRACT_ID" ON "GZVLG"."CONLOT" ("CONTRACT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_NOTICEDOC_DI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_NOTICEDOC_DI" ON "GZVLG"."NOTICEDOC" (COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORGROLES_ORGROLE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORGROLES_ORGROLE" ON "GZVLG"."ORGROLES" ("ORGROLE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OOSPROTOCOL
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OOSPROTOCOL" ON "GZVLG"."OOSPROTOCOL" ("NOTIFICATIONNUMBER", "PROTOCOLNUMBER", "VERSIONNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTEMPDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTEMPDOC_DISPSTATUS" ON "GZVLG"."CONTRACTTEMPLATEDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN3DOC_ORGFORM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN3DOC_ORGFORM" ON "GZVLG"."PLAN3DOC" ("CUSTOMERPROPFORM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_CMPORGPOSTCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_CMPORGPOSTCODE" ON "GZVLG"."ORDERDOC" ("CMPORGPOSTCOUNTRY_ID", "CMPORGPOSTTERRITORYCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_GOODSGROUP_PARENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_GOODSGROUP_PARENT_ID" ON "GZVLG"."GOODSGROUP" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ROLEBUDGET_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ROLEBUDGET_BUDGET" ON "GZVLG"."ROLEBUDGET" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_OFRPLACE_RECIPIENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_OFRPLACE_RECIPIENT_ID" ON "GZVLG"."OFRPLACE" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_DOCUMENT_PARDISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_DOCUMENT_PARDISPSTATUS" ON "GZVLG"."DOCUMENT" ("DOCUMENTCLASS_ID", "PARDISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORDERSUMMARY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORDERSUMMARY" ON "GZVLG"."ORDERSUMMARY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONBUDGETLINE_FINSRC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONBUDGETLINE_FINSRC" ON "GZVLG"."CONBUDGETLINE" ("FINSRC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P2ARRANGEMENT_PROHIBITION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P2ARRANGEMENT_PROHIBITION" ON "GZVLG"."PLAN2ARRANGEMENT" ("PROHIBITIONSCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_TERTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_TERTYPE" ON "GZVLG"."TERTYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_MAILATTACH
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_MAILATTACH" ON "GZVLG"."MAILATTACH" ("MAIL_ID", "ATTACH_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQLOT_CONSETTACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQLOT_CONSETTACC_ID" ON "GZVLG"."RQLOT" ("GUARCONTRSETTLEMENTACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLAN2CHANGEREASON
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLAN2CHANGEREASON" ON "GZVLG"."PLAN2CHANGEREASON" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_NUMGENERATOR
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_NUMGENERATOR" ON "GZVLG"."NUMGENERATOR" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSPOS_PURCHMETHOD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSPOS_PURCHMETHOD" ON "GZVLG"."PLAN2OOSPOSITION" ("PURCHASEMETHOD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_P3PURCHASEDOC_PLANYEAR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_P3PURCHASEDOC_PLANYEAR" ON "GZVLG"."PLAN3PURCHASEDOC" ("PLANYEAR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORDERSUM_CUSTOMER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORDERSUM_CUSTOMER_ID" ON "GZVLG"."ORDERSUMMARY" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_NUMPREFIX
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_NUMPREFIX" ON "GZVLG"."NUMPREFIX" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_CLAIMDOC_DI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_CLAIMDOC_DI" ON "GZVLG"."CLAIMDOC" (COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_APPBANK
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_APPBANK" ON "GZVLG"."REQUESTDOC" ("GUARAPPBIC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_NTFYMSGRLE_RCVR_PERSON
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_NTFYMSGRLE_RCVR_PERSON" ON "GZVLG"."NOTIFYMSGRULE_RECEIVER" ("PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2GOODS_OKDP_CODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2GOODS_OKDP_CODE" ON "GZVLG"."PLAN2GOODS" ("OKDP_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONBL_INDUSTRYCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONBL_INDUSTRYCODE" ON "GZVLG"."CONBUDGETLINE" ("INDUSTRYCODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFFERDOC_VENDORPOSTCOUNTR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFFERDOC_VENDORPOSTCOUNTR" ON "GZVLG"."OFFERDOC" ("VENDORPOSTCOUNTRY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPCONDEALRESP_PERSONAL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPCONDEALRESP_PERSONAL" ON "GZVLG"."CMPCONDEALRESP" ("PERSONAL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FGROUPATTACH
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FGROUPATTACH" ON "GZVLG"."FGROUPATTACH" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPLOT_CONTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPLOT_CONTYPE" ON "GZVLG"."CMPLOT" ("CONTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCFLAGTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCFLAGTYPE" ON "GZVLG"."DOCFLAGTYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONPAYFACT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONPAYFACT" ON "GZVLG"."CONPAYFACT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORDERDOC_CMPORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORDERDOC_CMPORG_ID" ON "GZVLG"."ORDERDOC" ("CMPORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OLAPQUERY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OLAPQUERY" ON "GZVLG"."OLAPQUERY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_FACTDOC_DNI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_FACTDOC_DNI" ON "GZVLG"."FACTDOC" ("DOCUMENTCLASS_ID", COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_RQSUPPLY_BUDGETLINEPOSREQ
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_RQSUPPLY_BUDGETLINEPOSREQ" ON "GZVLG"."RQSUPPLYSHEDULE" ("REQUEST_ID", "BUDGETLINEPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_PURCHASEMETHOD_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_PURCHASEMETHOD_CODE" ON "GZVLG"."PURCHASEMETHOD" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2LEDGER_GRANTINVESTME
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2LEDGER_GRANTINVESTME" ON "GZVLG"."PLAN2LEDGER" ("GRANTINVESTMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CONBUDGE_RECIPIENTACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CONBUDGE_RECIPIENTACC_ID" ON "GZVLG"."CONBUDGETLINE" ("RECIPIENTACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GOODSOKDPPURCHASEMODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GOODSOKDPPURCHASEMODE" ON "GZVLG"."GOODSOKDPPURCHASEMODE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CONTRACT_ORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CONTRACT_ORG_ID" ON "GZVLG"."CONTRACTOR" ("ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_TYPEREQ_REQTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_TYPEREQ_REQTYPE" ON "GZVLG"."TYPEREQ" ("REQUIREMENTTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SYSUSEREXT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SYSUSEREXT" ON "GZVLG"."SYSUSEREXT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RECOILLINES_OKDP_CODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RECOILLINES_OKDP_CODE" ON "GZVLG"."RECOILLINES" ("OKDP_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_OOSCONTRACT_REGNUM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_OOSCONTRACT_REGNUM" ON "GZVLG"."OOSCONTRACT" ("REGNUM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_KLADRSTREET_CODE4
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_KLADRSTREET_CODE4" ON "GZVLG"."KLADRSTREET" ("CODE4") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONORGSTATUS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONORGSTATUS" ON "GZVLG"."CONORGSTATUS" ("CONTRACT_ID", "ORGSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_SEL_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_SEL_DISPSTATUS" ON "GZVLG"."SIGNEXPORTLOG" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_DAY_VERSION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_DAY_VERSION" ON "GZVLG"."DAYVERSION" ("DAY_DATE", "DAY_VERSION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_APPOBJPROPS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_APPOBJPROPS" ON "GZVLG"."APPOBJPROP" ("APPOBJID", "NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DDS_OIDREF
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DDS_OIDREF" ON "GZVLG"."DOCDIGESTRULE" ("OIDREF_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_OOSORGROLE_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_OOSORGROLE_CODE" ON "GZVLG"."OOSORGROLE" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPLOT_CHILDORDERDOC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPLOT_CHILDORDERDOC" ON "GZVLG"."CMPLOT" ("CHILD_ORDER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ESCRROLE_USERROLE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ESCRROLE_USERROLE" ON "GZVLG"."ESCRROLE" ("USERROLE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLANDOC_DATENUM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLANDOC_DATENUM" ON "GZVLG"."PLANDOC" ("DOC_DATE", "DOC_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P2ARRANGEMENT_CONEXECSTAG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P2ARRANGEMENT_CONEXECSTAG" ON "GZVLG"."PLAN2ARRANGEMENT" ("CONEXECSTAGESCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_PURCHASEPLAN_CUSTOMER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_PURCHASEPLAN_CUSTOMER_ID" ON "GZVLG"."PURCHASEPLAN" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPDISCUSSION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPDISCUSSION" ON "GZVLG"."CMPDISCUSSION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPSUPPL_LOTPOSORDER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPSUPPL_LOTPOSORDER_ID" ON "GZVLG"."CMPSUPPLYSHEDULE" ("ORDER_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CUSTOMERREQ_NOTIFICATION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CUSTOMERREQ_NOTIFICATION" ON "GZVLG"."OOSCUSTOMERREQUIREMENT" ("NOTIFICATION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCUMENTCLASS_DOCPRINTER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCUMENTCLASS_DOCPRINTER" ON "GZVLG"."DOCUMENTCLASS" ("DOCPRINTER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPPLACE_GRANTINVESTMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPPLACE_GRANTINVESTMENT" ON "GZVLG"."CMPPLACE" ("GRANTINVESTMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OFRSUPPLYSHEDULE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OFRSUPPLYSHEDULE" ON "GZVLG"."OFRSUPPLYSHEDULE" ("OFFER_ID", "PLACEPOS", "GOODSPOS", "SUPPLYDATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN2DOC_PLANYEAR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN2DOC_PLANYEAR" ON "GZVLG"."PLAN2DOC" ("PLANYEAR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSPOS_PROHIBITIONS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSPOS_PROHIBITIONS" ON "GZVLG"."PLAN2OOSPOSITION" ("PROHIBITIONSCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_CONSTRUCTION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_CONSTRUCTION" ON "GZVLG"."CONTRACTDOC" ("CONSTRUCTION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ROLECLASS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ROLECLASS" ON "GZVLG"."ROLECLASS" ("USERROLE_ID", "DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2DOC_RESPPERSONAL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2DOC_RESPPERSONAL" ON "GZVLG"."PLAN2DOC" ("RESPPERSONAL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CLIENTOBJECTCOMMENTS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CLIENTOBJECTCOMMENTS" ON "GZVLG"."CLIENTOBJECTCOMMENTS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN3PURCHASEDOC_PCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN3PURCHASEDOC_PCODE" ON "GZVLG"."PLAN3PURCHASEDOC" ("PURCHASECODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_RESERVED_ESTIMATE_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_RESERVED_ESTIMATE_ID" ON "GZVLG"."RESERVEDBUDGETLINE" ("ESTIMATE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_USERPROFILE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_USERPROFILE" ON "GZVLG"."USERPROFILE" ("SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_APPOBJ_APPMODULE1
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_APPOBJ_APPMODULE1" ON "GZVLG"."APPMODULEDEPENDENCY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ALTGGLINK_GOODSGROUP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ALTGGLINK_GOODSGROUP" ON "GZVLG"."ALTGOODSGROUPLINK" ("GOODSGROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SYSEVENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SYSEVENT" ON "GZVLG"."SYSEVENT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P2GOODS_MEDICINEPROPVALUE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P2GOODS_MEDICINEPROPVALUE" ON "GZVLG"."PLAN2GOODS" ("MEDICINEPROPVALUECACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_PURCHASEPLANDOC_CUSTOMER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_PURCHASEPLANDOC_CUSTOMER" ON "GZVLG"."PURCHASEPLANDOC" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCEVERRLOG_SYSUSER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCEVERRLOG_SYSUSER" ON "GZVLG"."DOCEVERRLOG" ("SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INVOICEDOC_NECESSITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INVOICEDOC_NECESSITY" ON "GZVLG"."INVOICEDOC" ("NECESSITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GOODSDOCDETAIL_OKDP_CODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GOODSDOCDETAIL_OKDP_CODE" ON "GZVLG"."GOODSGROUPDOCDETAIL" ("OKDP_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPSUPPL_PLACEPOSORDER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPSUPPL_PLACEPOSORDER_ID" ON "GZVLG"."CMPSUPPLYSHEDULE" ("ORDER_ID", "PLACEPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PENALTYCHANGEDOCINFO
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PENALTYCHANGEDOCINFO" ON "GZVLG"."CLAIMPENALTYCHANGEDOCINFO" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_NECESSITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_NECESSITY" ON "GZVLG"."ORDERDOC" ("NECESSITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OIDREF
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OIDREF" ON "GZVLG"."OIDREF" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_NOTICEDOC_ETP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_NOTICEDOC_ETP" ON "GZVLG"."NOTICEDOC" ("ETP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCRETENTION_DOCSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCRETENTION_DOCSTATUS" ON "GZVLG"."DOCRETENTION" ("DOCSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_GOODSBAN_NAME_NPA
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_GOODSBAN_NAME_NPA" ON "GZVLG"."GOODSBAN" ("NAME_NPA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_SCHTASK_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_SCHTASK_NAME" ON "GZVLG"."SCHTASK" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_GOODSBRANCH_NAME_TYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_GOODSBRANCH_NAME_TYPE" ON "GZVLG"."GOODSBRANCH" ("NAME", "BRANCHTYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_MSG_QUEUE_NAME
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_MSG_QUEUE_NAME" ON "GZVLG"."MSG" ("QUEUE_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CLAIMPAYFACT_CLAIM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CLAIMPAYFACT_CLAIM" ON "GZVLG"."CLAIMPAYFACT" ("CLAIM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLACINGWAY_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLACINGWAY_PURCHASEMODE" ON "GZVLG"."PLACINGWAY" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2GOODS_OKVED
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2GOODS_OKVED" ON "GZVLG"."PLAN2GOODS" ("OKVED_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCCSTMFLDVALUES_CUSTFLDI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCCSTMFLDVALUES_CUSTFLDI" ON "GZVLG"."DOCCUSTOMFIELDVALUES" ("CUSTFIELD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUIREMENTTYPEPM_REQTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUIREMENTTYPEPM_REQTYPE" ON "GZVLG"."REQUIREMENTTYPEPM" ("REQUIREMENTTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQCONDEALRESP_PERSONAL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQCONDEALRESP_PERSONAL" ON "GZVLG"."RQCONDEALRESP" ("PERSONAL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCCL_DISPST_DISPST
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCCL_DISPST_DISPST" ON "GZVLG"."DOCCLASS_DISPSTATUS" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_MAILRECEIVERGROUP_RECEIVER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_MAILRECEIVERGROUP_RECEIVER" ON "GZVLG"."MAILRECEIVERGROUP_RECEIVER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RQPAYSHEDULE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RQPAYSHEDULE" ON "GZVLG"."RQPAYSHEDULE" ("REQUEST_ID", "BUDGETLINEPOS", "PAYDATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LOT_OOSNOTIFICATION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LOT_OOSNOTIFICATION" ON "GZVLG"."OOSNOTIFICATIONLOT" ("NOTIFICATION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSPOSITION_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSPOSITION_DOCUMENT" ON "GZVLG"."PLAN2OOSPOSITION" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_FACTDOC_VENDOR_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_FACTDOC_VENDOR_ID" ON "GZVLG"."FACTDOC" ("VENDOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FINSRCNEXTYEAR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FINSRCNEXTYEAR" ON "GZVLG"."FINSRCSATISFY" ("FINSRCNEXTYEARID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_CONEXECUTER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_CONEXECUTER" ON "GZVLG"."CONTRACTDOC" ("CONEXECUTER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RULESCRIPT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RULESCRIPT" ON "GZVLG"."RULESCRIPT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_PURCHASEMODE" ON "GZVLG"."ORDERDOC" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ESCHECKRULEREQUISITES
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ESCHECKRULEREQUISITES" ON "GZVLG"."ESCHECKRULEREQUISITES" ("ESCHECKRULE_ID", "RULEREQUISITE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CERTREQUEST_USER_ORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CERTREQUEST_USER_ORG" ON "GZVLG"."CERTREQUEST" ("USER_ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPCRITERION_TENDERCRIT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPCRITERION_TENDERCRIT" ON "GZVLG"."CMPCRITERION" ("TENDERCRITERION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GOODSGROUP_TREE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GOODSGROUP_TREE" ON "GZVLG"."GOODSGROUP_TREE" ("GROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_APPPERSACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_APPPERSACC_ID" ON "GZVLG"."REQUESTDOC" ("GUARAPPPERSONALACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCCOMMENT_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCCOMMENT_DOCUMENT" ON "GZVLG"."DOCCOMMENT" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_USERBUDGET_ORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_USERBUDGET_ORG" ON "GZVLG"."USERBUDGET" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCEXCHANGESCHEME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCEXCHANGESCHEME" ON "GZVLG"."DOCEXCHANGESCHEME" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ESCRROLE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ESCRROLE" ON "GZVLG"."ESCRROLE" ("ESCHECKRULE_ID", "USERROLE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPCRITERION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPCRITERION" ON "GZVLG"."CMPCRITERION" ("ORDER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_TER_TREE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_TER_TREE" ON "GZVLG"."TER_TREE" ("TREE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_NMSG_NOTIFYMSGEVENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_NMSG_NOTIFYMSGEVENT" ON "GZVLG"."NOTIFYMSG" ("NOTIFYMSGEVENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLNGOODS_OKVED
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLNGOODS_OKVED" ON "GZVLG"."PLNGOODS" ("OKVED_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLGOODS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLGOODS" ON "GZVLG"."PLGOODS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DECREASON
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DECREASON" ON "GZVLG"."DECREASON" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_APPMODULE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_APPMODULE" ON "GZVLG"."APPMODULE" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSPOS_ADVANCE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSPOS_ADVANCE" ON "GZVLG"."PLAN2OOSPOSITION" ("ADVANCECACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN2GOODS_CODE6
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN2GOODS_CODE6" ON "GZVLG"."PLAN2GOODS" ("CODE6") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONTRACTOR
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONTRACTOR" ON "GZVLG"."CONTRACTOR" ("INSPECTOR_ID", "ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_REQUESTO_DOC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_REQUESTO_DOC_ID" ON "GZVLG"."REQUESTORDER" ("DOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SERVERERROR
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SERVERERROR" ON "GZVLG"."SERVERERROR" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPPERSONAL
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPPERSONAL" ON "GZVLG"."CMPPERSONAL" ("ORDER_ID", "PERSONAL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCJOURNAL_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCJOURNAL_DISPSTATUS" ON "GZVLG"."DOCJOURNAL" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_RPLSITE_MASTER_ID_CLIENT_ID
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_RPLSITE_MASTER_ID_CLIENT_ID" ON "GZVLG"."RPLSITE" ("MASTER_ID", "CLIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ETPATTACH_ETP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ETPATTACH_ETP" ON "GZVLG"."ETPATTACH" ("ETP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CETERMLINE_TERMREASONDOC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CETERMLINE_TERMREASONDOC" ON "GZVLG"."CETERMINATIONLINE" ("TERMINATIONREASONDOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LEDGER_DELIVERYBASIS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LEDGER_DELIVERYBASIS" ON "GZVLG"."LEDGER" ("DELIVERYBASIS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_NECESSITY_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_NECESSITY_NAME" ON "GZVLG"."NECESSITY" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_REQUESTDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_REQUESTDOC_DOCUMENT" ON "GZVLG"."REQUESTDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ROLEREGISTER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ROLEREGISTER" ON "GZVLG"."ROLEREGISTER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PANELITEM
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PANELITEM" ON "GZVLG"."PANELITEM" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PURCHASEPLANDOC_DATENUM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PURCHASEPLANDOC_DATENUM" ON "GZVLG"."PURCHASEPLANDOC" ("DOC_DATE", "DOC_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RECOILDOC_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RECOILDOC_PURCHASEMODE" ON "GZVLG"."RECOILDOC" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONTRACTDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONTRACTDOC_DISPSTATUS" ON "GZVLG"."CONTRACTDOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_OFRPLACE_TERRITORYCODECOU
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_OFRPLACE_TERRITORYCODECOU" ON "GZVLG"."OFRPLACE" ("COUNTRY_ID", "TERRITORYCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_PLAN2REASON
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_PLAN2REASON" ON "GZVLG"."PLAN3PURCHASEDOC" ("PLANCHANGEREASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_RECOILDOC_DI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_RECOILDOC_DI" ON "GZVLG"."RECOILDOC" (COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_CONSOLIDDOC_NI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_CONSOLIDDOC_NI" ON "GZVLG"."CONSOLIDDOC" (COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ETP_MSGSITE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ETP_MSGSITE" ON "GZVLG"."ETP" ("MSGSITE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONTEMPDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONTEMPDOC_DOCUMENT" ON "GZVLG"."CONTRACTTEMPLATEDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_DELIVBASIS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_DELIVBASIS" ON "GZVLG"."PLAN3PURCHASEDOC" ("DELIVERYBASIS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_DOCDEVELOPER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_DOCDEVELOPER" ON "GZVLG"."ORDERDOC" ("DOCDEVELOPER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPGOODS_OKVED
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPGOODS_OKVED" ON "GZVLG"."CMPGOODS" ("OKVED_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3GOODS_UNITNAME
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3GOODS_UNITNAME" ON "GZVLG"."PLAN3PURCHASEGOODS" ("UNITNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_SYSUSER_PERSON
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_SYSUSER_PERSON" ON "GZVLG"."SYSUSER" ("PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_KLADR_CODE2
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_KLADR_CODE2" ON "GZVLG"."KLADR" ("CODE2") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_DOCGROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_DOCGROUP" ON "GZVLG"."DOCGROUP" ("DOCUMENTCLASS_ID", "NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_TYPEREQCRIT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_TYPEREQCRIT" ON "GZVLG"."TYPEREQCRIT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INVGOODS_OKDP_CODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INVGOODS_OKDP_CODE" ON "GZVLG"."INVGOODS" ("OKDP_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_QUALREQ_REQTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_QUALREQ_REQTYPE" ON "GZVLG"."QUALREQ" ("REQUIREMENTTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONCONTRACTOR_OKTMO
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONCONTRACTOR_OKTMO" ON "GZVLG"."CONCONTRACTOR" ("ORGOKTMO_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OOSORGROLES_OOSORGROLE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OOSORGROLES_OOSORGROLE" ON "GZVLG"."OOSORGROLES" ("ROLECODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CUSTOMERLOT_CONPERSACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CUSTOMERLOT_CONPERSACC_ID" ON "GZVLG"."CMPCUSTOMERLOT" ("GUARCONTRPERSONALACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_FACTDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_FACTDOC_DISPSTATUS" ON "GZVLG"."FACTDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_CHANGEREASO
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_CHANGEREASO" ON "GZVLG"."PLAN3PURCHASEDOC" ("CHANGEREASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN2GOODS_CODE2
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN2GOODS_CODE2" ON "GZVLG"."PLAN2GOODS" ("CODE2") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PURCHASECARRY_NECESSITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PURCHASECARRY_NECESSITY" ON "GZVLG"."PURCHASECARRY" ("NECESSITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_TENDER_COMPETITOR
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_TENDER_COMPETITOR" ON "GZVLG"."TENDER" ("ORDER_ID", "COMPETITORPOS", "CRITERIONPOS", "ISFINALOFFER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PANEL
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PANEL" ON "GZVLG"."PANEL" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_APPOBJ_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_APPOBJ_NAME" ON "GZVLG"."APPOBJ" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REFDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REFDOC" ON "GZVLG"."REFDOC" ("DOCUMENT_ID", "REF_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SCHTASK
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SCHTASK" ON "GZVLG"."SCHTASK" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQLOT_CONPERSACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQLOT_CONPERSACC_ID" ON "GZVLG"."RQLOT" ("GUARCONTRPERSONALACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_OFRREQREASON
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_OFRREQREASON" ON "GZVLG"."ORDERDOC" ("OFRREQREASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_COMMEMBER_COMMISSION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_COMMEMBER_COMMISSION" ON "GZVLG"."COMMEMBER" ("COMMISSION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_OFRGOODS_GROUPCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_OFRGOODS_GROUPCODE" ON "GZVLG"."OFRGOODS" ("GROUPCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_CONTRCARDDOC_DNI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_CONTRCARDDOC_DNI" ON "GZVLG"."CONTRACTCARDDOC" ("DOCUMENTCLASS_ID", COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REPDOCUMENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REPDOCUMENT" ON "GZVLG"."REPDOCUMENT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2LEDGER_GOODSGROUP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2LEDGER_GOODSGROUP" ON "GZVLG"."PLAN2LEDGER" ("GROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONTRACTEXECDOC_DOC_DATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONTRACTEXECDOC_DOC_DATE" ON "GZVLG"."CONTRACTEXECDOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPPERSONALRESP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPPERSONALRESP" ON "GZVLG"."CMPPERSONALRESP" ("ORDER_ID", "PERSONAL_ID", "RESPONSIBILITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GOODSOKPDPREF_COUNTRY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GOODSOKPDPREF_COUNTRY" ON "GZVLG"."GOODSOKPDCOUNTRYPREF" ("COUNTRY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_USERCERT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_USERCERT" ON "GZVLG"."USERCERT" ("SERIALNUMBER", "ISSUERSERIALNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P2ARRANGEMENT_TERRITORY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P2ARRANGEMENT_TERRITORY" ON "GZVLG"."PLAN2ARRANGEMENT" ("COUNTRY_ID", "TERRITORYCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCJOURNAL_OLD_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCJOURNAL_OLD_DISPSTATUS" ON "GZVLG"."DOCJOURNAL" ("OLD_DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLNGOODS_OKDP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLNGOODS_OKDP" ON "GZVLG"."PLNGOODS" ("OKDP_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_REQUESTDOC_NI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_REQUESTDOC_NI" ON "GZVLG"."REQUESTDOC" (COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_FUNCAT_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_FUNCAT_NAME" ON "GZVLG"."FUNCAT" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_BANKGUARANTEEREFDOCREASON
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_BANKGUARANTEEREFDOCREASON" ON "GZVLG"."BANKGUARANTEEREFDOCREASON" ("BANKGUARANTEEREF_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SUPPORTCRYPTOLIBFORMAT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SUPPORTCRYPTOLIBFORMAT" ON "GZVLG"."SUPPORTCRYPTOLIBFORMAT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_BUDGET_TERRITORY_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_BUDGET_TERRITORY_ID" ON "GZVLG"."BUDGET" ("TERRITORY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RECOILLINES_FINSRC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RECOILLINES_FINSRC" ON "GZVLG"."RECOILLINES" ("FINSRC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_EQUALITYCODES_EQUALITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_EQUALITYCODES_EQUALITY" ON "GZVLG"."EQUALITYCODES" ("EQUALITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_CONSOLIDDOC_DI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_CONSOLIDDOC_DI" ON "GZVLG"."CONSOLIDDOC" (COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_SCHPLAN_SCHTASK
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_SCHPLAN_SCHTASK" ON "GZVLG"."SCHPLAN" ("SCHTASK_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_SEL_DOCATTACHEX
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_SEL_DOCATTACHEX" ON "GZVLG"."SIGNEXPORTLOG" ("DOCATTACHEX_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSKBK_POSITION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSKBK_POSITION" ON "GZVLG"."PLAN2OOSKBK" ("PLAN2OOSPOSITION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_CONSETTACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_CONSETTACC_ID" ON "GZVLG"."REQUESTDOC" ("GUARCONTRSETTLEMENTACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ROLEATTACH_DOCUMENTCLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ROLEATTACH_DOCUMENTCLASS" ON "GZVLG"."ROLEATTACH" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_PURCHMETHOD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_PURCHMETHOD" ON "GZVLG"."PLAN3PURCHASEDOC" ("PURCHASEMETHOD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OFRREQREASON
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OFRREQREASON" ON "GZVLG"."OFRREQREASON" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_FGROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_FGROUP" ON "GZVLG"."FGROUP" ("FGROUPHEADER_ID", "FG_VERSION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCREQ_REQTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCREQ_REQTYPE" ON "GZVLG"."DOCREQ" ("REQUIREMENTTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORGADDKPP_ORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORGADDKPP_ORG" ON "GZVLG"."ORGADDKPP" ("ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_SINGLECUSTOMER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_SINGLECUSTOMER" ON "GZVLG"."ORDERDOC" ("SINGLECUSTOMERREASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_BUDGET" ON "GZVLG"."CONTRACTDOC" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_GOODSPRICE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_GOODSPRICE" ON "GZVLG"."GOODSPRICE" ("GOODS_ID", "DT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GCREGISTER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GCREGISTER" ON "GZVLG"."GCREGISTER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_OOSCUSTOMERREQ_LOT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_OOSCUSTOMERREQ_LOT" ON "GZVLG"."OOSCUSTOMERREQUIREMENT" ("LOT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSKBKYEAR_KBK
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSKBKYEAR_KBK" ON "GZVLG"."PLAN2OOSKBKYEAR" ("PLAN2OOSKBK_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLAN2GOODS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLAN2GOODS" ON "GZVLG"."PLAN2GOODS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2LEDGER_DELIVERYBASIS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2LEDGER_DELIVERYBASIS" ON "GZVLG"."PLAN2LEDGER" ("DELIVERYBASIS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CONCONTR_ORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CONCONTR_ORG_ID" ON "GZVLG"."CONCONTRACTOR" ("ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DIGESTSIGN_IMPORTUSER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DIGESTSIGN_IMPORTUSER_ID" ON "GZVLG"."DIGESTSIGN" ("IMPORTUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONPLACE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONPLACE" ON "GZVLG"."CONPLACE" ("CONTRACT_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OFRCRITERIONVAL
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OFRCRITERIONVAL" ON "GZVLG"."OFRCRITERIONVAL" ("OFFER_ID", "CMPCRITERIONPOS", "ISFINALOFFER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OFRORGSTATUS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OFRORGSTATUS" ON "GZVLG"."OFRORGSTATUS" ("OFFER_ID", "ORGSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_PLAN2OOSEXTNUMBER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_PLAN2OOSEXTNUMBER" ON "GZVLG"."PLAN2OOSEXTNUMBER" ("YEARPLANOWNER", "PLANPOSITIONNUMBER", "POSITIONNUMBER", "EXTNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_TENDERCRITERIONPM
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_TENDERCRITERIONPM" ON "GZVLG"."TENDERCRITERIONPM" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONTEMPDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONTEMPDOC_DISPSTATUS" ON "GZVLG"."CONTRACTTEMPLATEDOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CAVILTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CAVILTYPE" ON "GZVLG"."CAVILTYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P2ARRANGEMENT_DELIVADDR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P2ARRANGEMENT_DELIVADDR" ON "GZVLG"."PLAN2ARRANGEMENT" ("DELIVERYADDRESS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_FACTDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_FACTDOC_DOCUMENT" ON "GZVLG"."FACTDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FUNCMODULE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FUNCMODULE" ON "GZVLG"."FUNCMODULE" ("FUNUNIT_ID", "MODULENAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ECHKRULREQS_RULEREQUISTE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ECHKRULREQS_RULEREQUISTE" ON "GZVLG"."ESCHECKRULEREQUISITES" ("RULEREQUISITE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_DOCATTACHEX_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_DOCATTACHEX_DOCUMENT" ON "GZVLG"."DOCATTACHEX" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DAYVERSION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DAYVERSION" ON "GZVLG"."DAYVERSION" ("DAY_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_SCHPLAN_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_SCHPLAN_NAME" ON "GZVLG"."SCHPLAN" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCGROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCGROUP" ON "GZVLG"."DOCGROUP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2DAILYTOTALS_PURCHMDE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2DAILYTOTALS_PURCHMDE" ON "GZVLG"."PLAN2DAILYTOTALS" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONSOLIDDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONSOLIDDOC" ON "GZVLG"."CONSOLIDDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PURCHASECARRY_OKDP_CODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PURCHASECARRY_OKDP_CODE" ON "GZVLG"."PURCHASECARRY" ("OKDP_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REQUIREMENTTYPEPM
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REQUIREMENTTYPEPM" ON "GZVLG"."REQUIREMENTTYPEPM" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ESCHECKRULE_SCRIPT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ESCHECKRULE_SCRIPT" ON "GZVLG"."ESCHECKRULE" ("RULESCRIPT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CONGOODS_GROUPCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CONGOODS_GROUPCODE" ON "GZVLG"."CONGOODS" ("GROUPCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RECOILDOC_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RECOILDOC_BUDGET" ON "GZVLG"."RECOILDOC" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GBPM_PMODE_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GBPM_PMODE_ID" ON "GZVLG"."GOODSBANPURCHASEMODE" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSPRODUCT_POSITION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSPRODUCT_POSITION" ON "GZVLG"."PLAN2OOSPRODUCT" ("PLAN2OOSPOSITION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_INVBUDGE_ESTIMATE_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_INVBUDGE_ESTIMATE_ID" ON "GZVLG"."INVBUDGETLINE" ("ESTIMATE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OFRGROUPPROPVALUE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OFRGROUPPROPVALUE" ON "GZVLG"."OFRGROUPPROPVALUE" ("OFFER_ID", "GROUPPROPPOS", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ESCHECKRULE_FGROUPHEADER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ESCHECKRULE_FGROUPHEADER" ON "GZVLG"."ESCHECKRULE" ("FGROUPHEADER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CERTREQUESTOID_OIDREF
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CERTREQUESTOID_OIDREF" ON "GZVLG"."CERTREQUESTOID" ("OIDREF_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CAVILDOC_RESPPERSON
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CAVILDOC_RESPPERSON" ON "GZVLG"."CAVILDOC" ("RESPPERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_RP_FORM_NAME_NAME
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_RP_FORM_NAME_NAME" ON "GZVLG"."REPPROFILE" ("FORM_NAME", "NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPCUSTOMER_POSTCOUNTRY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPCUSTOMER_POSTCOUNTRY" ON "GZVLG"."CMPCUSTOMER" ("CUSTOMERPOSTCOUNTRY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_REQUESTDOC_DNI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_REQUESTDOC_DNI" ON "GZVLG"."REQUESTDOC" ("DOCUMENTCLASS_ID", COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRCARDDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRCARDDOC_DISPSTATUS" ON "GZVLG"."CONTRACTCARDDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSPRODUCT_OKVED
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSPRODUCT_OKVED" ON "GZVLG"."PLAN2OOSPRODUCT" ("OKVED_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_KLADRSTREET_ACTUAL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_KLADRSTREET_ACTUAL" ON "GZVLG"."KLADRSTREET" ("ACTUAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFRGROUPPROP_PROPTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFRGROUPPROP_PROPTYPE" ON "GZVLG"."OFRGROUPPROP" ("PROPTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PROCUREMENT_REQUEST
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PROCUREMENT_REQUEST" ON "GZVLG"."PROCUREMENT" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_BANK
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_BANK" ON "GZVLG"."ORDERDOC" ("DOCFEESETTLEMENTBIC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLNBL_INDUSTRYCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLNBL_INDUSTRYCODE" ON "GZVLG"."PLNBUDGETLINE" ("INDUSTRYCODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RPLRULEOBJ_RPLOBJECT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RPLRULEOBJ_RPLOBJECT" ON "GZVLG"."RPLRULEOBJ" ("RPLOBJECT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CLASSOPER_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CLASSOPER_OPERTYPE" ON "GZVLG"."CLASSOPER" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_FACTDOC_RECIPIENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_FACTDOC_RECIPIENT_ID" ON "GZVLG"."FACTDOC" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ESCHECKRULE_PARDISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ESCHECKRULE_PARDISPSTATUS" ON "GZVLG"."ESCHECKRULE" ("PARDISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_RQCRITER_LOTPOSREQUEST_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_RQCRITER_LOTPOSREQUEST_ID" ON "GZVLG"."RQCRITERION" ("REQUEST_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REFUSALFACTFOUNDATION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REFUSALFACTFOUNDATION" ON "GZVLG"."REFUSALFACTFOUNDATION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CLAIMDOC_DOC_DATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CLAIMDOC_DOC_DATE" ON "GZVLG"."CLAIMDOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_CONTRACTEXECDOC_DI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_CONTRACTEXECDOC_DI" ON "GZVLG"."CONTRACTEXECDOC" (COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONTRCARDDOC_DATENUM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONTRCARDDOC_DATENUM" ON "GZVLG"."CONTRACTCARDDOC" ("DOC_DATE", "DOC_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLANPOSITIONNUMBERERR
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLANPOSITIONNUMBERERR" ON "GZVLG"."PLANPOSITIONNUMBERERROR" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3LINE_ESTIMATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3LINE_ESTIMATE" ON "GZVLG"."PLAN3PURCHASELINE" ("ESTIMATE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_OFFERDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_OFFERDOC_DOCUMENT" ON "GZVLG"."OFFERDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_BANKGUARANTEEDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_BANKGUARANTEEDOC_DOCUMENT" ON "GZVLG"."BANKGUARANTEEDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_AUCTIONLOG
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_AUCTIONLOG" ON "GZVLG"."AUCTIONLOG" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GBGO
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GBGO" ON "GZVLG"."GOODSBANGOODSOKPD" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_DOCRESTATITMS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_DOCRESTATITMS" ON "GZVLG"."DOCRETENTIONSTATITEMS" ("DOCUMENT_ID", "DOCRETENTION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_OFRREQRSN
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_OFRREQRSN" ON "GZVLG"."PLAN3PURCHASEDOC" ("OFRREQREASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORDERDOC_VENDOR_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORDERDOC_VENDOR_ID" ON "GZVLG"."ORDERDOC" ("VENDOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_METACONSTRAINT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_METACONSTRAINT" ON "GZVLG"."METACONSTRAINT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_LEDGER_GROUP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_LEDGER_GROUP" ON "GZVLG"."LEDGER" ("GROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_CONEXECUTERAC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_CONEXECUTERAC" ON "GZVLG"."CONTRACTDOC" ("CONEXECUTERACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_DOCUMENT_PARENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_DOCUMENT_PARENT_ID" ON "GZVLG"."DOCUMENT" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_BANKGUARANTEEDOC_DOCCLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_BANKGUARANTEEDOC_DOCCLASS" ON "GZVLG"."BANKGUARANTEEDOC" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLANDOC_DOC_DATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLANDOC_DOC_DATE" ON "GZVLG"."PLANDOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GOODSOKVED_PARENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GOODSOKVED_PARENT" ON "GZVLG"."GOODSOKVED" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_REQUESTDOC_DOC_DATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_REQUESTDOC_DOC_DATE" ON "GZVLG"."REQUESTDOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCDIGESTROLES
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCDIGESTROLES" ON "GZVLG"."DOCDIGESTROLES" ("DOCDIGESTRULE_ID", "USERROLE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_DATAOBJECTCHANGELOG_OBJ
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_DATAOBJECTCHANGELOG_OBJ" ON "GZVLG"."DATAOBJECTCHANGELOG" ("OBJ_NAME", "OBJ_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN3DOC_DOCDATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN3DOC_DOCDATE" ON "GZVLG"."PLAN3DOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_INVOICED_CUSTOMER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_INVOICED_CUSTOMER_ID" ON "GZVLG"."INVOICEDOC" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_STATISTICSSOURCE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_STATISTICSSOURCE" ON "GZVLG"."STATISTICSSOURCE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_FACTDOC_DATENUM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_FACTDOC_DATENUM" ON "GZVLG"."FACTDOC" ("DOC_DATE", "DOC_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SERVERPROCESSOR
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SERVERPROCESSOR" ON "GZVLG"."SERVERPROCESSOR" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3GOODS_OKPD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3GOODS_OKPD" ON "GZVLG"."PLAN3PURCHASEGOODS" ("OKPD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ROLEATTACH_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ROLEATTACH_DISPSTATUS" ON "GZVLG"."ROLEATTACH" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_COMPLAINTDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_COMPLAINTDOC" ON "GZVLG"."COMPLAINTDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OKTMO_PARENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OKTMO_PARENT" ON "GZVLG"."OKTMO" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PK_PLAN2OOSFEATURE_POSITI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PK_PLAN2OOSFEATURE_POSITI" ON "GZVLG"."PLAN2OOSFEATURE" ("PLAN2OOSPOSITION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN3DOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN3DOC_DISPSTATUS" ON "GZVLG"."PLAN3DOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCEVENT_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCEVENT_DISPSTATUS" ON "GZVLG"."DOCEVENT" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTREXECDOC_CUST
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTREXECDOC_CUST" ON "GZVLG"."CONTRACTEXECDOC" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ROLECLASS_DOCUMENTCLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ROLECLASS_DOCUMENTCLASS" ON "GZVLG"."ROLECLASS" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGCONCCONT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGCONCCONT" ON "GZVLG"."ORGCONCCONT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORDERSUM_CMPGOODSPOSORDER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORDERSUM_CMPGOODSPOSORDER" ON "GZVLG"."ORDERSUMMARY" ("ORDER_ID", "CMPGOODSPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONPLACE_EXECSTEP2POS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONPLACE_EXECSTEP2POS" ON "GZVLG"."CONPLACE" ("CONTRACT_ID", "EXECSTEP2POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_NOTICEEM_ORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_NOTICEEM_ORG_ID" ON "GZVLG"."NOTICEEMAILORG" ("ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLAN3PURCHASEDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLAN3PURCHASEDOC" ON "GZVLG"."PLAN3PURCHASEDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RPLTABLE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RPLTABLE" ON "GZVLG"."RPLTABLE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_PLANDOC_CUSTOMER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_PLANDOC_CUSTOMER_ID" ON "GZVLG"."PLANDOC" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_FCTGOODS_GROUPCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_FCTGOODS_GROUPCODE" ON "GZVLG"."FCTGOODS" ("GROUPCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_DOCUMENT_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_DOCUMENT_DISPSTATUS" ON "GZVLG"."DOCUMENT" ("DISPSTATUS_ID", "DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_CODETYPE_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_CODETYPE_NAME" ON "GZVLG"."CODETYPE" ("BUDGET_ID", "NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_FACTDOCTYPE_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_FACTDOCTYPE_NAME" ON "GZVLG"."FACTDOCTYPE" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_CONBANK
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_CONBANK" ON "GZVLG"."REQUESTDOC" ("GUARANTEECONTRACTBIC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_CONTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_CONTYPE" ON "GZVLG"."REQUESTDOC" ("CONTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_FACTDOC_NI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_FACTDOC_NI" ON "GZVLG"."FACTDOC" (COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONTRCARDDOC_DOCDATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONTRCARDDOC_DOCDATE" ON "GZVLG"."CONTRACTCARDDOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_HISTORYMODIFY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_HISTORYMODIFY" ON "GZVLG"."HISTORYMODIFY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FUNCPROVIDER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FUNCPROVIDER" ON "GZVLG"."FUNCPROVIDER" ("FUNUNIT_ID", "SERVERPROVIDER_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_SERVERACTION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_SERVERACTION" ON "GZVLG"."SERVERACTION" ("SERVERPROCESSOR_ID", "ACTION_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_NECESSITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_NECESSITY" ON "GZVLG"."REQUESTDOC" ("NECESSITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RQFEATURE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RQFEATURE" ON "GZVLG"."RQFEATURE" ("REQUEST_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FUNCREFERENCE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FUNCREFERENCE" ON "GZVLG"."FUNCREFERENCE" ("FUNUNIT_ID", "REF_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ROLERIGHT_SYSRIGHT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ROLERIGHT_SYSRIGHT" ON "GZVLG"."ROLERIGHT" ("SYSRIGHT_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ATTACHCATEGORIES
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ATTACHCATEGORIES" ON "GZVLG"."ATTACHCATEGORIES" ("DOCATTACHEX_ID", "DOCCATEGORY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_SERVERPROVIDER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_SERVERPROVIDER" ON "GZVLG"."SERVERPROVIDER" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ESTIMATE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ESTIMATE" ON "GZVLG"."ESTIMATE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLAN2OOSKBK
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLAN2OOSKBK" ON "GZVLG"."PLAN2OOSKBK" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCCUSTOMFIELDS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCCUSTOMFIELDS" ON "GZVLG"."DOCCUSTOMFIELDS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SCHEXPDOCS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SCHEXPDOCS" ON "GZVLG"."SCHEXPDOCS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_GOODSOKDPPUR_GOODSOKDP_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_GOODSOKDPPUR_GOODSOKDP_ID" ON "GZVLG"."GOODSOKDPPURCHASEMODE" ("GOODSOKDP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_REFINANCINGRATE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_REFINANCINGRATE" ON "GZVLG"."REFINANCINGRATE" ("START_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OOSNOTIFICATION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OOSNOTIFICATION" ON "GZVLG"."OOSNOTIFICATION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_OFRREQREASON
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_OFRREQREASON" ON "GZVLG"."REQUESTDOC" ("OFRREQREASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_CONTRPAYORD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_CONTRPAYORD" ON "GZVLG"."PLAN3PURCHASEDOC" ("CONTRACTPAYORDERCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_PAYCOND
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_PAYCOND" ON "GZVLG"."PLAN3PURCHASEDOC" ("PAYCONDITIONCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_WEBSTAT_STATSOURCE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_WEBSTAT_STATSOURCE" ON "GZVLG"."WEBSTATCACHE" ("STATISTICSSOURCE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_PURCHASEPLANDOC_NI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_PURCHASEPLANDOC_NI" ON "GZVLG"."PURCHASEPLANDOC" (COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CSGOODS_GROUP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CSGOODS_GROUP" ON "GZVLG"."CSGOODS" ("GROUPCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_COUNTRY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_COUNTRY" ON "GZVLG"."COUNTRY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCRETSTATITEMS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCRETSTATITEMS" ON "GZVLG"."DOCRETENTIONSTATITEMS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_TCPM_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_TCPM_PURCHASEMODE" ON "GZVLG"."TENDERCRITERIONPM" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPCUSTLOT_CONMNGRRESP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPCUSTLOT_CONMNGRRESP" ON "GZVLG"."CMPCUSTOMERLOT" ("CONMNGRRESP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCGROUP_PARENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCGROUP_PARENT" ON "GZVLG"."DOCGROUP" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_PLNBUDGE_RECIPIENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_PLNBUDGE_RECIPIENT_ID" ON "GZVLG"."PLNBUDGETLINE" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_SIGNTYPE_SIGNFORMAT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_SIGNTYPE_SIGNFORMAT" ON "GZVLG"."SIGNTYPE" ("SIGNFORMAT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_RESPONSIBILITY_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_RESPONSIBILITY_NAME" ON "GZVLG"."RESPONSIBILITY" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_PURCHASEMODE" ON "GZVLG"."CONTRACTDOC" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLANDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLANDOC_DISPSTATUS" ON "GZVLG"."PLANDOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CUSTOMERREQ_NOTIFICATIONL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CUSTOMERREQ_NOTIFICATIONL" ON "GZVLG"."OOSCUSTOMERREQUIREMENT" ("LOT_ID", "NOTIFICATION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_RPLOBJECT_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_RPLOBJECT_NAME" ON "GZVLG"."RPLOBJECT" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_CLNDDAY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_CLNDDAY" ON "GZVLG"."CLNDDAY" ("CLNDTYPE_ID", "CLND_DAY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OOSORGANIZATIONROLE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OOSORGANIZATIONROLE" ON "GZVLG"."OOSORGANIZATIONROLE" ("REGNUMBER", "ORGROLE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_INVOICEDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_INVOICEDOC_DISPSTATUS" ON "GZVLG"."INVOICEDOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DESCGROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DESCGROUP" ON "GZVLG"."DESCGROUP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ROLEREGISTER_GRANTEDROLE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ROLEREGISTER_GRANTEDROLE" ON "GZVLG"."ROLEREGISTER" ("GRANTEDROLE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RPLSITE_CLIENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RPLSITE_CLIENT" ON "GZVLG"."RPLSITE" ("CLIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_PURCHASEPLAN_DOC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_PURCHASEPLAN_DOC" ON "GZVLG"."PURCHASEPLAN" ("PURCHASEPLANDOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCSTATUS_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCSTATUS_DISPSTATUS" ON "GZVLG"."DOCSTATUS" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONREFUSALFACT_REFFACTFND
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONREFUSALFACT_REFFACTFND" ON "GZVLG"."CONREFUSALFACT" ("REFUSALFACTFOUNDATION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SYSRIGHT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SYSRIGHT" ON "GZVLG"."SYSRIGHT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_SEL_SYSUSER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_SEL_SYSUSER" ON "GZVLG"."SIGNEXPORTLOG" ("SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONSOLIDDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONSOLIDDOC_DOCUMENT" ON "GZVLG"."CONSOLIDDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCFLAGTYPE_DOCUMENTCLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCFLAGTYPE_DOCUMENTCLASS" ON "GZVLG"."DOCFLAGTYPE" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCUMENTBLOCKINFO_SYSUSER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCUMENTBLOCKINFO_SYSUSER" ON "GZVLG"."DOCUMENTBLOCKINFO" ("SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCCL_DISPST_PARDISPST
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCCL_DISPST_PARDISPST" ON "GZVLG"."DOCCLASS_DISPSTATUS" ("PARDISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2LEDGER_NECESSITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2LEDGER_NECESSITY" ON "GZVLG"."PLAN2LEDGER" ("NECESSITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_GCREGISTER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_GCREGISTER" ON "GZVLG"."GCREGISTER" ("BUDGET_ID", "ATTACH_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OFRQUALREQVAL
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OFRQUALREQVAL" ON "GZVLG"."OFRQUALREQVAL" ("OFFER_ID", "CMPQUALREQPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_GOODSGROUP_TREE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_GOODSGROUP_TREE" ON "GZVLG"."GOODSGROUP_TREE" ("TREE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_OOSCONTRACT_NOTICECUSTOMER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_OOSCONTRACT_NOTICECUSTOMER" ON "GZVLG"."OOSCONTRACT" ("NOTIFICATIONNUMBER", "CUSTOMERREGNUM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCSTATUS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCSTATUS" ON "GZVLG"."DOCSTATUS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RECOILDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RECOILDOC" ON "GZVLG"."RECOILDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPGOODS_GROUPCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPGOODS_GROUPCODE" ON "GZVLG"."CMPGOODS" ("GROUPCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_CONBANKSUPP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_CONBANKSUPP" ON "GZVLG"."PLAN3PURCHASEDOC" ("CONBANKSUPPORTCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCFLAGCATEGORY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCFLAGCATEGORY" ON "GZVLG"."DOCFLAGCATEGORY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_MSGSITE_MSGLINKTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_MSGSITE_MSGLINKTYPE" ON "GZVLG"."MSGSITE" ("MSGLINKTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DIGESTSIGN
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DIGESTSIGN" ON "GZVLG"."DIGESTSIGN" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DATAOBJECTCHANGELOG
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DATAOBJECTCHANGELOG" ON "GZVLG"."DATAOBJECTCHANGELOG" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGATTACH
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGATTACH" ON "GZVLG"."ORGATTACH" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CONBUDGE_PLACEPOSCONTRACT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CONBUDGE_PLACEPOSCONTRACT" ON "GZVLG"."CONBUDGETLINE" ("CONTRACT_ID", "PLACEPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_NECESSITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_NECESSITY" ON "GZVLG"."CONTRACTDOC" ("NECESSITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INVBL_GRANTINVESTMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INVBL_GRANTINVESTMENT" ON "GZVLG"."INVBUDGETLINE" ("GRANTINVESTMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_FACTDOC_TERRITORYCODECOU
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_FACTDOC_TERRITORYCODECOU" ON "GZVLG"."FACTDOC" ("COUNTRY_ID", "TERRITORYCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_OFRPLACE_LOTPOSOFFER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_OFRPLACE_LOTPOSOFFER_ID" ON "GZVLG"."OFRPLACE" ("OFFER_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONTRCARDDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONTRCARDDOC_DISPSTATUS" ON "GZVLG"."CONTRACTCARDDOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGSELSTATUS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGSELSTATUS" ON "GZVLG"."ORGSELSTATUS" ("ORG_ID", "ORGSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ROLEATTACH
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ROLEATTACH" ON "GZVLG"."ROLEATTACH" ("USERROLE_ID", "DOCUMENTCLASS_ID", "DISPSTATUS_ID", "CATEGORY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_EXCHANGECLASSES_CLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_EXCHANGECLASSES_CLASS" ON "GZVLG"."EXCHANGECLASSES" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPVOTERESULT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPVOTERESULT" ON "GZVLG"."CMPVOTERESULT" ("DECISIONPOS", "ORDER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCACTION_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCACTION_DISPSTATUS" ON "GZVLG"."DOCACTION" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_JAVACLASS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_JAVACLASS" ON "GZVLG"."JAVACLASS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCDIGROLES_USERROLE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCDIGROLES_USERROLE" ON "GZVLG"."DOCDIGESTROLES" ("USERROLE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_GOODS_GROUP_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_GOODS_GROUP_ID" ON "GZVLG"."GOODS" ("GROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_DOCCATEGORY_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_DOCCATEGORY_CODE" ON "GZVLG"."DOCCATEGORY" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_FACTDOC_DI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_FACTDOC_DI" ON "GZVLG"."FACTDOC" (COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_USERBUDGET
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_USERBUDGET" ON "GZVLG"."USERBUDGET" ("SYSUSER_ID", "BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ROLEORG
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ROLEORG" ON "GZVLG"."ROLEORG" ("USERROLE_ID", "ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2GOODS_NECESSITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2GOODS_NECESSITY" ON "GZVLG"."PLAN2GOODS" ("NECESSITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2DAILYTOTALS_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2DAILYTOTALS_BUDGET" ON "GZVLG"."PLAN2DAILYTOTALS" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLAN2OOSKBKYEAR
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLAN2OOSKBKYEAR" ON "GZVLG"."PLAN2OOSKBKYEAR" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLACINGWAY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLACINGWAY" ON "GZVLG"."PLACINGWAY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_PERSONAL_ORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_PERSONAL_ORG_ID" ON "GZVLG"."PERSONAL" ("ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_BUDGET_PARENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_BUDGET_PARENT" ON "GZVLG"."BUDGET" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFRGOODS_OKDP_CODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFRGOODS_OKDP_CODE" ON "GZVLG"."OFRGOODS" ("OKDP_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORGUNFAI_ORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORGUNFAI_ORG_ID" ON "GZVLG"."ORGUNFAIR" ("ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_OOSNOTIFICATION_NUMBER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_OOSNOTIFICATION_NUMBER" ON "GZVLG"."OOSNOTIFICATION" ("NOTIFICATIONNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_PLANDOC_DNI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_PLANDOC_DNI" ON "GZVLG"."PLANDOC" ("DOCUMENTCLASS_ID", COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_ORDERDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_ORDERDOC_DOCUMENT" ON "GZVLG"."ORDERDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_PERIODICITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_PERIODICITY" ON "GZVLG"."PLAN3PURCHASEDOC" ("PERIODICITYCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPVOTER_ORDER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPVOTER_ORDER_ID" ON "GZVLG"."CMPVOTERESULT" ("ORDER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORGGOODS_GROUP_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORGGOODS_GROUP_ID" ON "GZVLG"."ORGGOODSGROUP" ("GROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCREP_DOCUMENTCLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCREP_DOCUMENTCLASS" ON "GZVLG"."DOCUMENTREPORTS" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REPFORM_SERVERACTION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REPFORM_SERVERACTION" ON "GZVLG"."REPFORM" ("SERVERPROCESSOR_ID", "SERVERACTION_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_CLIENTOBJECT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_CLIENTOBJECT" ON "GZVLG"."CLIENTOBJECT" ("OBJ_TYPE", "NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_SYSPARAM
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_SYSPARAM" ON "GZVLG"."SYSPARAM" ("NAME", "SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3GOODS_OKDP_CODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3GOODS_OKDP_CODE" ON "GZVLG"."PLAN3PURCHASEGOODS" ("OKDP_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_INVBUDGE_RECIPIENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_INVBUDGE_RECIPIENT_ID" ON "GZVLG"."INVBUDGETLINE" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_P3GOODSOKVED
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_P3GOODSOKVED" ON "GZVLG"."PLAN3PURCHASEGOODSOKVED" ("PLAN3PURCHASEDOC_ID", "GOODSPOS", "OKVED") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index FK_PLANDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."FK_PLANDOC" ON "GZVLG"."PLANDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_USERROLE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_USERROLE" ON "GZVLG"."USERROLE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLAN2OOSFEATURE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLAN2OOSFEATURE" ON "GZVLG"."PLAN2OOSFEATURE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GOODSOKPD_PARENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GOODSOKPD_PARENT" ON "GZVLG"."GOODSOKPD" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_KLADR_CODE1
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_KLADR_CODE1" ON "GZVLG"."KLADR" ("CODE1") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_UNIT_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_UNIT_NAME" ON "GZVLG"."UNIT" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_USERCERT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_USERCERT" ON "GZVLG"."USERCERT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_ETPTYPE_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_ETPTYPE_CODE" ON "GZVLG"."ETPTYPE" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ALTGOODSGROUP_PARENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ALTGOODSGROUP_PARENT" ON "GZVLG"."ALTGOODSGROUP" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ALTGOODSGROUPTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ALTGOODSGROUPTYPE" ON "GZVLG"."ALTGOODSGROUPTYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3LINE_INDUSTRYCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3LINE_INDUSTRYCODE" ON "GZVLG"."PLAN3PURCHASELINE" ("INDUSTRYCODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3GOODS_GOODSGROUP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3GOODS_GOODSGROUP" ON "GZVLG"."PLAN3PURCHASEGOODS" ("GROUPCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_DOCJOURNAL_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_DOCJOURNAL_DOCUMENT" ON "GZVLG"."DOCJOURNAL" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_SERVERPROCESSOR_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_SERVERPROCESSOR_NAME" ON "GZVLG"."SERVERPROCESSOR" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2DOC_DESCRIPTION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2DOC_DESCRIPTION" ON "GZVLG"."PLAN2DOC" ("DESCRIPTION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCUMENTREPORTS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCUMENTREPORTS" ON "GZVLG"."DOCUMENTREPORTS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLUGIN_RPLTABLE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLUGIN_RPLTABLE" ON "GZVLG"."RPLTABLEPLUGIN" ("RPLTABLE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_ORDERDOC_NI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_ORDERDOC_NI" ON "GZVLG"."ORDERDOC" (COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PURCHASEMODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PURCHASEMODE" ON "GZVLG"."PURCHASEMODE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_BUDGETLINE_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_BUDGETLINE_BUDGET" ON "GZVLG"."BUDGETLINE" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ESTIMATE_ORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ESTIMATE_ORG_ID" ON "GZVLG"."ESTIMATE" ("ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OFRPLACE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OFRPLACE" ON "GZVLG"."OFRPLACE" ("OFFER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CSRECIPIENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CSRECIPIENT" ON "GZVLG"."CSRECIPIENT" ("CONSOLID_ID", "ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_MSG
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_MSG" ON "GZVLG"."MSG" ("SENDER_ID", "RECEIVER_ID", "QUEUE_NAME", "SEQ_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORGPERSONALRESP_RESP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORGPERSONALRESP_RESP" ON "GZVLG"."ORGPERSONALRESP" ("RESPONSIBILITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQCRITERION_TENDERCRITERI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQCRITERION_TENDERCRITERI" ON "GZVLG"."RQCRITERION" ("TENDERCRITERION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_USERSESSIONACCESS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_USERSESSIONACCESS" ON "GZVLG"."USERSESSIONACCESS" ("ACCESS_TIME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPCOMPETITOR
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPCOMPETITOR" ON "GZVLG"."CMPCOMPETITOR" ("ORDER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_QUALIFYS_QUALIFYREQPOSORD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_QUALIFYS_QUALIFYREQPOSORD" ON "GZVLG"."QUALIFYSELECT" ("ORDER_ID", "QUALIFYREQPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_SINGLECUSTOME
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_SINGLECUSTOME" ON "GZVLG"."CONTRACTDOC" ("SINGLECUSTOMERREASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_USERCERT_USSU
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_USERCERT_USSU" ON "GZVLG"."USERCERTSYSUSER" ("USERCERT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CEEXECUTIONLINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CEEXECUTIONLINE" ON "GZVLG"."CEEXECUTIONLINE" ("CONTRACTEXECDOC_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_CCCONTRACT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_CCCONTRACT" ON "GZVLG"."CONTRACTDOC" ("CONFCONCCONTRACT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOMEN_PARENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOMEN_PARENT" ON "GZVLG"."DOMEN" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REFDOC_REF
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REFDOC_REF" ON "GZVLG"."REFDOC" ("REF_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2DOC_RECIPIENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2DOC_RECIPIENT" ON "GZVLG"."PLAN2DOC" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DESCRIPTION_DESCGROUP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DESCRIPTION_DESCGROUP" ON "GZVLG"."DESCRIPTION" ("DESCGROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_DIGEST_DIGESTSIGN
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_DIGEST_DIGESTSIGN" ON "GZVLG"."DIGESTSIGN" ("DIGEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_OOSORGANIZATION_REGION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_OOSORGANIZATION_REGION" ON "GZVLG"."OOSORGANIZATION" ("FACTREGIONKLADRCODE", "SUBORDINATIONTYPEID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RPLSITE_RPLRULE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RPLSITE_RPLRULE" ON "GZVLG"."RPLSITE" ("RPLRULE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_FGROUPHEADER_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_FGROUPHEADER_NAME" ON "GZVLG"."FGROUPHEADER" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_FACTDOC_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_FACTDOC_BUDGET" ON "GZVLG"."FACTDOC" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_BANKGUARANTEEDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_BANKGUARANTEEDOC" ON "GZVLG"."BANKGUARANTEEDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_QUALREQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_QUALREQ" ON "GZVLG"."QUALREQ" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_LEDGER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_LEDGER" ON "GZVLG"."LEDGER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_QUALIFYS_COMPETITORPOSORD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_QUALIFYS_COMPETITORPOSORD" ON "GZVLG"."QUALIFYSELECT" ("ORDER_ID", "COMPETITORPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_COMMISSION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_COMMISSION" ON "GZVLG"."COMMISSION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2LEDGER_UNITNAME
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2LEDGER_UNITNAME" ON "GZVLG"."PLAN2LEDGER" ("UNITNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CONBUDGE_ESTIMATE_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CONBUDGE_ESTIMATE_ID" ON "GZVLG"."CONBUDGETLINE" ("ESTIMATE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P2ARRANGEMENT_PUBLICDISCU
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P2ARRANGEMENT_PUBLICDISCU" ON "GZVLG"."PLAN2ARRANGEMENT" ("PUBLICDISCUSSCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2GOODS_PLAN2DOC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2GOODS_PLAN2DOC" ON "GZVLG"."PLAN2GOODS" ("PLAN2DOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPCUSTOMER_CUSTPOSTCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPCUSTOMER_CUSTPOSTCODE" ON "GZVLG"."CMPCUSTOMER" ("CUSTOMERPOSTCOUNTRY_ID", "CUSTOMERPOSTTERRITORYCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORGETP_ORGROLE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORGETP_ORGROLE" ON "GZVLG"."ORGETP" ("ORGROLE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PURCHASEPLANDOC_DOC_DATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PURCHASEPLANDOC_DOC_DATE" ON "GZVLG"."PURCHASEPLANDOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCUMENTCLASS_PRINT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCUMENTCLASS_PRINT" ON "GZVLG"."DOCUMENTCLASS" ("PRINTCLIENTOBJECT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_NOTICEDOC_DOC_DATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_NOTICEDOC_DOC_DATE" ON "GZVLG"."NOTICEDOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCEVENT_USERPROCTREE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCEVENT_USERPROCTREE" ON "GZVLG"."DOCEVENT" ("USERPROCTREE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_DISPSTAT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_DISPSTAT" ON "GZVLG"."PLAN3PURCHASEDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DIGESTSIGN_SIGNFORMAT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DIGESTSIGN_SIGNFORMAT" ON "GZVLG"."DIGESTSIGN" ("SIGNVERSION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_ORDERDOC_DATENUM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_ORDERDOC_DATENUM" ON "GZVLG"."ORDERDOC" ("DOC_DATE", "DOC_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_INVOICEDOC_DOC_DATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_INVOICEDOC_DOC_DATE" ON "GZVLG"."INVOICEDOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRCARDDOC_CON
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRCARDDOC_CON" ON "GZVLG"."CONTRACTCARDDOC" ("CON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_CLAIMDOC_DNI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_CLAIMDOC_DNI" ON "GZVLG"."CLAIMDOC" ("DOCUMENTCLASS_ID", COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_DESCRIPTION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_DESCRIPTION" ON "GZVLG"."PLAN3PURCHASEDOC" ("DESCRIPTION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFRGROUPPROP_GROUPPROP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFRGROUPPROP_GROUPPROP" ON "GZVLG"."OFRGROUPPROP" ("GROUPPROP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RBL_INDUSTRYCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RBL_INDUSTRYCODE" ON "GZVLG"."RESERVEDBUDGETLINE" ("INDUSTRYCODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORG_FACTERRITORY_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORG_FACTERRITORY_ID" ON "GZVLG"."ORG" ("FACTERRITORY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ROLEATTACH_DOCCATEGORY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ROLEATTACH_DOCCATEGORY" ON "GZVLG"."ROLEATTACH" ("CATEGORY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_OFFERDOC_DATENUM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_OFFERDOC_DATENUM" ON "GZVLG"."OFFERDOC" ("DOC_DATE", "DOC_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_INVOICEDOC_DATENUM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_INVOICEDOC_DATENUM" ON "GZVLG"."INVOICEDOC" ("DOC_DATE", "DOC_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INSTITUTIONLINE_GI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INSTITUTIONLINE_GI" ON "GZVLG"."INSTITUTIONLINE" ("GRANTINVESTMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCSTATUS_USERPROCTREE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCSTATUS_USERPROCTREE" ON "GZVLG"."DOCSTATUS" ("USERPROCTREE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_P3PURFEATURE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_P3PURFEATURE" ON "GZVLG"."PLAN3PURCHASEFEATURE" ("PLAN3PURCHASEDOC_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2DAILYTOTALS_CUSTOMER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2DAILYTOTALS_CUSTOMER" ON "GZVLG"."PLAN2DAILYTOTALS" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ROLEREGISTER_GRANTINGUSER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ROLEREGISTER_GRANTINGUSER" ON "GZVLG"."ROLEREGISTER" ("GRANTINGUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_RCPT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_RCPT" ON "GZVLG"."PLAN3PURCHASEDOC" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ROLEAPPOBJ_APPOBJNAME
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ROLEAPPOBJ_APPOBJNAME" ON "GZVLG"."ROLEAPPOBJ" ("APPOBJNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLUGIN_PARENTRPL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLUGIN_PARENTRPL" ON "GZVLG"."RPLTABLEPLUGIN" ("PLUGIN_RPLTABLE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN2GOODS_CODE3
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN2GOODS_CODE3" ON "GZVLG"."PLAN2GOODS" ("CODE3") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORG_DIRECTOR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORG_DIRECTOR" ON "GZVLG"."ORG" ("DIRECTOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PERSON
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PERSON" ON "GZVLG"."PERSON" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_SINGLECUST
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_SINGLECUST" ON "GZVLG"."PLAN3PURCHASEDOC" ("SINGLECUSTOMERREASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSPOSITION_DISPSTAT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSPOSITION_DISPSTAT" ON "GZVLG"."PLAN2OOSPOSITION" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_KBKLINEFIT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_KBKLINEFIT" ON "GZVLG"."KBKLINEFIT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GROUPPROP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GROUPPROP" ON "GZVLG"."GROUPPROP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGROLES
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGROLES" ON "GZVLG"."ORGROLES" ("ORG_ID", "ORGROLE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_SPECIALORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_SPECIALORG" ON "GZVLG"."ORDERDOC" ("SPECIALORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INVBUDGETLINE_LIABILITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INVBUDGETLINE_LIABILITY" ON "GZVLG"."INVBUDGETLINE" ("LIABILITYEXPENSE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OFRGROUPPROP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OFRGROUPPROP" ON "GZVLG"."OFRGROUPPROP" ("OFFER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_RECOILDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_RECOILDOC_DISPSTATUS" ON "GZVLG"."RECOILDOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CLAIMDOC_PARENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CLAIMDOC_PARENT" ON "GZVLG"."CLAIMDOC" ("PARENT_CONTRACT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_RQDOCCHI_DOC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_RQDOCCHI_DOC_ID" ON "GZVLG"."RQDOCCHILD" ("DOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCSTATUS_PROCTREE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCSTATUS_PROCTREE" ON "GZVLG"."DOCSTATUS" ("PROCTREE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONEXECSTEP2
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONEXECSTEP2" ON "GZVLG"."CONEXECSTEP2" ("CONTRACT_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_USERROLE_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_USERROLE_NAME" ON "GZVLG"."USERROLE" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQCOMMEMBER_PERSONAL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQCOMMEMBER_PERSONAL" ON "GZVLG"."RQCOMMEMBER" ("COMMEMBER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_KLADR_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_KLADR_CODE" ON "GZVLG"."KLADR" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GOODSOKDP_OKVED
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GOODSOKDP_OKVED" ON "GZVLG"."GOODSOKDP" ("OKVED_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_OFRGROUPPROP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_OFRGROUPPROP" ON "GZVLG"."OFRGROUPPROP" ("OFFER_ID", "GROUPCODE", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LEDGER_FINSRC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LEDGER_FINSRC" ON "GZVLG"."LEDGER" ("FINSRC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FUNCDOCUMENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FUNCDOCUMENT" ON "GZVLG"."FUNCDOCUMENT" ("FUNUNIT_ID", "DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_OFFERDOC_VENDOR_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_OFFERDOC_VENDOR_ID" ON "GZVLG"."OFFERDOC" ("VENDOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LEDGER_DESCRIPTION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LEDGER_DESCRIPTION" ON "GZVLG"."LEDGER" ("DESCRIPTIONCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQLOT_CURRENCY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQLOT_CURRENCY" ON "GZVLG"."RQLOT" ("CURRENCY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_DOCACTION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_DOCACTION" ON "GZVLG"."DOCACTION" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID", "NAME", "USER_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CERTREVOKEREQ_DOCCLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CERTREVOKEREQ_DOCCLASS" ON "GZVLG"."CERTREVOKEREQUEST" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2LEDGER_GOODS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2LEDGER_GOODS" ON "GZVLG"."PLAN2LEDGER" ("GOODS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN2GOODS_CODE1
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN2GOODS_CODE1" ON "GZVLG"."PLAN2GOODS" ("CODE1") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CLNDTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CLNDTYPE" ON "GZVLG"."CLNDTYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_RQVENDOR_VENDOR_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_RQVENDOR_VENDOR_ID" ON "GZVLG"."RQVENDOR" ("VENDOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_LICTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_LICTYPE" ON "GZVLG"."LICTYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2DOC_NECESSITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2DOC_NECESSITY" ON "GZVLG"."PLAN2DOC" ("NECESSITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_AUCTIONB_DOCUMENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_AUCTIONB_DOCUMENT_ID" ON "GZVLG"."AUCTIONBID" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2DOCCHILD_DOCUMENTID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2DOCCHILD_DOCUMENTID" ON "GZVLG"."PLAN2DOCCHILD" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN2GOODS_CODE5
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN2GOODS_CODE5" ON "GZVLG"."PLAN2GOODS" ("CODE5") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LEDGER_NECESSITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LEDGER_NECESSITY" ON "GZVLG"."LEDGER" ("NECESSITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_TYPEDOCREQ_REQTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_TYPEDOCREQ_REQTYPE" ON "GZVLG"."TYPEDOCREQ" ("REQUIREMENTTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LEDGER_UNIT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LEDGER_UNIT" ON "GZVLG"."LEDGER" ("UNITNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CODE_GOODS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CODE_GOODS" ON "GZVLG"."GOODS" ("GROUP_ID", "CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CERTREVOKEREQ_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CERTREVOKEREQ_DOCUMENT" ON "GZVLG"."CERTREVOKEREQUEST" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CEPAYPENALTY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CEPAYPENALTY" ON "GZVLG"."CEPAYMENTPENALTY" ("CONTRACTEXECDOC_ID", "PENALTYPOS", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REPORT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REPORT" ON "GZVLG"."REPORT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONTRACTCARDDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONTRACTCARDDOC" ON "GZVLG"."CONTRACTCARDDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RPLSITE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RPLSITE" ON "GZVLG"."RPLSITE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_NOTIFYMSGEVENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_NOTIFYMSGEVENT" ON "GZVLG"."NOTIFYMSGEVENT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ABANDONEDREASON
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ABANDONEDREASON" ON "GZVLG"."ABANDONEDREASON" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQGOODS_OKVED
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQGOODS_OKVED" ON "GZVLG"."RQGOODS" ("OKVED_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_COMPLAINTDOC_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_COMPLAINTDOC_BUDGET" ON "GZVLG"."COMPLAINTDOC" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLANPOSITIONCHANGEREASON
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLANPOSITIONCHANGEREASON" ON "GZVLG"."PLANPOSITIONCHANGEREASON" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FUNCUNIT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FUNCUNIT" ON "GZVLG"."FUNCUNIT" ("FUNUNIT_ID", "FUNUNIT_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2DOC_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2DOC_BUDGET" ON "GZVLG"."PLAN2DOC" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORGACCOU_KEEPER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORGACCOU_KEEPER_ID" ON "GZVLG"."ORGACCOUNT" ("KEEPER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CERTREVOKEREQ_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CERTREVOKEREQ_DISPSTATUS" ON "GZVLG"."CERTREVOKEREQUEST" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PROCUREMENT_ORDER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PROCUREMENT_ORDER" ON "GZVLG"."PROCUREMENT" ("ORDER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_REPFRAGMENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_REPFRAGMENT" ON "GZVLG"."REPFRAGMENT" ("NAME", "ISNOTICE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPCOMMEMBER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPCOMMEMBER" ON "GZVLG"."CMPCOMMEMBER" ("ORDER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_RQQUALRE_LOTPOSREQUEST_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_RQQUALRE_LOTPOSREQUEST_ID" ON "GZVLG"."RQQUALREQ" ("REQUEST_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFFERDOC_VENDORCOUNTRY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFFERDOC_VENDORCOUNTRY" ON "GZVLG"."OFFERDOC" ("VENDORCOUNTRY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_RQGOODS_GROUPCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_RQGOODS_GROUPCODE" ON "GZVLG"."RQGOODS" ("GROUPCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPEXPEN_GROUPCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPEXPEN_GROUPCODE" ON "GZVLG"."CMPEXPENSE" ("GROUPCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQGOODS_OKDP_CODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQGOODS_OKDP_CODE" ON "GZVLG"."RQGOODS" ("OKDP_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LEDGER_PLAN2DOC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LEDGER_PLAN2DOC" ON "GZVLG"."LEDGER" ("PLAN2DOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_TYPEREQCRIT_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_TYPEREQCRIT_PURCHASEMODE" ON "GZVLG"."TYPEREQCRIT" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFFERDOC_PROPFORM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFFERDOC_PROPFORM" ON "GZVLG"."OFFERDOC" ("VENDORPROPFORM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCUMENTCLASS_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCUMENTCLASS_DOCUMENT" ON "GZVLG"."DOCUMENTCLASS" ("CLIENTDOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_TASKJOURNAL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_TASKJOURNAL" ON "GZVLG"."TASKJOURNAL" ("ACTION_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_OFRSUPPL_LOTPOSOFFER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_OFRSUPPL_LOTPOSOFFER_ID" ON "GZVLG"."OFRSUPPLYSHEDULE" ("OFFER_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSPOS_CONEXECSTAGES
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSPOS_CONEXECSTAGES" ON "GZVLG"."PLAN2OOSPOSITION" ("CONEXECSTAGESCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_BANKGUARANTEEREFREASON
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_BANKGUARANTEEREFREASON" ON "GZVLG"."BANKGUARANTEEREFREASON" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REPSOURCE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REPSOURCE" ON "GZVLG"."REPSOURCE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCEVERRLOG_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCEVERRLOG_DISPSTATUS" ON "GZVLG"."DOCEVERRLOG" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQQUALREQ_PLACEMENTFEAT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQQUALREQ_PLACEMENTFEAT" ON "GZVLG"."RQQUALREQ" ("PLACEMENTFEATURE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PFPM_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PFPM_PURCHASEMODE" ON "GZVLG"."PLACEMENTFEATUREPM" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORDERSUM_CMPBUDGETLINEPOSO
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORDERSUM_CMPBUDGETLINEPOSO" ON "GZVLG"."ORDERSUMMARY" ("ORDER_ID", "CMPBUDGETLINEPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CUSTOMERLOT_CONSETTACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CUSTOMERLOT_CONSETTACC_ID" ON "GZVLG"."CMPCUSTOMERLOT" ("GUARCONTRSETTLEMENTACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONSOLIDDOC_CMPORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONSOLIDDOC_CMPORG" ON "GZVLG"."CONSOLIDDOC" ("CMPORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCRESTATITMS_RET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCRESTATITMS_RET" ON "GZVLG"."DOCRETENTIONSTATITEMS" ("DOCRETENTION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_REPNOTICE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_REPNOTICE" ON "GZVLG"."REQUESTDOC" ("REPNOTICE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_CONTRACTEXECDOC_DNI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_CONTRACTEXECDOC_DNI" ON "GZVLG"."CONTRACTEXECDOC" ("DOCUMENTCLASS_ID", COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_NOTIFYMSGDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_NOTIFYMSGDOC_DOCUMENT" ON "GZVLG"."NOTIFYMSGDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RECOILLINES
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RECOILLINES" ON "GZVLG"."RECOILLINES" ("RECOILDOC_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REPPROFILE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REPPROFILE" ON "GZVLG"."REPPROFILE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPDISCU_LOTPOSORDER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPDISCU_LOTPOSORDER_ID" ON "GZVLG"."CMPDISCUSSION" ("ORDER_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPFEATURE_CMPLOT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPFEATURE_CMPLOT" ON "GZVLG"."CMPFEATURE" ("ORDER_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORGCHILD_CHILD_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORGCHILD_CHILD_ID" ON "GZVLG"."ORGCHILD" ("CHILD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OOS223PURCHASENOTICEINFO
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OOS223PURCHASENOTICEINFO" ON "GZVLG"."OOS223PURCHASENOTICEINFO" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_CLNDTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_CLNDTYPE" ON "GZVLG"."CLNDTYPE" ("CLND_YEAR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_COMPLAINTDOC_DOC_DATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_COMPLAINTDOC_DOC_DATE" ON "GZVLG"."COMPLAINTDOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PURCHCARRY_FINSRC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PURCHCARRY_FINSRC" ON "GZVLG"."PURCHASECARRY" ("FINSRC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CDCAVILTYPE_CAVILTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CDCAVILTYPE_CAVILTYPE" ON "GZVLG"."CDCAVILTYPE" ("CAVILTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CEPENALTY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CEPENALTY" ON "GZVLG"."CEPENALTY" ("CONTRACTEXECDOC_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_P3GOODS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_P3GOODS" ON "GZVLG"."PLAN3PURCHASEGOODS" ("PLAN3PURCHASEDOC_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQLOT_CONMNGRRESP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQLOT_CONMNGRRESP" ON "GZVLG"."RQLOT" ("CONMNGRRESP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN3DOC_PLANYEAR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN3DOC_PLANYEAR" ON "GZVLG"."PLAN3DOC" ("PLANYEAR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLAN3DOCCHILD
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLAN3DOCCHILD" ON "GZVLG"."PLAN3DOCCHILD" ("DOC_ID", "PLAN3DOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PURCHASEPLANDOC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PURCHASEPLANDOC" ON "GZVLG"."PURCHASEPLANDOC" ("BUDGET_ID", "CUSTOMER_ID", "PLANYEAR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_GOODSGROUP_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_GOODSGROUP_CODE" ON "GZVLG"."GOODSGROUP" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_INVOICEDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_INVOICEDOC" ON "GZVLG"."INVOICEDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_CONTRACTEXECDOC_NI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_CONTRACTEXECDOC_NI" ON "GZVLG"."CONTRACTEXECDOC" (COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_KBKLINEFIT_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_KBKLINEFIT_BUDGET" ON "GZVLG"."KBKLINEFIT" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_NUMPREFIX
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_NUMPREFIX" ON "GZVLG"."NUMPREFIX" ("NUMGENERATOR_ID", "SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQVENDOR_ORGFORM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQVENDOR_ORGFORM" ON "GZVLG"."RQVENDOR" ("PROPFORM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_CLIENTOBJECTCOMMENTS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_CLIENTOBJECTCOMMENTS" ON "GZVLG"."CLIENTOBJECTCOMMENTS" ("CLIENTOBJECT_ID", "BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPCRITERIONLINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPCRITERIONLINE" ON "GZVLG"."CMPCRITERIONLINE" ("ORDER_ID", "CMPCRITERIONPOS", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_TYPEREQ_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_TYPEREQ_PURCHASEMODE" ON "GZVLG"."TYPEREQ" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_COMPLAINTDOC_NI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_COMPLAINTDOC_NI" ON "GZVLG"."COMPLAINTDOC" (COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ALTUNIT_ALTGOODSGROUP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ALTUNIT_ALTGOODSGROUP" ON "GZVLG"."ALTUNITFACTOR" ("ALTGOODSGROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PURCHASECARRY_PAYCONDITIO
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PURCHASECARRY_PAYCONDITIO" ON "GZVLG"."PURCHASECARRY" ("PAYCONDITIONCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONSOLIDDOC_DOC_DATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONSOLIDDOC_DOC_DATE" ON "GZVLG"."CONSOLIDDOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_COMPLAINTDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_COMPLAINTDOC_DISPSTATUS" ON "GZVLG"."COMPLAINTDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_TASKJOURNAL_SYSUSER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_TASKJOURNAL_SYSUSER" ON "GZVLG"."TASKJOURNAL" ("SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_REQUESTDOC_PARENTREQUEST
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_REQUESTDOC_PARENTREQUEST" ON "GZVLG"."REQUESTDOC" ("PARENTREQUESTDOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OFRRETREASON
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OFRRETREASON" ON "GZVLG"."OFRRETREASON" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RECOILLINES_GOODSGROUPCOD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RECOILLINES_GOODSGROUPCOD" ON "GZVLG"."RECOILLINES" ("GROUPCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLGOODSPROP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLGOODSPROP" ON "GZVLG"."PLGOODSPROP" ("GOODSID", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCCATEGORY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCCATEGORY" ON "GZVLG"."DOCCATEGORY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GOODSGROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GOODSGROUP" ON "GZVLG"."GOODSGROUP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REPFRAGMENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REPFRAGMENT" ON "GZVLG"."REPFRAGMENT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_CONTRACTDOC_DI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_CONTRACTDOC_DI" ON "GZVLG"."CONTRACTDOC" (COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONREASONLINE_CONREASON
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONREASONLINE_CONREASON" ON "GZVLG"."CONTRACTREASON_DOCLINES" ("CONTRACTREASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_MSGSITEEXCHANGE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_MSGSITEEXCHANGE" ON "GZVLG"."MSGSITEEXCHANGE" ("MSGSITE_ID", "DOCEXCHANGESCHEME_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORDERDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORDERDOC" ON "GZVLG"."ORDERDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2GOODS_GOODSGROUP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2GOODS_GOODSGROUP" ON "GZVLG"."PLAN2GOODS" ("GROUPCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CLNDDAY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CLNDDAY" ON "GZVLG"."CLNDDAY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CONSUPPL_PLACEPOSCONTRACT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CONSUPPL_PLACEPOSCONTRACT" ON "GZVLG"."CONSUPPLYSHEDULE" ("CONTRACT_ID", "PLACEPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RECOILDOC_CONTRACTOR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RECOILDOC_CONTRACTOR" ON "GZVLG"."RECOILDOC" ("CON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN2GOODS_CODE10
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN2GOODS_CODE10" ON "GZVLG"."PLAN2GOODS" ("CODE10") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_NOTICEDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_NOTICEDOC_DOCUMENT" ON "GZVLG"."NOTICEDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_UPDPACKAGE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_UPDPACKAGE" ON "GZVLG"."UPDPACKAGE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GBPM
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GBPM" ON "GZVLG"."GOODSBANPURCHASEMODE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLNGOODS_OKPD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLNGOODS_OKPD" ON "GZVLG"."PLNGOODS" ("OKPD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PURCHASECARRY_INDUSTRYCOD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PURCHASECARRY_INDUSTRYCOD" ON "GZVLG"."PURCHASECARRY" ("INDUSTRYCODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CCCONTRACT_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CCCONTRACT_PURCHASEMODE" ON "GZVLG"."CONFCONCLUSIONCONTRACT" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPDISCU_PHASEPOSORDER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPDISCU_PHASEPOSORDER_ID" ON "GZVLG"."CMPDISCUSSION" ("ORDER_ID", "PHASEPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CERTREVOKEREQ_USERCERT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CERTREVOKEREQ_USERCERT" ON "GZVLG"."CERTREVOKEREQUEST" ("USERCERT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ROLERIGHT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ROLERIGHT" ON "GZVLG"."ROLERIGHT" ("USERROLE_ID", "SYSRIGHT_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPQUALREQ_PLACEMENTFEAT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPQUALREQ_PLACEMENTFEAT" ON "GZVLG"."CMPQUALREQ" ("PLACEMENTFEATURE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_CURRENCY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_CURRENCY" ON "GZVLG"."CONTRACTDOC" ("CURRENCY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_AUCTIONBID_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_AUCTIONBID_BUDGET" ON "GZVLG"."AUCTIONBID" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_FGROUPATTACH_FGROUP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_FGROUPATTACH_FGROUP" ON "GZVLG"."FGROUPATTACH" ("FGROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_KLADR
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_KLADR" ON "GZVLG"."KLADR" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INVOICEDOC_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INVOICEDOC_BUDGET" ON "GZVLG"."INVOICEDOC" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORDERSUM_CMPLOTPOSORDER_I
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORDERSUM_CMPLOTPOSORDER_I" ON "GZVLG"."ORDERSUMMARY" ("ORDER_ID", "CMPLOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_DOCEVENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_DOCEVENT" ON "GZVLG"."DOCEVENT" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID", "NAME", "USER_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_KLADR_CODE4
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_KLADR_CODE4" ON "GZVLG"."KLADR" ("CODE4") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P2ARRANGEMENT_COUNTRY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P2ARRANGEMENT_COUNTRY" ON "GZVLG"."PLAN2ARRANGEMENT" ("COUNTRY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONCONTRACTOR_EXECUTER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONCONTRACTOR_EXECUTER" ON "GZVLG"."CONCONTRACTOR" ("ORGEXECUTER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_INDUSTRYCODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_INDUSTRYCODE" ON "GZVLG"."INDUSTRYCODE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REFERENCECLASS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REFERENCECLASS" ON "GZVLG"."REFERENCECLASS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ROLEREFNAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ROLEREFNAME" ON "GZVLG"."ROLEREFCLASS" ("USERROLE_ID", "REF_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REPATTACH_REPDOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REPATTACH_REPDOCUMENT" ON "GZVLG"."REPTEMPLATEATTACH" ("REPDOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN3DOC_CUSTOMER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN3DOC_CUSTOMER" ON "GZVLG"."PLAN3DOC" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CLAIMDOC_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CLAIMDOC_OPERTYPE" ON "GZVLG"."CLAIMDOC" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2GOODS_GOODSBRANCH
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2GOODS_GOODSBRANCH" ON "GZVLG"."PLAN2GOODS" ("GOODSBRANCH_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GOODSOKPDPREFCOUNTRY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GOODSOKPDPREFCOUNTRY" ON "GZVLG"."GOODSOKPDCOUNTRYPREF" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_KLADRSTREET_CODE1
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_KLADRSTREET_CODE1" ON "GZVLG"."KLADRSTREET" ("CODE1") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_ORDERDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_ORDERDOC_DISPSTATUS" ON "GZVLG"."ORDERDOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_AUCTIONL_LOTPOSORDER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_AUCTIONL_LOTPOSORDER_ID" ON "GZVLG"."AUCTIONLOG" ("ORDER_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ETP_OOSETPCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ETP_OOSETPCODE" ON "GZVLG"."ETP" ("OOSETPCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CLNDDAYTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CLNDDAYTYPE" ON "GZVLG"."CLNDDAYTYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SYSPARAM
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SYSPARAM" ON "GZVLG"."SYSPARAM" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_CONTERCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_CONTERCODE" ON "GZVLG"."CONTRACTDOC" ("CONCOUNTRY_ID", "CONTERRITORYCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_RPLLOG_TABLE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_RPLLOG_TABLE" ON "GZVLG"."RPLLOG" ("RPLTABLE_ID", "GENERATION", "RECORD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_ORDERDOC_DNI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_ORDERDOC_DNI" ON "GZVLG"."ORDERDOC" ("DOCUMENTCLASS_ID", COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CACHEMAN
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CACHEMAN" ON "GZVLG"."CACHEMAN" ("GUID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCRESTAT_DOCRET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCRESTAT_DOCRET" ON "GZVLG"."DOCRETENTIONSTATUS" ("DOCRETENTION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ROLEFUNC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ROLEFUNC" ON "GZVLG"."ROLEFUNC" ("USERROLE_ID", "FUNUNIT_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_TYPECRIT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_TYPECRIT" ON "GZVLG"."TYPECRIT" ("TYPEREQCRITID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGROLE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGROLE" ON "GZVLG"."ORGROLE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONSOLIDDOC_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONSOLIDDOC_BUDGET" ON "GZVLG"."CONSOLIDDOC" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_DOCCUSTOMFIELDS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_DOCCUSTOMFIELDS" ON "GZVLG"."DOCCUSTOMFIELDS" ("DOCUMENTCLASS_ID", "NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_KLADR_PARENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_KLADR_PARENT" ON "GZVLG"."KLADR" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OPERTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OPERTYPE" ON "GZVLG"."OPERTYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPPERSONALRESP_RESP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPPERSONALRESP_RESP" ON "GZVLG"."CMPPERSONALRESP" ("RESPONSIBILITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RECOILLINES_INDUSTRYCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RECOILLINES_INDUSTRYCODE" ON "GZVLG"."RECOILLINES" ("INDUSTRYCODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONAGREEMENTSDOCS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONAGREEMENTSDOCS" ON "GZVLG"."CONAGREEMENTSDOCS" ("CONTRACT_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2DOC_OOSDISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2DOC_OOSDISPSTATUS" ON "GZVLG"."PLAN2DOC" ("OOSDISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLANREQUEST
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLANREQUEST" ON "GZVLG"."PLANREQUEST" ("REQUEST_ID", "DOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CONTRACT_CMPORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CONTRACT_CMPORG_ID" ON "GZVLG"."CONTRACTDOC" ("CMPORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_OFRGROUP_GROUPCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_OFRGROUP_GROUPCODE" ON "GZVLG"."OFRGROUPPROP" ("GROUPCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2ARRANGEMENT_LOTNAME
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2ARRANGEMENT_LOTNAME" ON "GZVLG"."PLAN2ARRANGEMENT" ("LOTNAMECACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CERTREQ_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CERTREQ_DOCUMENT" ON "GZVLG"."CERTREQUEST" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_NOTICEDO_AUTHORORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_NOTICEDO_AUTHORORG_ID" ON "GZVLG"."NOTICEDOC" ("AUTHORORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OOSNOTIFICATIONLOT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OOSNOTIFICATIONLOT" ON "GZVLG"."OOSNOTIFICATIONLOT" ("ID", "NOTIFICATION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCDIGESTRULE_FGROUPHEADE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCDIGESTRULE_FGROUPHEADE" ON "GZVLG"."DOCDIGESTRULE" ("FGROUPHEADER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_BANK_BIC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_BANK_BIC" ON "GZVLG"."BANK" ("BIC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GOODSOKPD_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GOODSOKPD_PURCHASEMODE" ON "GZVLG"."GOODSOKPDPURCHASEMODE" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SIGNTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SIGNTYPE" ON "GZVLG"."SIGNTYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONSUPPLYSHEDULE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONSUPPLYSHEDULE" ON "GZVLG"."CONSUPPLYSHEDULE" ("CONTRACT_ID", "GOODSPOS", "PLACEPOS", "SUPPLYDATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_DISPSTATUS" ON "GZVLG"."REQUESTDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_USERORG_ORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_USERORG_ORG" ON "GZVLG"."USERORG" ("ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_AUCTIONBID_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_AUCTIONBID_DISPSTATUS" ON "GZVLG"."AUCTIONBID" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_PLANDOC_NI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_PLANDOC_NI" ON "GZVLG"."PLANDOC" (COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_OFRDOCRE_LOTPOSOFFER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_OFRDOCRE_LOTPOSOFFER_ID" ON "GZVLG"."OFRDOCREQVAL" ("OFFER_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OOSCONTRACTPRODUCTS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OOSCONTRACTPRODUCTS" ON "GZVLG"."OOSCONTRACTPRODUCTS" ("CONTRACT_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_OFFERDOC_CLASS_ETPKEY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_OFFERDOC_CLASS_ETPKEY" ON "GZVLG"."OFFERDOC" ("DOCUMENTCLASS_ID", "ETPKEY", "ETP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_RECOILDOC_NI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_RECOILDOC_NI" ON "GZVLG"."RECOILDOC" (COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCREQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCREQ" ON "GZVLG"."DOCREQ" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFRDECREASON_OFRRETREASON
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFRDECREASON_OFRRETREASON" ON "GZVLG"."OFRDECREASON" ("OFRRETREASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPCUSTO_CUSTOMER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPCUSTO_CUSTOMER_ID" ON "GZVLG"."CMPCUSTOMER" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_NOTICEDOC_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_NOTICEDOC_OPERTYPE" ON "GZVLG"."NOTICEDOC" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RPLTRANSACTMODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RPLTRANSACTMODE" ON "GZVLG"."RPLTRANSACTMODE" ("NUM_TRANSACTION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONGOODSPROP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONGOODSPROP" ON "GZVLG"."CONGOODSPROP" ("CONTRACT_ID", "GOODSPOS", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_CLASSOPER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_CLASSOPER" ON "GZVLG"."CLASSOPER" ("DOCUMENTCLASS_ID", "OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPPLACE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPPLACE" ON "GZVLG"."CMPPLACE" ("ORDER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ANYDATA
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ANYDATA" ON "GZVLG"."ANYDATA" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_CODETYPE_SEQORDER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_CODETYPE_SEQORDER" ON "GZVLG"."CODETYPE" ("BUDGET_ID", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCDIGESTRULE_RULESCRIPT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCDIGESTRULE_RULESCRIPT" ON "GZVLG"."DOCDIGESTRULE" ("RULESCRIPT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PURCHCARRY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PURCHCARRY" ON "GZVLG"."PURCHASECARRY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN3DOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN3DOC_DOCUMENT" ON "GZVLG"."PLAN3DOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3LINE_FINSRC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3LINE_FINSRC" ON "GZVLG"."PLAN3PURCHASELINE" ("FINSRC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_BUDGETSTAGE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_BUDGETSTAGE" ON "GZVLG"."BUDGETSTAGE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORGLICENSE_LICTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORGLICENSE_LICTYPE" ON "GZVLG"."ORGLICENCE" ("LICTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PERSONAL
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PERSONAL" ON "GZVLG"."PERSONAL" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_EQUALITY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_EQUALITY" ON "GZVLG"."EQUALITY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RQCRITERIONLINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RQCRITERIONLINE" ON "GZVLG"."RQCRITERIONLINE" ("REQUEST_ID", "RQCRITERIONPOS", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P2ARRANGEMENT_DELIVBASIS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P2ARRANGEMENT_DELIVBASIS" ON "GZVLG"."PLAN2ARRANGEMENT" ("DELIVERYBASIS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLAN2DOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLAN2DOC" ON "GZVLG"."PLAN2DOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_REQUESTDOC_DI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_REQUESTDOC_DI" ON "GZVLG"."REQUESTDOC" (COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_BUDGETLI_RECIPIENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_BUDGETLI_RECIPIENT_ID" ON "GZVLG"."BUDGETLINE" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_FINSRCSATISFY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_FINSRCSATISFY" ON "GZVLG"."FINSRCSATISFY" ("FINSRCSELECTEDYEARID", "FINSRCNEXTYEARID", "FINYEAR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DIGESTSIGN_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DIGESTSIGN_DISPSTATUS" ON "GZVLG"."DIGESTSIGN" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INVOICEDOC_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INVOICEDOC_OPERTYPE" ON "GZVLG"."INVOICEDOC" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CODETYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CODETYPE" ON "GZVLG"."CODETYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RPLRULE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RPLRULE" ON "GZVLG"."RPLRULE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_MENUITEMWEB_MENU
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_MENUITEMWEB_MENU" ON "GZVLG"."MENUITEMWEB" ("MENU_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLANDOC_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLANDOC_OPERTYPE" ON "GZVLG"."PLANDOC" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_MSGSITE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_MSGSITE" ON "GZVLG"."MSGSITE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_INSTITUTIONLINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_INSTITUTIONLINE" ON "GZVLG"."INSTITUTIONLINE" ("BUDGET_ID", "FINYEAR", "RECIPIENT_ID", "INDUSTRYCODE_ID", "GRANTINVESTMENT_ID", "KOSGU", "KIF", "KVR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLAN2OOSPRODUCT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLAN2OOSPRODUCT" ON "GZVLG"."PLAN2OOSPRODUCT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONTRCARDDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONTRCARDDOC_DOCUMENT" ON "GZVLG"."CONTRACTCARDDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_SIGNFORMAT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_SIGNFORMAT_ID" ON "GZVLG"."SUPPORTCRYPTOLIBFORMAT" ("SIGNFORMAT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_CUSTOMER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_CUSTOMER" ON "GZVLG"."PLAN3PURCHASEDOC" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2GOODS_INDUSTRYCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2GOODS_INDUSTRYCODE" ON "GZVLG"."PLAN2GOODS" ("INDUSTRYCODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_USERORG
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_USERORG" ON "GZVLG"."USERORG" ("SYSUSER_ID", "ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GOODSOKPDPREF_OKPD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GOODSOKPDPREF_OKPD" ON "GZVLG"."GOODSOKPDCOUNTRYPREF" ("GOODSOKPD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_BUDGET" ON "GZVLG"."REQUESTDOC" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GOODSOKDP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GOODSOKDP" ON "GZVLG"."GOODSOKDP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ALTGOODSGROUP_TYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ALTGOODSGROUP_TYPE" ON "GZVLG"."ALTGOODSGROUP" ("TYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGETP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGETP" ON "GZVLG"."ORGETP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_REPORT_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_REPORT_NAME" ON "GZVLG"."REPORT" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CNBNKGRNTRTRN
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CNBNKGRNTRTRN" ON "GZVLG"."CONBANKGUARANTEERETURN" ("CONTRACT_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_FACTDOC_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_FACTDOC_OPERTYPE" ON "GZVLG"."FACTDOC" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CERTICREQ_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CERTICREQ_DOCUMENT" ON "GZVLG"."CERTINTERCHANGEREQUEST" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_OFFERDOC_NI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_OFFERDOC_NI" ON "GZVLG"."OFFERDOC" (COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CEPENALTY_DOCUMENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CEPENALTY_DOCUMENT_ID" ON "GZVLG"."CEPENALTY" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_PERSONAL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_PERSONAL" ON "GZVLG"."REQUESTDOC" ("RESPPERSONAL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPDECISION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPDECISION" ON "GZVLG"."CMPDECISION" ("ORDER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CLIENTOBJECT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CLIENTOBJECT" ON "GZVLG"."CLIENTOBJECT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REFATTACH
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REFATTACH" ON "GZVLG"."REFATTACH" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_NOTIFYMSGGROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_NOTIFYMSGGROUP" ON "GZVLG"."NOTIFYMSGGROUP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CONCONTR_ORGACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CONCONTR_ORGACC_ID" ON "GZVLG"."CONCONTRACTOR" ("ORGACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPGOODS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPGOODS" ON "GZVLG"."CMPGOODS" ("ORDER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_P3PURCHASEDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_P3PURCHASEDOC_DISPSTATUS" ON "GZVLG"."PLAN3PURCHASEDOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_FUNUNIT_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_FUNUNIT_NAME" ON "GZVLG"."FUNUNIT" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_MAILRECEIVERGROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_MAILRECEIVERGROUP" ON "GZVLG"."MAILRECEIVERGROUP" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OFRDOCREQVAL
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OFRDOCREQVAL" ON "GZVLG"."OFRDOCREQVAL" ("OFFER_ID", "CMPDOCREQPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_CONSOLIDDOC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_CONSOLIDDOC" ON "GZVLG"."REQUESTDOC" ("CONSOLIDDOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_COMMEMBER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_COMMEMBER" ON "GZVLG"."COMMEMBER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_PURCHASECARRY_RECIPIENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_PURCHASECARRY_RECIPIENT_ID" ON "GZVLG"."PURCHASECARRY" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RPL_MASTER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RPL_MASTER" ON "GZVLG"."RPL" ("MASTER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RQDOCREQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RQDOCREQ" ON "GZVLG"."RQDOCREQ" ("REQUEST_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SUPPORTCRYPTOLIBPARAM
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SUPPORTCRYPTOLIBPARAM" ON "GZVLG"."SUPPORTCRYPTOLIBPARAM" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPPERSONAL_PERSONAL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPPERSONAL_PERSONAL" ON "GZVLG"."CMPPERSONAL" ("PERSONAL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INVOICEDOC_CONEXECUTERACC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INVOICEDOC_CONEXECUTERACC" ON "GZVLG"."INVOICEDOC" ("CONEXECUTERACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_INVGOODS_GROUPCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_INVGOODS_GROUPCODE" ON "GZVLG"."INVGOODS" ("GROUPCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_DOCUMENT_PDD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_DOCUMENT_PDD" ON "GZVLG"."DOCUMENT" ("PARENT_ID", "DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONSTRUCTION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONSTRUCTION" ON "GZVLG"."CONSTRUCTION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONSOLIDDOC_DATENUM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONSOLIDDOC_DATENUM" ON "GZVLG"."CONSOLIDDOC" ("DOC_DATE", "DOC_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONTRACTDOC_DOC_DATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONTRACTDOC_DOC_DATE" ON "GZVLG"."CONTRACTDOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CERTREQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CERTREQ" ON "GZVLG"."CERTREQUEST" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CSGOODS_OKDP_CODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CSGOODS_OKDP_CODE" ON "GZVLG"."CSGOODS" ("OKDP_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OFRDECREASON
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OFRDECREASON" ON "GZVLG"."OFRDECREASON" ("OFFER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCUMENTCLASS_SERVERACTIO
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCUMENTCLASS_SERVERACTIO" ON "GZVLG"."DOCUMENTCLASS" ("DOCPRINTER_ID", "PRINTER_ACTION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONSOLIDDOC_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONSOLIDDOC_OPERTYPE" ON "GZVLG"."CONSOLIDDOC" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PF_PLFEATURE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PF_PLFEATURE" ON "GZVLG"."PLAN3PURCHASEFEATURE" ("PLACEMENTFEATURE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_DELIVADDR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_DELIVADDR" ON "GZVLG"."PLAN3PURCHASEDOC" ("DELIVERYADDRESS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2ARRANGEMENT_PREFEREN
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2ARRANGEMENT_PREFEREN" ON "GZVLG"."PLAN2ARRANGEMENT" ("PREFERENCEGROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RECOILDOC_NECESSITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RECOILDOC_NECESSITY" ON "GZVLG"."RECOILDOC" ("NECESSITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_GOODSGRO_GOODSGROUP_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_GOODSGRO_GOODSGROUP_ID" ON "GZVLG"."GOODSGROUPPURCHASEMODE" ("GOODSGROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_MAILRECEIVERGROUP_USR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_MAILRECEIVERGROUP_USR" ON "GZVLG"."MAILRECEIVERGROUP_RECEIVER" ("SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ATTACHCATEGORIES_CATEGORY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ATTACHCATEGORIES_CATEGORY" ON "GZVLG"."ATTACHCATEGORIES" ("DOCCATEGORY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPGOODS_LOTPOSORDER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPGOODS_LOTPOSORDER_ID" ON "GZVLG"."CMPGOODS" ("ORDER_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2GOODS_RECIPIENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2GOODS_RECIPIENT" ON "GZVLG"."PLAN2GOODS" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LIABILITYCRED_LIABILITYGR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LIABILITYCRED_LIABILITYGR" ON "GZVLG"."LIABILITYCREDENTIAL" ("LIABILITYGROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_ORGETP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_ORGETP" ON "GZVLG"."ORGETP" ("ORG_ID", "ETP_ID", "ORGROLE_ID", "SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ALTGOODSGROUPLINK
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ALTGOODSGROUPLINK" ON "GZVLG"."ALTGOODSGROUPLINK" ("TYPE_ID", "GOODSGROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQFEATURE_RQLOT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQFEATURE_RQLOT" ON "GZVLG"."RQFEATURE" ("REQUEST_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_AUCTIONB_ORDER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_AUCTIONB_ORDER_ID" ON "GZVLG"."AUCTIONBID" ("ORDER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_OFRSUPPL_GOODSPOSOFFER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_OFRSUPPL_GOODSPOSOFFER_ID" ON "GZVLG"."OFRSUPPLYSHEDULE" ("OFFER_ID", "GOODSPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ROLEACTION_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ROLEACTION_DISPSTATUS" ON "GZVLG"."ROLEEVENT" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFRPLACE_CUSTOMER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFRPLACE_CUSTOMER" ON "GZVLG"."OFRPLACE" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OOS223PURCHNOTICELOTINFO
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OOS223PURCHNOTICELOTINFO" ON "GZVLG"."OOS223PURCHNOTICELOTINFO" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_MSG
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_MSG" ON "GZVLG"."MSG" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN2GOODS_CODE4
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN2GOODS_CODE4" ON "GZVLG"."PLAN2GOODS" ("CODE4") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LIABILITY_LINES_EXPENSE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LIABILITY_LINES_EXPENSE" ON "GZVLG"."LIABILITYEXPENSE_DOCLINES" ("LIABILITYEXPENSE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RECOILDOC_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RECOILDOC_OPERTYPE" ON "GZVLG"."RECOILDOC" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORG_OKTMO
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORG_OKTMO" ON "GZVLG"."ORG" ("OKTMO_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SERVERPROVIDER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SERVERPROVIDER" ON "GZVLG"."SERVERPROVIDER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_WEBSTATCACHE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_WEBSTATCACHE" ON "GZVLG"."WEBSTATCACHE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PURCHASECARRY_CONTRACTOR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PURCHASECARRY_CONTRACTOR" ON "GZVLG"."PURCHASECARRY" ("CONTRACTOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_TYPEREQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_TYPEREQ" ON "GZVLG"."TYPEREQ" ("TYPEREQCRITID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_KLADRSTREET_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_KLADRSTREET_CODE" ON "GZVLG"."KLADRSTREET" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GOODSBAN
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GOODSBAN" ON "GZVLG"."GOODSBAN" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORGACCOU_EXECUTER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORGACCOU_EXECUTER_ID" ON "GZVLG"."ORGACCOUNT" ("EXECUTER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_ORGFORM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_ORGFORM" ON "GZVLG"."ORDERDOC" ("VENDORPROPFORM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CETERMINATIONLINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CETERMINATIONLINE" ON "GZVLG"."CETERMINATIONLINE" ("CONTRACTEXECDOC_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_OPERTYPE" ON "GZVLG"."CONTRACTDOC" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INVOICEDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INVOICEDOC_DISPSTATUS" ON "GZVLG"."INVOICEDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_TERRITORY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_TERRITORY" ON "GZVLG"."TERRITORY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCDIGREQS_RULEREQUISITE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCDIGREQS_RULEREQUISITE" ON "GZVLG"."DOCDIGESTREQUISITES" ("RULEREQUISITE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INVOICEDOC_CONTRACTREASON
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INVOICEDOC_CONTRACTREASON" ON "GZVLG"."INVOICEDOC" ("SINGLECUSTOMERREASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_COMPLAINTDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_COMPLAINTDOC_DOCUMENT" ON "GZVLG"."COMPLAINTDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPDOCREQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPDOCREQ" ON "GZVLG"."CMPDOCREQ" ("ORDER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CUSTOMERLOT_CONBANK
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CUSTOMERLOT_CONBANK" ON "GZVLG"."CMPCUSTOMERLOT" ("GUARANTEECONTRACTBIC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REQUESTORDER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REQUESTORDER" ON "GZVLG"."REQUESTORDER" ("ORDER_ID", "DOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORG_ORGFORM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORG_ORGFORM" ON "GZVLG"."ORG" ("PROPFORM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3LINE_RCPT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3LINE_RCPT" ON "GZVLG"."PLAN3PURCHASELINE" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_GOODSOKVED_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_GOODSOKVED_CODE" ON "GZVLG"."GOODSOKVED" ("CODE", "CLASSIFIER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_PURCHASEORGCACHE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_PURCHASEORGCACHE" ON "GZVLG"."ORDERDOC" ("PURCHASEORGNAMECACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFFERDOC_VENDORTERCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFFERDOC_VENDORTERCODE" ON "GZVLG"."OFFERDOC" ("VENDORCOUNTRY_ID", "VENDORTERRITORYCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GOODSGROUP_OKDP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GOODSGROUP_OKDP" ON "GZVLG"."GOODSGROUP" ("OKDP_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_BUDGETLINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_BUDGETLINE" ON "GZVLG"."BUDGETLINE" ("ESTIMATE_ID", "RECIPIENT_ID", "CODE1", "CODE2", "CODE3", "CODE4", "CODE5", "CODE6", "CODE7", "CODE8", "CODE9", "CODE10", "FINYEAR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_OOSPURCHASE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_OOSPURCHASE" ON "GZVLG"."CONTRACTDOC" ("OOSPURCHASEORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RQQUALREQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RQQUALREQ" ON "GZVLG"."RQQUALREQ" ("REQUEST_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCSITELINK
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCSITELINK" ON "GZVLG"."DOCSITELINK" ("DOCUMENT_ID", "SITE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORGADDKPP_ORGFORM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORGADDKPP_ORGFORM" ON "GZVLG"."ORGADDKPP" ("PROPFORM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_COMPLAINTDOC_DI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_COMPLAINTDOC_DI" ON "GZVLG"."COMPLAINTDOC" (COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_INVOICED_TERRITORYCODECOU
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_INVOICED_TERRITORYCODECOU" ON "GZVLG"."INVOICEDOC" ("COUNTRY_ID", "TERRITORYCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_INTERBUDGET_OUTERBUDGET
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_INTERBUDGET_OUTERBUDGET" ON "GZVLG"."INTERBUDGET" ("MSGSITE_ID", "OUTERBUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTYPEATTACH
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTYPEATTACH" ON "GZVLG"."CONTYPEATTACH" ("CONTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_STOREDDOCUMENTS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_STOREDDOCUMENTS" ON "GZVLG"."STOREDDOCUMENTS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_NOTIFYMSGEVENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_NOTIFYMSGEVENT" ON "GZVLG"."NOTIFYMSGEVENT" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GOODS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GOODS" ON "GZVLG"."GOODS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RECOILLINES_PAYCONDITION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RECOILLINES_PAYCONDITION" ON "GZVLG"."RECOILLINES" ("PAYCONDITIONCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PRODUCTS_NOTIFICATION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PRODUCTS_NOTIFICATION" ON "GZVLG"."OOSPRODUCTS" ("NOTIFICATION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CERTICREQ_USERCERT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CERTICREQ_USERCERT" ON "GZVLG"."CERTINTERCHANGEREQUEST" ("USERCERT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLNBL_GRANTINVESTMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLNBL_GRANTINVESTMENT" ON "GZVLG"."PLNBUDGETLINE" ("GRANTINVESTMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_TYPEDOCREQ_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_TYPEDOCREQ_PURCHASEMODE" ON "GZVLG"."TYPEDOCREQ" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_TENDER_CRITERIONPOSORDE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_TENDER_CRITERIONPOSORDE" ON "GZVLG"."TENDER" ("ORDER_ID", "CRITERIONPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN3DOC_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN3DOC_OPERTYPE" ON "GZVLG"."PLAN3DOC" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_INTERBUDGET_BUDGET
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_INTERBUDGET_BUDGET" ON "GZVLG"."INTERBUDGET" ("BUDGET_ID", "FINYEAR", "SYSTEMTYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPSUPPLYSHEDULE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPSUPPLYSHEDULE" ON "GZVLG"."CMPSUPPLYSHEDULE" ("ORDER_ID", "GOODSPOS", "PLACEPOS", "SUPPLYDATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPDOCREQ_REQTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPDOCREQ_REQTYPE" ON "GZVLG"."CMPDOCREQ" ("REQUIREMENTTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN3DOC_COUNTRY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN3DOC_COUNTRY" ON "GZVLG"."PLAN3DOC" ("CUSTOMERCOUNTRY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LEDGER_OKDP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LEDGER_OKDP" ON "GZVLG"."LEDGER" ("OKDP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_BANKGUARANTEEREFDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_BANKGUARANTEEREFDOC" ON "GZVLG"."BANKGUARANTEEREFDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_NMSG_RECEIVER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_NMSG_RECEIVER" ON "GZVLG"."NOTIFYMSG" ("RECEIVER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_DOCCUSTOMFIELDVALUES
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_DOCCUSTOMFIELDVALUES" ON "GZVLG"."DOCCUSTOMFIELDVALUES" ("DOCUMENT_ID", "CUSTFIELD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLANDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLANDOC_DOCUMENT" ON "GZVLG"."PLANDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PURCHASEPLAN_NECESSITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PURCHASEPLAN_NECESSITY" ON "GZVLG"."PURCHASEPLAN" ("NECESSITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_TENDERLINECOMM
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_TENDERLINECOMM" ON "GZVLG"."TENDERLINECOMM" ("TENDERLINE_ID", "COMMEMBERPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCATTACH
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCATTACH" ON "GZVLG"."DOCATTACH" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_REPNOTICE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_REPNOTICE" ON "GZVLG"."ORDERDOC" ("REPNOTICE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GOODSOKPDPURCHASEMODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GOODSOKPDPURCHASEMODE" ON "GZVLG"."GOODSOKPDPURCHASEMODE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2GOODS_FINSRC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2GOODS_FINSRC" ON "GZVLG"."PLAN2GOODS" ("FINSRC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PREFERENCEGROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PREFERENCEGROUP" ON "GZVLG"."PREFERENCEGROUP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RESERVEDLINE_PARENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RESERVEDLINE_PARENT_ID" ON "GZVLG"."RESERVEDBUDGETLINE" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CSGOODSPROP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CSGOODSPROP" ON "GZVLG"."CSGOODSPROP" ("CONSOLID_ID", "GOODSPOS", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FINSRC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FINSRC" ON "GZVLG"."FINSRC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CERTICREQ_DOCCLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CERTICREQ_DOCCLASS" ON "GZVLG"."CERTINTERCHANGEREQUEST" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_KLADR_CHILDLEVEL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_KLADR_CHILDLEVEL" ON "GZVLG"."KLADR" ("CHILDLEVEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DBUPDATE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DBUPDATE" ON "GZVLG"."DBUPDATE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORG
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORG" ON "GZVLG"."ORG" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_BANKGUARANTEEREFDOC_STAT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_BANKGUARANTEEREFDOC_STAT" ON "GZVLG"."BANKGUARANTEEREFDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OFRGOODS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OFRGOODS" ON "GZVLG"."OFRGOODS" ("OFFER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_NOTICEORG_DOCGROUP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_NOTICEORG_DOCGROUP" ON "GZVLG"."NOTICEDOC" ("DOCGROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPEXPENSE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPEXPENSE" ON "GZVLG"."CMPEXPENSE" ("ORDER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_TENDERLINETENDERLI
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_TENDERLINETENDERLI" ON "GZVLG"."TENDERLINE" ("TENDER_ID", "CRITERIONLINESEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INDUSTRYCODE_ORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INDUSTRYCODE_ORG" ON "GZVLG"."INDUSTRYCODE" ("ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PURCHPLANDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PURCHPLANDOC_DISPSTATUS" ON "GZVLG"."PURCHASEPLANDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_AUCTIONBID_DOCUMENTCLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_AUCTIONBID_DOCUMENTCLASS" ON "GZVLG"."AUCTIONBID" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_COMMISSION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_COMMISSION" ON "GZVLG"."REQUESTDOC" ("COMMISSION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PENALTYCHANGEDOCINFO_CLAI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PENALTYCHANGEDOCINFO_CLAI" ON "GZVLG"."CLAIMPENALTYCHANGEDOCINFO" ("CLAIM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN2GOODS_CODE7
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN2GOODS_CODE7" ON "GZVLG"."PLAN2GOODS" ("CODE7") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_RESERVED_ORDER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_RESERVED_ORDER_ID" ON "GZVLG"."RESERVEDBUDGETLINE" ("ORDER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DESCRIPTION_CACHE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DESCRIPTION_CACHE" ON "GZVLG"."DESCRIPTIONCACHE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_HISTORYMODIFY_SYSUSER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_HISTORYMODIFY_SYSUSER" ON "GZVLG"."HISTORYMODIFY" ("SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_PURCHASEPLANDOC_DNI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_PURCHASEPLANDOC_DNI" ON "GZVLG"."PURCHASEPLANDOC" ("DOCUMENTCLASS_ID", COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CEEXECUTIONLINE_FACTDOC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CEEXECUTIONLINE_FACTDOC" ON "GZVLG"."CEEXECUTIONLINE" ("FACTDOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_COUNTRY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_COUNTRY" ON "GZVLG"."PLAN3PURCHASEDOC" ("COUNTRY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPCOMMEMBER_PERSONAL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPCOMMEMBER_PERSONAL" ON "GZVLG"."CMPCOMMEMBER" ("COMMEMBER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PREFERENCEGROUP_PURCHASE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PREFERENCEGROUP_PURCHASE" ON "GZVLG"."PREFERENCEGROUP" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_APPOBJ_APPMODULE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_APPOBJ_APPMODULE" ON "GZVLG"."APPOBJ" ("MODULEID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_RESERVED_CUSTOMER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_RESERVED_CUSTOMER_ID" ON "GZVLG"."RESERVEDBUDGETLINE" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CRLFILE_CRLPOINT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CRLFILE_CRLPOINT" ON "GZVLG"."CRLFILE" ("CRLPOINT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RQGOODSPROP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RQGOODSPROP" ON "GZVLG"."RQGOODSPROP" ("REQUEST_ID", "GOODSPOS", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_PURCHASEMOD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_PURCHASEMOD" ON "GZVLG"."PLAN3PURCHASEDOC" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_TENDERCRITERIONCHILD
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_TENDERCRITERIONCHILD" ON "GZVLG"."TENDERCRITERIONCHILD" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_SYSUSER_ORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_SYSUSER_ORG" ON "GZVLG"."SYSUSER" ("ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CSGOODS_OKPD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CSGOODS_OKPD" ON "GZVLG"."CSGOODS" ("OKPD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_KLADRSTREET_CODE6
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_KLADRSTREET_CODE6" ON "GZVLG"."KLADRSTREET" ("CODE6") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORG_COUNTRY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORG_COUNTRY" ON "GZVLG"."ORG" ("COUNTRY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCUMENTCLASS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCUMENTCLASS" ON "GZVLG"."DOCUMENTCLASS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_DOCUMENT" ON "GZVLG"."PLAN3PURCHASEDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONREASONLINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONREASONLINE" ON "GZVLG"."CONTRACTREASON_DOCLINES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCCOMMENT_SYSUSER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCCOMMENT_SYSUSER" ON "GZVLG"."DOCCOMMENT" ("USER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSPRODUCT_OKPD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSPRODUCT_OKPD" ON "GZVLG"."PLAN2OOSPRODUCT" ("OKPD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P2ARRANGEMENT_CONTRPROV
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P2ARRANGEMENT_CONTRPROV" ON "GZVLG"."PLAN2ARRANGEMENT" ("CONTRACTPROVIDINGCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_RPLLOG_GENERATION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_RPLLOG_GENERATION" ON "GZVLG"."RPLLOG" ("GENERATION", "RPLTABLE_ID", "RECORD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CONTRACT_CONACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CONTRACT_CONACC_ID" ON "GZVLG"."CONTRACTDOC" ("CONACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_INDUSTRYCODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_INDUSTRYCODE" ON "GZVLG"."INDUSTRYCODE" ("BUDGET_ID", "FINYEAR", "ORG_ID", "CODE", "FOREIGNKEY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_ORDERNAME
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_ORDERNAME" ON "GZVLG"."PLAN3PURCHASEDOC" ("ORDERNAMECACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FGROUPHEADER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FGROUPHEADER" ON "GZVLG"."FGROUPHEADER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CLAIMDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CLAIMDOC_DISPSTATUS" ON "GZVLG"."CLAIMDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_DOCUMENT_CLASS_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_DOCUMENT_CLASS_ID" ON "GZVLG"."DOCUMENT" ("DOCUMENTCLASS_ID", "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCUMENT_PARDISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCUMENT_PARDISPSTATUS" ON "GZVLG"."DOCUMENT" ("PARDISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_PLNBUDGE_ESTIMATE_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_PLNBUDGE_ESTIMATE_ID" ON "GZVLG"."PLNBUDGETLINE" ("ESTIMATE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONGOODS_OKPD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONGOODS_OKPD" ON "GZVLG"."CONGOODS" ("OKPD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_AUCTIONBID
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_AUCTIONBID" ON "GZVLG"."AUCTIONBID" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPGOODS_OKDP_CODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPGOODS_OKDP_CODE" ON "GZVLG"."CMPGOODS" ("OKDP_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFFERDOC_VENDOREXECUTER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFFERDOC_VENDOREXECUTER" ON "GZVLG"."OFFERDOC" ("VENDOREXECUTER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_TYPEDOCREQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_TYPEDOCREQ" ON "GZVLG"."TYPEDOCREQ" ("TYPEDOCREQGROUPID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DDS_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DDS_DISPSTATUS" ON "GZVLG"."DOCDIGESTRULE" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_CMPORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_CMPORG" ON "GZVLG"."PLAN3PURCHASEDOC" ("CMPORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_ORDERDOC_DOC_DATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_ORDERDOC_DOC_DATE" ON "GZVLG"."ORDERDOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_CONTRCARDDOC_NI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_CONTRCARDDOC_NI" ON "GZVLG"."CONTRACTCARDDOC" (COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_OPERTYPE" ON "GZVLG"."PLAN3PURCHASEDOC" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_REFATTACH
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_REFATTACH" ON "GZVLG"."REFATTACH" ("TABLENAME", "RECORD_ID", "ATTACH_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CLAIMDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CLAIMDOC_DOCUMENT" ON "GZVLG"."CLAIMDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_PURCHASEPLAN_CMPORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_PURCHASEPLAN_CMPORG_ID" ON "GZVLG"."PURCHASEPLAN" ("CMPORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DESCRIPTION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DESCRIPTION" ON "GZVLG"."DESCRIPTION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_REQUESTD_RECIPIENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_REQUESTD_RECIPIENT_ID" ON "GZVLG"."REQUESTDOC" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_DOCATTACH
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_DOCATTACH" ON "GZVLG"."DOCATTACH" ("DOCUMENT_ID", "ATTACH_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_BUDGET_RELATION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_BUDGET_RELATION" ON "GZVLG"."BUDGET" ("RELATIONBUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_CONSOLIDDOC_DNI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_CONSOLIDDOC_DNI" ON "GZVLG"."CONSOLIDDOC" ("DOCUMENTCLASS_ID", COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_PURCHASECARRY_GROUPCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_PURCHASECARRY_GROUPCODE" ON "GZVLG"."PURCHASECARRY" ("GROUPCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCUMENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCUMENT" ON "GZVLG"."DOCUMENT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_INVOICEDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_INVOICEDOC_DOCUMENT" ON "GZVLG"."INVOICEDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_RPL$CONSTRAINTS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_RPL$CONSTRAINTS" ON "GZVLG"."RPL$CONSTRAINTS" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_FCTGOODS_OKDP_CODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_FCTGOODS_OKDP_CODE" ON "GZVLG"."FCTGOODS" ("OKDP_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DBCONNECT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DBCONNECT" ON "GZVLG"."DBCONNECT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_TENDERLINECOMM_CMPCOMMEMB
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_TENDERLINECOMM_CMPCOMMEMB" ON "GZVLG"."TENDERLINECOMM" ("ORDER_ID", "COMMEMBERPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PURCHASEPLAN_FINSRC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PURCHASEPLAN_FINSRC" ON "GZVLG"."PURCHASEPLAN" ("FINSRC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INVGOODS_OKPD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INVGOODS_OKPD" ON "GZVLG"."INVGOODS" ("OKPD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PURCHASEPLANDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PURCHASEPLANDOC_DISPSTATUS" ON "GZVLG"."PURCHASEPLANDOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_OFFERDOC_DOC_DATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_OFFERDOC_DOC_DATE" ON "GZVLG"."OFFERDOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFFERDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFFERDOC_DISPSTATUS" ON "GZVLG"."OFFERDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CERTREQ_DOCCLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CERTREQ_DOCCLASS" ON "GZVLG"."CERTREQUEST" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_MSG_STATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_MSG_STATUS" ON "GZVLG"."MSG" ("DISPSTATUS", "RECEIVER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OOS223PNLI_PURCHNOTICEINF
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OOS223PNLI_PURCHNOTICEINF" ON "GZVLG"."OOS223PURCHNOTICELOTINFO" ("OOS223PURCHASENOTICEINFO_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FILEFOLDER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FILEFOLDER" ON "GZVLG"."FILEFOLDER" ("STORAGE_NAME", "DEVICE_NAME", "FILE_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_FGROUPATTACH_DOCATTACHEX
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_FGROUPATTACH_DOCATTACHEX" ON "GZVLG"."FGROUPATTACH" ("DOCATTACH_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_CLAIMDOC_NI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_CLAIMDOC_NI" ON "GZVLG"."CLAIMDOC" (COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_DISPSTATUS" ON "GZVLG"."ORDERDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_PLAN
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_PLAN" ON "GZVLG"."PURCHASEPLAN" ("GROUPCODE", "CUSTOMER_ID", "CMPORG_ID", "PURCHASEMODE_ID", "PURCHASEPLANDOC_ID", "FINSRC_ID", "NECESSITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONTREXECDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONTREXECDOC" ON "GZVLG"."CONTRACTEXECDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLANDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLANDOC_DISPSTATUS" ON "GZVLG"."PLANDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPDOCRE_LOTPOSORDER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPDOCRE_LOTPOSORDER_ID" ON "GZVLG"."CMPDOCREQ" ("ORDER_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INVBL_INDUSTRYCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INVBL_INDUSTRYCODE" ON "GZVLG"."INVBUDGETLINE" ("INDUSTRYCODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONTRACTREASON
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONTRACTREASON" ON "GZVLG"."CONTRACTREASON" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_MENUITEM
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_MENUITEM" ON "GZVLG"."MENUITEM" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_TASKJOURNAL
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_TASKJOURNAL" ON "GZVLG"."TASKJOURNAL" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_INVOICEDOC_DNI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_INVOICEDOC_DNI" ON "GZVLG"."INVOICEDOC" ("DOCUMENTCLASS_ID", COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPDECISION_CMPCOMPETITOR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPDECISION_CMPCOMPETITOR" ON "GZVLG"."CMPDECISION" ("ORDER_ID", "COMPETITORPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PREFERENCEFEATURE_PLFEATU
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PREFERENCEFEATURE_PLFEATU" ON "GZVLG"."PREFERENCEGROUPFEATURE" ("PLACEMENTFEATURE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_RPL$CONSTRAINTS_TRIG
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_RPL$CONSTRAINTS_TRIG" ON "GZVLG"."RPL$CONSTRAINTS" ("TRIGGERNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN3DOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN3DOC_DISPSTATUS" ON "GZVLG"."PLAN3DOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_TYPECRITLINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_TYPECRITLINE" ON "GZVLG"."TYPECRITLINE" ("TYPEREQCRIT_ID", "TYPECRITPOS", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_STATISTICSSOURCEVALUES
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_STATISTICSSOURCEVALUES" ON "GZVLG"."WEBSTATCACHEVAL" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGUNFAIR
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGUNFAIR" ON "GZVLG"."ORGUNFAIR" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_CONMNGRRESP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_CONMNGRRESP" ON "GZVLG"."REQUESTDOC" ("CONMNGRRESP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONBL_GRANTINVESTMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONBL_GRANTINVESTMENT" ON "GZVLG"."CONBUDGETLINE" ("GRANTINVESTMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQBL_INDUSTRYCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQBL_INDUSTRYCODE" ON "GZVLG"."RQBUDGETLINE" ("INDUSTRYCODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORGSELSTATUS_ORGSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORGSELSTATUS_ORGSTATUS" ON "GZVLG"."ORGSELSTATUS" ("ORGSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_ORDERDOC_CLASS_ETPKEY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_ORDERDOC_CLASS_ETPKEY" ON "GZVLG"."ORDERDOC" ("DOCUMENTCLASS_ID", "ETPKEY", "ETP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_QUALIFYSELECT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_QUALIFYSELECT" ON "GZVLG"."QUALIFYSELECT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_MSG_SYSUSER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_MSG_SYSUSER" ON "GZVLG"."MSG" ("SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_STOREDDO_DOCUMENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_STOREDDO_DOCUMENT_ID" ON "GZVLG"."STOREDDOCUMENTS" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQDOCREQ_REQTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQDOCREQ_REQTYPE" ON "GZVLG"."RQDOCREQ" ("REQUIREMENTTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONEXECSTEP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONEXECSTEP" ON "GZVLG"."CONEXECSTEP" ("CONTRACT_ID", "CONTRACTORPOS", "BUDGETLINEPOS", "EXECDATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index DOCRETENTIONSTATUS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."DOCRETENTIONSTATUS" ON "GZVLG"."DOCRETENTIONSTATUS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RPLVERSIONLOG_RPLTABLE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RPLVERSIONLOG_RPLTABLE" ON "GZVLG"."RPLVERSIONLOG" ("RPLTABLE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_P2ARRANGEMENT_CONTRACTOR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_P2ARRANGEMENT_CONTRACTOR" ON "GZVLG"."PLAN2ARRANGEMENT" ("CONTRACTOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_GOODSGRO_GROUPCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_GOODSGRO_GROUPCODE" ON "GZVLG"."GOODSGROUPDOCDETAIL" ("GROUPCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GROUPUNIT_UNIT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GROUPUNIT_UNIT" ON "GZVLG"."GROUPUNIT" ("UNITNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQLOT_CONBANK
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQLOT_CONBANK" ON "GZVLG"."RQLOT" ("GUARANTEECONTRACTBIC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_NOTIFYMSGRULE_RECEIVER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_NOTIFYMSGRULE_RECEIVER" ON "GZVLG"."NOTIFYMSGRULE_RECEIVER" ("NOTIFYMSGRULE_ID", "PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_METAOBJECT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_METAOBJECT" ON "GZVLG"."METAOBJECT" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPCUSTOMERLOT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPCUSTOMERLOT" ON "GZVLG"."CMPCUSTOMERLOT" ("ORDER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_DOCCLASS_DISPSTATUS_ID
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_DOCCLASS_DISPSTATUS_ID" ON "GZVLG"."DOCCLASS_DISPSTATUS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LEDGER_ORG_CMPORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LEDGER_ORG_CMPORG" ON "GZVLG"."LEDGER" ("CMPORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCATTACHEX
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCATTACHEX" ON "GZVLG"."DOCATTACHEX" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PROPTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PROPTYPE" ON "GZVLG"."PROPTYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_SYSUSER_PANEL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_SYSUSER_PANEL" ON "GZVLG"."SYSUSER" ("PANEL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_CURHISTORY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_CURHISTORY" ON "GZVLG"."CURHISTORY" ("BUDGET_ID", "CURRENCY_ID", "DT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQLOT_CONTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQLOT_CONTYPE" ON "GZVLG"."RQLOT" ("CONTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P2ARRANGEMENT_CHANGEREASO
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P2ARRANGEMENT_CHANGEREASO" ON "GZVLG"."PLAN2ARRANGEMENT" ("CHANGEREASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONSOLIDDOC_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONSOLIDDOC_PURCHASEMODE" ON "GZVLG"."CONSOLIDDOC" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PANELITEM_PANEL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PANELITEM_PANEL" ON "GZVLG"."PANELITEM" ("PANEL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQCONDEALRESP_LOTPOS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQCONDEALRESP_LOTPOS" ON "GZVLG"."RQCONDEALRESP" ("REQUEST_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FCTGOODS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FCTGOODS" ON "GZVLG"."FCTGOODS" ("FACT_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PROCTREE_PARENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PROCTREE_PARENT" ON "GZVLG"."PROCTREE" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GOODSPROP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GOODSPROP" ON "GZVLG"."GOODSPROP" ("GOODS_ID", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_KLADR_CODE3
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_KLADR_CODE3" ON "GZVLG"."KLADR" ("CODE3") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_INVOICEDOC_DI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_INVOICEDOC_DI" ON "GZVLG"."INVOICEDOC" (COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSPOS_PUBLICDISCUSS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSPOS_PUBLICDISCUSS" ON "GZVLG"."PLAN2OOSPOSITION" ("PUBLICDISCUSSCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_OKTMO_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_OKTMO_CODE" ON "GZVLG"."OKTMO" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONREFUSALFACT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONREFUSALFACT" ON "GZVLG"."CONREFUSALFACT" ("CONTRACT_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFRRETREASON_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFRRETREASON_PURCHASEMODE" ON "GZVLG"."OFRRETREASON" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_SYSMSG_SYSUSER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_SYSMSG_SYSUSER" ON "GZVLG"."SYSEVENT" ("SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OOSCONTRACT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OOSCONTRACT" ON "GZVLG"."OOSCONTRACT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLNSHEDULE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLNSHEDULE" ON "GZVLG"."PLNSHEDULE" ("PLANDOC_ID", "GOODSPOS", "BUDGETLINEPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_PURCHASEORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_PURCHASEORG_ID" ON "GZVLG"."ORDERDOC" ("PURCHASEORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_NOTICEDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_NOTICEDOC_DISPSTATUS" ON "GZVLG"."NOTICEDOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_NUMPREFIX_SYSUSER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_NUMPREFIX_SYSUSER" ON "GZVLG"."NUMPREFIX" ("SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_SUPPORTCRYPTOLIBFORMAT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_SUPPORTCRYPTOLIBFORMAT" ON "GZVLG"."SUPPORTCRYPTOLIBFORMAT" ("SUPPORTCRYPTOLIB_ID", "SIGNFORMAT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGTURNOVER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGTURNOVER" ON "GZVLG"."ORGTURNOVER" ("ORG_ID", "YR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ROLEREGISTER_DOCUMENTCLAS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ROLEREGISTER_DOCUMENTCLAS" ON "GZVLG"."ROLEREGISTER" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_BUDGET" ON "GZVLG"."ORDERDOC" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPPAYSHEDULE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPPAYSHEDULE" ON "GZVLG"."CMPPAYSHEDULE" ("ORDER_ID", "BUDGETLINEPOS", "PAYDATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTREXECDOC_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTREXECDOC_BUDGET" ON "GZVLG"."CONTRACTEXECDOC" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_PLANREQU_DOC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_PLANREQU_DOC_ID" ON "GZVLG"."PLANREQUEST" ("DOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P2ARRANGEMENT_PAYCOND
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P2ARRANGEMENT_PAYCOND" ON "GZVLG"."PLAN2ARRANGEMENT" ("PAYCONDITIONCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REFJOURNAL_REFCLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REFJOURNAL_REFCLASS" ON "GZVLG"."REFJOURNAL" ("REF_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GOODSOKDPPREF_COUNTRY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GOODSOKDPPREF_COUNTRY" ON "GZVLG"."GOODSOKDPCOUNTRYPREF" ("COUNTRY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPPLACE_ESTIMATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPPLACE_ESTIMATE" ON "GZVLG"."CMPPLACE" ("ESTIMATE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SCHPLAN
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SCHPLAN" ON "GZVLG"."SCHPLAN" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RPL$CONSTRAINTS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RPL$CONSTRAINTS" ON "GZVLG"."RPL$CONSTRAINTS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SERVERACTION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SERVERACTION" ON "GZVLG"."SERVERACTION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_PURCHASEMODE" ON "GZVLG"."REQUESTDOC" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_NOTIFYMSGGROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_NOTIFYMSGGROUP" ON "GZVLG"."NOTIFYMSGGROUP" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPLOT_CURRENCY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPLOT_CURRENCY" ON "GZVLG"."CMPLOT" ("CURRENCY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_ETP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_ETP" ON "GZVLG"."ORDERDOC" ("ETP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_COMPLAINTDOC_DNI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_COMPLAINTDOC_DNI" ON "GZVLG"."COMPLAINTDOC" ("DOCUMENTCLASS_ID", COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ROLEORG_ORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ROLEORG_ORG" ON "GZVLG"."ROLEORG" ("ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_PANEL_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_PANEL_NAME" ON "GZVLG"."PANEL" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_KLADRSTREET_KLADR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_KLADRSTREET_KLADR" ON "GZVLG"."KLADRSTREET" ("KLADR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RULEREQUISITE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RULEREQUISITE" ON "GZVLG"."RULEREQUISITE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_BANK
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_BANK" ON "GZVLG"."BANK" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONTRACTDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONTRACTDOC_DOCUMENT" ON "GZVLG"."CONTRACTDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_RECOILDOC_DNI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_RECOILDOC_DNI" ON "GZVLG"."RECOILDOC" ("DOCUMENTCLASS_ID", COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_INVOICED_CONACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_INVOICED_CONACC_ID" ON "GZVLG"."INVOICEDOC" ("CONACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GROUPPROPVALUE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GROUPPROPVALUE" ON "GZVLG"."GROUPPROPVALUE" ("GROUPPROP_ID", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OOSPROTOCOLLOT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OOSPROTOCOLLOT" ON "GZVLG"."OOSPROTOCOLLOT" ("NOTIFICATIONNUMBER", "PROTOCOLNUMBER", "PROTOCOLVERSIONNUMBER", "LOTNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CEREPARATIONLINE_REPDOCID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CEREPARATIONLINE_REPDOCID" ON "GZVLG"."CEREPARATIONLINE" ("CONTRACTREPARATIONDOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_REPFIELD
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_REPFIELD" ON "GZVLG"."REPFIELD" ("REPFORM_ID", "FIELD_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REPDOCFRAGMENT_REPFRAGMEN
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REPDOCFRAGMENT_REPFRAGMEN" ON "GZVLG"."REPDOCFRAGMENT" ("REPFRAGMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_QUALREQ_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_QUALREQ_PURCHASEMODE" ON "GZVLG"."QUALREQ" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_DOCUMENT_DOC_DATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_DOCUMENT_DOC_DATE" ON "GZVLG"."DOCUMENT" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GOODSOKDP_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GOODSOKDP_PURCHASEMODE" ON "GZVLG"."GOODSOKDPPURCHASEMODE" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ETPATTACH
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ETPATTACH" ON "GZVLG"."ETPATTACH" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_TENDERLINE_CMPCRITERIONLI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_TENDERLINE_CMPCRITERIONLI" ON "GZVLG"."TENDERLINE" ("ORDER_ID", "CRITERIONPOS", "CRITERIONLINESEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_EXCHANGECLASSES
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_EXCHANGECLASSES" ON "GZVLG"."EXCHANGECLASSES" ("DOCEXCHANGESCHEME_ID", "DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_TERTYPE_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_TERTYPE_NAME" ON "GZVLG"."TERTYPE" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REPFORM_SERVERPROCESSOR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REPFORM_SERVERPROCESSOR" ON "GZVLG"."REPFORM" ("SERVERPROCESSOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ETPTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ETPTYPE" ON "GZVLG"."ETPTYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PURCHASECARRY_DELIV
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PURCHASECARRY_DELIV" ON "GZVLG"."PURCHASECARRY" ("DELIVERYBASIS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_UPDPACKAGE_SENDER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_UPDPACKAGE_SENDER" ON "GZVLG"."UPDPACKAGE" ("SENDER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ROLEBUDGET
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ROLEBUDGET" ON "GZVLG"."ROLEBUDGET" ("USERROLE_ID", "BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PURCHASEPLANDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PURCHASEPLANDOC_DOCUMENT" ON "GZVLG"."PURCHASEPLANDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN2ARRANGEMENT_GOODS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN2ARRANGEMENT_GOODS" ON "GZVLG"."PLAN2ARRANGEMENT" ("PLAN2GOODS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FUNCOBJECT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FUNCOBJECT" ON "GZVLG"."FUNCOBJECT" ("FUNUNIT_ID", "CLIENTOBJECT_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FINSRCSATISFY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FINSRCSATISFY" ON "GZVLG"."FINSRCSATISFY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GRANTINVESTMENT_ORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GRANTINVESTMENT_ORG" ON "GZVLG"."GRANTINVESTMENT" ("ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PURCHASECARRY_DESCRIPTION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PURCHASECARRY_DESCRIPTION" ON "GZVLG"."PURCHASECARRY" ("DESCRIPTIONCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQLOT_APPBANK
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQLOT_APPBANK" ON "GZVLG"."RQLOT" ("GUARAPPBIC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RECOILLINES_DELIV
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RECOILLINES_DELIV" ON "GZVLG"."RECOILLINES" ("DELIVERYBASIS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_CURRENCY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_CURRENCY" ON "GZVLG"."REQUESTDOC" ("CURRENCY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REPFRAGMENTCHILD
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REPFRAGMENTCHILD" ON "GZVLG"."REPFRAGMENTCHILD" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ETP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ETP" ON "GZVLG"."ETP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DELIVERYBASIS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DELIVERYBASIS" ON "GZVLG"."DELIVERYBASIS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CERTREVOKEREQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CERTREVOKEREQ" ON "GZVLG"."CERTREVOKEREQUEST" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_OFRGOODS_LOTPOSOFFER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_OFRGOODS_LOTPOSOFFER_ID" ON "GZVLG"."OFRGOODS" ("OFFER_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_P3GOODSPROP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_P3GOODSPROP" ON "GZVLG"."PLAN3PURCHASEGOODSPROP" ("PLAN3PURCHASEDOC_ID", "GOODSPOS", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ROLEEVENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ROLEEVENT" ON "GZVLG"."ROLEEVENT" ("USERROLE_ID", "DOCUMENTCLASS_ID", "DISPSTATUS_ID", "EVENT_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPOOSMODIF
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPOOSMODIF" ON "GZVLG"."CMPOOSMODIFICATION" ("ORDER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CLAIMDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CLAIMDOC" ON "GZVLG"."CLAIMDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCUMENT_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCUMENT_OPERTYPE" ON "GZVLG"."DOCUMENT" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_BUDGET
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_BUDGET" ON "GZVLG"."BUDGET" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPPLACE_TERRITORYCODECOU
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPPLACE_TERRITORYCODECOU" ON "GZVLG"."CMPPLACE" ("COUNTRY_ID", "TERRITORYCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_USERSESSION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_USERSESSION" ON "GZVLG"."USERSESSION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_ETP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_ETP" ON "GZVLG"."REQUESTDOC" ("ETP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_CONTRACTREASON
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_CONTRACTREASON" ON "GZVLG"."REQUESTDOC" ("SINGLECUSTOMERREASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_NOTICEOR_ORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_NOTICEOR_ORG_ID" ON "GZVLG"."NOTICEORG" ("ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFRCRITERIONLINEVAL_OFRCR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFRCRITERIONLINEVAL_OFRCR" ON "GZVLG"."OFRCRITERIONLINEVAL" ("OFFER_ID", "CMPCRITERIONPOS", "ISFINALOFFER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INSTITUTIONLINE_ORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INSTITUTIONLINE_ORG" ON "GZVLG"."INSTITUTIONLINE" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CEEXECLINE_CONEXECDOCTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CEEXECLINE_CONEXECDOCTYPE" ON "GZVLG"."CEEXECUTIONLINE" ("CONTRACTEXECDOCTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPFEATURE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPFEATURE" ON "GZVLG"."CMPFEATURE" ("ORDER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN3DOCCHILD_PLAN3DOC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN3DOCCHILD_PLAN3DOC" ON "GZVLG"."PLAN3DOCCHILD" ("PLAN3DOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_P3PURCHASEDOC_DOCDATA
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_P3PURCHASEDOC_DOCDATA" ON "GZVLG"."PLAN3PURCHASEDOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN2ARRANGEMENT_PURCHASE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN2ARRANGEMENT_PURCHASE" ON "GZVLG"."PLAN2ARRANGEMENT" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PROCTREE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PROCTREE" ON "GZVLG"."PROCTREE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONFCONCCONTRACT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONFCONCCONTRACT" ON "GZVLG"."CONFCONCLUSIONCONTRACT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLAN2OOSOKVED
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLAN2OOSOKVED" ON "GZVLG"."PLAN2OOSOKVED" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CONTRACT_CUSTOMER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CONTRACT_CUSTOMER_ID" ON "GZVLG"."CONTRACTDOC" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_MENUITEMWEB
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_MENUITEMWEB" ON "GZVLG"."MENUITEMWEB" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_COMPLAINTDOC_DATENUM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_COMPLAINTDOC_DATENUM" ON "GZVLG"."COMPLAINTDOC" ("DOC_DATE", "DOC_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PROCTREE_DOCUMENTCLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PROCTREE_DOCUMENTCLASS" ON "GZVLG"."PROCTREE" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSPOS_PERIODICITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSPOS_PERIODICITY" ON "GZVLG"."PLAN2OOSPOSITION" ("PERIODICITYCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_AUCTIONB_COMPETITORPOSORD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_AUCTIONB_COMPETITORPOSORD" ON "GZVLG"."AUCTIONBID" ("ORDER_ID", "COMPETITORPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2LEDGER_OKDP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2LEDGER_OKDP" ON "GZVLG"."PLAN2LEDGER" ("OKDP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OOSCUSTOMERREQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OOSCUSTOMERREQ" ON "GZVLG"."OOSCUSTOMERREQUIREMENT" ("ID", "NOTIFICATION_ID", "LOT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONBUDGETLINE_LIABILITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONBUDGETLINE_LIABILITY" ON "GZVLG"."CONBUDGETLINE" ("LIABILITYEXPENSE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GOODSOKVED
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GOODSOKVED" ON "GZVLG"."GOODSOKVED" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CERTICREQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CERTICREQ" ON "GZVLG"."CERTINTERCHANGEREQUEST" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_MENUITEM_PARENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_MENUITEM_PARENT" ON "GZVLG"."MENUITEM" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OOSORGANIZATION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OOSORGANIZATION" ON "GZVLG"."OOSORGANIZATION" ("REGNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_ORGFORM
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_ORGFORM" ON "GZVLG"."ORGFORM" ("CAPTION", "OOSCODE", "ISACTUAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PURCHPLANDOC_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PURCHPLANDOC_OPERTYPE" ON "GZVLG"."PURCHASEPLANDOC" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPGOODSPROP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPGOODSPROP" ON "GZVLG"."CMPGOODSPROP" ("ORDER_ID", "GOODSPOS", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUIREMENTTYPEPM_PURCHMD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUIREMENTTYPEPM_PURCHMD" ON "GZVLG"."REQUIREMENTTYPEPM" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_OKTMO
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_OKTMO" ON "GZVLG"."CONTRACTDOC" ("CONOKTMO_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REPFRAGMENTCHILD_CHILD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REPFRAGMENTCHILD_CHILD" ON "GZVLG"."REPFRAGMENTCHILD" ("CHILD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_UPDPACKAGE_RECEIVER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_UPDPACKAGE_RECEIVER" ON "GZVLG"."UPDPACKAGE" ("RECEIVER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_NMSG_NOTIFYMSGGROUP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_NMSG_NOTIFYMSGGROUP" ON "GZVLG"."NOTIFYMSG" ("NOTIFYMSGGROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_OOSCONTRACT_NOTICENUMBER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_OOSCONTRACT_NOTICENUMBER" ON "GZVLG"."OOSCONTRACT" ("NOTIFICATIONNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_NUMSEQUENCE_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_NUMSEQUENCE_NAME" ON "GZVLG"."NUMSEQUENCE" ("NAME", "BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_FMTCONVERTER_CONVERTER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_FMTCONVERTER_CONVERTER_ID" ON "GZVLG"."DOCATTACHEX" ("CONVERTER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONTYPEATTACH
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONTYPEATTACH" ON "GZVLG"."CONTYPEATTACH" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCUMENTBLOCKINFO
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCUMENTBLOCKINFO" ON "GZVLG"."DOCUMENTBLOCKINFO" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_REPSOURCE_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_REPSOURCE_NAME" ON "GZVLG"."REPSOURCE" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_CONTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_CONTYPE" ON "GZVLG"."CONTRACTDOC" ("CONTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CONBUDGE_RECIPIENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CONBUDGE_RECIPIENT_ID" ON "GZVLG"."CONBUDGETLINE" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3LINE_GRANTINVESTMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3LINE_GRANTINVESTMENT" ON "GZVLG"."PLAN3PURCHASELINE" ("GRANTINVESTMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_NOTICEDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_NOTICEDOC" ON "GZVLG"."NOTICEDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQBUDGETLINE_FINSRC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQBUDGETLINE_FINSRC" ON "GZVLG"."RQBUDGETLINE" ("FINSRC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_RPLOBJECT_SEQORDER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_RPLOBJECT_SEQORDER" ON "GZVLG"."RPLOBJECT" ("SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLAN2ARRANGEMENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLAN2ARRANGEMENT" ON "GZVLG"."PLAN2ARRANGEMENT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_SEL_DIGEST
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_SEL_DIGEST" ON "GZVLG"."SIGNEXPORTLOG" ("DIGEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RPL_RPLOBJECT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RPL_RPLOBJECT" ON "GZVLG"."RPL" ("RPLOBJECT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ABANDONEDREASON_PM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ABANDONEDREASON_PM" ON "GZVLG"."ABANDONEDREASON" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PROCUREMENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PROCUREMENT" ON "GZVLG"."PROCUREMENT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_RQBUDGET_RECIPIENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_RQBUDGET_RECIPIENT_ID" ON "GZVLG"."RQBUDGETLINE" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_OFFERDOC_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_OFFERDOC_BUDGET" ON "GZVLG"."OFFERDOC" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_MODIFICATION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_MODIFICATION" ON "GZVLG"."CONTRACTDOC" ("MODIFICATIONREASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_BUDGET" ON "GZVLG"."PLAN3PURCHASEDOC" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONORGSTATUS_ORGSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONORGSTATUS_ORGSTATUS" ON "GZVLG"."CONORGSTATUS" ("ORGSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index FK_PURCHPLANDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."FK_PURCHPLANDOC" ON "GZVLG"."PURCHASEPLANDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_CONTEMPDOC_DI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_CONTEMPDOC_DI" ON "GZVLG"."CONTRACTTEMPLATEDOC" (COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_WEBSTATVAL_WEBSTATCACHE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_WEBSTATVAL_WEBSTATCACHE" ON "GZVLG"."WEBSTATCACHEVAL" ("WEBSTAT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPREPDOCUMENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPREPDOCUMENT" ON "GZVLG"."CMPREPDOCUMENT" ("ORDER_ID", "REPDOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN_PURCHASEMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN_PURCHASEMODE" ON "GZVLG"."PURCHASEPLAN" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RPLOBJECT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RPLOBJECT" ON "GZVLG"."RPLOBJECT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_NOTICEEMAILORG
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_NOTICEEMAILORG" ON "GZVLG"."NOTICEEMAILORG" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_NOTICEEM_NOTICEDOC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_NOTICEEM_NOTICEDOC_ID" ON "GZVLG"."NOTICEEMAILORG" ("NOTICEDOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_MAIL
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_MAIL" ON "GZVLG"."MAIL" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_RQBUDGET_TERRITORYCODECOU
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_RQBUDGET_TERRITORYCODECOU" ON "GZVLG"."RQBUDGETLINE" ("COUNTRY_ID", "TERRITORYCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_TYPEDOCREQGROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_TYPEDOCREQGROUP" ON "GZVLG"."TYPEDOCREQGROUP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONSTRFIELDS_CONSTRAINTS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONSTRFIELDS_CONSTRAINTS" ON "GZVLG"."RPL$CONSTRAINTFIELDS" ("RPL$CONSTRAINTS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPPLACE_FINSRC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPPLACE_FINSRC" ON "GZVLG"."CMPPLACE" ("FINSRC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPVOTER_DECISIONPOSORDER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPVOTER_DECISIONPOSORDER" ON "GZVLG"."CMPVOTERESULT" ("ORDER_ID", "DECISIONPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_METAOBJECT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_METAOBJECT" ON "GZVLG"."METAOBJECT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACT_SINGLECUSTOMERDO
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACT_SINGLECUSTOMERDO" ON "GZVLG"."CONTRACTDOC" ("SINGLECUSTOMERREASONDOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_MAIL_READ_DATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_MAIL_READ_DATE" ON "GZVLG"."MAIL" ("READ_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_LEDGER_GOODS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_LEDGER_GOODS" ON "GZVLG"."LEDGER" ("GOODS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCEVENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCEVENT" ON "GZVLG"."DOCEVENT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQFEATURE_PLFEATURE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQFEATURE_PLFEATURE" ON "GZVLG"."RQFEATURE" ("PLACEMENTFEATURE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_CURRENCY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_CURRENCY" ON "GZVLG"."ORDERDOC" ("CURRENCY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONTRCARDDOC_ETPKEY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONTRCARDDOC_ETPKEY" ON "GZVLG"."CONTRACTCARDDOC" ("ETP_ID", "ETPKEY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONTRACTEXECDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONTRACTEXECDOC_DOCUMENT" ON "GZVLG"."CONTRACTEXECDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SIGNFORMAT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SIGNFORMAT" ON "GZVLG"."SIGNFORMAT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_CONTRCARDDOC_DI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_CONTRCARDDOC_DI" ON "GZVLG"."CONTRACTCARDDOC" (COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTREXECDOC_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTREXECDOC_OPERTYPE" ON "GZVLG"."CONTRACTEXECDOC" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2LEDGER_CONTRACTOR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2LEDGER_CONTRACTOR" ON "GZVLG"."PLAN2LEDGER" ("CONTRACTOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_PURCHASEPLANDOC_DI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_PURCHASEPLANDOC_DI" ON "GZVLG"."PURCHASEPLANDOC" (COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCREP_DOCPRINTER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCREP_DOCPRINTER" ON "GZVLG"."DOCUMENTREPORTS" ("DOCPRINTER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPDECIS_PHASEPOSORDER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPDECIS_PHASEPOSORDER_ID" ON "GZVLG"."CMPDECISION" ("ORDER_ID", "PHASEPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RPLRULEOBJ
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RPLRULEOBJ" ON "GZVLG"."RPLRULEOBJ" ("RPLRULE_ID", "RPLOBJECT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CSGOODS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CSGOODS" ON "GZVLG"."CSGOODS" ("CONSOLID_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_BANKGUARANTEEDOC_CUSTORG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_BANKGUARANTEEDOC_CUSTORG" ON "GZVLG"."BANKGUARANTEEDOC" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_BANKGUARANTEEREFDOC_CLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_BANKGUARANTEEREFDOC_CLASS" ON "GZVLG"."BANKGUARANTEEREFDOC" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ALTGGLINK_ALTGOODSGROUP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ALTGGLINK_ALTGOODSGROUP" ON "GZVLG"."ALTGOODSGROUPLINK" ("ALTGOODSGROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CLNDDAY_CLNDDAYTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CLNDDAY_CLNDDAYTYPE" ON "GZVLG"."CLNDDAY" ("CLNDDAYTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_STATISTICSSOURCE_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_STATISTICSSOURCE_NAME" ON "GZVLG"."STATISTICSSOURCE" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RECOILLINES_UNIT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RECOILLINES_UNIT" ON "GZVLG"."RECOILLINES" ("UNITNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCACTION_CLIENTOBJECT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCACTION_CLIENTOBJECT" ON "GZVLG"."DOCACTION" ("CLIENTOBJECT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPFEATURE_PLFEATURE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPFEATURE_PLFEATURE" ON "GZVLG"."CMPFEATURE" ("PLACEMENTFEATURE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CDCAVILTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CDCAVILTYPE" ON "GZVLG"."CDCAVILTYPE" ("CAVILDOC_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GOODSOKPD_OKPD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GOODSOKPD_OKPD" ON "GZVLG"."GOODSOKPDPURCHASEMODE" ("GOODSOKPD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GOODSGROUPPURCHASEMODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GOODSGROUPPURCHASEMODE" ON "GZVLG"."GOODSGROUPPURCHASEMODE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONTRACTEXECDOC_DATENUM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONTRACTEXECDOC_DATENUM" ON "GZVLG"."CONTRACTEXECDOC" ("DOC_DATE", "DOC_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index FK_PLAN
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."FK_PLAN" ON "GZVLG"."PURCHASEPLAN" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_MSGQUEUE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_MSGQUEUE" ON "GZVLG"."MSGQUEUE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FUNCAT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FUNCAT" ON "GZVLG"."FUNCAT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RNP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RNP" ON "GZVLG"."RNP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN3DOC_RESPEXECUTER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN3DOC_RESPEXECUTER" ON "GZVLG"."PLAN3DOC" ("RESPEXECUTER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_NOTICEDO_PUBLISHERORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_NOTICEDO_PUBLISHERORG_ID" ON "GZVLG"."NOTICEDOC" ("PUBLISHERORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_NOTICEORG_SYSDOCGROUP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_NOTICEORG_SYSDOCGROUP" ON "GZVLG"."NOTICEDOC" ("SYSDOCGROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REPTEMPLATEATTACH
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REPTEMPLATEATTACH" ON "GZVLG"."REPTEMPLATEATTACH" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CERTICREQ_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CERTICREQ_DISPSTATUS" ON "GZVLG"."CERTINTERCHANGEREQUEST" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_DISPSTATUS" ON "GZVLG"."CONTRACTDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONPAYSHEDULE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONPAYSHEDULE" ON "GZVLG"."CONPAYSHEDULE" ("CONTRACT_ID", "CONTRACTORPOS", "BUDGETLINEPOS", "PAYDATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_USERCERT_CRLPOINT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_USERCERT_CRLPOINT" ON "GZVLG"."USERCERT" ("CRLPOINT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RQCOMMEMBER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RQCOMMEMBER" ON "GZVLG"."RQCOMMEMBER" ("REQUEST_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FUNCPROCESSOR
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FUNCPROCESSOR" ON "GZVLG"."FUNCPROCESSOR" ("FUNUNIT_ID", "SERVERPROCESSOR_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSOKVED_OKVED
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSOKVED_OKVED" ON "GZVLG"."PLAN2OOSOKVED" ("OKVED_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OOSAPPLICATION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OOSAPPLICATION" ON "GZVLG"."OOSAPPLICATION" ("NOTIFICATIONNUMBER", "LOTNUMBER", "JOURNALNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_IKOKPDID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_IKOKPDID" ON "GZVLG"."PLAN3PURCHASEDOC" ("IKOKPD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_DOCSTATUS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_DOCSTATUS" ON "GZVLG"."DOCSTATUS" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSPOSITION_CURRENCY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSPOSITION_CURRENCY" ON "GZVLG"."PLAN2OOSPOSITION" ("CONTRACTCURRENCY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGFORM_ID
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGFORM_ID" ON "GZVLG"."ORGFORM" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_USESCRYPTOLIBPARAM
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_USESCRYPTOLIBPARAM" ON "GZVLG"."USESCRYPTOLIBPARAM" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_INVOICED_CON_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_INVOICED_CON_ID" ON "GZVLG"."INVOICEDOC" ("CON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CONPLACE_TERRITORYCODECOU
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CONPLACE_TERRITORYCODECOU" ON "GZVLG"."CONPLACE" ("COUNTRY_ID", "TERRITORYCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_RECOILDOC_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_RECOILDOC_DOCUMENT" ON "GZVLG"."RECOILDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RPL$CONSTRAINTFIELDS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RPL$CONSTRAINTFIELDS" ON "GZVLG"."RPL$CONSTRAINTFIELDS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PURCHASECARRY_UNIT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PURCHASECARRY_UNIT" ON "GZVLG"."PURCHASECARRY" ("UNITNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OFRGOODSPROP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OFRGOODSPROP" ON "GZVLG"."OFRGOODSPROP" ("OFFER_ID", "GOODSPOS", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_OOSETPCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_OOSETPCODE" ON "GZVLG"."ORDERDOC" ("OOSETPCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_ANYDATA
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_ANYDATA" ON "GZVLG"."ANYDATA" ("STORAGE", "DEVICE", "DATA_KEY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_KLADRSTREET_CODE3
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_KLADRSTREET_CODE3" ON "GZVLG"."KLADRSTREET" ("CODE3") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_CONTRACTOR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_CONTRACTOR" ON "GZVLG"."PLAN3PURCHASEDOC" ("CONTRACTOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GOODSOKDPPREF_OKDP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GOODSOKDPPREF_OKDP" ON "GZVLG"."GOODSOKDPCOUNTRYPREF" ("GOODSOKDP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_ALTGOODSGROUPTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_ALTGOODSGROUPTYPE" ON "GZVLG"."ALTGOODSGROUPTYPE" ("CAPTION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CURHISTORY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CURHISTORY" ON "GZVLG"."CURHISTORY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_ETPATTACH
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_ETPATTACH" ON "GZVLG"."ETPATTACH" ("DOCATTACHEX_ID", "ETP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_BUDGCODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_BUDGCODE" ON "GZVLG"."BUDGCODE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ROLEAPPOBJ
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ROLEAPPOBJ" ON "GZVLG"."ROLEAPPOBJ" ("USERROLE_ID", "APPOBJNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_REQUESTDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_REQUESTDOC_DISPSTATUS" ON "GZVLG"."REQUESTDOC" ("DOCUMENTCLASS_ID", "DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_TERRITORY_TERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_TERRITORY_TERTYPE" ON "GZVLG"."TERRITORY" ("TERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RESPONSIBILITY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RESPONSIBILITY" ON "GZVLG"."RESPONSIBILITY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONSOLIDDOC_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONSOLIDDOC_DISPSTATUS" ON "GZVLG"."CONSOLIDDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_LIABILITYEXPENSE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_LIABILITYEXPENSE" ON "GZVLG"."LIABILITYEXPENSE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPVENDOR
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPVENDOR" ON "GZVLG"."CMPVENDOR" ("ORDER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REQUIREMENTTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REQUIREMENTTYPE" ON "GZVLG"."REQUIREMENTTYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_PLGOODS_GROUPCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_PLGOODS_GROUPCODE" ON "GZVLG"."PLGOODS" ("GROUPCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LEDGER_ORG_CUSTOMER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LEDGER_ORG_CUSTOMER" ON "GZVLG"."LEDGER" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONTRACTDOC_DATENUM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONTRACTDOC_DATENUM" ON "GZVLG"."CONTRACTDOC" ("DOC_DATE", "DOC_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_NUMSEQUENCE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_NUMSEQUENCE" ON "GZVLG"."NUMSEQUENCE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CLAIMDOC_DATENUM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CLAIMDOC_DATENUM" ON "GZVLG"."CLAIMDOC" ("DOC_DATE", "DOC_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQLOT_APPSETTACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQLOT_APPSETTACC_ID" ON "GZVLG"."RQLOT" ("GUARAPPSETTLEMENTACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LIABILITYCRED_BUDGETSTAGE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LIABILITYCRED_BUDGETSTAGE" ON "GZVLG"."LIABILITYCREDENTIAL" ("STAGECODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGACCOUNT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGACCOUNT" ON "GZVLG"."ORGACCOUNT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLAN2DAILYTOTALS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLAN2DAILYTOTALS" ON "GZVLG"."PLAN2DAILYTOTALS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_CONTEMPDOC_DOC_DATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_CONTEMPDOC_DOC_DATE" ON "GZVLG"."CONTRACTTEMPLATEDOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GOODS_UNIT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GOODS_UNIT" ON "GZVLG"."GOODS" ("UNITNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORGTURNOVER_CURRENCY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORGTURNOVER_CURRENCY" ON "GZVLG"."ORGTURNOVER" ("CURRENCY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_MODIFICATIOND
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_MODIFICATIOND" ON "GZVLG"."CONTRACTDOC" ("MODIFICATIONREASONDOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGACCTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGACCTYPE" ON "GZVLG"."ORGACCTYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPQUALR_LOTPOSORDER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPQUALR_LOTPOSORDER_ID" ON "GZVLG"."CMPQUALREQ" ("ORDER_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REPDOCFRAGMENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REPDOCFRAGMENT" ON "GZVLG"."REPDOCFRAGMENT" ("REPDOCUMENT_ID", "REPFRAGMENT_ID", "BOOKMARK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_TYPEDOCREQGROUP_PURCHMODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_TYPEDOCREQGROUP_PURCHMODE" ON "GZVLG"."TYPEDOCREQGROUP" ("PURCHASEMODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPCOMPE_LOTPOSORDER_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPCOMPE_LOTPOSORDER_ID" ON "GZVLG"."CMPCOMPETITOR" ("ORDER_ID", "LOTPOS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_CMPORGFACTCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_CMPORGFACTCODE" ON "GZVLG"."ORDERDOC" ("CMPORGFACTCOUNTRY_ID", "CMPORGFACTTERRITORYCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_SYSUSER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_SYSUSER" ON "GZVLG"."SYSUSER" ("USERNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CCCONTRACT_PLACINGWAY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CCCONTRACT_PLACINGWAY" ON "GZVLG"."CONFCONCLUSIONCONTRACT" ("PLACINGWAY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_USERCERT_SYSUSER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_USERCERT_SYSUSER" ON "GZVLG"."USERCERT" ("SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PURCHASEPLANDOC_PLANYEAR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PURCHASEPLANDOC_PLANYEAR" ON "GZVLG"."PURCHASEPLANDOC" ("PLANYEAR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DISPSTATUS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DISPSTATUS" ON "GZVLG"."DISPSTATUS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_TENDERCRITERIONCHILD
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_TENDERCRITERIONCHILD" ON "GZVLG"."TENDERCRITERIONCHILD" ("TENDERCRITERION_ID", "CHILD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PAYCONDITION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PAYCONDITION" ON "GZVLG"."PAYCONDITION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RESERVEDLINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RESERVEDLINE" ON "GZVLG"."RESERVEDBUDGETLINE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOMEN
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOMEN" ON "GZVLG"."DOMEN" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_MSGQUEUE_RECEIVER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_MSGQUEUE_RECEIVER" ON "GZVLG"."MSGQUEUE" ("RECEIVER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_PURCHASECARRY_CMPORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_PURCHASECARRY_CMPORG_ID" ON "GZVLG"."PURCHASECARRY" ("CMPORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2GOODS_OLD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2GOODS_OLD" ON "GZVLG"."PLAN2GOODS" ("OLDPLAN2GOODS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FETCHMODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FETCHMODE" ON "GZVLG"."FETCHMODE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_LIABILITY_LINES
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_LIABILITY_LINES" ON "GZVLG"."LIABILITYEXPENSE_DOCLINES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GOODSOKPD
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GOODSOKPD" ON "GZVLG"."GOODSOKPD" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OOSPRODUCTS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OOSPRODUCTS" ON "GZVLG"."OOSPRODUCTS" ("CODE", "NOTIFICATION_ID", "LOT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GBPM_GOODSBAN_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GBPM_GOODSBAN_ID" ON "GZVLG"."GOODSBANPURCHASEMODE" ("GOODSBAN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPLOT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPLOT" ON "GZVLG"."CMPLOT" ("ORDER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_NMSGRULE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_NMSGRULE" ON "GZVLG"."NOTIFYMSGRULE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_MAILRECEIVERGROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_MAILRECEIVERGROUP" ON "GZVLG"."MAILRECEIVERGROUP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONDAMAGEPAYMENTS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONDAMAGEPAYMENTS" ON "GZVLG"."CONDAMAGEPAYMENTS" ("CONTRACT_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_SYSPARAM_SYSUSER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_SYSPARAM_SYSUSER" ON "GZVLG"."SYSPARAM" ("SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_BANKGUARANTEEDOC_DISPSTAT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_BANKGUARANTEEDOC_DISPSTAT" ON "GZVLG"."BANKGUARANTEEDOC" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P2ARRANGEMENT_CHANGEDESCR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P2ARRANGEMENT_CHANGEDESCR" ON "GZVLG"."PLAN2ARRANGEMENT" ("CHANGEDESCRIPTIONCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OFRCRITERIONLINEVAL
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OFRCRITERIONLINEVAL" ON "GZVLG"."OFRCRITERIONLINEVAL" ("OFFER_ID", "CMPCRITERIONPOS", "SEQORDER", "ISFINALOFFER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CURRENCY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CURRENCY" ON "GZVLG"."CURRENCY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPCUSTOMERLOT_CUSTOMER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPCUSTOMERLOT_CUSTOMER" ON "GZVLG"."CMPCUSTOMERLOT" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SUPPLYPLACE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SUPPLYPLACE" ON "GZVLG"."SUPPLYPLACE" ("GOODSID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_WEBSTAT_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_WEBSTAT_BUDGET" ON "GZVLG"."WEBSTATCACHE" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_APPOINTMENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_APPOINTMENT" ON "GZVLG"."APPOINTMENT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCUMENT_SYSUSER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCUMENT_SYSUSER" ON "GZVLG"."DOCUMENT" ("AUTHOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSFEATURE_PLFEATURE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSFEATURE_PLFEATURE" ON "GZVLG"."PLAN2OOSFEATURE" ("PLACEMENTFEATURE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_TERRITORY
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_TERRITORY" ON "GZVLG"."TERRITORY" ("COUNTRY_ID", "CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_DELIVERYBASIS_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_DELIVERYBASIS_CODE" ON "GZVLG"."DELIVERYBASIS" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_REQUESTO_DOCUMENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_REQUESTO_DOCUMENT_ID" ON "GZVLG"."REQUESTORDER" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_SCHEXPDOCS_DOCUMENTCLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_SCHEXPDOCS_DOCUMENTCLASS" ON "GZVLG"."SCHEXPDOCS" ("DOCCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGTITLE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGTITLE" ON "GZVLG"."ORGTITLE" ("ORG_ID", "DTBEGIN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_AUCTIONBID_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_AUCTIONBID_OPERTYPE" ON "GZVLG"."AUCTIONBID" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_INVGOODS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_INVGOODS" ON "GZVLG"."INVGOODS" ("INVOICE_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CLAIMPAYFACT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CLAIMPAYFACT" ON "GZVLG"."CLAIMPAYFACT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_NMSGRULE_NOTIFYMSGGROUP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_NMSGRULE_NOTIFYMSGGROUP" ON "GZVLG"."NOTIFYMSGRULE" ("NOTIFYMSGGROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_EQUALITYCODES
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_EQUALITYCODES" ON "GZVLG"."EQUALITYCODES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FUNUNIT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FUNUNIT" ON "GZVLG"."FUNUNIT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_USERSESSION_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_USERSESSION_BUDGET" ON "GZVLG"."USERSESSION" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FORMATCONVERTER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FORMATCONVERTER" ON "GZVLG"."FORMATCONVERTER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ALTGOODSGROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ALTGOODSGROUP" ON "GZVLG"."ALTGOODSGROUP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_APPSETTACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_APPSETTACC_ID" ON "GZVLG"."REQUESTDOC" ("GUARAPPSETTLEMENTACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_FACTDOC_DOC_DATE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_FACTDOC_DOC_DATE" ON "GZVLG"."FACTDOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_MSGQUEUE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_MSGQUEUE" ON "GZVLG"."MSGQUEUE" ("SENDER_ID", "RECEIVER_ID", "NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ATTACHEDPLANDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ATTACHEDPLANDOC" ON "GZVLG"."ATTACHEDPLANDOC" ("PURCHASEPLANDOC_ID", "DOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DIGESTSIGN_SYSUSER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DIGESTSIGN_SYSUSER" ON "GZVLG"."DIGESTSIGN" ("SYSUSER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RQBUDGETLINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RQBUDGETLINE" ON "GZVLG"."RQBUDGETLINE" ("REQUEST_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CAVILDOC_DOCUMNETCLASS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CAVILDOC_DOCUMNETCLASS" ON "GZVLG"."CAVILDOC" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_USERSESSION_CLOSE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_USERSESSION_CLOSE" ON "GZVLG"."USERSESSION" ("CLOSE_TIME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_BANKGUARANTEE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_BANKGUARANTEE" ON "GZVLG"."CONTRACTDOC" ("GRNTREGNUMBER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPCUSTOMER_CUSTFACTCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPCUSTOMER_CUSTFACTCODE" ON "GZVLG"."CMPCUSTOMER" ("CUSTOMERFACTCOUNTRY_ID", "CUSTOMERFACTTERRITORYCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLAN2DOCCHILD
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLAN2DOCCHILD" ON "GZVLG"."PLAN2DOCCHILD" ("DOC_ID", "PLAN2DOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORG_TERRITORY_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORG_TERRITORY_ID" ON "GZVLG"."ORG" ("TERRITORY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCSTATUS_DOCSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCSTATUS_DOCSTATUS" ON "GZVLG"."DOCSTATUS" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_EQUALITYCODES_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_EQUALITYCODES_CODE" ON "GZVLG"."EQUALITYCODES" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_USESCRYPTOLIBPARAM
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_USESCRYPTOLIBPARAM" ON "GZVLG"."USESCRYPTOLIBPARAM" ("USESCRYPTOLIB_ID", "NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN2GOODS_CODE9
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN2GOODS_CODE9" ON "GZVLG"."PLAN2GOODS" ("CODE9") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_COMPLAINTDOC_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_COMPLAINTDOC_OPERTYPE" ON "GZVLG"."COMPLAINTDOC" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGCHILD
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGCHILD" ON "GZVLG"."ORGCHILD" ("ORG_ID", "CHILD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CLASSOPER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CLASSOPER" ON "GZVLG"."CLASSOPER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ATTACHED_DOC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ATTACHED_DOC_ID" ON "GZVLG"."ATTACHEDPLANDOC" ("DOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RQGOODS_OKPD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RQGOODS_OKPD" ON "GZVLG"."RQGOODS" ("OKPD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_OFRRETREASON_REASON
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_OFRRETREASON_REASON" ON "GZVLG"."OFRRETREASON" ("REASON") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_MENUITEMWEB_PARENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_MENUITEMWEB_PARENT" ON "GZVLG"."MENUITEMWEB" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IX_NUMUSAGE_NUM_VALUE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IX_NUMUSAGE_NUM_VALUE" ON "GZVLG"."NUMUSAGE" ("NUM_VALUE", "USE_COUNT", "NUMSEQUENCE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GROUPUNIT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GROUPUNIT" ON "GZVLG"."GROUPUNIT" ("GROUP_ID", "UNITNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCEVERRLOG_DOCUMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCEVERRLOG_DOCUMENT" ON "GZVLG"."DOCEVERRLOG" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_PLAN2DOC_DOCDATA
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_PLAN2DOC_DOCDATA" ON "GZVLG"."PLAN2DOC" ("DOC_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLACEMENTFEATUREPM
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLACEMENTFEATUREPM" ON "GZVLG"."PLACEMENTFEATUREPM" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GOODSPRICE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GOODSPRICE" ON "GZVLG"."GOODSPRICE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CONTRACT_CON_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CONTRACT_CON_ID" ON "GZVLG"."CONTRACTDOC" ("CON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_FACTDOC_FACTDOCTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_FACTDOC_FACTDOCTYPE" ON "GZVLG"."FACTDOC" ("TYPENAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2DOCCHILD_PLAN2DOC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2DOCCHILD_PLAN2DOC" ON "GZVLG"."PLAN2DOCCHILD" ("PLAN2DOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CMPPLACE_RECIPIENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CMPPLACE_RECIPIENT_ID" ON "GZVLG"."CMPPLACE" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2LEDGER_FINSRC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2LEDGER_FINSRC" ON "GZVLG"."PLAN2LEDGER" ("FINSRC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2GOODS_UNITNAME
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2GOODS_UNITNAME" ON "GZVLG"."PLAN2GOODS" ("UNITNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_USESCRYPLIB_SUPPORTCRYPLI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_USESCRYPLIB_SUPPORTCRYPLI" ON "GZVLG"."USESCRYPTOLIB" ("SUPPORTCRYPTOLIB_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_LIABILIT_ORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_LIABILIT_ORG_ID" ON "GZVLG"."LIABILITYEXPENSE" ("ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPGOODS_OKPD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPGOODS_OKPD" ON "GZVLG"."CMPGOODS" ("OKPD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P2ARRANGEMENT_CONTRPAYORD
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P2ARRANGEMENT_CONTRPAYORD" ON "GZVLG"."PLAN2ARRANGEMENT" ("CONTRACTPAYORDERCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_OFFERDOC_DNI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_OFFERDOC_DNI" ON "GZVLG"."OFFERDOC" ("DOCUMENTCLASS_ID", COALESCE("DOC_DATE",TO_DATE(' 0001-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss')), COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_P3LINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_P3LINE" ON "GZVLG"."PLAN3PURCHASELINE" ("PLAN3PURCHASEDOC_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INVOICEDOC_CONEXECUTER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INVOICEDOC_CONEXECUTER" ON "GZVLG"."INVOICEDOC" ("CONEXECUTER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_CMPORGFACTCOUNTR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_CMPORGFACTCOUNTR" ON "GZVLG"."ORDERDOC" ("CMPORGFACTCOUNTRY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_INVGOODSPROP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_INVGOODSPROP" ON "GZVLG"."INVGOODSPROP" ("INVOICE_ID", "GOODSPOS", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GOODSGROUP_UNIT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GOODSGROUP_UNIT" ON "GZVLG"."GOODSGROUP" ("UNITNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_NMSGRULE_NOTIFYMSGEVENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_NMSGRULE_NOTIFYMSGEVENT" ON "GZVLG"."NOTIFYMSGRULE" ("NOTIFYMSGEVENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CAVILDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CAVILDOC" ON "GZVLG"."CAVILDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CEREPARATIONLINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CEREPARATIONLINE" ON "GZVLG"."CEREPARATIONLINE" ("CONTRACTEXECDOC_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_DOCRETENTIONR_DOCACTION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_DOCRETENTIONR_DOCACTION" ON "GZVLG"."DOCRETENTION" ("DOCACTION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_ANYDATA_DATAKEY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_ANYDATA_DATAKEY" ON "GZVLG"."ANYDATA" ("DATA_KEY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CMPQUALREQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CMPQUALREQ" ON "GZVLG"."CMPQUALREQ" ("ORDER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CACHELIST_USERSESSION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CACHELIST_USERSESSION" ON "GZVLG"."CACHELIST" ("USERSESSION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ESCHECKRULE_DISPSTATUS
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ESCHECKRULE_DISPSTATUS" ON "GZVLG"."ESCHECKRULE" ("DISPSTATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PACKTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PACKTYPE" ON "GZVLG"."PACKTYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPQUALREQ_REQTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPQUALREQ_REQTYPE" ON "GZVLG"."CMPQUALREQ" ("REQUIREMENTTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_ETP_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_ETP_NAME" ON "GZVLG"."ETP" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN3DOC_CONFIRMPERSON
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN3DOC_CONFIRMPERSON" ON "GZVLG"."PLAN3DOC" ("CONFIRMPERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONBUDGETLINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONBUDGETLINE" ON "GZVLG"."CONBUDGETLINE" ("CONTRACT_ID", "CONTRACTORPOS", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORG_CERT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORG_CERT" ON "GZVLG"."ORG" ("CERT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CACHELIST
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CACHELIST" ON "GZVLG"."CACHELIST" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INSTITUTIONLINE_IC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INSTITUTIONLINE_IC" ON "GZVLG"."INSTITUTIONLINE" ("INDUSTRYCODE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGPERSONALRESP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGPERSONALRESP" ON "GZVLG"."ORGPERSONALRESP" ("ORG_ID", "PERSONAL_ID", "RESPONSIBILITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_TENDER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_TENDER" ON "GZVLG"."TENDER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CUSTOMERLOT_APPPERSACC_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CUSTOMERLOT_APPPERSACC_ID" ON "GZVLG"."CMPCUSTOMERLOT" ("GUARAPPPERSONALACC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSPOS_ORGANIZER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSPOS_ORGANIZER" ON "GZVLG"."PLAN2OOSPOSITION" ("CMPORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN3DOCCHILD_DOCUMENTID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN3DOCCHILD_DOCUMENTID" ON "GZVLG"."PLAN3DOCCHILD" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORG_OKVEDID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORG_OKVEDID" ON "GZVLG"."ORG" ("OKVED_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UK_GOODSDOCDETAIL
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UK_GOODSDOCDETAIL" ON "GZVLG"."GOODSGROUPDOCDETAIL" ("DOCUMENT_ID", "GROUPCODE", "OKDP_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_FETCHMODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_FETCHMODE" ON "GZVLG"."FETCHMODE" ("DOCUMENTCLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_PRICECHANGE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_PRICECHANGE" ON "GZVLG"."CONTRACTDOC" ("PRICECHANGEREASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_DOCDIGESREQUISITES
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_DOCDIGESREQUISITES" ON "GZVLG"."DOCDIGESTREQUISITES" ("DOCDIGESTRULE_ID", "RULEREQUISITE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P2ARRANGEMENT_ORDERNAME
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P2ARRANGEMENT_ORDERNAME" ON "GZVLG"."PLAN2ARRANGEMENT" ("ORDERNAMECACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_MENUITEM_CLIENTOBJECT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_MENUITEM_CLIENTOBJECT" ON "GZVLG"."MENUITEM" ("CLIENTOBJECT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PROCUREMENT_COMMISSION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PROCUREMENT_COMMISSION" ON "GZVLG"."PROCUREMENT" ("COMMISSION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index S_INVOICEDOC_NI
--------------------------------------------------------

  CREATE INDEX "GZVLG"."S_INVOICEDOC_NI" ON "GZVLG"."INVOICEDOC" (COALESCE("DOC_NUMBER",' '), "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RPL
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RPL" ON "GZVLG"."RPL" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONPAYFACT_CONTRACT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONPAYFACT_CONTRACT" ON "GZVLG"."CONPAYFACT" ("CONTRACT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORG_LAWTERRITORY_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORG_LAWTERRITORY_ID" ON "GZVLG"."ORG" ("LAWTERRITORY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_RQVENDOR
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_RQVENDOR" ON "GZVLG"."RQVENDOR" ("REQUEST_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_OPERTYPE" ON "GZVLG"."ORDERDOC" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_PLNGOODS_GROUPCODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_PLNGOODS_GROUPCODE" ON "GZVLG"."PLNGOODS" ("GROUPCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_RPLTABLE_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_RPLTABLE_NAME" ON "GZVLG"."RPLTABLE" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_CONEXECSTAG
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_CONEXECSTAG" ON "GZVLG"."PLAN3PURCHASEDOC" ("CONEXECSTAGESCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_RQBUDGET_ESTIMATE_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_RQBUDGET_ESTIMATE_ID" ON "GZVLG"."RQBUDGETLINE" ("ESTIMATE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_ORGACCOU_ORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_ORGACCOU_ORG_ID" ON "GZVLG"."ORGACCOUNT" ("ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_CONPRODUCTSCHANGEDOCS
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_CONPRODUCTSCHANGEDOCS" ON "GZVLG"."CONPRODUCTSCHANGEDOCS" ("CONTRACT_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_BANKGUARANTEEREFDOC_DOCUM
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_BANKGUARANTEEREFDOC_DOCUM" ON "GZVLG"."BANKGUARANTEEREFDOC" ("DOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_LEDGER_GRANTINVESTMENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_LEDGER_GRANTINVESTMENT" ON "GZVLG"."LEDGER" ("GRANTINVESTMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_USERCERT_SIGNTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_USERCERT_SIGNTYPE" ON "GZVLG"."USERCERT" ("SIGNTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORG_ACCOUNTANT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORG_ACCOUNTANT" ON "GZVLG"."ORG" ("ACCOUNTANT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_TERRITORY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_TERRITORY" ON "GZVLG"."PLAN3PURCHASEDOC" ("COUNTRY_ID", "TERRITORYCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_MSGSITEEXCHANGE_SCHEME
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_MSGSITEEXCHANGE_SCHEME" ON "GZVLG"."MSGSITEEXCHANGE" ("DOCEXCHANGESCHEME_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_FORMATCONVERTER_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_FORMATCONVERTER_NAME" ON "GZVLG"."FORMATCONVERTER" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORGPERSONAL_PERSONAL
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORGPERSONAL_PERSONAL" ON "GZVLG"."ORGPERSONAL" ("PERSONAL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_REQUESTD_CMPORG_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_REQUESTD_CMPORG_ID" ON "GZVLG"."REQUESTDOC" ("CMPORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_BUDGET_FINSRC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_BUDGET_FINSRC" ON "GZVLG"."BUDGET" ("FINSRC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_CONTRACT_RECIPIENT_ID
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_CONTRACT_RECIPIENT_ID" ON "GZVLG"."CONTRACTDOC" ("RECIPIENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONGOODS_OKDP_CODE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONGOODS_OKDP_CODE" ON "GZVLG"."CONGOODS" ("OKDP_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_TER_TREE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_TER_TREE" ON "GZVLG"."TER_TREE" ("TER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REFJOURNAL_ID
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REFJOURNAL_ID" ON "GZVLG"."REFJOURNAL" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRACTDOC_OFRREQREASON
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRACTDOC_OFRREQREASON" ON "GZVLG"."CONTRACTDOC" ("OFRREQREASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTRCARDDOC_CUSTOMER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTRCARDDOC_CUSTOMER" ON "GZVLG"."CONTRACTCARDDOC" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_CMPCONDEALRESP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_CMPCONDEALRESP" ON "GZVLG"."CMPCONDEALRESP" ("ORDER_ID", "CMPCUSTOMERPOS", "PERSONAL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2DOC_CUSTOMER
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2DOC_CUSTOMER" ON "GZVLG"."PLAN2DOC" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_DISCUSSION
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_DISCUSSION" ON "GZVLG"."PLAN3PURCHASEDOC" ("PUBLICDISCUSSCACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CMPREPDOCUMENT_REPDOCUMEN
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CMPREPDOCUMENT_REPDOCUMEN" ON "GZVLG"."CMPREPDOCUMENT" ("REPDOCUMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_BUDGET
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_BUDGET" ON "GZVLG"."BUDGET" ("CAPTION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IFK_PURCHASECARRY_DOC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IFK_PURCHASECARRY_DOC" ON "GZVLG"."PURCHASECARRY" ("DOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSPOS_PURCHASEFINPR
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSPOS_PURCHASEFINPR" ON "GZVLG"."PLAN2OOSPOSITION" ("PURCHASEFINPROCEDURECACHE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_P3PURCHASEDOC_NECESSITY
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_P3PURCHASEDOC_NECESSITY" ON "GZVLG"."PLAN3PURCHASEDOC" ("NECESSITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_TERRITORY_PARENT
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_TERRITORY_PARENT" ON "GZVLG"."TERRITORY" ("PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGADDKPP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGADDKPP" ON "GZVLG"."ORGADDKPP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_RECOILLINES_GRANTINVEST
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_RECOILLINES_GRANTINVEST" ON "GZVLG"."RECOILLINES" ("GRANTINVESTMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_REQUESTDOC_OPERTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_REQUESTDOC_OPERTYPE" ON "GZVLG"."REQUESTDOC" ("OPERTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLAN2LEDGER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLAN2LEDGER" ON "GZVLG"."PLAN2LEDGER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_GOODSPROP_GROUPPROP
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_GOODSPROP_GROUPPROP" ON "GZVLG"."GOODSPROP" ("GROUP_ID", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_MENU_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_MENU_NAME" ON "GZVLG"."MENU" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PLAN2OOSPOSITION_CHREASON
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PLAN2OOSPOSITION_CHREASON" ON "GZVLG"."PLAN2OOSPOSITION" ("CHANGEREASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_MENU
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_MENU" ON "GZVLG"."MENU" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FCTGOODSPROP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FCTGOODSPROP" ON "GZVLG"."FCTGOODSPROP" ("FACT_ID", "GOODSPOS", "SEQORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGGOODSGROUP
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGGOODSGROUP" ON "GZVLG"."ORGGOODSGROUP" ("ORG_ID", "GROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_FACTDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_FACTDOC" ON "GZVLG"."FACTDOC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_REPFIELD
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_REPFIELD" ON "GZVLG"."REPFIELD" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_TENDERCRITERION
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_TENDERCRITERION" ON "GZVLG"."TENDERCRITERION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_GRANTINVESTMENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_GRANTINVESTMENT" ON "GZVLG"."GRANTINVESTMENT" ("BUDGET_ID", "FINYEAR", "ORG_ID", "CODE", "FOREIGNKEY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_DATASOURCE_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_DATASOURCE_NAME" ON "GZVLG"."DATASOURCE" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index IDX_KLADR_CODE5
--------------------------------------------------------

  CREATE INDEX "GZVLG"."IDX_KLADR_CODE5" ON "GZVLG"."KLADR" ("CODE5") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_NOTIFYMSGDOC
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_NOTIFYMSGDOC" ON "GZVLG"."NOTIFYMSGDOC" ("NOTIFYMSGRULE_ID", "DOCUMENT_ID", "NOTIFYMSGKIND") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_GOODSBRANCH
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_GOODSBRANCH" ON "GZVLG"."GOODSBRANCH" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_PURCHASECARRY_GRANTINVEST
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_PURCHASECARRY_GRANTINVEST" ON "GZVLG"."PURCHASECARRY" ("GRANTINVESTMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_MSGLINKTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_MSGLINKTYPE" ON "GZVLG"."MSGLINKTYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_INVBUDGETLINE_FINSRC
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_INVBUDGETLINE_FINSRC" ON "GZVLG"."INVBUDGETLINE" ("FINSRC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_ORDERDOC_CONTYPE
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_ORDERDOC_CONTYPE" ON "GZVLG"."ORDERDOC" ("CONTYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_OFRLOT
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_OFRLOT" ON "GZVLG"."OFRLOT" ("OFFER_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_BUDGCODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_BUDGCODE" ON "GZVLG"."BUDGCODE" ("BUDGET_ID", "SEQORDER", "CODE", "FINYEAR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index UQ_OIDREF_OID
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."UQ_OIDREF_OID" ON "GZVLG"."OIDREF" ("OID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_SYSUSER
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_SYSUSER" ON "GZVLG"."SYSUSER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_PLNBUDGETLINE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_PLNBUDGETLINE" ON "GZVLG"."PLNBUDGETLINE" ("PLANDOC_ID", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index PK_ORGLICENCE
--------------------------------------------------------

  CREATE UNIQUE INDEX "GZVLG"."PK_ORGLICENCE" ON "GZVLG"."ORGLICENCE" ("ORG_ID", "LICTYPE_ID", "LICENCE_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 81920 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Index J_FK_CONTEMPDOC_BUDGET
--------------------------------------------------------

  CREATE INDEX "GZVLG"."J_FK_CONTEMPDOC_BUDGET" ON "GZVLG"."CONTRACTTEMPLATEDOC" ("BUDGET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AZK" ;
--------------------------------------------------------
--  DDL for Function CURRENT_TRANSACTION_ID
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "GZVLG"."CURRENT_TRANSACTION_ID"
return varchar2 as
begin
  return dbms_transaction.local_transaction_id(TRUE);
end;

/
--------------------------------------------------------
--  DDL for Function GETBASEGROUP
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "GZVLG"."GETBASEGROUP" ( IDIN IN  numeric,
    PURCHASEMODE IN numeric)
  RETURN  numeric is
  p numeric;
  q numeric;
BEGIN 
  p := idin;
  while (not p is null) loop
    select count(*) into q from goodsgrouppurchasemode gpm where (gpm.purchasemode_id = purchasemode) and (gpm.goodsgroup_id = p) and (gpm.goodsgroup_id <> idin);
    if q > 0 then
      return (p);
    end if;
    select parent_id   into p  from goodsgroup where goodsgroup.id=p;
  end loop;
  return (null);
END;

/
--------------------------------------------------------
--  DDL for Function GETDOCIDFORATTACHID
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "GZVLG"."GETDOCIDFORATTACHID" (DocAttachId NUMBER) return number AS
  PRAGMA AUTONOMOUS_TRANSACTION;
  DocId number(18,0);
BEGIN
  select da.Document_id into DocId from DocAttachEx da where da.Id = DocAttachId;
  COMMIT;
  return DocId;
END;

/
--------------------------------------------------------
--  DDL for Function GETFIRSTGROUPBYCRIT
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "GZVLG"."GETFIRSTGROUPBYCRIT" (
 grpcode in varchar2
)
return varchar is
ret varchar(500);
begin
 select gg.caption into ret from goodsgroup gg  where gg.code like grpcode||'%' and ROWNUM=1;
 return ret;
end;

/
--------------------------------------------------------
--  DDL for Function GET_ORDERID_OF_CONTRACT
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "GZVLG"."GET_ORDERID_OF_CONTRACT" (
  id in numeric)
RETURN  numeric is
  docid numeric;
  parent_id1 numeric;
  documentclass_id numeric;
begin
  parent_id1 := id;
  documentclass_id := -1;
  while ((not documentclass_id in (4,5,28,30,25)) and not parent_id1 is null) loop
  begin
    select d.id, d.documentclass_id, d.parent_id into docid, documentclass_id, parent_id1 
    from document d 
    where d.id = parent_id1;    
  exception
    when no_data_found then
      return parent_id1;
  end; 
  end loop;
  if parent_id1 is null and not documentclass_id in (4,5,28,30,25) then
    docid := null;
  end if;
  return docid;
end;

/
--------------------------------------------------------
--  DDL for Function GET_ORGPARENT_WITH_ROLE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "GZVLG"."GET_ORGPARENT_WITH_ROLE" (
  child_org_id in numeric, org_role_id in numeric, parent_first in numeric)
  return numeric
is
  org_id numeric;
  parent_org_id numeric;
  role_id numeric;
  cur_org_id numeric;
  child_role_id numeric;
begin
  org_id := null;
  cur_org_id := child_org_id;
  if (parent_first = 1) then
    select o.parent_id, r.orgrole_id into cur_org_id, child_role_id from org o
      left join orgroles r on (o.id = r.org_id and r.orgrole_id = org_role_id)
      where o.id = cur_org_id;
  end if;
  while ((not cur_org_id is null) and (org_id is null)) loop
    select o.parent_id, r.orgrole_id into parent_org_id, role_id from org o
      left join orgroles r on (o.id = r.org_id and r.orgrole_id = org_role_id)
      where o.id = cur_org_id;
    if (not role_id is null) then
      org_id := cur_org_id;
    end if;
    if (parent_org_id = cur_org_id) then
      cur_org_id := null;
    else
      cur_org_id := parent_org_id;
    end if;
  end loop;
  if ((parent_first = 1) and (org_id is null) and (not child_role_id is null)) then
    org_id := child_org_id;
  end if;
  return org_id;
end;

/
--------------------------------------------------------
--  DDL for Function GET_PARENT_BY_DISPSTATUS
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "GZVLG"."GET_PARENT_BY_DISPSTATUS" (
  current_doc_id in numeric, dispstatus_id in numeric)
return  numeric is
  docid numeric;
  current_class_id numeric;
  class_id numeric;
  parent_doc_id numeric;
  next_docid numeric;
  next_dispstatus_id numeric;
begin
  select documentclass_id, documentclass_id, parent_id
    into current_class_id, class_id, parent_doc_id from document
    where id = current_doc_id;
  while (class_id = current_class_id and not parent_doc_id is null and (next_dispstatus_id is null or next_dispstatus_id <> dispstatus_id)) loop
  begin
    select id, documentclass_id, parent_id, dispstatus_id
     into next_docid, class_id, parent_doc_id, next_dispstatus_id from document
     where id = parent_doc_id;
  exception
    when no_data_found then
      return null;
  end;
  end loop;
  if next_dispstatus_id = dispstatus_id then
    docid := next_docid;
  end if;
  return docid;
end;

/
--------------------------------------------------------
--  DDL for Function GET_PARENT_NO_CLASS
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "GZVLG"."GET_PARENT_NO_CLASS" (
  current_doc_id in numeric)
RETURN  numeric is
  docid numeric;
  current_class_id numeric;
  class_id numeric;
  parent_doc_id numeric;
begin
  select documentclass_id, documentclass_id, parent_id
    into current_class_id, class_id, parent_doc_id from document
    where id = current_doc_id;
  while (class_id = current_class_id and not parent_doc_id is null) loop
  begin
    select id, documentclass_id, parent_id
     into docid, class_id, parent_doc_id from document
     where id = parent_doc_id;
  exception
    when no_data_found then
      return null;
  end; 
  end loop;
  if class_id = current_class_id then
    docid := null;
  end if;
  return docid;
end;

/
--------------------------------------------------------
--  DDL for Function GET_TOP_PARENT_BY_CLASS
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "GZVLG"."GET_TOP_PARENT_BY_CLASS" (
  current_doc_id in numeric)
RETURN  numeric is
  docid numeric;
  current_class_id numeric;
  class_id numeric;
  parent_doc_id numeric;
  next_docid numeric;
begin
  select documentclass_id, documentclass_id, parent_id
    into current_class_id, class_id, parent_doc_id from document
    where id = current_doc_id;
  while (class_id = current_class_id and not parent_doc_id is null) loop
  begin
    docid := next_docid;
    select id, documentclass_id, parent_id
     into next_docid, class_id, parent_doc_id from document
     where id = parent_doc_id;
  exception
    when no_data_found then
      return null;
  end;
  end loop;
  if class_id = current_class_id then
    docid := next_docid;
  end if;
  return docid;
end;

/
--------------------------------------------------------
--  DDL for Function LEFT
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "GZVLG"."LEFT" (p_Str varchar, p_Size integer) return varchar2 is
begin
  return SubStr (p_Str, 1, p_Size);
end;

/
--------------------------------------------------------
--  DDL for Procedure CREATE_FK_INDEXES
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "GZVLG"."CREATE_FK_INDEXES" 
is
begin
  for cur in (
    Select t.table_name, t.constraint_name, t.colum 
    From (Select table_name, constraint_name,
            cname1 || nvl2(cname2,','||cname2, null) ||
            nvl2(cname3,','||cname3,null) || nvl2(cname4,','||cname4,null) ||
            nvl2(cname5,','||cname5,null) || nvl2(cname6,','||cname6,null) ||
            nvl2(cname7,','||cname7,null) || nvl2(cname8,','||cname8,null) colum
          From (Select b.table_name, b.constraint_name,
                  max(decode(position, 1, column_name, null)) cname1,
                  max(decode(position, 2, column_name, null)) cname2,
                  max(decode(position, 3, column_name, null)) cname3,
                  max(decode(position, 4, column_name, null)) cname4,
                  max(decode(position, 5, column_name, null)) cname5,
                  max(decode(position, 6, column_name, null)) cname6,
                  max(decode(position, 7, column_name, null)) cname7,
                  max(decode(position, 8, column_name, null)) cname8,
                  count(*) col_cnt
               From (Select substr(table_name,1,30) table_name,
                        substr(constraint_name,1,30) constraint_name,
                        substr(column_name,1,30) column_name, position
                     From user_cons_columns ) a,
                 user_constraints b
               Where a.constraint_name = b.constraint_name and b.constraint_type = 'R'  
               Group by b.table_name, b.constraint_name) cons
          Where col_cnt > All
           (Select count(*)
            From user_ind_columns i
            Where i.table_name = cons.table_name
              and i.column_name in (cname1, cname2, cname3, cname4,
                                    cname5, cname6, cname7, cname8)
              and i.column_position <= cons.col_cnt
            Group by i.index_name) 
            Order by table_name, constraint_name, colum) t ) 
  loop
    execute immediate 'create index j_' || substr(cur.constraint_name,1,28) || ' on ' || cur.table_name || ' (' || cur.colum || ')';
  end loop;
end;

/
--------------------------------------------------------
--  DDL for Procedure GOODSGROUP_TREE_FILL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "GZVLG"."GOODSGROUP_TREE_FILL" is
begin
  delete from GoodsGroup_Tree
  where Group_Id in
    ( select Group_Id
      from (
        select Group_Id, Tree
        from GoodsGroup_Tree
        minus
        select Id as Group_Id, Sys_Connect_By_Path(Code,'/') || '/' as Tree
        from GoodsGroup
        start with Parent_Id is null
        connect by Parent_Id = prior Id
      )
    );
  insert into GoodsGroup_Tree (Group_Id, Tree)
  select Id as Group_Id, Sys_Connect_By_Path(Code,'/') || '/' as Tree
  from GoodsGroup
  start with Parent_Id is null
  connect by Parent_Id = prior Id
  minus
  select Group_Id, Tree
  from GoodsGroup_Tree;
end;

/
--------------------------------------------------------
--  DDL for Procedure ORGCHILD_FILL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "GZVLG"."ORGCHILD_FILL" 
AS
BEGIN
  DELETE FROM orgchild;
  FOR cur IN
    (SELECT id FROM org
      START WITH parent_id = id
      CONNECT BY parent_id = prior id AND parent_id <> id)
  LOOP
    INSERT INTO orgchild(org_id, child_id)
      SELECT parent_id, id FROM org WHERE parent_id = cur.id AND parent_id <> id;
    INSERT INTO orgchild(org_id, child_id)
      SELECT org_id, id FROM orgchild, org
        WHERE child_id = parent_id AND child_id = cur.id;
  END LOOP;
END;

/
--------------------------------------------------------
--  DDL for Procedure RPL$ACTIVATE_RPL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "GZVLG"."RPL$ACTIVATE_RPL" 
AS
  stmt varchar(2000);
  cursor s is SELECT TRIGGER_NAME from USER_TRIGGERS where (TRIGGER_NAME like 'RPL$%');
  cursor r is SELECT id, name FROM rpltable ;
BEGIN
  FOR s_rec in s loop
    stmt := 'DROP TRIGGER ' || s_rec.trigger_name;
    execute immediate stmt;
  end loop;
  FOR r_rec in r loop
    RPL$REENABLE_RPL_TABLE(r_rec.name);
  END loop;
END;

/
--------------------------------------------------------
--  DDL for Procedure RPL$ASSIGN_GENERATION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "GZVLG"."RPL$ASSIGN_GENERATION" 
    AS
    GNRTN NUMERIC(15,0);
    OLD_GEN NUMERIC(15,0);
    OLD_GEN1 NUMERIC(15,0);
    OLD_GEN2 NUMERIC(15,0);
    ldaydate date;
begin
  -- THIS PROCEDURE MUST BE EXECUTED AT SNAPSHOT ISOLATION LEVEL
  -- lock some table for a singleton execution of this procedure
  lock table rpltable in exclusive mode;
  select generation_seq.nextval into gnrtn from dual;
  select max(day_date) into ldaydate from dayversion;
  update rpllog set generation = GNRTN, transaction_id = current_transaction_id where
    generation=999999999999999;
  old_gen := null;
  if ((sysdate - ldaydate) * 24 > 1) then
    insert into dayversion(day_date, day_version) values (sysdate, GNRTN);
    select min(sent_version) into old_gen from rpl where master_id = (select site_id from systemsite) and sent_version > 0;
    if (old_gen is null) then
      old_gen := 999999999999999;
    end if;
  -- We have three differen ranges of 'living time' for records in log, depending on rpltable generation_group
  -- 10 days
    select max(day_version) into old_gen1 from dayversion where day_date < cast(sysdate as date) - 10;
    if (old_gen1 is null) then
      old_gen1 := 0;
    end if;
    if (old_gen1 < old_gen) then
      old_gen2 := old_gen1;
    else
      old_gen2 := old_gen;
    end if;
    if (old_gen2 > 0) then
      begin
        update systemsite set clean_generation_1 = old_gen2 ;
      end;
    end if;
  -- 1 day
    select max(day_version) into old_gen1 from dayversion where day_date < cast(sysdate as date) - 1;
    if (old_gen1 is null) then
      old_gen1 := 0;
    end if;
    if (old_gen1 < old_gen) then
      old_gen2 := old_gen1;
    else
      old_gen2 := old_gen;
    end if;
    if (old_gen2 > 0) then
      begin
        update systemsite set clean_generation_2 = old_gen2 ;
      end;
    end if;
  -- 1 hour
    select max(day_version) into old_gen1 from dayversion where day_date < cast(sysdate as date) - 1/24;
    if (old_gen1 is null) then
      old_gen1 := 0;
    end if;
    if (old_gen1 < old_gen) then
      old_gen2 := old_gen1;
    else
      old_gen2 := old_gen;
    end if;
    if (old_gen2 > 0) then
      begin
        update systemsite set clean_generation_3 = old_gen2 ;
      end;
    end if;
  end if;
  update systemsite set last_generation = gnrtn;
  commit;
end;

/
--------------------------------------------------------
--  DDL for Procedure RPL$CREATE_TRIGGER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "GZVLG"."RPL$CREATE_TRIGGER" (constr_name varchar)
AS
  CHILD_WHERE VARCHAR(250);
  CHILD_CONDITION VARCHAR(250);
  CHILD_IF VARCHAR(250);
  CHILD_STATEMENT VARCHAR(2000);
  PARENT_CONDITION VARCHAR(250);
  PARENT_WHERE VARCHAR(250);
  PARENT_SET VARCHAR(250);
  FCOUNT INTEGER;
  BODY VARCHAR(4000);
  rc rpl$constraints%ROWTYPE;
  cursor getFields(constr_id rpl$constraintfields.rpl$constraints_id%type) is
    select fieldname, target_fieldname from rpl$constraintfields where rpl$constraints_id = constr_id;
BEGIN
  select * into rc from rpl$constraints where name = constr_name;
  child_where := ''; child_condition := ''; child_if := 'numrows = 0 and ';
  parent_where := ''; parent_condition := ''; parent_set := '';
  select count(*) into fcount from rpl$constraintfields where rpl$constraints_id = rc.id;
  for getFields_Rec in getFields(rc.id) loop
    child_where := child_where || ':NEW.'||getFields_Rec.fieldname||' = '||rc.target_tablename||'.'||getFields_Rec.target_fieldname;
    child_if := child_if || ':NEW.'||getFields_Rec.fieldname||' is not null';
    child_condition := child_condition || ':OLD.'||getFields_Rec.fieldname||' <> :NEW.'||getFields_Rec.fieldname;
    parent_where := parent_where || rc.tablename||'.'||getFields_Rec.fieldname||' = :OLD.'||getFields_Rec.target_fieldname;
    parent_condition := parent_condition || ':OLD.'||getFields_Rec.target_fieldname||' <> :NEW.'||getFields_Rec.target_fieldname;
    parent_set := parent_set || rc.tablename||'.'||getFields_Rec.fieldname||' = NULL';
    fcount := fcount - 1;
    if (fcount <> 0) then
      child_condition := child_condition || ' or ';
      child_where := child_where || ' and ';
      child_if := child_if || ' and ';
      parent_where := parent_where || ' and ';
      parent_condition := parent_condition || ' or ';
      parent_set := parent_set || ', ';
    end if;
  end loop;
  body :=
    'CREATE or REPLACE TRIGGER RPL$TRIG_' || rc.triggername ||
    ' BEFORE INSERT OR UPDATE ON ' || rc.tablename || ' FOR EACH ROW' ||
    ' DECLARE numrows INTEGER; RplMode NUMBER; ' ||
    'BEGIN ' ||
    ' RplMode := 0; ' ||
    ' select rpl_mode into RplMode from RplTransactMode where num_transaction = current_transaction_id; ' ||
    ' if RplMode <> 1 then ';
  child_statement := 'select count(*) into numrows from ' || rc.target_tablename || ' where ' || child_where || '; '
      || ' if(' || child_if || ') then '
      ||'raise_application_error(-20001, ''violation of FOREIGN KEY constraint "'||rc.name
      ||'" on table "'||rc.tablename||'". Foreign key reference target does not exist.''); end if;';
  body := body || 'if (inserting) then ' || child_statement || ' ';
  body := body || 'elsif (' || child_condition || ') then ' || child_statement || ' end if;';
  body := body || ' end if; END;';
  execute immediate body;
  body :=
    'CREATE or REPLACE TRIGGER RPL$TRIGT_' || rc.triggername ||
    ' BEFORE UPDATE OR DELETE ON ' || rc.target_tablename || ' FOR EACH ROW' ||
    ' DECLARE numrows INTEGER; RplMode NUMBER; ' ||
    'BEGIN ' ||
    ' RplMode := 0; ' ||
    ' select rpl_mode into RplMode from RplTransactMode where num_transaction = current_transaction_id; ' ||
    ' if RplMode <> 1 then ';
  body := body || 'if (deleting) then '; /* delete_rule ��������� ��������: RESTRICT, CASCADE, SET NULL */
  if (rc.delete_rule = 'CASCADE') then /* DELETE CASCADE */
    body := body ||' delete from '||rc.tablename||' where '||parent_where||';';
  elsif (rc.delete_rule = 'SET NULL') then /* DELETE SET NULL */
    body := body ||' update '||rc.tablename||' set '||parent_set||' where '||parent_where||';';
  else /* DELETE RESTRICT */
    body := body ||' select count(*) into numrows from '||rc.tablename||' where '||parent_where||'; '
        ||'if(numrows > 0) then '
        ||'raise_application_error(-20001, ''violation of FOREIGN KEY constraint "'||rc.name
        ||'" on table "'||rc.target_tablename||'". Foreign key references are present for the record.''); end if;';
  end if;
  body := body || ' elsif(' || parent_condition || ') then '; /* update_rule ��������� ��������: RESTRICT, SET NULL */
  if (rc.update_rule = 'SET NULL') then /* UPDATE SET NULL */
    body := body ||' update '||rc.tablename||' set '||parent_set||' where '||parent_where||';';
  else /* UPDATE RESTRICT */
    body := body ||' select count(*) into numrows from '||rc.tablename||' where '||parent_where||'; '
        ||'if(numrows > 0) then '
        ||'raise_application_error(-20001, ''violation of FOREIGN KEY constraint "'||rc.name
        ||'" on table "'||rc.target_tablename||'". Foreign key references are present for the record.''); end if;';
  end if;
  body := body || ' end if;';
  body := body || '  end if; END;';
  execute immediate body;
END;

/
--------------------------------------------------------
--  DDL for Procedure RPL$CREATE_TRIGGERS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "GZVLG"."RPL$CREATE_TRIGGERS" 
IS
  cursor getConstraints is
    select name from rpl$constraints;
BEGIN
  FOR getConstraints_Rec in getConstraints LOOP
    RPL$CREATE_TRIGGER(getConstraints_Rec.name);
  END LOOP;
END;

/
--------------------------------------------------------
--  DDL for Procedure RPL$DEACTIVATE_RPL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "GZVLG"."RPL$DEACTIVATE_RPL" 
AS
  stmt varchar(2000);
  cursor s is SELECT TRIGGER_NAME from USER_TRIGGERS where (TRIGGER_NAME like 'RPL$%');
BEGIN
  FOR s_rec in s loop
    stmt := 'DROP TRIGGER ' || s_rec.trigger_name;
    execute immediate stmt;
  end loop;
END;

/
--------------------------------------------------------
--  DDL for Procedure RPL$DISABLE_RPL_TABLE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "GZVLG"."RPL$DISABLE_RPL_TABLE" (tablename varchar)
AS
   CURSOR s is select trigger_name name from user_triggers where (trigger_name like 'RPL$'||tablename) ;
   stmt VARCHAR(2000);
BEGIN
  FOR s_rec in s LOOP
    stmt :=
      'drop trigger '||s_rec.NAME;
    EXECUTE IMMEDIATE stmt;
  end loop;
END;

/
--------------------------------------------------------
--  DDL for Procedure RPL$ENABLE_RPL_TABLE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "GZVLG"."RPL$ENABLE_RPL_TABLE" (tablename varchar)
AS
   stmt            VARCHAR (20000);
   fieldlist       VARCHAR (500);
   fieldvalue      VARCHAR (500);
   oldfieldvalue   VARCHAR (500);
   condition       VARCHAR (500);
   mut_fieldvalue      VARCHAR (500);
   mut_oldfieldvalue   VARCHAR (500);
   mut_condition       VARCHAR (500);
   table_id        NUMERIC (15);
   plugin_count    NUMERIC (15);
   CURSOR s
   IS
      SELECT ID, rplfield1, rplfield2, rplfield3, rplfield4, rplfield5
        FROM rpltable
       WHERE UPPER (NAME) = UPPER (tablename) AND isplugin = 0;
   CURSOR c_plugin
   IS
      SELECT plugin_rpltable_id, join_fragment
        FROM rpltableplugin rtp JOIN rpltable rt
             ON rt.ID = rtp.rpltable_id
           AND UPPER (rt.NAME) = UPPER (tablename)
           AND rt.isplugin = 0
             ;
BEGIN
   select count(rtp.ID) into plugin_count 
       from rpltableplugin rtp 
            JOIN rpltable rt ON rt.ID = rtp.rpltable_id
                             AND UPPER (rt.NAME) = UPPER (tablename)
                             AND rt.isplugin = 0;
   FOR s_rec IN s
   LOOP
      fieldlist := 'generation';
      fieldvalue := '999999999999999';
      oldfieldvalue := fieldvalue;
      mut_fieldvalue := fieldvalue;
      mut_oldfieldvalue := fieldvalue;
      condition := '(updating and not(1=1 ';
      mut_condition := '1=1 ';      
      fieldlist := fieldlist || ', FIELD1_VALUE';
      table_id := s_rec.ID;
      IF (s_rec.rplfield1 IS NOT NULL)
      THEN
         BEGIN
           fieldvalue := fieldvalue || ', :new.' || s_rec.rplfield1;
           oldfieldvalue := oldfieldvalue || ', :old.' || s_rec.rplfield1;
           condition := condition
            || 'and (:new.'
            || s_rec.rplfield1
            || '='
            || ':old.'
            || s_rec.rplfield1
            || ')';
           if (plugin_count > 0) then   
                mut_fieldvalue := mut_fieldvalue || ', mutating.new_slave_rpls(i).field_value1';
                mut_oldfieldvalue := mut_oldfieldvalue || ', mutating.old_slave_rpls(i).field_value1';
                mut_condition := mut_condition || 'and (mutating.new_slave_rpls(i).field_value1 = mutating.old_slave_rpls(i).field_value1';
           end if;
         END;
      ELSE
         BEGIN
            fieldvalue := fieldvalue || ', 0';
            oldfieldvalue := oldfieldvalue || ', 0';
            mut_fieldvalue := mut_fieldvalue || ', 0';
            mut_oldfieldvalue := mut_oldfieldvalue || ', 0';
         END;
      END IF;
      fieldlist := fieldlist || ', FIELD2_VALUE';
      IF (s_rec.rplfield2 IS NOT NULL)
      THEN
         BEGIN
            fieldvalue := fieldvalue || ', :new.' || s_rec.rplfield2;
            oldfieldvalue := oldfieldvalue || ', :old.' || s_rec.rplfield2;
            condition :=
                  condition
               || 'and (:new.'
               || s_rec.rplfield2
               || '='
               || ':old.'
               || s_rec.rplfield2
               || ')';
           if (plugin_count > 0) then   
                mut_fieldvalue := mut_fieldvalue || ', mutating.new_slave_rpls(i).field_value2';
                mut_oldfieldvalue := mut_oldfieldvalue || ', mutating.old_slave_rpls(i).field_value2';
                mut_condition := mut_condition || 'and (mutating.new_slave_rpls(i).field_value2 = mutating.old_slave_rpls(i).field_value2';
           end if;
         END;
      ELSE
         BEGIN
            fieldvalue := fieldvalue || ', 0';
            oldfieldvalue := oldfieldvalue || ', 0';
            mut_fieldvalue := mut_fieldvalue || ', 0';
            mut_oldfieldvalue := mut_oldfieldvalue || ', 0';
         END;
      END IF;
      fieldlist := fieldlist || ', FIELD3_VALUE';
      IF (s_rec.rplfield3 IS NOT NULL)
      THEN
         BEGIN
            fieldvalue := fieldvalue || ', :new.' || s_rec.rplfield3;
            oldfieldvalue := oldfieldvalue || ', :old.' || s_rec.rplfield3;
            condition :=
                  condition
               || 'and (:new.'
               || s_rec.rplfield3
               || '='
               || ':old.'
               || s_rec.rplfield3
               || ')';
           if (plugin_count > 0) then   
                mut_fieldvalue := mut_fieldvalue || ', mutating.new_slave_rpls(i).field_value3';
                mut_oldfieldvalue := mut_oldfieldvalue || ', mutating.old_slave_rpls(i).field_value3';
                mut_condition := mut_condition || 'and (mutating.new_slave_rpls(i).field_value3 = mutating.old_slave_rpls(i).field_value3';
           end if;
         END;
      ELSE
         BEGIN
            fieldvalue := fieldvalue || ', 0';
            oldfieldvalue := oldfieldvalue || ', 0';
            mut_fieldvalue := mut_fieldvalue || ', 0';
            mut_oldfieldvalue := mut_oldfieldvalue || ', 0';
         END;
      END IF;
      fieldlist := fieldlist || ', FIELD4_VALUE';
      IF (s_rec.rplfield4 IS NOT NULL)
      THEN
         BEGIN
            fieldvalue := fieldvalue || ', :new.' || s_rec.rplfield4;
            oldfieldvalue := oldfieldvalue || ', :old.' || s_rec.rplfield4;
            condition :=
                  condition
               || 'and (:new.'
               || s_rec.rplfield4
               || '='
               || ':old.'
               || s_rec.rplfield4
               || ')';
           if (plugin_count > 0) then   
                mut_fieldvalue := mut_fieldvalue || ', mutating.new_slave_rpls(i).field_value4';
                mut_oldfieldvalue := mut_oldfieldvalue || ', mutating.old_slave_rpls(i).field_value4';
                mut_condition := mut_condition || 'and (mutating.new_slave_rpls(i).field_value4 = mutating.old_slave_rpls(i).field_value4';
           end if;
         END;
      ELSE
         BEGIN
            fieldvalue := fieldvalue || ', 0';
            oldfieldvalue := oldfieldvalue || ', 0';
            mut_fieldvalue := mut_fieldvalue || ', 0';
            mut_oldfieldvalue := mut_oldfieldvalue || ', 0';
         END;
      END IF;
      fieldlist := fieldlist || ', FIELD5_VALUE';
      IF (s_rec.rplfield5 IS NOT NULL)
      THEN
         BEGIN
            fieldvalue := fieldvalue || ', :new.' || s_rec.rplfield5;
            oldfieldvalue := oldfieldvalue || ', :old.' || s_rec.rplfield5;
            condition :=
                  condition
               || 'and (:new.'
               || s_rec.rplfield5
               || '='
               || ':old.'
               || s_rec.rplfield5
               || ')';
           if (plugin_count > 0) then   
                mut_fieldvalue := mut_fieldvalue || ', mutating.new_slave_rpls(i).field_value5';
                mut_oldfieldvalue := mut_oldfieldvalue || ', mutating.old_slave_rpls(i).field_value5';
                mut_condition := mut_condition || 'and (mutating.new_slave_rpls(i).field_value5 = mutating.old_slave_rpls(i).field_value5';
           end if;
         END;
      ELSE
         BEGIN
            fieldvalue := fieldvalue || ', 0';
            oldfieldvalue := oldfieldvalue || ', 0';
            mut_fieldvalue := mut_fieldvalue || ', 0';
            mut_oldfieldvalue := mut_oldfieldvalue || ', 0';
         END;
      END IF;
      -- create trigger for each row
      stmt :=
             'CREATE or REPLACE TRIGGER RPL$'
          || UPPER (tablename)
          || ' AFTER INSERT OR UPDATE OR DELETE ON '
          || UPPER (tablename)
          || ' REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW ' 
          || 'declare ' --|| utl_tcp.CRLF
          || 'ltable_id numeric(15); ' 
          || 'mutation_index numeric; ' 
          || 'begin ' 
          || '  ltable_id := ' || table_id || ';' 
          ;
     if (plugin_count > 0) then
       -- use it in statement trigger
       stmt := stmt 
          || '  mutation_index := mutating.new_slave_rpls.count+1;'
          || '  mutating.new_slave_rpls(mutation_index).id := :new.id;' 
          || '  mutating.old_slave_rpls(mutation_index).id := :old.id;' 
          ;
       if (s_rec.rplfield1 IS NOT NULL) then
       stmt := stmt 
          || '  mutating.new_slave_rpls(mutation_index).field_value1 := :new.' || s_rec.rplfield1 || ';'
          || '  mutating.old_slave_rpls(mutation_index).field_value1 := :old.' || s_rec.rplfield1 || ';'
          ;
       end if;
       if (s_rec.rplfield2 IS NOT NULL) then
       stmt := stmt 
          || '  mutating.new_slave_rpls(mutation_index).field_value2 := :new.' || s_rec.rplfield2 || ';'
          || '  mutating.old_slave_rpls(mutation_index).field_value2 := :old.' || s_rec.rplfield2 || ';'
          ;
       end if;
       if (s_rec.rplfield3 IS NOT NULL) then
       stmt := stmt 
          || '  mutating.new_slave_rpls(mutation_index).field_value3 := :new.' || s_rec.rplfield3 || ';'
          || '  mutating.old_slave_rpls(mutation_index).field_value3 := :old.' || s_rec.rplfield3 || ';'
          ;
       end if;
       if (s_rec.rplfield4 IS NOT NULL) then
       stmt := stmt 
          || '  mutating.new_slave_rpls(mutation_index).field_value4 := :new.' || s_rec.rplfield4 || ';'
          || '  mutating.old_slave_rpls(mutation_index).field_value4 := :old.' || s_rec.rplfield4 || ';'
          ;
       end if;
       if (s_rec.rplfield5 IS NOT NULL) then
       stmt := stmt 
          || '  mutating.new_slave_rpls(mutation_index).field_value5 := :new.' || s_rec.rplfield5 || ';'
          || '  mutating.old_slave_rpls(mutation_index).field_value5 := :old.' || s_rec.rplfield5 || ';'
          ;
       end if;
     end if;
     stmt := stmt 
          || '  if (deleting) then ' 
          || '    insert into RPLLOG (rpltable_id, record_id, transaction_id,'
          || fieldlist
          || ' ) ' 
          || '      values (ltable_id, :old.ID, current_transaction_id,'
          || oldfieldvalue
          || ');' 
          ;
     stmt := stmt
          || '  else ' 
          || '  begin ' 
          || '    insert into RPLLOG (rpltable_id, record_id, transaction_id,'
          || fieldlist
          || ' ) ' 
          || '      values (ltable_id, :new.ID, current_transaction_id,'
          || fieldvalue
          || ');' 
          ;
     stmt := stmt
          || '    if '
          || condition
          || ')) then ' 
          || '      insert into RPLLOG (rpltable_id, record_id, transaction_id,'
          || fieldlist
          || ' ) ' 
          || '        values (ltable_id, :old.ID, current_transaction_id, '
          || oldfieldvalue
          || ');';
     stmt := stmt || '    end if; ' 
       || '  end; ' 
       || ' end if;' 
       || 'end;';
     EXECUTE IMMEDIATE stmt;
     if (plugin_count > 0) then
       -- create statement trigger
       stmt :=
             'CREATE or REPLACE TRIGGER VRPL$' || UPPER (tablename)
          || ' AFTER INSERT OR UPDATE OR DELETE ON ' || UPPER (tablename)
          || ' declare lplugin_table_id numeric(15);'
          || ' begin '
          || '   if (deleting) then '
          || '     if mutating.old_slave_rpls.FIRST is not null then'
          || '       for i in mutating.old_slave_rpls.FIRST..mutating.old_slave_rpls.LAST'
          || '         loop';
       FOR plugin_rec IN c_plugin
       LOOP
         stmt := stmt
          || '           lplugin_table_id := ' || plugin_rec.plugin_rpltable_id || ';'
          || '           insert into RPLLOG (rpltable_id, record_id, transaction_id,' || fieldlist || ') '
          || '             select lplugin_table_id, master.id, current_transaction_id,' || mut_oldfieldvalue
          || '               from ' || plugin_rec.join_fragment
          || '               where slave.id=mutating.old_slave_rpls(i).id;';
       END LOOP;
       stmt := stmt 
          || '         end loop;' 
          || '     end if;';-- end if mutation
       stmt := stmt 
          || '   else ' 
          || '     begin '
          || '       if mutating.new_slave_rpls.FIRST is not null then'
          || '         for i in mutating.new_slave_rpls.FIRST..mutating.new_slave_rpls.LAST'
          || '           loop';
       FOR plugin_rec IN c_plugin
       LOOP
         stmt := stmt
          || '             lplugin_table_id := ' || plugin_rec.plugin_rpltable_id || ';'
          || '             insert into RPLLOG (rpltable_id, record_id, transaction_id,' || fieldlist || ') '
          || '               select lplugin_table_id, master.id, current_transaction_id,' || mut_fieldvalue 
          || '                 from ' || plugin_rec.join_fragment
          || '                 where slave.id = mutating.new_slave_rpls(i).id;';
       END LOOP;
       stmt := stmt 
          || '           end loop;' 
          || '       end if;';-- end if mutation
       stmt := stmt 
          || '       if (updating) then '
          || '         if mutating.old_slave_rpls.FIRST is not null then'
          || '           for i in mutating.old_slave_rpls.FIRST..mutating.old_slave_rpls.LAST'
          || '             loop';
       FOR plugin_rec IN c_plugin
       LOOP
           stmt := stmt
          || '               if (' || mut_condition ||')) then '
          || '                 lplugin_table_id := ' || plugin_rec.plugin_rpltable_id || ';'
          || '                 insert into RPLLOG (rpltable_id, record_id, transaction_id,' || fieldlist || ') '
          || '                   select lplugin_table_id, master.id, current_transaction_id,' || mut_oldfieldvalue 
          || '                     from ' || plugin_rec.join_fragment
          || '                     where slave.id = mutating.old_slave_rpls(i).id;'
          || '               end if;';          
       END LOOP;
       stmt := stmt 
          || '             end loop;' 
          || '         end if;'-- end if mutation
          || '       end if; '--end if updating
          || '     end; '--end of _else begin_
          || '  end if; ' --end of large if
          || '  mutating.new_slave_rpls.delete;' 
          || '  mutating.old_slave_rpls.delete;' 
          || 'end;';--end of trigger
       EXECUTE IMMEDIATE stmt;
     end if;
   END LOOP;
END;

/
--------------------------------------------------------
--  DDL for Procedure RPL$REENABLE_RPL_TABLE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "GZVLG"."RPL$REENABLE_RPL_TABLE" (tablename varchar)
IS
BEGIN
  RPL$DISABLE_RPL_TABLE(tablename);
  RPL$ENABLE_RPL_TABLE(tablename);
END;

/
--------------------------------------------------------
--  DDL for Procedure SEQUENCE_ADJ
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "GZVLG"."SEQUENCE_ADJ" (tablename VARCHAR2)
AS
   maxval     NUMERIC (15);
   sitemult   NUMERIC (15);
   curval     NUMERIC (15);
   i          NUMERIC (15);
BEGIN
   SELECT MAX (site_id * 1000000000)
     INTO sitemult
     FROM systemsite;
   EXECUTE IMMEDIATE    'select coalesce(max(id),'
                     || sitemult
                     || '+1)-'
                     || sitemult
                     || ' from '
                     || tablename
                     || ' where id-'
                     || sitemult
                     || '<999999999'
                INTO maxval;
   EXECUTE IMMEDIATE 'select ' || tablename || '_seq.nextval from dual'
                INTO curval;
   -- ������� ������, � �� �������������. ��� ��������
   FOR i IN curval .. maxval - 1
   LOOP
      EXECUTE IMMEDIATE 'select ' || tablename || '_seq.nextval from dual'
                   INTO sitemult;
   END LOOP;
END;

/
--------------------------------------------------------
--  DDL for Procedure TER_TREE_FILL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "GZVLG"."TER_TREE_FILL" is
begin
  delete from Ter_Tree
  where Ter_Id in
    ( select Ter_Id
      from (
        select Ter_Id, Tree, Path
        from Ter_Tree
        minus
        select Id as Ter_Id, Sys_Connect_By_Path(Code,'/') || '/' as Tree, SUBSTR(Sys_Connect_By_Path(Caption,', '),3) as Path
        from Territory
        start with Parent_Id is null
        connect by Parent_Id = prior Id
      )
    );
  insert into Ter_Tree (Ter_Id, Tree, Path)
  select Id as Ter_Id, Sys_Connect_By_Path(Code,'/') || '/' as Tree, SUBSTR(Sys_Connect_By_Path(Caption,', '),3) as Path
  from Territory
  start with Parent_Id is null
  connect by Parent_Id = prior Id
  minus
  select Ter_Id, Tree, Path
  from Ter_Tree;
end;

/
--------------------------------------------------------
--  DDL for View ACTUALIZATIONVIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."ACTUALIZATIONVIEW" ("ID", "VERSION", "DOCUMENT_ID", "INSTANCE_LINK", "BUDGET_ID", "DOCUMENTCLASS_ID", "DISPSTATUS_ID", "OPERTYPE_ID", "DOC_NUMBER", "DOC_DATE", "DESCRIPTION", "REMARK", "AMOUNT", "FOREIGN_KEY", "PAYCONDITIONNAME", "DELIVERYBASISCODE", "ACTUAL_YEAR") AS 
  select dc.id,dc.version,dc.id,tb.id,tb.budget_id,tb.documentclass_id,tb.dispstatus_id,tb.opertype_id,tb.doc_number,tb.doc_date,tb.description,tb.remark,tb.amount,tb.foreign_key,tb.payconditionname,tb.deliverybasiscode,tb.actual_year
   from requestdoc tb
   join document dc on (dc.id = tb.document_id and dc.dispstatus_id <> -1)
   union all
   select dc.id,dc.version,dc.id,tb.id,tb.budget_id,tb.documentclass_id,tb.dispstatus_id,tb.opertype_id,tb.doc_number,tb.doc_date,tb.description,tb.remark,tb.amount,tb.foreign_key,tb.payconditionname,tb.deliverybasiscode,tb.actual_year
   from contractdoc tb
   join document dc on (dc.id = tb.document_id and dc.dispstatus_id <> -1)
   union all
   select dc.id,dc.version,dc.id,tb.id,tb.budget_id,tb.documentclass_id,tb.dispstatus_id,tb.opertype_id,tb.doc_number,tb.doc_date,tb.description,tb.remark,tb.amount,tb.foreign_key,cast(null as varchar(255)) payconditionname,cast(null as varchar(50)) deliverybasiscode,tb.actual_year
   from invoicedoc tb
   join document dc on (dc.id = tb.document_id and dc.dispstatus_id <> -1)
   union all
   select dc.id,dc.version,dc.id,tb.id,tb.budget_id,tb.documentclass_id,tb.dispstatus_id,tb.opertype_id,tb.doc_number,tb.doc_date,tb.description,tb.remark,tb.amount,tb.foreign_key,cast(null as varchar(255)) payconditionname,cast(null as varchar(50)) deliverybasiscode,tb.actual_year
   from factdoc tb
   join document dc on (dc.id = tb.document_id and dc.dispstatus_id <> -1)
   where tb.dispstatus_id not in (16, 32);
--------------------------------------------------------
--  DDL for View AUCTIONLIST_VIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."AUCTIONLIST_VIEW" ("ID", "BUDGET_ID", "DOCUMENT_ID", "DOCUMENTCLASS_ID", "DISPSTATUS_ID", "PURCHASEMODE_ID", "CMPDATE", "ACCEPTDATE", "CMPNAME", "CMPORG_ID", "CMPORGNAME", "DOC_NUMBER", "ISACTIVE", "AMOUNT") AS 
  select
  o.ID,
  o.Budget_ID,
  o.Document_ID,
  o.DocumentClass_ID,
  o.DispStatus_ID,
  o.PurchaseMode_ID,
  o.CmpDate,
  o.AcceptDate,
  o.CmpName,
  o.CmpOrg_id,
  o.CmpOrgName,
  o.Doc_Number,
  (select count(*) from AuctionLog al where al.Order_ID=o.ID and o.PurchaseMode_ID<>13) IsActive,
  o.amount
from
  OrderDoc o;
--------------------------------------------------------
--  DDL for View CALENDARPLANVIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."CALENDARPLANVIEW" ("BUDGET_ID", "ID", "DOCUMENT_ID", "INVITATIONDATE", "CMPDATE", "DEALDATE", "OPENINGDATE", "SELECTDATE", "FINISHDATE", "AMOUNT", "PURCHASEMODE_ID", "DISPSTATUS_ID", "DOCUMENTCLASS_ID", "ENTERPRISE", "LOTNAME", "LOTPOS", "CMPORG_ID", "PLANPOSITIONNUMBER", "CUSTOMER_ID") AS 
  select
  pd.budget_id,
  pd.id,
  pd.document_id,
  pa.invitationdate,
  pa.cmpdate,
  pa.dealdate,
  cast(null as date),
  cast(null as date),
  cast(null as date),
  sum(pa.amount),
  pa.purchasemode_id,
  pd.dispstatus_id,
  pd.documentclass_id,
  case when pa.purchasemode_id <> 3 then pa.isenterprise else 0 end,
  dc.description,
  cast(null as numeric),
  pa.cmporg_id,
  dic.description,
  pd.customer_id
from Plan2Arrangement pa
join Plan2Goods pg on (pg.id = pa.plan2goods_id)
join Plan2Doc pd on (pd.id = pg.plan2doc_id)
left join DescriptionCache dc on (dc.id = pa.ordernamecache_id)
left join DescriptionCache dic on (dic.id = pa.lotnumbercache_id)
where pd.documentclass_id = 41 and pd.dispstatus_id in (10, 23) and pa.issmall = 0 and pa.lotnumbercache_id is not null
group by
  pd.budget_id,
  pd.id,
  pd.document_id,
  pa.invitationdate,
  pa.cmpdate,
  pa.dealdate,
  pa.purchasemode_id,
  pd.dispstatus_id,
  pd.documentclass_id,
  case when pa.purchasemode_id <> 3 then pa.isenterprise else 0 end,
  dc.description,
  pa.cmporg_id,
  dic.description,
  pd.customer_id;
--------------------------------------------------------
--  DDL for View CALENDARPURCHASEVIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."CALENDARPURCHASEVIEW" ("BUDGET_ID", "ID", "DOCUMENT_ID", "INVITATIONDATE", "CMPDATE", "DEALDATE", "OPENINGDATE", "SELECTDATE", "FINISHDATE", "AMOUNT", "PURCHASEMODE_ID", "DISPSTATUS_ID", "DOCUMENTCLASS_ID", "ENTERPRISE", "LOTNAME", "LOTPOS", "CMPORG_ID") AS 
  select
  od.budget_id,
  od.id,
  od.document_id,
  trunc(od.plan_invitationdate),
  trunc(coalesce(cl.cmpdate, od.cmpdate)),
  cast(null as date),
  trunc(case when documentclass_id = 4  then od.openingdate else
        case when documentclass_id = 49 then od.finishdate else od.acceptdate end end),
  trunc(case when documentclass_id in (5, 49) then od.cmpdate else od.selectdate end),
  trunc(od.finishdate),
  coalesce(cl.amount, od.amount),
  od.purchasemode_id,
  od.dispstatus_id,
  od.documentclass_id,
  coalesce(cl.enterprise, od.enterprise),
  coalesce(cl.name, od.cmpname),
  cl.pos,
  od.cmporg_id
from OrderDoc od
left join cmplot cl on (od.id = cl.order_id and cl.islotdeclined = 0 and cl.islotreregistered = 0)
where od.dispstatus_id not in (-1, 0, 5, 17, 21) and od.documentclass_id <> 3;
--------------------------------------------------------
--  DDL for View PLAN2PURCHASECARRYINTERNAL
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PLAN2PURCHASECARRYINTERNAL" ("DOCUMENT_ID", "GROUPCODE", "OKDP_CODE", "CUSTOMER_ID", "PURCHASEMODE_ID", "CMPORG_ID", "PLANYEAR", "BUDGET_ID", "PAYCONDITION_ID", "GOODSCODE", "UNITNAME", "CODE1", "CODE2", "CODE3", "CODE4", "CODE5", "CODE6", "CODE7", "CODE8", "CODE9", "CODE10", "INDUSTRYCODE_ID", "GRANTINVESTMENT_ID", "FINSRC_ID", "DELIVERYBASIS_ID", "INVITATIONDATE", "CMPDATE", "LOT_DESCRIPTION_ID", "CONTRACTOR_ID", "ISENTERPRISE", "ISSMALL", "USEAMOUNT1", "USEAMOUNT2", "USEAMOUNT3", "USEAMOUNT4", "USECONFIRMAMOUNT1", "USECONFIRMAMOUNT2", "USECONFIRMAMOUNT3", "USECONFIRMAMOUNT4", "USEQUALIFYAMOUNT1", "USEQUALIFYAMOUNT2", "USEQUALIFYAMOUNT3", "USEQUALIFYAMOUNT4", "CONTROLAMOUNT1", "CONTROLAMOUNT2", "CONTROLAMOUNT3", "CONTROLAMOUNT4", "CONTROLQUALIFYAMOUNT1", "CONTROLQUALIFYAMOUNT2", "CONTROLQUALIFYAMOUNT3", "CONTROLQUALIFYAMOUNT4", "DECLAREDAMOUNT1", "DECLAREDAMOUNT2", "DECLAREDAMOUNT3", "DECLAREDAMOUNT4", "ECONOMYAMOUNT", "ECONOMYFINALAMOUNT", "DISTRIBUTEAMOUNT1", "DISTRIBUTEAMOUNT2", "DISTRIBUTEAMOUNT3", "DISTRIBUTEAMOUNT4", "DISTRIBUTECONFIRMAMOUNT1", "DISTRIBUTECONFIRMAMOUNT2", "DISTRIBUTECONFIRMAMOUNT3", "DISTRIBUTECONFIRMAMOUNT4", "DISTRIBUTEQUALIFYAMOUNT1", "DISTRIBUTEQUALIFYAMOUNT2", "DISTRIBUTEQUALIFYAMOUNT3", "DISTRIBUTEQUALIFYAMOUNT4", "EXECUTEAMOUNT1", "EXECUTEAMOUNT2", "EXECUTEAMOUNT3", "EXECUTEAMOUNT4", "SUPPLIEDAMOUNT", "PAYEDAMOUNT", "RECOILAMOUNT1", "RECOILAMOUNT2", "RECOILAMOUNT3", "RECOILAMOUNT4") AS 
  select
 pc.doc_id,
 pc.groupcode, pc.okdp_code, pc.recipient_id, pc.purchasemode_id, pc.cmporg_id, pc.planyear, doc.budget_id,
 pc.payconditioncache_id,
 pc.goodscode, pc.unitname, pc.code1, pc.code2, pc.code3, pc.code4, pc.code5, pc.code6, pc.code7, pc.code8, pc.code9, pc.code10,
 pc.IndustryCode_Id, pc.GrantInvestment_Id,
 pc.finsrc_id, pc.deliverybasis_id, pc.invitationdate, pc.cmpdate, pc.descriptioncache_id, pc.contractor_id, pc.isenterprise, pc.issmall,
 case when (doc.documentclass_id in (1, 2) and doc.dispstatus_id in (2, 3, 4, 11, 13, 18, 19, 28, 31, 33)) then coalesce(pc.amount1, 0) else 0.00 end,
 case when (doc.documentclass_id in (1, 2) and doc.dispstatus_id in (2, 3, 4, 11, 13, 18, 19, 28, 31, 33)) then coalesce(pc.amount2, 0) else 0.00 end,
 case when (doc.documentclass_id in (1, 2) and doc.dispstatus_id in (2, 3, 4, 11, 13, 18, 19, 28, 31, 33)) then coalesce(pc.amount3, 0) else 0.00 end,
 case when (doc.documentclass_id in (1, 2) and doc.dispstatus_id in (2, 3, 4, 11, 13, 18, 19, 28, 31, 33)) then coalesce(pc.amount4, 0) else 0.00 end,
 case when (doc.documentclass_id = 1 and doc.dispstatus_id in (3, 13, 31)) or (doc.documentclass_id = 2 and doc.dispstatus_id in (19, 31)) then coalesce(pc.amount1, 0) else 0.00 end,
 case when (doc.documentclass_id = 1 and doc.dispstatus_id in (3, 13, 31)) or (doc.documentclass_id = 2 and doc.dispstatus_id in (19, 31)) then coalesce(pc.amount2, 0) else 0.00 end,
 case when (doc.documentclass_id = 1 and doc.dispstatus_id in (3, 13, 31)) or (doc.documentclass_id = 2 and doc.dispstatus_id in (19, 31)) then coalesce(pc.amount3, 0) else 0.00 end,
 case when (doc.documentclass_id = 1 and doc.dispstatus_id in (3, 13, 31)) or (doc.documentclass_id = 2 and doc.dispstatus_id in (19, 31)) then coalesce(pc.amount4, 0) else 0.00 end,
 case when (doc.documentclass_id in (1, 2) and doc.dispstatus_id = 17) then coalesce(pc.amount1, 0) else 0.00 end,
 case when (doc.documentclass_id in (1, 2) and doc.dispstatus_id = 17) then coalesce(pc.amount2, 0) else 0.00 end,
 case when (doc.documentclass_id in (1, 2) and doc.dispstatus_id = 17) then coalesce(pc.amount3, 0) else 0.00 end,
 case when (doc.documentclass_id in (1, 2) and doc.dispstatus_id = 17) then coalesce(pc.amount4, 0) else 0.00 end,
 case when (doc.documentclass_id in (1, 2) and doc.dispstatus_id = 6) or
           (doc.documentclass_id in (4, 28, 5, 36, 49) and doc.dispstatus_id in (5, 16, 43, 44, 47, 48, 49, 50, 51, 58, 59)) or
           (doc.documentclass_id = 3 and doc.dispstatus_id in (5)) then coalesce(pc.amount1, 0) else 0.00 end,
 case when (doc.documentclass_id in (1, 2) and doc.dispstatus_id = 6) or
           (doc.documentclass_id in (4, 28, 5, 36, 49) and doc.dispstatus_id in (5, 16, 43, 44, 47, 48, 49, 50, 51, 58, 59)) or
           (doc.documentclass_id = 3 and doc.dispstatus_id in (5)) then coalesce(pc.amount2, 0) else 0.00 end,
 case when (doc.documentclass_id in (1, 2) and doc.dispstatus_id = 6) or
           (doc.documentclass_id in (4, 28, 5, 36, 49) and doc.dispstatus_id in (5, 16, 43, 44, 47, 48, 49, 50, 51, 58, 59)) or
           (doc.documentclass_id = 3 and doc.dispstatus_id in (5)) then coalesce(pc.amount3, 0) else 0.00 end,
 case when (doc.documentclass_id in (1, 2) and doc.dispstatus_id = 6) or
           (doc.documentclass_id in (4, 28, 5, 36, 49) and doc.dispstatus_id in (5, 16, 43, 44, 47, 48, 49, 50, 51, 58, 59)) or
           (doc.documentclass_id = 3 and doc.dispstatus_id in (5)) then coalesce(pc.amount4, 0) else 0.00 end,
 case when doc.documentclass_id in (4, 28, 5, 36, 3, 49) and doc.dispstatus_id = 17 then coalesce(pc.amount1, 0) else 0.00 end,
 case when doc.documentclass_id in (4, 28, 5, 36, 3, 49) and doc.dispstatus_id = 17 then coalesce(pc.amount2, 0) else 0.00 end,
 case when doc.documentclass_id in (4, 28, 5, 36, 3, 49) and doc.dispstatus_id = 17 then coalesce(pc.amount3, 0) else 0.00 end,
 case when doc.documentclass_id in (4, 28, 5, 36, 3, 49) and doc.dispstatus_id = 17 then coalesce(pc.amount4, 0) else 0.00 end,
 case when (doc.documentclass_id in (4, 28, 5, 36, 49) and doc.dispstatus_id in (10, 12, 13, 20, 31, 30, 35, 45, 46, 52, 62, 63, 64, 65, 67, 68)) or
           (doc.documentclass_id = 3 and doc.dispstatus_id in (10, 13)) then coalesce(pc.amount1, 0) else 0.00 end,
 case when (doc.documentclass_id in (4, 28, 5, 36, 49) and doc.dispstatus_id in (10, 12, 13, 20, 31, 30, 35, 45, 46, 52, 62, 63, 64, 65, 67, 68)) or
           (doc.documentclass_id = 3 and doc.dispstatus_id in (10, 13)) then coalesce(pc.amount2, 0) else 0.00 end,
 case when (doc.documentclass_id in (4, 28, 5, 36, 49) and doc.dispstatus_id in (10, 12, 13, 20, 31, 30, 35, 45, 46, 52, 62, 63, 64, 65, 67, 68)) or
           (doc.documentclass_id = 3 and doc.dispstatus_id in (10, 13)) then coalesce(pc.amount3, 0) else 0.00 end,
 case when (doc.documentclass_id in (4, 28, 5, 36, 49) and doc.dispstatus_id in (10, 12, 13, 20, 31, 30, 35, 45, 46, 52, 62, 63, 64, 65, 67, 68)) or
           (doc.documentclass_id = 3 and doc.dispstatus_id in (10, 13)) then coalesce(pc.amount4, 0) else 0.00 end,
 pc.economyamount, pc.economyfinalamount,
 case when (doc.documentclass_id in (8, 9, 32) and doc.dispstatus_id in (2, 4, 5, 6, 10, 14, 16, 19, 32, 34, 35, 24, 25, 49, 50, 51, 52)) then coalesce(pc.amount1, 0) else 0.00 end,
 case when (doc.documentclass_id in (8, 9, 32) and doc.dispstatus_id in (2, 4, 5, 6, 10, 14, 16, 19, 32, 34, 35, 24, 25, 49, 50, 51, 52)) then coalesce(pc.amount2, 0) else 0.00 end,
 case when (doc.documentclass_id in (8, 9, 32) and doc.dispstatus_id in (2, 4, 5, 6, 10, 14, 16, 19, 32, 34, 35, 24, 25, 49, 50, 51, 52)) then coalesce(pc.amount3, 0) else 0.00 end,
 case when (doc.documentclass_id in (8, 9, 32) and doc.dispstatus_id in (2, 4, 5, 6, 10, 14, 16, 19, 32, 34, 35, 24, 25, 49, 50, 51, 52)) then coalesce(pc.amount4, 0) else 0.00 end,
 case when doc.documentclass_id in (8, 9, 32) and doc.dispstatus_id in (6, 24, 34, 25) then coalesce(pc.amount1, 0) else 0.00 end,
 case when doc.documentclass_id in (8, 9, 32) and doc.dispstatus_id in (6, 24, 34, 25) then coalesce(pc.amount2, 0) else 0.00 end,
 case when doc.documentclass_id in (8, 9, 32) and doc.dispstatus_id in (6, 24, 34, 25) then coalesce(pc.amount3, 0) else 0.00 end, 
 case when doc.documentclass_id in (8, 9, 32) and doc.dispstatus_id in (6, 24, 34, 25) then coalesce(pc.amount4, 0) else 0.00 end,
 case when doc.documentclass_id in (8, 9, 32) and doc.dispstatus_id in (17) then coalesce(pc.amount1, 0) else 0.00 end,
 case when doc.documentclass_id in (8, 9, 32) and doc.dispstatus_id in (17) then coalesce(pc.amount2, 0) else 0.00 end,
 case when doc.documentclass_id in (8, 9, 32) and doc.dispstatus_id in (17) then coalesce(pc.amount3, 0) else 0.00 end,
 case when doc.documentclass_id in (8, 9, 32) and doc.dispstatus_id in (17) then coalesce(pc.amount4, 0) else 0.00 end,
 case when doc.documentclass_id in (8, 9, 32) and doc.dispstatus_id in (10) then coalesce(pc.amount1, 0) else 0.00 end,
 case when doc.documentclass_id in (8, 9, 32) and doc.dispstatus_id in (10) then coalesce(pc.amount2, 0) else 0.00 end,
 case when doc.documentclass_id in (8, 9, 32) and doc.dispstatus_id in (10) then coalesce(pc.amount3, 0) else 0.00 end,
 case when doc.documentclass_id in (8, 9, 32) and doc.dispstatus_id in (10) then coalesce(pc.amount4, 0) else 0.00 end,
 coalesce(inv.suppliedamount, con.suppliedamount),
 case when ifl.docflagtype_id is not null then inv.amount else con.payedamount end,
 case when doc.documentclass_id = 48 and doc.dispstatus_id = 10 then coalesce(-pc.amount1, 0) else 0.00 end,
 case when doc.documentclass_id = 48 and doc.dispstatus_id = 10 then coalesce(-pc.amount2, 0) else 0.00 end,
 case when doc.documentclass_id = 48 and doc.dispstatus_id = 10 then coalesce(-pc.amount3, 0) else 0.00 end,
 case when doc.documentclass_id = 48 and doc.dispstatus_id = 10 then coalesce(-pc.amount4, 0) else 0.00 end
from PurchaseCarry pc
left join document doc on (pc.doc_id = doc.id)
left join contractdoc con on (doc.id = con.document_id and doc.documentclass_id in (8, 32))
left join invoicedoc inv on (doc.id = inv.document_id and doc.documentclass_id = 9)
left join docflag ifl on (inv.document_id = ifl.document_id and ifl.docflagtype_id = 34)
where pc.planversion=2;
--------------------------------------------------------
--  DDL for View PLAN2PURCHASECARRY
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PLAN2PURCHASECARRY" ("DOCUMENT_ID", "GROUPCODE", "OKDP_CODE", "CUSTOMER_ID", "PURCHASEMODE_ID", "CMPORG_ID", "PLANYEAR", "BUDGET_ID", "PAYCONDITION_ID", "GOODSCODE", "UNITNAME", "CODE1", "CODE2", "CODE3", "CODE4", "CODE5", "CODE6", "CODE7", "CODE8", "CODE9", "CODE10", "INDUSTRYCODE_ID", "GRANTINVESTMENT_ID", "FINSRC_ID", "DELIVERYBASIS_ID", "INVITATIONDATE", "CMPDATE", "LOT_DESCRIPTION_ID", "CONTRACTOR_ID", "ISENTERPRISE", "ISSMALL", "USEAMOUNT1", "USEAMOUNT2", "USEAMOUNT3", "USEAMOUNT4", "USECONFIRMAMOUNT1", "USECONFIRMAMOUNT2", "USECONFIRMAMOUNT3", "USECONFIRMAMOUNT4", "USEQUALIFYAMOUNT1", "USEQUALIFYAMOUNT2", "USEQUALIFYAMOUNT3", "USEQUALIFYAMOUNT4", "CONTROLAMOUNT1", "CONTROLAMOUNT2", "CONTROLAMOUNT3", "CONTROLAMOUNT4", "CONTROLQUALIFYAMOUNT1", "CONTROLQUALIFYAMOUNT2", "CONTROLQUALIFYAMOUNT3", "CONTROLQUALIFYAMOUNT4", "DECLAREDAMOUNT1", "DECLAREDAMOUNT2", "DECLAREDAMOUNT3", "DECLAREDAMOUNT4", "ECONOMYAMOUNT", "ECONOMYFINALAMOUNT", "DISTRIBUTEAMOUNT1", "DISTRIBUTEAMOUNT2", "DISTRIBUTEAMOUNT3", "DISTRIBUTEAMOUNT4", "DISTRIBUTECONFIRMAMOUNT1", "DISTRIBUTECONFIRMAMOUNT2", "DISTRIBUTECONFIRMAMOUNT3", "DISTRIBUTECONFIRMAMOUNT4", "DISTRIBUTEQUALIFYAMOUNT1", "DISTRIBUTEQUALIFYAMOUNT2", "DISTRIBUTEQUALIFYAMOUNT3", "DISTRIBUTEQUALIFYAMOUNT4", "EXECUTEAMOUNT1", "EXECUTEAMOUNT2", "EXECUTEAMOUNT3", "EXECUTEAMOUNT4", "SUPPLIEDAMOUNT", "PAYEDAMOUNT", "RECOILAMOUNT1", "RECOILAMOUNT2", "RECOILAMOUNT3", "RECOILAMOUNT4") AS 
  select
 MAX(document_id),
 groupcode, okdp_code, customer_id, purchasemode_id, cmporg_id, planyear, budget_id, paycondition_id,
 goodscode, unitname, code1, code2, code3, code4, code5, code6, code7, code8, code9, code10,
 IndustryCode_Id, GrantInvestment_Id,
 finsrc_id, deliverybasis_id, invitationdate, cmpdate, lot_description_id, contractor_id, isenterprise, issmall,
 SUM(useamount1), SUM(useamount2), SUM(useamount3), SUM(useamount4),
 SUM(useconfirmamount1), SUM(useconfirmamount2), SUM(useconfirmamount3), SUM(useconfirmamount4),
 SUM(usequalifyamount1), SUM(usequalifyamount2), SUM(usequalifyamount3), SUM(usequalifyamount4),
 SUM(controlamount1), SUM(controlamount2), SUM(controlamount3), SUM(controlamount4),
 SUM(controlqualifyamount1), SUM(controlqualifyamount2), SUM(controlqualifyamount3), SUM(controlqualifyamount4),
 SUM(declaredamount1), SUM(declaredamount2), SUM(declaredamount3), SUM(declaredamount4),
 SUM(economyamount), SUM(economyfinalamount),
 SUM(distributeamount1), SUM(distributeamount2), SUM(distributeamount3), SUM(distributeamount4),
 SUM(distributeconfirmamount1), SUM(distributeconfirmamount2), SUM(distributeconfirmamount3), SUM(distributeconfirmamount4),
 SUM(distributequalifyamount1), SUM(distributequalifyamount2), SUM(distributequalifyamount3), SUM(distributequalifyamount4),
 SUM(executeamount1), SUM(executeamount2), SUM(executeamount3), SUM(executeamount4),
 SUM(suppliedamount),
 SUM(payedamount),
 SUM(recoilamount1), SUM(recoilamount2), SUM(recoilamount3), SUM(recoilamount4)
from Plan2PurchaseCarryInternal pc
group by
 groupcode, okdp_code, customer_id, purchasemode_id, cmporg_id, planyear, budget_id, paycondition_id,
 goodscode, unitname, code1, code2, code3, code4, code5, code6, code7, code8, code9, code10,
 IndustryCode_Id, GrantInvestment_Id,
 finsrc_id, deliverybasis_id, invitationdate, cmpdate, lot_description_id, contractor_id, isenterprise, issmall;
--------------------------------------------------------
--  DDL for View PLAN2PURCHASECARRYBYKBK
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PLAN2PURCHASECARRYBYKBK" ("DOCUMENT_ID", "GROUPCODE", "OKDP_CODE", "CUSTOMER_ID", "PURCHASEMODE_ID", "CMPORG_ID", "PLANYEAR", "BUDGET_ID", "PAYCONDITION_ID", "GOODSCODE", "UNITNAME", "CODE1", "CODE2", "CODE3", "CODE4", "CODE5", "CODE6", "CODE7", "CODE8", "CODE9", "CODE10", "INDUSTRYCODE_ID", "GRANTINVESTMENT_ID", "FINSRC_ID", "DELIVERYBASIS_ID", "INVITATIONDATE", "CMPDATE", "LOT_DESCRIPTION_ID", "CONTRACTOR_ID", "ISENTERPRISE", "ISSMALL", "USEAMOUNT1", "USEAMOUNT2", "USEAMOUNT3", "USEAMOUNT4", "USECONFIRMAMOUNT1", "USECONFIRMAMOUNT2", "USECONFIRMAMOUNT3", "USECONFIRMAMOUNT4", "USEQUALIFYAMOUNT1", "USEQUALIFYAMOUNT2", "USEQUALIFYAMOUNT3", "USEQUALIFYAMOUNT4", "CONTROLAMOUNT1", "CONTROLAMOUNT2", "CONTROLAMOUNT3", "CONTROLAMOUNT4", "CONTROLQUALIFYAMOUNT1", "CONTROLQUALIFYAMOUNT2", "CONTROLQUALIFYAMOUNT3", "CONTROLQUALIFYAMOUNT4", "DECLAREDAMOUNT1", "DECLAREDAMOUNT2", "DECLAREDAMOUNT3", "DECLAREDAMOUNT4", "ECONOMYAMOUNT", "ECONOMYFINALAMOUNT", "DISTRIBUTEAMOUNT1", "DISTRIBUTEAMOUNT2", "DISTRIBUTEAMOUNT3", "DISTRIBUTEAMOUNT4", "DISTRIBUTECONFIRMAMOUNT1", "DISTRIBUTECONFIRMAMOUNT2", "DISTRIBUTECONFIRMAMOUNT3", "DISTRIBUTECONFIRMAMOUNT4", "DISTRIBUTEQUALIFYAMOUNT1", "DISTRIBUTEQUALIFYAMOUNT2", "DISTRIBUTEQUALIFYAMOUNT3", "DISTRIBUTEQUALIFYAMOUNT4", "EXECUTEAMOUNT1", "EXECUTEAMOUNT2", "EXECUTEAMOUNT3", "EXECUTEAMOUNT4", "SUPPLIEDAMOUNT", "PAYEDAMOUNT", "RECOILAMOUNT1", "RECOILAMOUNT2", "RECOILAMOUNT3", "RECOILAMOUNT4") AS 
  select
 MAX(document_id),
 null, null, customer_id, purchasemode_id, cmporg_id, planyear, budget_id, paycondition_id,
 null, null, code1, code2, code3, code4, code5, code6, code7, code8, code9, code10,
 IndustryCode_Id, GrantInvestment_Id,
 finsrc_id, deliverybasis_id, invitationdate, cmpdate, lot_description_id, contractor_id, isenterprise, issmall,
 SUM(useamount1), SUM(useamount2), SUM(useamount3), SUM(useamount4),
 SUM(useconfirmamount1), SUM(useconfirmamount2), SUM(useconfirmamount3), SUM(useconfirmamount4),
 SUM(usequalifyamount1), SUM(usequalifyamount2), SUM(usequalifyamount3), SUM(usequalifyamount4),
 SUM(controlamount1), SUM(controlamount2), SUM(controlamount3), SUM(controlamount4),
 SUM(controlqualifyamount1), SUM(controlqualifyamount2), SUM(controlqualifyamount3), SUM(controlqualifyamount4),
 SUM(declaredamount1), SUM(declaredamount2), SUM(declaredamount3), SUM(declaredamount4),
 SUM(economyamount), SUM(economyfinalamount),
 SUM(distributeamount1), SUM(distributeamount2), SUM(distributeamount3), SUM(distributeamount4),
 SUM(distributeconfirmamount1), SUM(distributeconfirmamount2), SUM(distributeconfirmamount3), SUM(distributeconfirmamount4),
 SUM(distributequalifyamount1), SUM(distributequalifyamount2), SUM(distributequalifyamount3), SUM(distributequalifyamount4),
 SUM(executeamount1), SUM(executeamount2), SUM(executeamount3), SUM(executeamount4),
 SUM(suppliedamount),
 SUM(payedamount),
 SUM(recoilamount1), SUM(recoilamount2), SUM(recoilamount3), SUM(recoilamount4)
from Plan2PurchaseCarryInternal pc
group by
 customer_id, purchasemode_id, cmporg_id, planyear, budget_id, paycondition_id,
 code1, code2, code3, code4, code5, code6, code7, code8, code9, code10,
 IndustryCode_Id, GrantInvestment_Id,
 finsrc_id, deliverybasis_id, invitationdate, cmpdate, lot_description_id, contractor_id, isenterprise, issmall;
--------------------------------------------------------
--  DDL for View PLAN2PURCHASECARRYBYPURCHASE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PLAN2PURCHASECARRYBYPURCHASE" ("DOCUMENT_ID", "GROUPCODE", "OKDP_CODE", "CUSTOMER_ID", "PURCHASEMODE_ID", "CMPORG_ID", "PLANYEAR", "BUDGET_ID", "PAYCONDITION_ID", "GOODSCODE", "UNITNAME", "CODE1", "CODE2", "CODE3", "CODE4", "CODE5", "CODE6", "CODE7", "CODE8", "CODE9", "CODE10", "INDUSTRYCODE_ID", "GRANTINVESTMENT_ID", "FINSRC_ID", "DELIVERYBASIS_ID", "INVITATIONDATE", "CMPDATE", "LOT_DESCRIPTION_ID", "CONTRACTOR_ID", "ISENTERPRISE", "ISSMALL", "USEAMOUNT1", "USEAMOUNT2", "USEAMOUNT3", "USEAMOUNT4", "USECONFIRMAMOUNT1", "USECONFIRMAMOUNT2", "USECONFIRMAMOUNT3", "USECONFIRMAMOUNT4", "USEQUALIFYAMOUNT1", "USEQUALIFYAMOUNT2", "USEQUALIFYAMOUNT3", "USEQUALIFYAMOUNT4", "CONTROLAMOUNT1", "CONTROLAMOUNT2", "CONTROLAMOUNT3", "CONTROLAMOUNT4", "CONTROLQUALIFYAMOUNT1", "CONTROLQUALIFYAMOUNT2", "CONTROLQUALIFYAMOUNT3", "CONTROLQUALIFYAMOUNT4", "DECLAREDAMOUNT1", "DECLAREDAMOUNT2", "DECLAREDAMOUNT3", "DECLAREDAMOUNT4", "ECONOMYAMOUNT", "ECONOMYFINALAMOUNT", "DISTRIBUTEAMOUNT1", "DISTRIBUTEAMOUNT2", "DISTRIBUTEAMOUNT3", "DISTRIBUTEAMOUNT4", "DISTRIBUTECONFIRMAMOUNT1", "DISTRIBUTECONFIRMAMOUNT2", "DISTRIBUTECONFIRMAMOUNT3", "DISTRIBUTECONFIRMAMOUNT4", "DISTRIBUTEQUALIFYAMOUNT1", "DISTRIBUTEQUALIFYAMOUNT2", "DISTRIBUTEQUALIFYAMOUNT3", "DISTRIBUTEQUALIFYAMOUNT4", "EXECUTEAMOUNT1", "EXECUTEAMOUNT2", "EXECUTEAMOUNT3", "EXECUTEAMOUNT4", "SUPPLIEDAMOUNT", "PAYEDAMOUNT", "RECOILAMOUNT1", "RECOILAMOUNT2", "RECOILAMOUNT3", "RECOILAMOUNT4") AS 
  select
 MAX(document_id),
 null, null, customer_id, purchasemode_id, cmporg_id, planyear, budget_id, paycondition_id,
 null, null, null, null, null, null, null, null, null, null, null, null,
 null, null,
 null, deliverybasis_id, invitationdate, cmpdate, lot_description_id, contractor_id, isenterprise, issmall,
 SUM(useamount1), SUM(useamount2), SUM(useamount3), SUM(useamount4),
 SUM(useconfirmamount1), SUM(useconfirmamount2), SUM(useconfirmamount3), SUM(useconfirmamount4),
 SUM(usequalifyamount1), SUM(usequalifyamount2), SUM(usequalifyamount3), SUM(usequalifyamount4),
 SUM(controlamount1), SUM(controlamount2), SUM(controlamount3), SUM(controlamount4),
 SUM(controlqualifyamount1), SUM(controlqualifyamount2), SUM(controlqualifyamount3), SUM(controlqualifyamount4),
 SUM(declaredamount1), SUM(declaredamount2), SUM(declaredamount3), SUM(declaredamount4),
 SUM(economyamount), SUM(economyfinalamount),
 SUM(distributeamount1), SUM(distributeamount2), SUM(distributeamount3), SUM(distributeamount4),
 SUM(distributeconfirmamount1), SUM(distributeconfirmamount2), SUM(distributeconfirmamount3), SUM(distributeconfirmamount4),
 SUM(distributequalifyamount1), SUM(distributequalifyamount2), SUM(distributequalifyamount3), SUM(distributequalifyamount4),
 SUM(executeamount1), SUM(executeamount2), SUM(executeamount3), SUM(executeamount4),
 SUM(suppliedamount),
 SUM(payedamount),
 SUM(recoilamount1), SUM(recoilamount2), SUM(recoilamount3), SUM(recoilamount4)
from Plan2PurchaseCarryInternal pc
group by
 customer_id, purchasemode_id, cmporg_id, planyear, budget_id, paycondition_id,
 deliverybasis_id, invitationdate, cmpdate, lot_description_id, contractor_id, isenterprise, issmall;
--------------------------------------------------------
--  DDL for View PLAN2PURCHASECARRYINTBYKBK
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PLAN2PURCHASECARRYINTBYKBK" ("DOCUMENT_ID", "GROUPCODE", "OKDP_CODE", "CUSTOMER_ID", "PURCHASEMODE_ID", "CMPORG_ID", "PLANYEAR", "BUDGET_ID", "PAYCONDITION_ID", "GOODSCODE", "UNITNAME", "CODE1", "CODE2", "CODE3", "CODE4", "CODE5", "CODE6", "CODE7", "CODE8", "CODE9", "CODE10", "INDUSTRYCODE_ID", "GRANTINVESTMENT_ID", "FINSRC_ID", "DELIVERYBASIS_ID", "INVITATIONDATE", "CMPDATE", "LOT_DESCRIPTION_ID", "CONTRACTOR_ID", "ISENTERPRISE", "ISSMALL", "USEAMOUNT1", "USEAMOUNT2", "USEAMOUNT3", "USEAMOUNT4", "USECONFIRMAMOUNT1", "USECONFIRMAMOUNT2", "USECONFIRMAMOUNT3", "USECONFIRMAMOUNT4", "USEQUALIFYAMOUNT1", "USEQUALIFYAMOUNT2", "USEQUALIFYAMOUNT3", "USEQUALIFYAMOUNT4", "CONTROLAMOUNT1", "CONTROLAMOUNT2", "CONTROLAMOUNT3", "CONTROLAMOUNT4", "CONTROLQUALIFYAMOUNT1", "CONTROLQUALIFYAMOUNT2", "CONTROLQUALIFYAMOUNT3", "CONTROLQUALIFYAMOUNT4", "DECLAREDAMOUNT1", "DECLAREDAMOUNT2", "DECLAREDAMOUNT3", "DECLAREDAMOUNT4", "ECONOMYAMOUNT", "ECONOMYFINALAMOUNT", "DISTRIBUTEAMOUNT1", "DISTRIBUTEAMOUNT2", "DISTRIBUTEAMOUNT3", "DISTRIBUTEAMOUNT4", "DISTRIBUTECONFIRMAMOUNT1", "DISTRIBUTECONFIRMAMOUNT2", "DISTRIBUTECONFIRMAMOUNT3", "DISTRIBUTECONFIRMAMOUNT4", "DISTRIBUTEQUALIFYAMOUNT1", "DISTRIBUTEQUALIFYAMOUNT2", "DISTRIBUTEQUALIFYAMOUNT3", "DISTRIBUTEQUALIFYAMOUNT4", "EXECUTEAMOUNT1", "EXECUTEAMOUNT2", "EXECUTEAMOUNT3", "EXECUTEAMOUNT4", "SUPPLIEDAMOUNT", "PAYEDAMOUNT", "RECOILAMOUNT1", "RECOILAMOUNT2", "RECOILAMOUNT3", "RECOILAMOUNT4") AS 
  select
 document_id,
 null, null, customer_id, purchasemode_id, cmporg_id, planyear, budget_id, paycondition_id,
 null, null, code1, code2, code3, code4, code5, code6, code7, code8, code9, code10,
 IndustryCode_Id, GrantInvestment_Id,
 finsrc_id, deliverybasis_id, invitationdate, cmpdate, lot_description_id, contractor_id, isenterprise, issmall,
 useamount1, useamount2, useamount3, useamount4,
 useconfirmamount1, useconfirmamount2, useconfirmamount3, useconfirmamount4,
 usequalifyamount1, usequalifyamount2, usequalifyamount3, usequalifyamount4,
 controlamount1, controlamount2, controlamount3, controlamount4,
 controlqualifyamount1, controlqualifyamount2, controlqualifyamount3, controlqualifyamount4,
 declaredamount1, declaredamount2, declaredamount3, declaredamount4,
 economyamount, economyfinalamount,
 distributeamount1, distributeamount2, distributeamount3, distributeamount4,
 distributeconfirmamount1, distributeconfirmamount2, distributeconfirmamount3, distributeconfirmamount4,
 distributequalifyamount1, distributequalifyamount2, distributequalifyamount3, distributequalifyamount4,
 executeamount1, executeamount2, executeamount3, executeamount4,
 suppliedamount,
 payedamount,
 recoilamount1, recoilamount2, recoilamount3, recoilamount4
from Plan2PurchaseCarryInternal pc;
--------------------------------------------------------
--  DDL for View PLAN2PURCHASECARRYINTBYPURCH
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PLAN2PURCHASECARRYINTBYPURCH" ("DOCUMENT_ID", "GROUPCODE", "OKDP_CODE", "CUSTOMER_ID", "PURCHASEMODE_ID", "CMPORG_ID", "PLANYEAR", "BUDGET_ID", "PAYCONDITION_ID", "GOODSCODE", "UNITNAME", "CODE1", "CODE2", "CODE3", "CODE4", "CODE5", "CODE6", "CODE7", "CODE8", "CODE9", "CODE10", "INDUSTRYCODE_ID", "GRANTINVESTMENT_ID", "FINSRC_ID", "DELIVERYBASIS_ID", "INVITATIONDATE", "CMPDATE", "LOT_DESCRIPTION_ID", "CONTRACTOR_ID", "ISENTERPRISE", "ISSMALL", "USEAMOUNT1", "USEAMOUNT2", "USEAMOUNT3", "USEAMOUNT4", "USECONFIRMAMOUNT1", "USECONFIRMAMOUNT2", "USECONFIRMAMOUNT3", "USECONFIRMAMOUNT4", "USEQUALIFYAMOUNT1", "USEQUALIFYAMOUNT2", "USEQUALIFYAMOUNT3", "USEQUALIFYAMOUNT4", "CONTROLAMOUNT1", "CONTROLAMOUNT2", "CONTROLAMOUNT3", "CONTROLAMOUNT4", "CONTROLQUALIFYAMOUNT1", "CONTROLQUALIFYAMOUNT2", "CONTROLQUALIFYAMOUNT3", "CONTROLQUALIFYAMOUNT4", "DECLAREDAMOUNT1", "DECLAREDAMOUNT2", "DECLAREDAMOUNT3", "DECLAREDAMOUNT4", "ECONOMYAMOUNT", "ECONOMYFINALAMOUNT", "DISTRIBUTEAMOUNT1", "DISTRIBUTEAMOUNT2", "DISTRIBUTEAMOUNT3", "DISTRIBUTEAMOUNT4", "DISTRIBUTECONFIRMAMOUNT1", "DISTRIBUTECONFIRMAMOUNT2", "DISTRIBUTECONFIRMAMOUNT3", "DISTRIBUTECONFIRMAMOUNT4", "DISTRIBUTEQUALIFYAMOUNT1", "DISTRIBUTEQUALIFYAMOUNT2", "DISTRIBUTEQUALIFYAMOUNT3", "DISTRIBUTEQUALIFYAMOUNT4", "EXECUTEAMOUNT1", "EXECUTEAMOUNT2", "EXECUTEAMOUNT3", "EXECUTEAMOUNT4", "SUPPLIEDAMOUNT", "PAYEDAMOUNT", "RECOILAMOUNT1", "RECOILAMOUNT2", "RECOILAMOUNT3", "RECOILAMOUNT4") AS 
  select
 document_id,
 null, null, customer_id, purchasemode_id, cmporg_id, planyear, budget_id, paycondition_id,
 null, null, null, null, null, null, null, null, null, null, null, null,
 null, null,
 null, deliverybasis_id, invitationdate, cmpdate, lot_description_id, contractor_id, isenterprise, issmall,
 useamount1, useamount2, useamount3, useamount4,
 useconfirmamount1, useconfirmamount2, useconfirmamount3, useconfirmamount4,
 usequalifyamount1, usequalifyamount2, usequalifyamount3, usequalifyamount4,
 controlamount1, controlamount2, controlamount3, controlamount4,
 controlqualifyamount1, controlqualifyamount2, controlqualifyamount3, controlqualifyamount4,
 declaredamount1, declaredamount2, declaredamount3, declaredamount4,
 economyamount, economyfinalamount,
 distributeamount1, distributeamount2, distributeamount3, distributeamount4,
 distributeconfirmamount1, distributeconfirmamount2, distributeconfirmamount3, distributeconfirmamount4,
 distributequalifyamount1, distributequalifyamount2, distributequalifyamount3, distributequalifyamount4,
 executeamount1, executeamount2, executeamount3, executeamount4,
 suppliedamount,
 payedamount,
 recoilamount1, recoilamount2, recoilamount3, recoilamount4
from Plan2PurchaseCarryInternal pc;
--------------------------------------------------------
--  DDL for View PLAN2VIEWERINTERNAL
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PLAN2VIEWERINTERNAL" ("DOCUMENT_ID", "BUDGET_ID", "PLANYEAR", "GROUPCODE", "OKDP_CODE", "OKPD_CODE", "OKPD_ID", "OKPD_NAME", "OKVED", "OKVED_ID", "OKVED_NAME", "PRICE", "MINREQUIREMENT", "GOODSCODE", "GOODSCAPTION", "UNITNAME", "CUSTOMER_ID", "FINSRC_ID", "DELIVERYBASIS_ID", "PURCHASEMODE_ID", "PLAN_INVITATIONDATE", "PLAN_DEALDATE", "PLAN_CONTRACTEXECDATE", "CMPORG_ID", "ISENTERPRISE", "PURCHASETYPE", "CONTRACTOR_ID", "PLANPOSITION", "DESCRIPTION", "ORDERNUMBER", "ORDERNAME", "IDENTIFICATION_CODE", "CURRENCY_ID", "ORDERFORM", "CONTRACTPAYORDERCACHE_ID", "CHANGEREASON_ID", "PAYCONDITIONCACHE_ID", "SINGLECUSTOMERREASON_ID", "OFRREQREASON_ID", "INDUSTRYCODE_ID", "GRANTINVESTMENT_ID", "CODE1", "CODE2", "CODE3", "CODE4", "CODE5", "CODE6", "CODE7", "CODE8", "CODE9", "CODE10", "CHANGEREASONINFO", "EFORM", "FIN_RECIPIENT_ID", "CONEXECSTAGESCACHE_ID", "PERIODICITYCACHE_ID", "PROHIBITIONSCACHE_ID", "PUBLICDISCUSSCACHE_ID", "GOODSUNITPRICE_FLAG", "GUARANTEECONTRACTAMOUNT", "ADVANCEPERCENT", "RECIPIENT_ID", "CHANGEREASONDATE", "DELIVERYDATEFROM", "DELIVERYDATETO", "PAYDATEFROM", "PAYDATETO", "PLAN_AMOUNT", "GUARANTEEAPPAMOUNT", "SUMPUSHASESMALLBUSINESS", "PRCPUSHASESMALLBUSINESS", "LINE_AMOUNT", "LINE_AMOUNT_2YEAR", "LINE_AMOUNT_3YEAR", "LINE_AMOUNT_FUTURE", "GOODS_AMOUNT", "GOODS_AMOUNT_2YEAR", "GOODS_AMOUNT_3YEAR", "GOODS_AMOUNT_FUTURE", "GOODS_QTY", "GOODS_QTY_2YEAR", "GOODS_QTY_3YEAR", "GOODS_QTY_FUTURE") AS 
  select
 pd.document_id, pd.budget_id, pd.planyear,
 pg.groupcode, pg.okdp_code, pg.okpd_code, pg.okpd_id, pg.okpd_name, pg.okved, pg.okved_id, pg.okved_name, pg.price, pg.minrequirement,
 pg.goodscode, pg.goodscaption, pg.unitname, pd.customer_id, pl.finsrc_id, pd.deliverybasis_id, pd.purchasemode_id,
 pd.invitationdate, pd.dealdate, pd.contractexecdate, pd.cmporg_id, pd.isenterprise,
 pd.purchasetype, pd.contractor_id, pd.planposition, pd.description, pd.ordernumber, pd.ordernamecache_id, pd.identification_code, pd.currency_id, pd.orderform,
 pd.contractpayordercache_id, pd.changereason_id, pd.payconditioncache_id, pd.singlecustomerreason_id, pd.ofrreqreason_id,
 pl.industrycode_id, pl.grantinvestment_id, pl.code1, pl.code2, pl.code3, pl.code4, pl.code5, pl.code6, pl.code7, pl.code8, pl.code9, pl.code10,
 pd.changereasoninfo, pd.eform, pl.recipient_id, pd.conexecstagescache_id, pd.periodicitycache_id,
 pd.prohibitionscache_id, pd.publicdiscusscache_id, f192.docflagtype_id, pd.guaranteecontractamount, pd.advancepercents,
 pd.recipient_id, pd.changereasondate, pd.deliverydatefrom, pd.deliverydateto, pd.paydatefrom, pd.paydateto,
 pd.amount, pd.guaranteeappamount, pd.sumpushasesmallbusiness, pd.prcpushasesmallbusiness,
 pl.amount, pl.amount_2year, pl.amount_3year, pl.amount_future,
 pg.amount, pg.amount_2year, pg.amount_3year, pg.amount_future,
 pg.qty, pg.qty_2year, pg.qty_3year, pg.qty_future
from Plan3PurchaseDoc pd
inner join Plan3DocChild on (Plan3DocChild.doc_id=pd.id)
inner join Plan3Doc on (Plan3Doc.id=Plan3DocChild.plan3doc_id and Plan3Doc.dispstatus_id in (10,24) and Plan3Doc.documentclass_id=55)
inner join Plan3PurchaseLine pl on (pl.plan3purchasedoc_id=pd.id)
left join Plan3PurchaseGoods pg on (pg.plan3purchasedoc_id=pd.id and pg.plan3purchaselinepos=pl.pos)
left join DocFlag f192 on (f192.document_id=pd.document_id and f192.docflagtype_id=192)
where pd.dispstatus_id in (10,24);
--------------------------------------------------------
--  DDL for View PLAN2VIEWER
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PLAN2VIEWER" ("DOCUMENT_ID", "BUDGET_ID", "PLANYEAR", "GROUPCODE", "OKDP_CODE", "OKPD_CODE", "OKPD_ID", "OKPD_NAME", "OKVED", "OKVED_ID", "OKVED_NAME", "PRICE", "MINREQUIREMENT", "GOODSCODE", "GOODSCAPTION", "UNITNAME", "CUSTOMER_ID", "FINSRC_ID", "DELIVERYBASIS_ID", "PURCHASEMODE_ID", "PLAN_INVITATIONDATE", "PLAN_DEALDATE", "PLAN_CONTRACTEXECDATE", "CMPORG_ID", "ISENTERPRISE", "PURCHASETYPE", "CONTRACTOR_ID", "PLANPOSITION", "DESCRIPTION", "ORDERNUMBER", "ORDERNAME", "IDENTIFICATION_CODE", "CURRENCY_ID", "ORDERFORM", "CONTRACTPAYORDERCACHE_ID", "CHANGEREASON_ID", "PAYCONDITIONCACHE_ID", "SINGLECUSTOMERREASON_ID", "OFRREQREASON_ID", "INDUSTRYCODE_ID", "GRANTINVESTMENT_ID", "CODE1", "CODE2", "CODE3", "CODE4", "CODE5", "CODE6", "CODE7", "CODE8", "CODE9", "CODE10", "CHANGEREASONINFO", "EFORM", "FIN_RECIPIENT_ID", "CONEXECSTAGESCACHE_ID", "PERIODICITYCACHE_ID", "PROHIBITIONSCACHE_ID", "PUBLICDISCUSSCACHE_ID", "GOODSUNITPRICE_FLAG", "GUARANTEECONTRACTAMOUNT", "ADVANCEPERCENT", "RECIPIENT_ID", "CHANGEREASONDATE", "DELIVERYDATEFROM", "DELIVERYDATETO", "PAYDATEFROM", "PAYDATETO", "PLAN_AMOUNT", "GUARANTEEAPPAMOUNT", "SUMPUSHASESMALLBUSINESS", "PRCPUSHASESMALLBUSINESS", "LINE_AMOUNT", "LINE_AMOUNT_2YEAR", "LINE_AMOUNT_3YEAR", "LINE_AMOUNT_FUTURE", "GOODS_AMOUNT", "GOODS_AMOUNT_2YEAR", "GOODS_AMOUNT_3YEAR", "GOODS_AMOUNT_FUTURE", "GOODS_QTY", "GOODS_QTY_2YEAR", "GOODS_QTY_3YEAR", "GOODS_QTY_FUTURE") AS 
  select
 document_id, budget_id, planyear,
 groupcode, okdp_code, okpd_code, okpd_id, okpd_name, okved, okved_id, okved_name, price, minrequirement,
 goodscode, goodscaption, unitname, customer_id, finsrc_id, deliverybasis_id, purchasemode_id,
 plan_invitationdate, plan_dealdate, plan_contractexecdate, cmporg_id, isenterprise,
 purchasetype, contractor_id, planposition, description, ordernumber, ordername, identification_code, currency_id, orderform,
 contractpayordercache_id, changereason_id, payconditioncache_id, singlecustomerreason_id, ofrreqreason_id,
 industrycode_id, grantinvestment_id, code1, code2, code3, code4, code5, code6, code7, code8, code9, code10,
 changereasoninfo, eform, fin_recipient_id, conexecstagescache_id, periodicitycache_id,
 prohibitionscache_id, publicdiscusscache_id, goodsunitprice_flag, sum(guaranteecontractamount), avg(advancepercent),
 recipient_id, changereasondate, deliverydatefrom, deliverydateto, paydatefrom, paydateto,
 sum(plan_amount), sum(guaranteeappamount), sum(sumpushasesmallbusiness), avg(prcpushasesmallbusiness),
 sum(line_amount), sum(line_amount_2year), sum(line_amount_3year), sum(line_amount_future),
 sum(goods_amount), sum(goods_amount_2year), sum(goods_amount_3year), sum(goods_amount_future),
 sum(goods_qty), sum(goods_qty_2year), sum(goods_qty_3year), sum(goods_qty_future)
from Plan2ViewerInternal
group by
 document_id, budget_id, planyear,
 groupcode, okdp_code, okpd_code, okpd_id, okpd_name, okved, okved_id, okved_name, price, minrequirement,
 goodscode, goodscaption, unitname, customer_id, finsrc_id, deliverybasis_id, purchasemode_id,
 plan_invitationdate, plan_dealdate, plan_contractexecdate, cmporg_id, isenterprise,
 purchasetype, contractor_id, planposition, description, ordernumber, ordername, identification_code, currency_id, orderform,
 contractpayordercache_id, changereason_id, payconditioncache_id, singlecustomerreason_id, ofrreqreason_id,
 industrycode_id, grantinvestment_id, code1, code2, code3, code4, code5, code6, code7, code8, code9, code10,
 changereasoninfo, eform, fin_recipient_id, conexecstagescache_id, periodicitycache_id,
 prohibitionscache_id, publicdiscusscache_id, goodsunitprice_flag,
 recipient_id, changereasondate, deliverydatefrom, deliverydateto, paydatefrom, paydateto;
 --------------------------------------------------------
--  DDL for View PLAN2VIEWERINTERNALBYGRAPH
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PLAN2VIEWERINTERNALBYGRAPH" ("DOCUMENT_ID", "BUDGET_ID", "PLANYEAR", "GROUPCODE", "OKDP_CODE", "OKPD_CODE", "OKPD_ID", "OKPD_NAME", "OKVED", "OKVED_ID", "OKVED_NAME", "PRICE", "MINREQUIREMENT", "GOODSCODE", "GOODSCAPTION", "UNITNAME", "CUSTOMER_ID", "FINSRC_ID", "DELIVERYBASIS_ID", "PURCHASEMODE_ID", "PLAN_INVITATIONDATE", "PLAN_DEALDATE", "PLAN_CONTRACTEXECDATE", "CMPORG_ID", "ISENTERPRISE", "PURCHASETYPE", "CONTRACTOR_ID", "PLANPOSITION", "DESCRIPTION", "ORDERNUMBER", "ORDERNAME", "IDENTIFICATION_CODE", "CURRENCY_ID", "ORDERFORM", "CONTRACTPAYORDERCACHE_ID", "CHANGEREASON_ID", "PAYCONDITIONCACHE_ID", "SINGLECUSTOMERREASON_ID", "OFRREQREASON_ID", "INDUSTRYCODE_ID", "GRANTINVESTMENT_ID", "CODE1", "CODE2", "CODE3", "CODE4", "CODE5", "CODE6", "CODE7", "CODE8", "CODE9", "CODE10", "CHANGEREASONINFO", "EFORM", "FIN_RECIPIENT_ID", "CONEXECSTAGESCACHE_ID", "PERIODICITYCACHE_ID", "PROHIBITIONSCACHE_ID", "PUBLICDISCUSSCACHE_ID", "GOODSUNITPRICE_FLAG", "GUARANTEECONTRACTAMOUNT", "ADVANCEPERCENT", "RECIPIENT_ID", "CHANGEREASONDATE", "DELIVERYDATEFROM", "DELIVERYDATETO", "PAYDATEFROM", "PAYDATETO", "PLAN_AMOUNT", "GUARANTEEAPPAMOUNT", "SUMPUSHASESMALLBUSINESS", "PRCPUSHASESMALLBUSINESS", "DISPSTATUS_ID", "GRAPH_DOCUMENT_ID", "LINE_AMOUNT", "LINE_AMOUNT_2YEAR", "LINE_AMOUNT_3YEAR", "LINE_AMOUNT_FUTURE", "GOODS_AMOUNT", "GOODS_AMOUNT_2YEAR", "GOODS_AMOUNT_3YEAR", "GOODS_AMOUNT_FUTURE", "GOODS_QTY", "GOODS_QTY_2YEAR", "GOODS_QTY_3YEAR", "GOODS_QTY_FUTURE") AS 
  select
 pd.document_id, pd.budget_id, pd.planyear,
 pg.groupcode, pg.okdp_code, pg.okpd_code, pg.okpd_id, pg.okpd_name, pg.okved, pg.okved_id, pg.okved_name, pg.price, pg.minrequirement,
 pg.goodscode, pg.goodscaption, pg.unitname, pd.customer_id, pl.finsrc_id, pd.deliverybasis_id, pd.purchasemode_id,
 pd.invitationdate, pd.dealdate, pd.contractexecdate, pd.cmporg_id, pd.isenterprise,
 pd.purchasetype, pd.contractor_id, pd.planposition, pd.description, pd.ordernumber, pd.ordernamecache_id, pd.identification_code, pd.currency_id, pd.orderform,
 pd.contractpayordercache_id, pd.changereason_id, pd.payconditioncache_id, pd.singlecustomerreason_id, pd.ofrreqreason_id,
 pl.industrycode_id, pl.grantinvestment_id, pl.code1, pl.code2, pl.code3, pl.code4, pl.code5, pl.code6, pl.code7, pl.code8, pl.code9, pl.code10,
 pd.changereasoninfo, pd.eform, pl.recipient_id, pd.conexecstagescache_id, pd.periodicitycache_id,
 pd.prohibitionscache_id, pd.publicdiscusscache_id, f192.docflagtype_id, pd.guaranteecontractamount, pd.advancepercents,
 pd.recipient_id, pd.changereasondate, pd.deliverydatefrom, pd.deliverydateto, pd.paydatefrom, pd.paydateto,
 pd.amount, pd.guaranteeappamount, pd.sumpushasesmallbusiness, pd.prcpushasesmallbusiness,
 pd.dispstatus_id, Plan3Doc.document_id,
 pl.amount, pl.amount_2year, pl.amount_3year, pl.amount_future,
 pg.amount, pg.amount_2year, pg.amount_3year, pg.amount_future,
 pg.qty, pg.qty_2year, pg.qty_3year, pg.qty_future
from Plan3PurchaseDoc pd
inner join Plan3DocChild on (Plan3DocChild.doc_id=pd.id)
inner join Plan3Doc on (Plan3Doc.id=Plan3DocChild.plan3doc_id and Plan3Doc.documentclass_id=55)
inner join Plan3PurchaseLine pl on (pl.plan3purchasedoc_id=pd.id)
left join Plan3PurchaseGoods pg on (pg.plan3purchasedoc_id=pd.id and pg.plan3purchaselinepos=pl.pos)
left join DocFlag f192 on (f192.document_id=pd.document_id and f192.docflagtype_id=192);
--------------------------------------------------------
--  DDL for View PLAN2VIEWERBYGRAPH
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PLAN2VIEWERBYGRAPH" ("DOCUMENT_ID", "BUDGET_ID", "PLANYEAR", "GROUPCODE", "OKDP_CODE", "OKPD_CODE", "OKPD_ID", "OKPD_NAME", "OKVED", "OKVED_ID", "OKVED_NAME", "PRICE", "MINREQUIREMENT", "GOODSCODE", "GOODSCAPTION", "UNITNAME", "CUSTOMER_ID", "FINSRC_ID", "DELIVERYBASIS_ID", "PURCHASEMODE_ID", "PLAN_INVITATIONDATE", "PLAN_DEALDATE", "PLAN_CONTRACTEXECDATE", "CMPORG_ID", "ISENTERPRISE", "PURCHASETYPE", "CONTRACTOR_ID", "PLANPOSITION", "DESCRIPTION", "ORDERNUMBER", "ORDERNAME", "IDENTIFICATION_CODE", "CURRENCY_ID", "ORDERFORM", "CONTRACTPAYORDERCACHE_ID", "CHANGEREASON_ID", "PAYCONDITIONCACHE_ID", "SINGLECUSTOMERREASON_ID", "OFRREQREASON_ID", "INDUSTRYCODE_ID", "GRANTINVESTMENT_ID", "CODE1", "CODE2", "CODE3", "CODE4", "CODE5", "CODE6", "CODE7", "CODE8", "CODE9", "CODE10", "CHANGEREASONINFO", "EFORM", "FIN_RECIPIENT_ID", "CONEXECSTAGESCACHE_ID", "PERIODICITYCACHE_ID", "PROHIBITIONSCACHE_ID", "PUBLICDISCUSSCACHE_ID", "GOODSUNITPRICE_FLAG", "GUARANTEECONTRACTAMOUNT", "ADVANCEPERCENT", "RECIPIENT_ID", "CHANGEREASONDATE", "DELIVERYDATEFROM", "DELIVERYDATETO", "PAYDATEFROM", "PAYDATETO", "PLAN_AMOUNT", "GUARANTEEAPPAMOUNT", "SUMPUSHASESMALLBUSINESS", "PRCPUSHASESMALLBUSINESS", "DISPSTATUS_ID", "GRAPH_DOCUMENT_ID", "LINE_AMOUNT", "LINE_AMOUNT_2YEAR", "LINE_AMOUNT_3YEAR", "LINE_AMOUNT_FUTURE", "GOODS_AMOUNT", "GOODS_AMOUNT_2YEAR", "GOODS_AMOUNT_3YEAR", "GOODS_AMOUNT_FUTURE", "GOODS_QTY", "GOODS_QTY_2YEAR", "GOODS_QTY_3YEAR", "GOODS_QTY_FUTURE") AS 
  select
 document_id, budget_id, planyear,
 groupcode, okdp_code, okpd_code, okpd_id, okpd_name, okved, okved_id, okved_name, price, minrequirement,
 goodscode, goodscaption, unitname, customer_id, finsrc_id, deliverybasis_id, purchasemode_id,
 plan_invitationdate, plan_dealdate, plan_contractexecdate, cmporg_id, isenterprise,
 purchasetype, contractor_id, planposition, description, ordernumber, ordername, identification_code, currency_id, orderform,
 contractpayordercache_id, changereason_id, payconditioncache_id, singlecustomerreason_id, ofrreqreason_id,
 industrycode_id, grantinvestment_id, code1, code2, code3, code4, code5, code6, code7, code8, code9, code10,
 changereasoninfo, eform, fin_recipient_id, conexecstagescache_id, periodicitycache_id,
 prohibitionscache_id, publicdiscusscache_id, goodsunitprice_flag, sum(guaranteecontractamount), avg(advancepercent),
 recipient_id, changereasondate, deliverydatefrom, deliverydateto, paydatefrom, paydateto,
 sum(plan_amount), sum(guaranteeappamount), sum(sumpushasesmallbusiness), avg(prcpushasesmallbusiness),
 dispstatus_id, graph_document_id,
 sum(line_amount), sum(line_amount_2year), sum(line_amount_3year), sum(line_amount_future),
 sum(goods_amount), sum(goods_amount_2year), sum(goods_amount_3year), sum(goods_amount_future),
 sum(goods_qty), sum(goods_qty_2year), sum(goods_qty_3year), sum(goods_qty_future)
from Plan2ViewerInternalByGraph
group by
 document_id, budget_id, planyear,
 groupcode, okdp_code, okpd_code, okpd_id, okpd_name, okved, okved_id, okved_name, price, minrequirement,
 goodscode, goodscaption, unitname, customer_id, finsrc_id, deliverybasis_id, purchasemode_id,
 plan_invitationdate, plan_dealdate, plan_contractexecdate, cmporg_id, isenterprise,
 purchasetype, contractor_id, planposition, description, ordernumber, ordername, identification_code, currency_id, orderform,
 contractpayordercache_id, changereason_id, payconditioncache_id, singlecustomerreason_id, ofrreqreason_id,
 industrycode_id, grantinvestment_id, code1, code2, code3, code4, code5, code6, code7, code8, code9, code10,
 changereasoninfo, eform, fin_recipient_id, conexecstagescache_id, periodicitycache_id,
 prohibitionscache_id, publicdiscusscache_id, goodsunitprice_flag,
 recipient_id, changereasondate, deliverydatefrom, deliverydateto, paydatefrom, paydateto,
 dispstatus_id, graph_document_id;
 --------------------------------------------------------
--  DDL for View PLAN2VIEWERINTERNALBYKBK
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PLAN2VIEWERINTERNALBYKBK" ("DOCUMENT_ID", "BUDGET_ID", "PLANYEAR", "GROUPCODE", "OKDP_CODE", "OKPD_CODE", "OKPD_ID", "OKPD_NAME", "OKVED", "OKVED_ID", "OKVED_NAME", "PRICE", "MINREQUIREMENT", "GOODSCODE", "GOODSCAPTION", "UNITNAME", "CUSTOMER_ID", "FINSRC_ID", "DELIVERYBASIS_ID", "PURCHASEMODE_ID", "PLAN_INVITATIONDATE", "PLAN_DEALDATE", "PLAN_CONTRACTEXECDATE", "CMPORG_ID", "ISENTERPRISE", "PURCHASETYPE", "CONTRACTOR_ID", "PLANPOSITION", "DESCRIPTION", "ORDERNUMBER", "ORDERNAME", "IDENTIFICATION_CODE", "CURRENCY_ID", "ORDERFORM", "CONTRACTPAYORDERCACHE_ID", "CHANGEREASON_ID", "PAYCONDITIONCACHE_ID", "SINGLECUSTOMERREASON_ID", "OFRREQREASON_ID", "INDUSTRYCODE_ID", "GRANTINVESTMENT_ID", "CODE1", "CODE2", "CODE3", "CODE4", "CODE5", "CODE6", "CODE7", "CODE8", "CODE9", "CODE10", "CHANGEREASONINFO", "EFORM", "FIN_RECIPIENT_ID", "CONEXECSTAGESCACHE_ID", "PERIODICITYCACHE_ID", "PROHIBITIONSCACHE_ID", "PUBLICDISCUSSCACHE_ID", "GOODSUNITPRICE_FLAG", "GUARANTEECONTRACTAMOUNT", "ADVANCEPERCENT", "RECIPIENT_ID", "CHANGEREASONDATE", "DELIVERYDATEFROM", "DELIVERYDATETO", "PAYDATEFROM", "PAYDATETO", "PLAN_AMOUNT", "GUARANTEEAPPAMOUNT", "SUMPUSHASESMALLBUSINESS", "PRCPUSHASESMALLBUSINESS", "LINE_AMOUNT", "LINE_AMOUNT_2YEAR", "LINE_AMOUNT_3YEAR", "LINE_AMOUNT_FUTURE", "GOODS_AMOUNT", "GOODS_AMOUNT_2YEAR", "GOODS_AMOUNT_3YEAR", "GOODS_AMOUNT_FUTURE", "GOODS_QTY", "GOODS_QTY_2YEAR", "GOODS_QTY_3YEAR", "GOODS_QTY_FUTURE") AS 
  select
 pd.document_id, pd.budget_id, pd.planyear,
 null, null, null, null, null, null, null, null, null, null,
 null, null, null, pd.customer_id, pl.finsrc_id, pd.deliverybasis_id, pd.purchasemode_id,
 pd.invitationdate, pd.dealdate, pd.contractexecdate, pd.cmporg_id, pd.isenterprise,
 pd.purchasetype, pd.contractor_id, pd.planposition, pd.description, pd.ordernumber, pd.ordernamecache_id, pd.identification_code, pd.currency_id, pd.orderform,
 pd.contractpayordercache_id, pd.changereason_id, pd.payconditioncache_id, pd.singlecustomerreason_id, pd.ofrreqreason_id,
 pl.industrycode_id, pl.grantinvestment_id, pl.code1, pl.code2, pl.code3, pl.code4, pl.code5, pl.code6, pl.code7, pl.code8, pl.code9, pl.code10,
 pd.changereasoninfo, pd.eform, pl.recipient_id, pd.conexecstagescache_id, pd.periodicitycache_id,
 pd.prohibitionscache_id, pd.publicdiscusscache_id, f192.docflagtype_id, pd.guaranteecontractamount, pd.advancepercents,
 pd.recipient_id, pd.changereasondate, pd.deliverydatefrom, pd.deliverydateto, pd.paydatefrom, pd.paydateto,
 pd.amount, pd.guaranteeappamount, pd.sumpushasesmallbusiness, pd.prcpushasesmallbusiness,
 pl.amount, pl.amount_2year, pl.amount_3year, pl.amount_future,
 0, 0, 0, 0,
 0, 0, 0, 0
from Plan3PurchaseDoc pd
inner join Plan3DocChild on (Plan3DocChild.doc_id=pd.id)
inner join Plan3Doc on (Plan3Doc.id=Plan3DocChild.plan3doc_id and Plan3Doc.dispstatus_id in (10,24) and Plan3Doc.documentclass_id=55)
inner join Plan3PurchaseLine pl on (pl.plan3purchasedoc_id=pd.id)
left join DocFlag f192 on (f192.document_id=pd.document_id and f192.docflagtype_id=192)
where pd.dispstatus_id in (10,24);
--------------------------------------------------------
--  DDL for View PLAN2VIEWERBYKBK
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PLAN2VIEWERBYKBK" ("DOCUMENT_ID", "BUDGET_ID", "PLANYEAR", "GROUPCODE", "OKDP_CODE", "OKPD_CODE", "OKPD_ID", "OKPD_NAME", "OKVED", "OKVED_ID", "OKVED_NAME", "PRICE", "MINREQUIREMENT", "GOODSCODE", "GOODSCAPTION", "UNITNAME", "CUSTOMER_ID", "FINSRC_ID", "DELIVERYBASIS_ID", "PURCHASEMODE_ID", "PLAN_INVITATIONDATE", "PLAN_DEALDATE", "PLAN_CONTRACTEXECDATE", "CMPORG_ID", "ISENTERPRISE", "PURCHASETYPE", "CONTRACTOR_ID", "PLANPOSITION", "DESCRIPTION", "ORDERNUMBER", "ORDERNAME", "IDENTIFICATION_CODE", "CURRENCY_ID", "ORDERFORM", "CONTRACTPAYORDERCACHE_ID", "CHANGEREASON_ID", "PAYCONDITIONCACHE_ID", "SINGLECUSTOMERREASON_ID", "OFRREQREASON_ID", "INDUSTRYCODE_ID", "GRANTINVESTMENT_ID", "CODE1", "CODE2", "CODE3", "CODE4", "CODE5", "CODE6", "CODE7", "CODE8", "CODE9", "CODE10", "CHANGEREASONINFO", "EFORM", "FIN_RECIPIENT_ID", "CONEXECSTAGESCACHE_ID", "PERIODICITYCACHE_ID", "PROHIBITIONSCACHE_ID", "PUBLICDISCUSSCACHE_ID", "GOODSUNITPRICE_FLAG", "GUARANTEECONTRACTAMOUNT", "ADVANCEPERCENT", "RECIPIENT_ID", "CHANGEREASONDATE", "DELIVERYDATEFROM", "DELIVERYDATETO", "PAYDATEFROM", "PAYDATETO", "PLAN_AMOUNT", "GUARANTEEAPPAMOUNT", "SUMPUSHASESMALLBUSINESS", "PRCPUSHASESMALLBUSINESS", "LINE_AMOUNT", "LINE_AMOUNT_2YEAR", "LINE_AMOUNT_3YEAR", "LINE_AMOUNT_FUTURE", "GOODS_AMOUNT", "GOODS_AMOUNT_2YEAR", "GOODS_AMOUNT_3YEAR", "GOODS_AMOUNT_FUTURE", "GOODS_QTY", "GOODS_QTY_2YEAR", "GOODS_QTY_3YEAR", "GOODS_QTY_FUTURE") AS 
  select
 document_id, budget_id, planyear,
 groupcode, okdp_code, okpd_code, okpd_id, okpd_name, okved, okved_id, okved_name, price, minrequirement,
 goodscode, goodscaption, unitname, customer_id, finsrc_id, deliverybasis_id, purchasemode_id,
 plan_invitationdate, plan_dealdate, plan_contractexecdate, cmporg_id, isenterprise,
 purchasetype, contractor_id, planposition, description, ordernumber, ordername, identification_code, currency_id, orderform,
 contractpayordercache_id, changereason_id, payconditioncache_id, singlecustomerreason_id, ofrreqreason_id,
 industrycode_id, grantinvestment_id, code1, code2, code3, code4, code5, code6, code7, code8, code9, code10,
 changereasoninfo, eform, fin_recipient_id, conexecstagescache_id, periodicitycache_id,
 prohibitionscache_id, publicdiscusscache_id, goodsunitprice_flag, sum(guaranteecontractamount), avg(advancepercent),
 recipient_id, changereasondate, deliverydatefrom, deliverydateto, paydatefrom, paydateto,
 sum(plan_amount), sum(guaranteeappamount), sum(sumpushasesmallbusiness), avg(prcpushasesmallbusiness),
 sum(line_amount), sum(line_amount_2year), sum(line_amount_3year), sum(line_amount_future),
 sum(goods_amount), sum(goods_amount_2year), sum(goods_amount_3year), sum(goods_amount_future),
 sum(goods_qty), sum(goods_qty_2year), sum(goods_qty_3year), sum(goods_qty_future)
from Plan2ViewerInternalByKBK
group by
 document_id, budget_id, planyear,
 groupcode, okdp_code, okpd_code, okpd_id, okpd_name, okved, okved_id, okved_name, price, minrequirement,
 goodscode, goodscaption, unitname, customer_id, finsrc_id, deliverybasis_id, purchasemode_id,
 plan_invitationdate, plan_dealdate, plan_contractexecdate, cmporg_id, isenterprise,
 purchasetype, contractor_id, planposition, description, ordernumber, ordername, identification_code, currency_id, orderform,
 contractpayordercache_id, changereason_id, payconditioncache_id, singlecustomerreason_id, ofrreqreason_id,
 industrycode_id, grantinvestment_id, code1, code2, code3, code4, code5, code6, code7, code8, code9, code10,
 changereasoninfo, eform, fin_recipient_id, conexecstagescache_id, periodicitycache_id,
 prohibitionscache_id, publicdiscusscache_id, goodsunitprice_flag,
 recipient_id, changereasondate, deliverydatefrom, deliverydateto, paydatefrom, paydateto;
 --------------------------------------------------------
--  DDL for View PLAN2VIEWERINTERNALBYPURCHASE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PLAN2VIEWERINTERNALBYPURCHASE" ("DOCUMENT_ID", "BUDGET_ID", "PLANYEAR", "GROUPCODE", "OKDP_CODE", "OKPD_CODE", "OKPD_ID", "OKPD_NAME", "OKVED", "OKVED_ID", "OKVED_NAME", "PRICE", "MINREQUIREMENT", "GOODSCODE", "GOODSCAPTION", "UNITNAME", "CUSTOMER_ID", "FINSRC_ID", "DELIVERYBASIS_ID", "PURCHASEMODE_ID", "PLAN_INVITATIONDATE", "PLAN_DEALDATE", "PLAN_CONTRACTEXECDATE", "CMPORG_ID", "ISENTERPRISE", "PURCHASETYPE", "CONTRACTOR_ID", "PLANPOSITION", "DESCRIPTION", "ORDERNUMBER", "ORDERNAME", "IDENTIFICATION_CODE", "CURRENCY_ID", "ORDERFORM", "CONTRACTPAYORDERCACHE_ID", "CHANGEREASON_ID", "PAYCONDITIONCACHE_ID", "SINGLECUSTOMERREASON_ID", "OFRREQREASON_ID", "INDUSTRYCODE_ID", "GRANTINVESTMENT_ID", "CODE1", "CODE2", "CODE3", "CODE4", "CODE5", "CODE6", "CODE7", "CODE8", "CODE9", "CODE10", "CHANGEREASONINFO", "EFORM", "FIN_RECIPIENT_ID", "CONEXECSTAGESCACHE_ID", "PERIODICITYCACHE_ID", "PROHIBITIONSCACHE_ID", "PUBLICDISCUSSCACHE_ID", "GOODSUNITPRICE_FLAG", "GUARANTEECONTRACTAMOUNT", "ADVANCEPERCENT", "RECIPIENT_ID", "CHANGEREASONDATE", "DELIVERYDATEFROM", "DELIVERYDATETO", "PAYDATEFROM", "PAYDATETO", "PLAN_AMOUNT", "GUARANTEEAPPAMOUNT", "SUMPUSHASESMALLBUSINESS", "PRCPUSHASESMALLBUSINESS", "LINE_AMOUNT", "LINE_AMOUNT_2YEAR", "LINE_AMOUNT_3YEAR", "LINE_AMOUNT_FUTURE", "GOODS_AMOUNT", "GOODS_AMOUNT_2YEAR", "GOODS_AMOUNT_3YEAR", "GOODS_AMOUNT_FUTURE", "GOODS_QTY", "GOODS_QTY_2YEAR", "GOODS_QTY_3YEAR", "GOODS_QTY_FUTURE") AS 
  select
 pd.document_id, pd.budget_id, pd.planyear,
 null, null, null, null, null, null, null, null, null, null,
 null, null, null, pd.customer_id, null, pd.deliverybasis_id, pd.purchasemode_id,
 pd.invitationdate, pd.dealdate, pd.contractexecdate, pd.cmporg_id, pd.isenterprise,
 pd.purchasetype, pd.contractor_id, pd.planposition, pd.description, pd.ordernumber, pd.ordernamecache_id, pd.identification_code, pd.currency_id, pd.orderform,
 pd.contractpayordercache_id, pd.changereason_id, pd.payconditioncache_id, pd.singlecustomerreason_id, pd.ofrreqreason_id,
 null, null, null, null, null, null, null, null, null, null, null, null,
 pd.changereasoninfo, pd.eform, null, pd.conexecstagescache_id, pd.periodicitycache_id,
 pd.prohibitionscache_id, pd.publicdiscusscache_id, f192.docflagtype_id, pd.guaranteecontractamount, pd.advancepercents,
 pd.recipient_id, pd.changereasondate, pd.deliverydatefrom, pd.deliverydateto, pd.paydatefrom, pd.paydateto,
 pd.amount, pd.guaranteeappamount, pd.sumpushasesmallbusiness, pd.prcpushasesmallbusiness,
 0, 0, 0, 0,
 0, 0, 0, 0,
 0, 0, 0, 0
from Plan3PurchaseDoc pd
inner join Plan3DocChild on (Plan3DocChild.doc_id=pd.id)
inner join Plan3Doc on (Plan3Doc.id=Plan3DocChild.plan3doc_id and Plan3Doc.dispstatus_id in (10,24) and Plan3Doc.documentclass_id=55)
left join DocFlag f192 on (f192.document_id=pd.document_id and f192.docflagtype_id=192)
where pd.dispstatus_id in (10,24);
--------------------------------------------------------
--  DDL for View PLAN2VIEWERBYPURCHASE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PLAN2VIEWERBYPURCHASE" ("DOCUMENT_ID", "BUDGET_ID", "PLANYEAR", "GROUPCODE", "OKDP_CODE", "OKPD_CODE", "OKPD_ID", "OKPD_NAME", "OKVED", "OKVED_ID", "OKVED_NAME", "PRICE", "MINREQUIREMENT", "GOODSCODE", "GOODSCAPTION", "UNITNAME", "CUSTOMER_ID", "FINSRC_ID", "DELIVERYBASIS_ID", "PURCHASEMODE_ID", "PLAN_INVITATIONDATE", "PLAN_DEALDATE", "PLAN_CONTRACTEXECDATE", "CMPORG_ID", "ISENTERPRISE", "PURCHASETYPE", "CONTRACTOR_ID", "PLANPOSITION", "DESCRIPTION", "ORDERNUMBER", "ORDERNAME", "IDENTIFICATION_CODE", "CURRENCY_ID", "ORDERFORM", "CONTRACTPAYORDERCACHE_ID", "CHANGEREASON_ID", "PAYCONDITIONCACHE_ID", "SINGLECUSTOMERREASON_ID", "OFRREQREASON_ID", "INDUSTRYCODE_ID", "GRANTINVESTMENT_ID", "CODE1", "CODE2", "CODE3", "CODE4", "CODE5", "CODE6", "CODE7", "CODE8", "CODE9", "CODE10", "CHANGEREASONINFO", "EFORM", "FIN_RECIPIENT_ID", "CONEXECSTAGESCACHE_ID", "PERIODICITYCACHE_ID", "PROHIBITIONSCACHE_ID", "PUBLICDISCUSSCACHE_ID", "GOODSUNITPRICE_FLAG", "GUARANTEECONTRACTAMOUNT", "ADVANCEPERCENT", "RECIPIENT_ID", "CHANGEREASONDATE", "DELIVERYDATEFROM", "DELIVERYDATETO", "PAYDATEFROM", "PAYDATETO", "PLAN_AMOUNT", "GUARANTEEAPPAMOUNT", "SUMPUSHASESMALLBUSINESS", "PRCPUSHASESMALLBUSINESS", "LINE_AMOUNT", "LINE_AMOUNT_2YEAR", "LINE_AMOUNT_3YEAR", "LINE_AMOUNT_FUTURE", "GOODS_AMOUNT", "GOODS_AMOUNT_2YEAR", "GOODS_AMOUNT_3YEAR", "GOODS_AMOUNT_FUTURE", "GOODS_QTY", "GOODS_QTY_2YEAR", "GOODS_QTY_3YEAR", "GOODS_QTY_FUTURE") AS 
  select
 document_id, budget_id, planyear,
 groupcode, okdp_code, okpd_code, okpd_id, okpd_name, okved, okved_id, okved_name, price, minrequirement,
 goodscode, goodscaption, unitname, customer_id, finsrc_id, deliverybasis_id, purchasemode_id,
 plan_invitationdate, plan_dealdate, plan_contractexecdate, cmporg_id, isenterprise,
 purchasetype, contractor_id, planposition, description, ordernumber, ordername, identification_code, currency_id, orderform,
 contractpayordercache_id, changereason_id, payconditioncache_id, singlecustomerreason_id, ofrreqreason_id,
 industrycode_id, grantinvestment_id, code1, code2, code3, code4, code5, code6, code7, code8, code9, code10,
 changereasoninfo, eform, fin_recipient_id, conexecstagescache_id, periodicitycache_id,
 prohibitionscache_id, publicdiscusscache_id, goodsunitprice_flag, sum(guaranteecontractamount), avg(advancepercent),
 recipient_id, changereasondate, deliverydatefrom, deliverydateto, paydatefrom, paydateto,
 sum(plan_amount), sum(guaranteeappamount), sum(sumpushasesmallbusiness), avg(prcpushasesmallbusiness),
 sum(line_amount), sum(line_amount_2year), sum(line_amount_3year), sum(line_amount_future),
 sum(goods_amount), sum(goods_amount_2year), sum(goods_amount_3year), sum(goods_amount_future),
 sum(goods_qty), sum(goods_qty_2year), sum(goods_qty_3year), sum(goods_qty_future)
from Plan2ViewerInternalByPurchase
group by
 document_id, budget_id, planyear,
 groupcode, okdp_code, okpd_code, okpd_id, okpd_name, okved, okved_id, okved_name, price, minrequirement,
 goodscode, goodscaption, unitname, customer_id, finsrc_id, deliverybasis_id, purchasemode_id,
 plan_invitationdate, plan_dealdate, plan_contractexecdate, cmporg_id, isenterprise,
 purchasetype, contractor_id, planposition, description, ordernumber, ordername, identification_code, currency_id, orderform,
 contractpayordercache_id, changereason_id, payconditioncache_id, singlecustomerreason_id, ofrreqreason_id,
 industrycode_id, grantinvestment_id, code1, code2, code3, code4, code5, code6, code7, code8, code9, code10,
 changereasoninfo, eform, fin_recipient_id, conexecstagescache_id, periodicitycache_id,
 prohibitionscache_id, publicdiscusscache_id, goodsunitprice_flag,
 recipient_id, changereasondate, deliverydatefrom, deliverydateto, paydatefrom, paydateto;
 --------------------------------------------------------
--  DDL for View PLAN2VIEWERIC_ORDER_INTERNAL
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PLAN2VIEWERIC_ORDER_INTERNAL" ("ORDER_ID", "DOCUMENT_ID", "BUDGET_ID", "PLANYEAR", "PLANPOSITIONNUMBER", "CUSTOMER_ID", "ISMAXINVITATIONDATE", "CUSTOMERPOS", "INVITATIONDATE", "AMOUNT") AS 
  select
  od.ID, od.DOCUMENT_ID, od.BUDGET_ID, extract(YEAR from coalesce(cast(od.PLAN_INVITATIONDATE as DATE), od.PLAN_DEALDATE)),
  cl.PlanPositionNumber, cl.CUSTOMER_ID, cl.ISMAXINVITATIONDATE, cl.POS,
  coalesce(cast(od.PLAN_INVITATIONDATE as DATE), od.PLAN_DEALDATE),
  coalesce(cl.AMOUNT, od.AMOUNT)
from OrderDoc od
left join CmpCustomerLot cl on (cl.Order_ID = od.id)
where od.dispstatus_id in (10, 12, 13, 20, 24, 30, 31, 35, 45, 46, 52, 61, 62, 63, 64, 65, 66, 68, 70, 71, 76,
  77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87);
--------------------------------------------------------
--  DDL for View PLAN2VIEWERIC_ORDER
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PLAN2VIEWERIC_ORDER" ("DOCUMENT_ID", "BUDGET_ID", "PLANYEAR", "PLANPOSITIONNUMBER", "CUSTOMER_ID", "INVITATIONDATE", "AMOUNT") AS 
  select
  oi.Document_ID, oi.Budget_ID, oi.PlanYear,
  oi.PlanPositionNumber, oi.Customer_ID,
  oi.InvitationDate,
  oi.Amount
from Plan2ViewerIC_Order_Internal oi
where oi.PlanPositionNumber is not null and oi.IsMaxInvitationDate <> 0;
--------------------------------------------------------
--  DDL for View PLAN2VIEWERIC_PLAN_INTERNAL
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PLAN2VIEWERIC_PLAN_INTERNAL" ("PLAN3DOC_ID", "VERSION", "DOCUMENT_ID", "BUDGET_ID", "PLANYEAR", "PLANPOSITIONNUMBER", "PURCHASEMODE_ID", "PURCHASETYPE", "CUSTOMER_ID", "CMPORG_ID", "ORDERNAME_CACHE_ID", "IDENTIFICATION_CODE", "DESCRIPTION", "CHANGEREASON_ID", "PLAN_INVITATIONDATE", "PLAN_CMPDATE", "PLAN_EXECDATE", "AMOUNT") AS 
  select
  pd.ID, pd.VERSION, pd.DOCUMENT_ID, pd.BUDGET_ID, pd.PLANYEAR, pd.PLANPOSITION, pd.PURCHASEMODE_ID,
  pd.PURCHASETYPE, pd.CUSTOMER_ID, pd.CMPORG_ID, pd.ORDERNAMECACHE_ID, pd.IDENTIFICATION_CODE, pd.DESCRIPTION,
  pd.CHANGEREASON_ID,
  pd.INVITATIONDATE, pd.DEALDATE, pd.CONTRACTEXECDATE,
  pd.AMOUNT
from PLAN3PURCHASEDOC pd
where pd.DISPSTATUS_ID in (10,24) and pd.PLANPOSITION is not null;
--------------------------------------------------------
--  DDL for View PLAN2VIEWERIC_PLAN
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PLAN2VIEWERIC_PLAN" ("PLAN3DOC_ID", "VERSION", "DOCUMENT_ID", "BUDGET_ID", "PLANYEAR", "PLANPOSITIONNUMBER", "PURCHASEMODE_ID", "PURCHASETYPE", "CUSTOMER_ID", "CMPORG_ID", "ORDERNAME_CACHE_ID", "IDENTIFICATION_CODE", "DESCRIPTION", "CHANGEREASON_ID", "PLAN_INVITATIONDATE", "PLAN_CMPDATE", "PLAN_EXECDATE", "AMOUNT") AS 
  select
  pi.Plan3Doc_ID, pi.Version, pi.Document_ID, pi.Budget_ID, pi.PlanYear, pi.PlanPositionNumber, pi.PurchaseMode_ID,
  pi.PurchaseType, pi.Customer_ID, pi.CmpOrg_ID, pi.OrderName_cache_ID, pi.Identification_Code, pi.Description,
  pi.ChangeReason_ID,
  pi.Plan_InvitationDate, pi.Plan_CmpDate, pi.Plan_ExecDate,
  SUM(pi.Amount)
from Plan2ViewerIC_Plan_Internal pi
group by
  pi.Plan3Doc_ID, pi.Version, pi.Document_ID, pi.Budget_ID, pi.PlanYear, pi.PlanPositionNumber, pi.PurchaseMode_ID,
  pi.PurchaseType, pi.Customer_ID, pi.CmpOrg_ID, pi.OrderName_cache_ID, pi.Identification_Code, pi.Description,
  pi.ChangeReason_ID,
  pi.Plan_InvitationDate, pi.Plan_CmpDate, pi.Plan_ExecDate;
--------------------------------------------------------
--  DDL for View PURCHASECARRYINTERNALVIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PURCHASECARRYINTERNALVIEW" ("DOCUMENT_ID", "GROUPCODE", "OKDP_CODE", "CUSTOMER_ID", "PURCHASEMODE_ID", "CMPORG_ID", "NECESSITY_ID", "PLANYEAR", "BUDGET_ID", "USEAMOUNT1", "USEAMOUNT2", "USEAMOUNT3", "USEAMOUNT4", "CONTROLAMOUNT1", "CONTROLAMOUNT2", "CONTROLAMOUNT3", "CONTROLAMOUNT4", "DECLAREDAMOUNT1", "DECLAREDAMOUNT2", "DECLAREDAMOUNT3", "DECLAREDAMOUNT4", "ECONOMYAMOUNT", "DISTRIBUTEAMOUNT1", "DISTRIBUTEAMOUNT2", "DISTRIBUTEAMOUNT3", "DISTRIBUTEAMOUNT4", "EXECUTEAMOUNT1", "EXECUTEAMOUNT2", "EXECUTEAMOUNT3", "EXECUTEAMOUNT4") AS 
  select
 pc.doc_id,
 pc.groupcode, pc.okdp_code, pc.recipient_id, pc.purchasemode_id, pc.cmporg_id, pc.necessity_id, pc.planyear, doc.budget_id,
 case when ((doc.documentclass_id=1 or doc.documentclass_id=2) and pc.carrystatus=1) or (doc.documentclass_id in (3,4,5,28,36) and doc.dispstatus_id in (5,16)) then coalesce(pc.amount1, 0) else 0.00 end,
 case when ((doc.documentclass_id=1 or doc.documentclass_id=2) and pc.carrystatus=1) or (doc.documentclass_id in (3,4,5,28,36) and doc.dispstatus_id in (5,16)) then coalesce(pc.amount2, 0) else 0.00 end,
 case when ((doc.documentclass_id=1 or doc.documentclass_id=2) and pc.carrystatus=1) or (doc.documentclass_id in (3,4,5,28,36) and doc.dispstatus_id in (5,16)) then coalesce(pc.amount3, 0) else 0.00 end,
 case when ((doc.documentclass_id=1 or doc.documentclass_id=2) and pc.carrystatus=1) or (doc.documentclass_id in (3,4,5,28,36) and doc.dispstatus_id in (5,16)) then coalesce(pc.amount4, 0) else 0.00 end,
 case when pc.carrystatus<>1 then coalesce(pc.amount1, 0) else 0.00 end,
 case when pc.carrystatus<>1 then coalesce(pc.amount2, 0) else 0.00 end,
 case when pc.carrystatus<>1 then coalesce(pc.amount3, 0) else 0.00 end,
 case when pc.carrystatus<>1 then coalesce(pc.amount4, 0) else 0.00 end,
 case when doc.documentclass_id in (3,4,5,28,36) and doc.dispstatus_id not in (5,16) and pc.carrystatus=1 then coalesce(pc.amount1, 0) else 0.00 end,
 case when doc.documentclass_id in (3,4,5,28,36) and doc.dispstatus_id not in (5,16) and pc.carrystatus=1 then coalesce(pc.amount2, 0) else 0.00 end,
 case when doc.documentclass_id in (3,4,5,28,36) and doc.dispstatus_id not in (5,16) and pc.carrystatus=1 then coalesce(pc.amount3, 0) else 0.00 end,
 case when doc.documentclass_id in (3,4,5,28,36) and doc.dispstatus_id not in (5,16) and pc.carrystatus=1 then coalesce(pc.amount4, 0) else 0.00 end,
 pc.economyamount,
 case when doc.documentclass_id in (8,9,32) and pc.carrystatus=1 then coalesce(pc.amount1, 0) else 0.00 end,
 case when doc.documentclass_id in (8,9,32) and pc.carrystatus=1 then coalesce(pc.amount2, 0) else 0.00 end,
 case when doc.documentclass_id in (8,9,32) and pc.carrystatus=1 then coalesce(pc.amount3, 0) else 0.00 end,
 case when doc.documentclass_id in (8,9,32) and pc.carrystatus=1 then coalesce(pc.amount4, 0) else 0.00 end,
 coalesce(pc.executeamount1, 0),
 coalesce(pc.executeamount2, 0),
 coalesce(pc.executeamount3, 0),
 coalesce(pc.executeamount4, 0)
from PurchaseCarry pc
left join document doc on (pc.doc_id = doc.id)
where pc.planversion=1;
--------------------------------------------------------
--  DDL for View PURCHASECARRYVIEWERVIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PURCHASECARRYVIEWERVIEW" ("DOCUMENT_ID", "GROUPCODE", "OKDP_CODE", "CUSTOMER_ID", "PURCHASEMODE_ID", "CMPORG_ID", "NECESSITY_ID", "PLANYEAR", "BUDGET_ID", "PAYCONDITIONNAME", "GOODSCODE", "UNITNAME", "CODE1", "CODE2", "CODE3", "CODE4", "CODE5", "CODE6", "CODE7", "CODE8", "CODE9", "CODE10", "FINSRC_ID", "DELIVERYBASIS_ID", "INVITATIONDATE", "CMPDATE", "DESCRIPTION", "CONTRACTOR_ID", "ISENTERPRISE", "ISSMALL", "USEAMOUNT1", "USEAMOUNT2", "USEAMOUNT3", "USEAMOUNT4", "USECONFIRMAMOUNT1", "USECONFIRMAMOUNT2", "USECONFIRMAMOUNT3", "USECONFIRMAMOUNT4", "USEQUALIFYAMOUNT1", "USEQUALIFYAMOUNT2", "USEQUALIFYAMOUNT3", "USEQUALIFYAMOUNT4", "CONTROLAMOUNT1", "CONTROLAMOUNT2", "CONTROLAMOUNT3", "CONTROLAMOUNT4", "CONTROLQUALIFYAMOUNT1", "CONTROLQUALIFYAMOUNT2", "CONTROLQUALIFYAMOUNT3", "CONTROLQUALIFYAMOUNT4", "DECLAREDAMOUNT1", "DECLAREDAMOUNT2", "DECLAREDAMOUNT3", "DECLAREDAMOUNT4", "ECONOMYAMOUNT", "DISTRIBUTEAMOUNT1", "DISTRIBUTEAMOUNT2", "DISTRIBUTEAMOUNT3", "DISTRIBUTEAMOUNT4", "DISTRIBUTECONFIRMAMOUNT1", "DISTRIBUTECONFIRMAMOUNT2", "DISTRIBUTECONFIRMAMOUNT3", "DISTRIBUTECONFIRMAMOUNT4", "DISTRIBUTEQUALIFYAMOUNT1", "DISTRIBUTEQUALIFYAMOUNT2", "DISTRIBUTEQUALIFYAMOUNT3", "DISTRIBUTEQUALIFYAMOUNT4", "EXECUTEAMOUNT1", "EXECUTEAMOUNT2", "EXECUTEAMOUNT3", "EXECUTEAMOUNT4", "SUPPLIEDAMOUNT", "PAYEDAMOUNT") AS 
  select
 MIN(0),
 groupcode, cast(null as char), customer_id, purchasemode_id, cmporg_id, necessity_id, planyear, budget_id,
 cast(null as char),
 cast(null as char), cast(null as char), cast(null as char), cast(null as char), cast(null as char), cast(null as char),
 cast(null as char), cast(null as char), cast(null as char), cast(null as char), cast(null as char), cast(null as char),
 cast(null as numeric), cast(null as numeric), cast(null as date), cast(null as date), cast(null as char),
 cast(null as numeric), cast(null as numeric), cast(null as numeric),
 SUM(useamount1), SUM(useamount2), SUM(useamount3), SUM(useamount4),
 SUM(0.00), SUM(0.00), SUM(0.00), SUM(0.00),
 SUM(0.00), SUM(0.00), SUM(0.00), SUM(0.00),
 SUM(controlamount1), SUM(controlamount2), SUM(controlamount3), SUM(controlamount4),
 SUM(0.00), SUM(0.00), SUM(0.00), SUM(0.00),
 SUM(declaredamount1), SUM(declaredamount2), SUM(declaredamount3), SUM(declaredamount4),
 SUM(economyamount),
 SUM(distributeamount1), SUM(distributeamount2), SUM(distributeamount3), SUM(distributeamount4),
 SUM(0.00), SUM(0.00), SUM(0.00), SUM(0.00),
 SUM(0.00), SUM(0.00), SUM(0.00), SUM(0.00),
 SUM(executeamount1), SUM(executeamount2), SUM(executeamount3), SUM(executeamount4),
 SUM(0.00),
 SUM(0.00)
from PurchaseCarryInternalView pc
group by
 groupcode, customer_id, purchasemode_id, cmporg_id, necessity_id, planyear, budget_id;
--------------------------------------------------------
--  DDL for View PURCHASEPLANINTERNALVIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PURCHASEPLANINTERNALVIEW" ("DOCUMENT_ID", "GROUPCODE", "OKDP_CODE", "CUSTOMER_ID", "PURCHASEMODE_ID", "CMPORG_ID", "NECESSITY_ID", "PLANYEAR", "DESC_ID", "DESCRIPTION", "DATEBEGIN", "DATEEND", "BUDGET_ID", "AMOUNT1", "AMOUNT2", "AMOUNT3", "AMOUNT4", "AMOUNT5", "AMOUNT6", "AMOUNT7", "AMOUNT8", "AMOUNT9", "AMOUNT10", "AMOUNT11", "AMOUNT12", "ENTAMOUNT1", "ENTAMOUNT2", "ENTAMOUNT3", "ENTAMOUNT4", "ENTAMOUNT5", "ENTAMOUNT6", "ENTAMOUNT7", "ENTAMOUNT8", "ENTAMOUNT9", "ENTAMOUNT10", "ENTAMOUNT11", "ENTAMOUNT12") AS 
  select
 ppd.document_id,
 pp.groupcode, cast(null as char), pp.customer_id, pp.purchasemode_id, pp.cmporg_id, pp.necessity_id,
 ppd.planyear, pp.desc_id, d.description, pp.datebegin, pp.dateend, ppd.budget_id,
 coalesce(pp.amount1, 0), coalesce(pp.amount2, 0), coalesce(pp.amount3, 0),
 coalesce(pp.amount4, 0), coalesce(pp.amount5, 0), coalesce(pp.amount6, 0),
 coalesce(pp.amount7, 0), coalesce(pp.amount8, 0), coalesce(pp.amount9, 0),
 coalesce(pp.amount10, 0),coalesce(pp.amount11, 0),coalesce(pp.amount12, 0),
 coalesce(pp.entamount1, 0), coalesce(pp.entamount2, 0), coalesce(pp.entamount3, 0),
 coalesce(pp.entamount4, 0), coalesce(pp.entamount5, 0), coalesce(pp.entamount6, 0),
 coalesce(pp.entamount7, 0), coalesce(pp.entamount8, 0), coalesce(pp.entamount9, 0),
 coalesce(pp.entamount10, 0),coalesce(pp.entamount11, 0),coalesce(pp.entamount12, 0)
from PurchasePlan pp
inner join PurchasePlanDoc ppd on (pp.purchaseplandoc_id = ppd.id)
left outer join description d on (d.id = pp.desc_id)
where ppd.dispstatus_id = 10;
--------------------------------------------------------
--  DDL for View PURCHASEPLANVIEWERVIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."PURCHASEPLANVIEWERVIEW" ("DOCUMENT_ID", "GROUPCODE", "OKDP_CODE", "CUSTOMER_ID", "PURCHASEMODE_ID", "CMPORG_ID", "NECESSITY_ID", "PLANYEAR", "DESC_ID", "DESCRIPTION", "DATEBEGIN", "DATEEND", "BUDGET_ID", "PAYCONDITIONNAME", "PAYDATEFROM", "PAYDATETO", "GOODSCODE", "UNITNAME", "CODE1", "CODE2", "CODE3", "CODE4", "CODE5", "CODE6", "CODE7", "CODE8", "CODE9", "CODE10", "FINSRC_ID", "DELIVERYBASIS_ID", "CONTRACTOR_ID", "ISENTERPRISE", "ISSMALL", "DEALDATE", "PAYAMOUNT", "PAYAMOUNTPROLONG", "AMOUNT1", "AMOUNT2", "AMOUNT3", "AMOUNT4", "AMOUNT5", "AMOUNT6", "AMOUNT7", "AMOUNT8", "AMOUNT9", "AMOUNT10", "AMOUNT11", "AMOUNT12", "ENTAMOUNT1", "ENTAMOUNT2", "ENTAMOUNT3", "ENTAMOUNT4", "ENTAMOUNT5", "ENTAMOUNT6", "ENTAMOUNT7", "ENTAMOUNT8", "ENTAMOUNT9", "ENTAMOUNT10", "ENTAMOUNT11", "ENTAMOUNT12", "CHANGE_AMOUNT_QUARTER1", "CHANGE_AMOUNT_QUARTER2", "CHANGE_AMOUNT_QUARTER3", "CHANGE_AMOUNT_QUARTER4") AS 
  select
 MIN(0),
 groupcode, cast(null as char), customer_id, purchasemode_id, cmporg_id, necessity_id,
 planyear, desc_id, description, datebegin, dateend, budget_id,
 cast(null as char), cast(null as date), cast(null as date),
 cast(null as char), cast(null as char), cast(null as char), cast(null as char), cast(null as char), cast(null as char),
 cast(null as char), cast(null as char), cast(null as char), cast(null as char), cast(null as char), cast(null as char),
 cast(null as numeric), cast(null as numeric), cast(null as numeric), cast(null as numeric), cast(null as numeric), cast(null as date),
 SUM(0.00), SUM(0.00),
 SUM(amount1), SUM(amount2), SUM(amount3), SUM(amount4), SUM(amount5), SUM(amount6),
 SUM(amount7), SUM(amount8), SUM(amount9), SUM(amount10), SUM(amount11), SUM(amount12),
 SUM(entamount1), SUM(entamount2), SUM(entamount3), SUM(entamount4), SUM(entamount5), SUM(entamount6),
 SUM(entamount7), SUM(entamount8), SUM(entamount9), SUM(entamount10), SUM(entamount11), SUM(entamount12),
 SUM(0.00), SUM(0.00), SUM(0.00), SUM(0.00)
from PurchasePlanInternalView pp
group by
 groupcode, customer_id, purchasemode_id, cmporg_id, necessity_id,
 planyear, desc_id, description, datebegin, dateend, budget_id;
--------------------------------------------------------
--  DDL for View ROLEACTIONVIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."ROLEACTIONVIEW" ("USERROLE_ID", "DOCUMENTCLASS_ID", "DISPSTATUS_ID", "NAME") AS 
  select c.userrole_id,a.documentclass_id,a.dispstatus_id,a.name from docaction a 
    join roleclass c on c.documentclass_id=a.documentclass_id
  where c.access_mode=3
  union
  select e.userrole_id,a.documentclass_id,a.dispstatus_id,a.name from docaction a 
    join roleevent e on e.event_name=a.docevent_name and e.documentclass_id=a.documentclass_id and e.dispstatus_id=a.dispstatus_id
    join roleclass c on c.documentclass_id=e.documentclass_id
  where c.access_mode=2
  union
  select c.userrole_id,a.documentclass_id,a.dispstatus_id,a.name from docaction a
    join roleclass c on c.documentclass_id=a.documentclass_id
  where (c.access_mode=2 or c.access_mode=3) and a.docevent_name is null;
--------------------------------------------------------
--  DDL for View ROLEEVENTVIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."ROLEEVENTVIEW" ("USERROLE_ID", "DOCUMENTCLASS_ID", "DISPSTATUS_ID", "NAME") AS 
  select c.userrole_id,e.documentclass_id,e.dispstatus_id,e.name from docevent e
  join roleclass c on c.documentclass_id=e.documentclass_id
  where c.access_mode=3
  union
  select e.userrole_id,e.documentclass_id,e.dispstatus_id,e.event_name from roleevent e
  join roleclass c on c.documentclass_id=e.documentclass_id
  where c.access_mode=2;
--------------------------------------------------------
--  DDL for View SUMMARYPLANVIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."SUMMARYPLANVIEW" ("ID", "CAPTION", "CODE", "CUSTOMERID", "FSDESCRIPTION", "CMPORGNAME", "CUSTOMERNAME", "PMCAPTION", "CUSTOMERCODE", "AMOUNT1", "AMOUNT2", "AMOUNT3", "AMOUNT4", "AMOUNT5", "AMOUNT6", "AMOUNT7", "AMOUNT8", "AMOUNT9", "AMOUNT10", "AMOUNT11", "AMOUNT12", "PARENT_ID", "PLANYEAR", "BUDGETID", "DISPSTATUS_ID", "CMPORG_ID", "PURCHASEMODE_ID", "IS_ACTUAL", "DATEBEGIN", "DATEEND") AS 
  SELECT a.ID,a.CAPTION,a.CODE, ppd.Customer_ID CUSTOMERID,
fs.Description FSDESCRIPTION, og.Caption CMPORGNAME,ogc.Caption CUSTOMERNAME,
pm.Caption PMCaption,ogc.CustomerCode CUSTOMERCODE, SUM(pp.Amount1) Amount1,SUM(pp.Amount2) Amount2,
SUM(pp.Amount3) Amount3,SUM(pp.Amount4) Amount4,SUM(pp.Amount5) Amount5,
SUM(pp.Amount6) Amount6,SUM(pp.Amount7) Amount7,SUM(pp.Amount8) Amount8,
SUM(pp.Amount9) Amount9,SUM(pp.Amount10) Amount10,SUM(pp.Amount11) Amount11,
SUM(pp.Amount12) Amount12, a.parent_id, 
ppd.PlanYear, ppd.budget_id, ppd.dispstatus_id, pp.cmporg_id, pp.purchasemode_id, a.is_actual, pp.datebegin, pp.dateend
 FROM GOODSGROUP a
    JOIN PURCHASEPLAN pp on pp.GROUPCODE=a.CODE
    JOIN PURCHASEPLANDOC ppd on ppd.ID=pp.PurchasePlanDoc_ID
     LEFT JOIN ORG og on og.ID=pp.CMPORG_ID
     LEFT JOIN ORG ogc on ogc.ID=ppd.CUSTOMER_ID
      LEFT JOIN PURCHASEMODE pm on pm.ID=pp.PURCHASEMODE_ID
       LEFT JOIN FinSrc fs on fs.ID=pp.FINSRC_ID
         GROUP BY a.ID, a.CAPTION, a.CODE, pp.PURCHASEMODE_ID, pp.CMPORG_ID,
          ppd.Customer_ID, pp.FinSrc_ID, fs.Description, og.Caption, ogc.Caption,
          pm.Caption, ogc.CustomerCode, a.parent_id, 
          ppd.PlanYear, ppd.budget_id, ppd.dispstatus_id, pp.cmporg_id,
          pp.purchasemode_id, a.is_actual, pp.datebegin, pp.dateend
union all
SELECT a.ID,a.CAPTION,a.CODE, cast(null as numeric(18,0)) CUSTOMERID,
cast(null as varchar(255)) FsDescription, cast(null as varchar(100)) CMPORGNAME,
cast(null as varchar(100)) CUSTOMERNAME,cast(null as varchar(100)) PMCaption,
cast(null as varchar(5)) CUSTOMERCODE, cast(null as numeric(18,2)) Amount1,
cast(null as numeric(18,2)) Amount2, cast(null as numeric(18,2)) Amount3,
cast(null as numeric(18,2)) Amount4, cast(null as numeric(18,2)) Amount5,
cast(null as numeric(18,2)) Amount6, cast(null as numeric(18,2)) Amount7,
cast(null as numeric(18,2)) Amount8, cast(null as numeric(18,2)) Amount9,
cast(null as numeric(18,2)) Amount10,cast(null as numeric(18,2)) Amount11,
cast(null as numeric(18,2)) Amount12, a.parent_id,
cast(null as numeric(4,0)) PlanYear, cast(null as numeric(18,0)) budget_ID,
cast(null as numeric(18,0)) dispstatus_id, cast(null as numeric(18,0)) cmporg_id,
cast(null as numeric(18,0)) purchasemode_id, a.is_actual,
cast(null as date)datebegin, cast(null as date)dateend
 FROM GOODSGROUP a WHERE a.id in (select parent_id from GOODSGROUP);
--------------------------------------------------------
--  DDL for View USERROLES
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."USERROLES" ("SYSUSER_ID", "USERROLE_ID") AS 
  select p.user_id, p.grantedrole_id from roleregister p
where p.grantdate = (select max (grantdate) from roleregister r
  where r.user_id = p.user_id and r.grantedrole_id=p.grantedrole_id
  and r.grantdate<=SYSTIMESTAMP+0.000015) and
  SYSDATE between p.fromdate and p.todate
  and p.grantdate<=SYSTIMESTAMP+0.000015  and p.dispstatus_id = 10 and p.operation = 1;
--------------------------------------------------------
--  DDL for View USERACTIONVIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."USERACTIONVIEW" ("SYSUSER_ID", "DOCUMENTCLASS_ID", "DISPSTATUS_ID", "NAME") AS 
  SELECT DISTINCT
    r.sysuser_id, e.documentclass_id, e.dispstatus_id, e.name
  FROM roleactionview e
    JOIN userroles r ON r.userrole_id=e.userrole_id
;
--------------------------------------------------------
--  DDL for View USEREVENTVIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."USEREVENTVIEW" ("SYSUSER_ID", "DOCUMENTCLASS_ID", "DISPSTATUS_ID", "NAME") AS 
  SELECT DISTINCT
    r.sysuser_id, e.documentclass_id, e.dispstatus_id, e.name
  FROM roleeventview e
    JOIN userroles r ON r.userrole_id=e.userrole_id
;
--------------------------------------------------------
--  DDL for View V_SIGNS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "GZVLG"."V_SIGNS" ("ID", "DOCUMENT_ID", "USERROLE_ID", "USERCERT_SN", "USERCERT_ISSUER_SN", "SIGN_TYPE", "IS_VALID") AS 
  select 
  s.id as id, 
  d.document_id, 
  s.userrole_id, 
  s.certserialnumber as usercert_sn, 
  s.certissuerserialnumber as usercert_issuer_sn, 
  0 as sign_type,
  s.isvalid  as is_valid
from     
   digestsign s
   join digest d on (d.id = s.digest_id)
union all
select 
  s.id as id, 
  a.document_id, 
  s.userrole_id, 
  s.certserialnumber, 
  s.certissuerserialnumber, 
  1 as sign_type, 
  s.isvalid  as sign_valid
from     
   digestsign s
   join docattachex a on (a.id = s.docattachex_id);
--------------------------------------------------------
--  DDL for Trigger CHK_UQ_DOCREQ
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."CHK_UQ_DOCREQ" AFTER INSERT OR UPDATE
 ON DocReq FOR EACH ROW
DECLARE
  NumRows INTEGER;
  idList NUMERIC(15);
PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
  SELECT COUNT(*) INTO NumRows FROM DocReq WHERE Name = :NEW.Name and PurchaseMode_Id = :NEW.PurchaseMode_Id;
  IF (NumRows > 0) THEN
    SELECT Id INTO idList FROM DocReq WHERE Name = :NEW.Name and PurchaseMode_Id = :NEW.PurchaseMode_Id;
    IF (:NEW.Id NOT IN (idList)) THEN
      raise_application_error(-20001, 'violation of PRIMARY or UNIQUE KEY constraint "UQ_DOCREQ"');
    END IF;
  END IF;
COMMIT;
END;

/
ALTER TRIGGER "GZVLG"."CHK_UQ_DOCREQ" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CHK_UQ_ESTIMATE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."CHK_UQ_ESTIMATE" after insert or update
 on ESTIMATE for each row
DECLARE numrows INTEGER;
 idList numeric(15);
PRAGMA AUTONOMOUS_TRANSACTION; 
begin
  SELECT count(*) into numrows from ESTIMATE where CAPTION = :NEW.CAPTION and FINYEAR = :NEW.FINYEAR and BUDGET_ID = :NEW.BUDGET_ID;
  if (numrows > 0) then
    SELECT ID into idList from ESTIMATE where CAPTION = :NEW.CAPTION and FINYEAR = :NEW.FINYEAR and BUDGET_ID = :NEW.BUDGET_ID;
    if (:NEW.ID not in (idList)) then
      raise_application_error(-20001, 'violation of PRIMARY or UNIQUE KEY constraint "UQ_ESTIMATE"'); 
    end if;
  end if;
COMMIT;
end;

/
ALTER TRIGGER "GZVLG"."CHK_UQ_ESTIMATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CHK_UQ_FINSRC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."CHK_UQ_FINSRC" after insert or update
 on FINSRC for each row
DECLARE numrows INTEGER;
 idList numeric(15);
PRAGMA AUTONOMOUS_TRANSACTION; 
begin
  SELECT count(*) into numrows from FINSRC where NAME = :NEW.NAME and FINYEAR = :NEW.FINYEAR;
  if (numrows > 0) then
    SELECT ID into idList from FINSRC where NAME = :NEW.NAME and FINYEAR = :NEW.FINYEAR;
    if (:NEW.ID not in (idList)) then
      raise_application_error(-20001, 'violation of PRIMARY or UNIQUE KEY constraint "UQ_FINSRC"'); 
    end if;
  end if;
COMMIT;
end;

/
ALTER TRIGGER "GZVLG"."CHK_UQ_FINSRC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CHK_UQ_GROUPPROP_CAPTION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."CHK_UQ_GROUPPROP_CAPTION" after insert or update
 on GROUPPROP for each row
DECLARE numrows INTEGER;
 idList numeric(15);
PRAGMA AUTONOMOUS_TRANSACTION; 
begin
  SELECT count(*) into numrows from GROUPPROP where CAPTION = :NEW.CAPTION and GROUP_ID = :NEW.GROUP_ID;
  if (numrows > 0) then
    SELECT ID into idList from GROUPPROP where CAPTION = :NEW.CAPTION and GROUP_ID = :NEW.GROUP_ID;
    if (:NEW.ID not in (idList)) then
      raise_application_error(-20001, 'violation of PRIMARY or UNIQUE KEY constraint "UQ_GROUPPROP_CAPTION"'); 
    end if;
  end if;
COMMIT;
end;

/
ALTER TRIGGER "GZVLG"."CHK_UQ_GROUPPROP_CAPTION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CHK_UQ_OFRGROUPPROP_CAPTION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."CHK_UQ_OFRGROUPPROP_CAPTION" after insert or update
 on OFRGROUPPROP for each row
DECLARE numrows INTEGER;
PRAGMA AUTONOMOUS_TRANSACTION; 
begin
  SELECT count(*) into numrows from OFRGROUPPROP where CAPTION = :NEW.CAPTION and OFFER_ID = :NEW.OFFER_ID and GROUPCODE = :NEW.GROUPCODE;
  if (numrows > 0) then
  raise_application_error(-20001, 'violation of PRIMARY or UNIQUE KEY constraint "UQ_OFRGROUPPROP_CAPTION"'); end if;
COMMIT;
end;

/
ALTER TRIGGER "GZVLG"."CHK_UQ_OFRGROUPPROP_CAPTION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CHK_UQ_PAYCONDITION_NAME
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."CHK_UQ_PAYCONDITION_NAME" after insert or update
 on PAYCONDITION for each row
DECLARE numrows INTEGER;
 idList numeric(15);
PRAGMA AUTONOMOUS_TRANSACTION; 
begin
  SELECT count(*) into numrows from PAYCONDITION where NAME = :NEW.NAME;
  if (numrows > 0) then
    SELECT ID into idList from PAYCONDITION where NAME = :NEW.NAME;
    if (:NEW.ID not in (idList)) then
      raise_application_error(-20001, 'violation of PRIMARY or UNIQUE KEY constraint "UQ_PAYCONDITION_NAME"'); 
    end if;
  end if;
COMMIT;
end;

/
ALTER TRIGGER "GZVLG"."CHK_UQ_PAYCONDITION_NAME" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CHK_UQ_PLGOODS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."CHK_UQ_PLGOODS" after insert or update
 on PLGOODS for each row
DECLARE numrows INTEGER;
 idList numeric(15);
PRAGMA AUTONOMOUS_TRANSACTION; 
begin
  SELECT count(*) into numrows from PLGOODS where NAME = :NEW.NAME and UNIT = :NEW.UNIT and PRICE = :NEW.PRICE and GROUPCODE = :NEW.GROUPCODE and ORGID = :NEW.ORGID;
  if (numrows > 0) then
    SELECT ID into idList from PLGOODS where NAME = :NEW.NAME and UNIT = :NEW.UNIT and PRICE = :NEW.PRICE and GROUPCODE = :NEW.GROUPCODE and ORGID = :NEW.ORGID;
    if (:NEW.ID not in (idList)) then
      raise_application_error(-20001, 'violation of PRIMARY or UNIQUE KEY constraint "UQ_PLGOODS"'); 
    end if;
  end if;
COMMIT;
end;

/
ALTER TRIGGER "GZVLG"."CHK_UQ_PLGOODS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CHK_UQ_PROPTYPE_CAPTION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."CHK_UQ_PROPTYPE_CAPTION" after insert or update
 on PROPTYPE for each row
DECLARE numrows INTEGER;
 idList numeric(15);
PRAGMA AUTONOMOUS_TRANSACTION; 
begin
  SELECT count(*) into numrows from PROPTYPE where CAPTION = :NEW.CAPTION;
  if (numrows > 0) then
    SELECT ID into idList from PROPTYPE where CAPTION = :NEW.CAPTION;
    if (:NEW.ID not in (idList)) then
      raise_application_error(-20001, 'violation of PRIMARY or UNIQUE KEY constraint "UQ_PROPTYPE_CAPTION"'); 
    end if;
  end if;
COMMIT;
end;

/
ALTER TRIGGER "GZVLG"."CHK_UQ_PROPTYPE_CAPTION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CHK_UQ_QUALREQ
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."CHK_UQ_QUALREQ" AFTER INSERT OR UPDATE
 ON QualReq FOR EACH ROW
DECLARE
  NumRows INTEGER;
  idList NUMERIC(15);
PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
  SELECT COUNT(*) INTO NumRows FROM QualReq WHERE Name = :NEW.Name and PurchaseMode_Id = :NEW.PurchaseMode_Id;
  IF (NumRows > 0) THEN
    SELECT Id INTO idList FROM QualReq WHERE Name = :NEW.Name and PurchaseMode_Id = :NEW.PurchaseMode_Id;
    IF (:NEW.Id NOT IN (idList)) THEN
      raise_application_error(-20001, 'violation of PRIMARY or UNIQUE KEY constraint "UQ_QUALREQ"');
    END IF;
  END IF;
COMMIT;
END;

/
ALTER TRIGGER "GZVLG"."CHK_UQ_QUALREQ" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CHK_UQ_TYPEREQCRIT_NAME
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."CHK_UQ_TYPEREQCRIT_NAME" after insert or update
 on TYPEREQCRIT for each row
DECLARE numrows INTEGER;
 idList numeric(15);
PRAGMA AUTONOMOUS_TRANSACTION; 
begin
  SELECT count(*) into numrows from TYPEREQCRIT where NAME = :NEW.NAME and PurchaseMode_Id = :NEW.PurchaseMode_Id;
  if (numrows > 0) then
    SELECT ID into idList from TYPEREQCRIT where NAME = :NEW.NAME and PurchaseMode_Id = :NEW.PurchaseMode_Id;
    if (:NEW.ID not in (idList)) then
      raise_application_error(-20001, 'violation of PRIMARY or UNIQUE KEY constraint "UQ_TYPEREQCRIT_NAME"'); 
    end if;
  end if;
COMMIT;
end;

/
ALTER TRIGGER "GZVLG"."CHK_UQ_TYPEREQCRIT_NAME" ENABLE;
--------------------------------------------------------
--  DDL for Trigger COUNT_SIGN
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."COUNT_SIGN" 
after insert or update or delete on DigestSign for each row
declare
  DocId number(18,0);
  OldDocId number(18,0);
begin
  if (inserting or updating) then
    if (:new.SignType = 0) then
      select dg.Document_id into DocId from Digest dg where dg.Id = :new.Digest_id;
    else
      select da.Document_id into DocId from DocAttachEx da where da.Id = :new.DocAttachEx_id;
    end if;
  end if;
  if (updating or deleting) then
    if (:old.SignType = 0) then
      select dg.Document_id into OldDocId from Digest dg where dg.Id = :old.Digest_id;
    else
      OldDocId := GetDocIDForAttachID(:old.DocAttachEx_id);
    end if;
  end if;
  if inserting then
    update Document d set d.Sign_cnt = d.Sign_cnt + 1 where d.Id = DocId;
  elsif updating then
    if (DocId <> OldDocId) then
      update Document d set d.Sign_cnt = d.Sign_cnt + 1 where d.Id = DocId;
      update Document d set d.Sign_cnt = d.Sign_cnt - 1 where d.Id = OldDocId;
    end if;
  else
    update Document d set d.Sign_cnt = d.Sign_cnt - 1 where d.Id = OldDocId;
  end if;
end;

/
ALTER TRIGGER "GZVLG"."COUNT_SIGN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEL_DOCATTACHEX
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."DEL_DOCATTACHEX" AFTER DELETE ON DOCATTACHEX FOR EACH ROW
BEGIN
  update document d set d.attach_cnt = d.attach_cnt - 1 
    where d.id=:old.document_id;
END;

/
ALTER TRIGGER "GZVLG"."DEL_DOCATTACHEX" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DELETE_DOCATTACH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."DELETE_DOCATTACH" before delete on DOCATTACH
for each row
declare
  result numeric;
  TaskJournalId numeric(15,0);
begin
    result := :old.version + 1;
  TaskJournalId := RPLTRANSACTION.get_task_journal_id; 
  if (TaskJournalId is not null) then
    insert into RplVersionLog (Ver, Num_Transaction, RplTable_Id, TaskJournal_Id, Record_Id, Record_Action)
    values (result, dbms_transaction.local_transaction_id, 49, TaskJournalId, :old.id, 2);
  end if;
end;
/
ALTER TRIGGER "GZVLG"."DELETE_DOCATTACH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DELETE_DOCATTACHEX
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."DELETE_DOCATTACHEX" before delete on DOCATTACHEX
for each row
declare
  result numeric;
  TaskJournalId numeric(15,0);
begin
    result := :old.version + 1;
  TaskJournalId := RPLTRANSACTION.get_task_journal_id; 
  if (TaskJournalId is not null) then
    insert into RplVersionLog (Ver, Num_Transaction, RplTable_Id, TaskJournal_Id, Record_Id, Record_Action)
    values (result, dbms_transaction.local_transaction_id, 2, TaskJournalId, :old.id, 2);
  end if;
end;
/
ALTER TRIGGER "GZVLG"."DELETE_DOCATTACHEX" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DELETE_MAILATTACH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."DELETE_MAILATTACH" before delete on MAILATTACH
for each row
declare
  result numeric;
  TaskJournalId numeric(15,0);
begin
    result := :old.version + 1;
  TaskJournalId := RPLTRANSACTION.get_task_journal_id; 
  if (TaskJournalId is not null) then
    insert into RplVersionLog (Ver, Num_Transaction, RplTable_Id, TaskJournal_Id, Record_Id, Record_Action)
    values (result, dbms_transaction.local_transaction_id, 66, TaskJournalId, :old.id, 2);
  end if;
end;
/
ALTER TRIGGER "GZVLG"."DELETE_MAILATTACH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DELETE_REFATTACH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."DELETE_REFATTACH" before delete on REFATTACH
for each row
declare
  result numeric;
  TaskJournalId numeric(15,0);
begin
    result := :old.version + 1;
  TaskJournalId := RPLTRANSACTION.get_task_journal_id; 
  if (TaskJournalId is not null) then
    insert into RplVersionLog (Ver, Num_Transaction, RplTable_Id, TaskJournal_Id, Record_Id, Record_Action)
    values (result, dbms_transaction.local_transaction_id, 253, TaskJournalId, :old.id, 2);
  end if;
end;
/
ALTER TRIGGER "GZVLG"."DELETE_REFATTACH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DLT_PLAN3PURCHASELINE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."DLT_PLAN3PURCHASELINE" before delete
 on PLAN3PURCHASELINE for each row
begin
  update plan3purchasegoods g set g.plan3purchaselinepos=null
    where g.plan3purchasedoc_id=:old.plan3purchasedoc_id and g.plan3purchaselinepos=:old.pos;
end;

/
ALTER TRIGGER "GZVLG"."DLT_PLAN3PURCHASELINE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INS_DOCATTACHEX
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."INS_DOCATTACHEX" AFTER INSERT ON DOCATTACHEX FOR EACH ROW
BEGIN
  update document d set d.attach_cnt = d.attach_cnt + 1 
    where d.id=:new.document_id;
END;

/
ALTER TRIGGER "GZVLG"."INS_DOCATTACHEX" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INS_GOODSGROUP_TREE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."INS_GOODSGROUP_TREE" after insert
 on goodsgroup referencing old as old new as new
 for each row
declare
 vtree varchar(255);
begin
  begin
    select tree into vtree
      from goodsgroup_tree where group_id=:new.parent_id;
  exception
    when no_data_found then
      vtree := '/';
  end;
  insert into goodsgroup_tree (group_id, tree)
    values(:new.id, vtree||:new.code||'/');
end;

/
ALTER TRIGGER "GZVLG"."INS_GOODSGROUP_TREE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INS_ISCONTRACTOR_ORGACCOUNT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."INS_ISCONTRACTOR_ORGACCOUNT" 
 before insert or update on OrgAccount for each row
begin
  if (:old.ORG_ID is null) or (:old.ORG_ID<>:new.ORG_ID) then
    select o.IsContractor into :new.IsContractor from Org o where o.ID=:new.ORG_ID;
  end if;
end;

/
ALTER TRIGGER "GZVLG"."INS_ISCONTRACTOR_ORGACCOUNT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INS_ORGCHILD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."INS_ORGCHILD" AFTER INSERT
 ON org FOR EACH ROW 
BEGIN
  IF (:NEW.parent_id IS NOT NULL AND :NEW.parent_id <> :NEW.id) THEN
    INSERT INTO orgchild(org_id, child_id)
      VALUES(:NEW.parent_id, :NEW.id);
    FOR cur IN (SELECT org_id FROM orgchild
                WHERE child_id = :NEW.parent_id)
    LOOP
      INSERT INTO orgchild(org_id, child_id)
         VALUES (cur.org_id, :NEW.id);
    END LOOP;
  END IF;
END;

/
ALTER TRIGGER "GZVLG"."INS_ORGCHILD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INS_TER_TREE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."INS_TER_TREE" after insert
 on territory referencing old as old new as new
 for each row
declare
 vtree varchar(255);
 vpath varchar(512);
begin
  begin
    select tree, path into vtree, vpath
      from ter_tree where ter_id=:new.parent_id;
    vpath := vpath||', '||:new.caption;
  exception
    when no_data_found then
      vtree := '/';
      vpath := :new.caption;
  end;
  insert into ter_tree (ter_id, tree, path)
    values (:new.id, vtree||:new.code||'/', vpath);
end;

/
ALTER TRIGGER "GZVLG"."INS_TER_TREE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ABANDONEDREASON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ABANDONEDREASON" AFTER INSERT OR UPDATE OR DELETE ON ABANDONEDREASON REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 174;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ABANDONEDREASON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ALTGOODSGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ALTGOODSGROUP" AFTER INSERT OR UPDATE OR DELETE ON ALTGOODSGROUP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 142;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ALTGOODSGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ALTGOODSGROUPTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ALTGOODSGROUPTYPE" AFTER INSERT OR UPDATE OR DELETE ON ALTGOODSGROUPTYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 141;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ALTGOODSGROUPTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ANYDATA
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ANYDATA" AFTER INSERT OR UPDATE OR DELETE ON ANYDATA REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 43;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ANYDATA" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$APPMODULE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$APPMODULE" AFTER INSERT OR UPDATE OR DELETE ON APPMODULE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 98;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$APPMODULE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$APPOBJ
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$APPOBJ" AFTER INSERT OR UPDATE OR DELETE ON APPOBJ REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 99;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$APPOBJ" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$APPOBJPROP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$APPOBJPROP" AFTER INSERT OR UPDATE OR DELETE ON APPOBJPROP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 100;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$APPOBJPROP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$APPOINTMENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$APPOINTMENT" AFTER INSERT OR UPDATE OR DELETE ON APPOINTMENT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 256;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$APPOINTMENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$AUCTIONBID
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$AUCTIONBID" AFTER INSERT OR UPDATE OR DELETE ON AUCTIONBID REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 255;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$AUCTIONBID" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$AUCTIONLOG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$AUCTIONLOG" AFTER INSERT OR UPDATE OR DELETE ON AUCTIONLOG REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 254;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$AUCTIONLOG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$BANK
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$BANK" AFTER INSERT OR UPDATE OR DELETE ON BANK REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 36;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$BANK" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$BANKGUARANTEEDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$BANKGUARANTEEDOC" AFTER INSERT OR UPDATE OR DELETE ON BANKGUARANTEEDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 221;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$BANKGUARANTEEDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$BANKGUARANTEEREFDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$BANKGUARANTEEREFDOC" AFTER INSERT OR UPDATE OR DELETE ON BANKGUARANTEEREFDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 222;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$BANKGUARANTEEREFDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$BANKGUARANTEEREFREASON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$BANKGUARANTEEREFREASON" AFTER INSERT OR UPDATE OR DELETE ON BANKGUARANTEEREFREASON REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 220;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$BANKGUARANTEEREFREASON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$BUDGCODE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$BUDGCODE" AFTER INSERT OR UPDATE OR DELETE ON BUDGCODE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 114;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$BUDGCODE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$BUDGET
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$BUDGET" AFTER INSERT OR UPDATE OR DELETE ON BUDGET REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 80;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$BUDGET" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$BUDGETLINE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$BUDGETLINE" AFTER INSERT OR UPDATE OR DELETE ON BUDGETLINE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 116;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$BUDGETLINE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$BUDGETSTAGE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$BUDGETSTAGE" AFTER INSERT OR UPDATE OR DELETE ON BUDGETSTAGE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 121;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$BUDGETSTAGE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CACHELIST
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CACHELIST" AFTER INSERT OR UPDATE OR DELETE ON CACHELIST REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 94;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CACHELIST" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CAVILDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CAVILDOC" AFTER INSERT OR UPDATE OR DELETE ON CAVILDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 305;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CAVILDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CAVILTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CAVILTYPE" AFTER INSERT OR UPDATE OR DELETE ON CAVILTYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 304;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CAVILTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CERTINTERCHANGEREQUEST
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CERTINTERCHANGEREQUEST" AFTER INSERT OR UPDATE OR DELETE ON CERTINTERCHANGEREQUEST REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 258;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CERTINTERCHANGEREQUEST" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CERTREQUEST
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CERTREQUEST" AFTER INSERT OR UPDATE OR DELETE ON CERTREQUEST REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 257;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CERTREQUEST" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CERTREVOKEREQUEST
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CERTREVOKEREQUEST" AFTER INSERT OR UPDATE OR DELETE ON CERTREVOKEREQUEST REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 259;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CERTREVOKEREQUEST" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CLAIMDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CLAIMDOC" AFTER INSERT OR UPDATE OR DELETE ON CLAIMDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 213;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CLAIMDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CLAIMPAYFACT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CLAIMPAYFACT" AFTER INSERT OR UPDATE OR DELETE ON CLAIMPAYFACT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 214;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CLAIMPAYFACT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CLAIMPENALTYCHANGEDOCINFO
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CLAIMPENALTYCHANGEDOCINFO" AFTER INSERT OR UPDATE OR DELETE ON CLAIMPENALTYCHANGEDOCINFO REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 215;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CLAIMPENALTYCHANGEDOCINFO" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CLASSOPER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CLASSOPER" AFTER INSERT OR UPDATE OR DELETE ON CLASSOPER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 21;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CLASSOPER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CLIENTOBJECT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CLIENTOBJECT" AFTER INSERT OR UPDATE OR DELETE ON CLIENTOBJECT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 39;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CLIENTOBJECT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CLIENTOBJECTCOMMENTS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CLIENTOBJECTCOMMENTS" AFTER INSERT OR UPDATE OR DELETE ON CLIENTOBJECTCOMMENTS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 83;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CLIENTOBJECTCOMMENTS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CLNDDAY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CLNDDAY" AFTER INSERT OR UPDATE OR DELETE ON CLNDDAY REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 97;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CLNDDAY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CLNDDAYTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CLNDDAYTYPE" AFTER INSERT OR UPDATE OR DELETE ON CLNDDAYTYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 95;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CLNDDAYTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CLNDTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CLNDTYPE" AFTER INSERT OR UPDATE OR DELETE ON CLNDTYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 96;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CLNDTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CODETYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CODETYPE" AFTER INSERT OR UPDATE OR DELETE ON CODETYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 113;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CODETYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$COMMEMBER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$COMMEMBER" AFTER INSERT OR UPDATE OR DELETE ON COMMEMBER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 244;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$COMMEMBER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$COMMISSION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$COMMISSION" AFTER INSERT OR UPDATE OR DELETE ON COMMISSION REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 243;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$COMMISSION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$COMPLAINTDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$COMPLAINTDOC" AFTER INSERT OR UPDATE OR DELETE ON COMPLAINTDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 241;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$COMPLAINTDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CONFCONCLUSIONCONTRACT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CONFCONCLUSIONCONTRACT" AFTER INSERT OR UPDATE OR DELETE ON CONFCONCLUSIONCONTRACT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 281;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CONFCONCLUSIONCONTRACT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CONPAYFACT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CONPAYFACT" AFTER INSERT OR UPDATE OR DELETE ON CONPAYFACT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 179;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CONPAYFACT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CONSOLIDDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CONSOLIDDOC" AFTER INSERT OR UPDATE OR DELETE ON CONSOLIDDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 250;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CONSOLIDDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CONSTRUCTION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CONSTRUCTION" AFTER INSERT OR UPDATE OR DELETE ON CONSTRUCTION REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 177;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CONSTRUCTION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CONTRACTCARDDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CONTRACTCARDDOC" AFTER INSERT OR UPDATE OR DELETE ON CONTRACTCARDDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 198;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CONTRACTCARDDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CONTRACTDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CONTRACTDOC" AFTER INSERT OR UPDATE OR DELETE ON CONTRACTDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 178;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CONTRACTDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CONTRACTEXECDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CONTRACTEXECDOC" AFTER INSERT OR UPDATE OR DELETE ON CONTRACTEXECDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 180;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CONTRACTEXECDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CONTRACTREASON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CONTRACTREASON" AFTER INSERT OR UPDATE OR DELETE ON CONTRACTREASON REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 155;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CONTRACTREASON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CONTRACTREASON_DOCLINES
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CONTRACTREASON_DOCLINES" AFTER INSERT OR UPDATE OR DELETE ON CONTRACTREASON_DOCLINES REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 156;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CONTRACTREASON_DOCLINES" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CONTRACTTEMPLATEDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CONTRACTTEMPLATEDOC" AFTER INSERT OR UPDATE OR DELETE ON CONTRACTTEMPLATEDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 203;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CONTRACTTEMPLATEDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CONTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CONTYPE" AFTER INSERT OR UPDATE OR DELETE ON CONTYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 175;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CONTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CONTYPEATTACH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CONTYPEATTACH" AFTER INSERT OR UPDATE OR DELETE ON CONTYPEATTACH REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 176;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CONTYPEATTACH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$COUNTRY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$COUNTRY" AFTER INSERT OR UPDATE OR DELETE ON COUNTRY REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 145;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$COUNTRY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CRLFILE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CRLFILE" AFTER INSERT OR UPDATE OR DELETE ON CRLFILE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 268;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CRLFILE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CRLPOINT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CRLPOINT" AFTER INSERT OR UPDATE OR DELETE ON CRLPOINT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 267;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CRLPOINT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CURHISTORY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CURHISTORY" AFTER INSERT OR UPDATE OR DELETE ON CURHISTORY REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 149;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CURHISTORY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$CURRENCY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$CURRENCY" AFTER INSERT OR UPDATE OR DELETE ON CURRENCY REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 148;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$CURRENCY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DATAOBJECTCHANGELOG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DATAOBJECTCHANGELOG" AFTER INSERT OR UPDATE OR DELETE ON DATAOBJECTCHANGELOG REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 381;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DATAOBJECTCHANGELOG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DATASOURCE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DATASOURCE" AFTER INSERT OR UPDATE OR DELETE ON DATASOURCE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 87;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DATASOURCE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DBCONNECT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DBCONNECT" AFTER INSERT OR UPDATE OR DELETE ON DBCONNECT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 52;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DBCONNECT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DBCONSTRAINT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DBCONSTRAINT" AFTER INSERT OR UPDATE OR DELETE ON DBCONSTRAINT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 13;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DBCONSTRAINT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DECREASON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DECREASON" AFTER INSERT OR UPDATE OR DELETE ON DECREASON REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 82;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DECREASON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DELIVERYBASIS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DELIVERYBASIS" AFTER INSERT OR UPDATE OR DELETE ON DELIVERYBASIS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 158;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DELIVERYBASIS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DESCGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DESCGROUP" AFTER INSERT OR UPDATE OR DELETE ON DESCGROUP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 59;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DESCGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DESCRIPTION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DESCRIPTION" AFTER INSERT OR UPDATE OR DELETE ON DESCRIPTION REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 60;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DESCRIPTION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DESCRIPTIONCACHE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DESCRIPTIONCACHE" AFTER INSERT OR UPDATE OR DELETE ON DESCRIPTIONCACHE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 154;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DESCRIPTIONCACHE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DEVIATIONFACTFOUNDATION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DEVIATIONFACTFOUNDATION" AFTER INSERT OR UPDATE OR DELETE ON DEVIATIONFACTFOUNDATION REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 342;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DEVIATIONFACTFOUNDATION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DIGEST
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DIGEST" AFTER INSERT OR UPDATE OR DELETE ON DIGEST REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 72;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DIGEST" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DIGESTSIGN
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DIGESTSIGN" AFTER INSERT OR UPDATE OR DELETE ON DIGESTSIGN REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 73;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DIGESTSIGN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DISPSTATUS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DISPSTATUS" AFTER INSERT OR UPDATE OR DELETE ON DISPSTATUS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 17;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DISPSTATUS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCACTION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCACTION" AFTER INSERT OR UPDATE OR DELETE ON DOCACTION REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 22;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCACTION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCATTACH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCATTACH" AFTER INSERT OR UPDATE OR DELETE ON DOCATTACH REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 49;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCATTACH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCATTACHEX
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCATTACHEX" AFTER INSERT OR UPDATE OR DELETE ON DOCATTACHEX REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 2;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCATTACHEX" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCCATEGORY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCCATEGORY" AFTER INSERT OR UPDATE OR DELETE ON DOCCATEGORY REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 67;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCCATEGORY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCCLASS_DISPSTATUS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCCLASS_DISPSTATUS" AFTER INSERT OR UPDATE OR DELETE ON DOCCLASS_DISPSTATUS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 55;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCCLASS_DISPSTATUS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCCOMMENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCCOMMENT" AFTER INSERT OR UPDATE OR DELETE ON DOCCOMMENT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 53;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCCOMMENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCCUSTOMFIELDS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCCUSTOMFIELDS" AFTER INSERT OR UPDATE OR DELETE ON DOCCUSTOMFIELDS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 54;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCCUSTOMFIELDS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCDIGESTRULE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCDIGESTRULE" AFTER INSERT OR UPDATE OR DELETE ON DOCDIGESTRULE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 78;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCDIGESTRULE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCEVENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCEVENT" AFTER INSERT OR UPDATE OR DELETE ON DOCEVENT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 20;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCEVENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCEVERRLOG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCEVERRLOG" AFTER INSERT OR UPDATE OR DELETE ON DOCEVERRLOG REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 101;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCEVERRLOG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCEXCHANGESCHEME
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCEXCHANGESCHEME" AFTER INSERT OR UPDATE OR DELETE ON DOCEXCHANGESCHEME REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 63;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCEXCHANGESCHEME" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCFLAGCATEGORY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCFLAGCATEGORY" AFTER INSERT OR UPDATE OR DELETE ON DOCFLAGCATEGORY REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 119;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCFLAGCATEGORY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCFLAGTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCFLAGTYPE" AFTER INSERT OR UPDATE OR DELETE ON DOCFLAGTYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 120;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCFLAGTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCGROUP" AFTER INSERT OR UPDATE OR DELETE ON DOCGROUP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 24;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCREQ
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCREQ" AFTER INSERT OR UPDATE OR DELETE ON DOCREQ REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 247;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCREQ" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCRETENTION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCRETENTION" AFTER INSERT OR UPDATE OR DELETE ON DOCRETENTION REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 68;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCRETENTION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCRETENTIONSTATITEMS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCRETENTIONSTATITEMS" AFTER INSERT OR UPDATE OR DELETE ON DOCRETENTIONSTATITEMS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 91;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCRETENTIONSTATITEMS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCRETENTIONSTATUS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCRETENTIONSTATUS" AFTER INSERT OR UPDATE OR DELETE ON DOCRETENTIONSTATUS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 90;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCRETENTIONSTATUS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCSTATUS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCSTATUS" AFTER INSERT OR UPDATE OR DELETE ON DOCSTATUS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 19;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCSTATUS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCUMENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCUMENT" AFTER INSERT OR UPDATE OR DELETE ON DOCUMENT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 23;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, :old.DOCUMENTCLASS_ID, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, :new.DOCUMENTCLASS_ID, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID)and (:new.DOCUMENTCLASS_ID=:old.DOCUMENTCLASS_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, :old.DOCUMENTCLASS_ID, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCUMENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCUMENTCLASS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCUMENTCLASS" AFTER INSERT OR UPDATE OR DELETE ON DOCUMENTCLASS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 18;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCUMENTCLASS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOCUMENTREPORTS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOCUMENTREPORTS" AFTER INSERT OR UPDATE OR DELETE ON DOCUMENTREPORTS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 58;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOCUMENTREPORTS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$DOMEN
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$DOMEN" AFTER INSERT OR UPDATE OR DELETE ON DOMEN REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 108;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$DOMEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$EQUALITY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$EQUALITY" AFTER INSERT OR UPDATE OR DELETE ON EQUALITY REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 218;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$EQUALITY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$EQUALITYCODES
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$EQUALITYCODES" AFTER INSERT OR UPDATE OR DELETE ON EQUALITYCODES REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 219;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$EQUALITYCODES" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ESCHECKRULE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ESCHECKRULE" AFTER INSERT OR UPDATE OR DELETE ON ESCHECKRULE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 79;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ESCHECKRULE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ESTIMATE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ESTIMATE" AFTER INSERT OR UPDATE OR DELETE ON ESTIMATE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 115;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ESTIMATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ETP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ETP" AFTER INSERT OR UPDATE OR DELETE ON ETP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 194;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ETP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ETPATTACH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ETPATTACH" AFTER INSERT OR UPDATE OR DELETE ON ETPATTACH REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 197;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ETPATTACH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ETPTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ETPTYPE" AFTER INSERT OR UPDATE OR DELETE ON ETPTYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 193;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ETPTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$FACTDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$FACTDOC" AFTER INSERT OR UPDATE OR DELETE ON FACTDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 226;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$FACTDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$FACTDOCTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$FACTDOCTYPE" AFTER INSERT OR UPDATE OR DELETE ON FACTDOCTYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 225;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$FACTDOCTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$FETCHMODE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$FETCHMODE" AFTER INSERT OR UPDATE OR DELETE ON FETCHMODE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 303;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$FETCHMODE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$FGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$FGROUP" AFTER INSERT OR UPDATE OR DELETE ON FGROUP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 70;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$FGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$FGROUPATTACH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$FGROUPATTACH" AFTER INSERT OR UPDATE OR DELETE ON FGROUPATTACH REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 71;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$FGROUPATTACH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$FGROUPHEADER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$FGROUPHEADER" AFTER INSERT OR UPDATE OR DELETE ON FGROUPHEADER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 69;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$FGROUPHEADER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$FINSRC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$FINSRC" AFTER INSERT OR UPDATE OR DELETE ON FINSRC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 117;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$FINSRC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$FINSRCSATISFY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$FINSRCSATISFY" AFTER INSERT OR UPDATE OR DELETE ON FINSRCSATISFY REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 341;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$FINSRCSATISFY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$FORMATCONVERTER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$FORMATCONVERTER" AFTER INSERT OR UPDATE OR DELETE ON FORMATCONVERTER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 382;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$FORMATCONVERTER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$FUNCAT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$FUNCAT" AFTER INSERT OR UPDATE OR DELETE ON FUNCAT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 47;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$FUNCAT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$FUNUNIT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$FUNUNIT" AFTER INSERT OR UPDATE OR DELETE ON FUNUNIT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 5;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$FUNUNIT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GCREGISTER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GCREGISTER" AFTER INSERT OR UPDATE OR DELETE ON GCREGISTER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 118;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GCREGISTER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GOODS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GOODS" AFTER INSERT OR UPDATE OR DELETE ON GOODS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 137;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GOODS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GOODSBAN
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GOODSBAN" AFTER INSERT OR UPDATE OR DELETE ON GOODSBAN REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 384;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GOODSBAN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GOODSBANGOODSOKPD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GOODSBANGOODSOKPD" AFTER INSERT OR UPDATE OR DELETE ON GOODSBANGOODSOKPD REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 386;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GOODSBANGOODSOKPD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GOODSBANPURCHASEMODE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GOODSBANPURCHASEMODE" AFTER INSERT OR UPDATE OR DELETE ON GOODSBANPURCHASEMODE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 385;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GOODSBANPURCHASEMODE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GOODSBRANCH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GOODSBRANCH" AFTER INSERT OR UPDATE OR DELETE ON GOODSBRANCH REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 195;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GOODSBRANCH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GOODSGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GOODSGROUP" AFTER INSERT OR UPDATE OR DELETE ON GOODSGROUP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 135;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GOODSGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GOODSGROUPDOCDETAIL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GOODSGROUPDOCDETAIL" AFTER INSERT OR UPDATE OR DELETE ON GOODSGROUPDOCDETAIL REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 140;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GOODSGROUPDOCDETAIL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GOODSGROUPPURCHASEMODE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GOODSGROUPPURCHASEMODE" AFTER INSERT OR UPDATE OR DELETE ON GOODSGROUPPURCHASEMODE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 162;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GOODSGROUPPURCHASEMODE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GOODSOKDP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GOODSOKDP" AFTER INSERT OR UPDATE OR DELETE ON GOODSOKDP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 133;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GOODSOKDP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GOODSOKDPCOUNTRYPREF
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GOODSOKDPCOUNTRYPREF" AFTER INSERT OR UPDATE OR DELETE ON GOODSOKDPCOUNTRYPREF REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 168;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GOODSOKDPCOUNTRYPREF" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GOODSOKDPPURCHASEMODE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GOODSOKDPPURCHASEMODE" AFTER INSERT OR UPDATE OR DELETE ON GOODSOKDPPURCHASEMODE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 167;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GOODSOKDPPURCHASEMODE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GOODSOKPD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GOODSOKPD" AFTER INSERT OR UPDATE OR DELETE ON GOODSOKPD REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 134;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GOODSOKPD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GOODSOKPDCOUNTRYPREF
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GOODSOKPDCOUNTRYPREF" AFTER INSERT OR UPDATE OR DELETE ON GOODSOKPDCOUNTRYPREF REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 170;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GOODSOKPDCOUNTRYPREF" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GOODSOKPDPURCHASEMODE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GOODSOKPDPURCHASEMODE" AFTER INSERT OR UPDATE OR DELETE ON GOODSOKPDPURCHASEMODE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 169;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GOODSOKPDPURCHASEMODE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GOODSOKVED
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GOODSOKVED" AFTER INSERT OR UPDATE OR DELETE ON GOODSOKVED REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 132;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GOODSOKVED" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GOODSPRICE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GOODSPRICE" AFTER INSERT OR UPDATE OR DELETE ON GOODSPRICE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 138;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GOODSPRICE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GRANTINVESTMENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GRANTINVESTMENT" AFTER INSERT OR UPDATE OR DELETE ON GRANTINVESTMENT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 128;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GRANTINVESTMENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$GROUPPROP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$GROUPPROP" AFTER INSERT OR UPDATE OR DELETE ON GROUPPROP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 136;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$GROUPPROP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$HISTORYMODIFY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$HISTORYMODIFY" AFTER INSERT OR UPDATE OR DELETE ON HISTORYMODIFY REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 102;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$HISTORYMODIFY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$INDUSTRYCODE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$INDUSTRYCODE" AFTER INSERT OR UPDATE OR DELETE ON INDUSTRYCODE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 127;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$INDUSTRYCODE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$INSTITUTIONLINE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$INSTITUTIONLINE" AFTER INSERT OR UPDATE OR DELETE ON INSTITUTIONLINE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 129;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$INSTITUTIONLINE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$INTERBUDGET
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$INTERBUDGET" AFTER INSERT OR UPDATE OR DELETE ON INTERBUDGET REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 112;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$INTERBUDGET" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$INVOICEDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$INVOICEDOC" AFTER INSERT OR UPDATE OR DELETE ON INVOICEDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 184;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$INVOICEDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$JAVACLASS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$JAVACLASS" AFTER INSERT OR UPDATE OR DELETE ON JAVACLASS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 25;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$JAVACLASS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$KBKLINEFIT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$KBKLINEFIT" AFTER INSERT OR UPDATE OR DELETE ON KBKLINEFIT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 126;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$KBKLINEFIT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$KLADR
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$KLADR" AFTER INSERT OR UPDATE OR DELETE ON KLADR REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 387;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$KLADR" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$KLADRSTREET
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$KLADRSTREET" AFTER INSERT OR UPDATE OR DELETE ON KLADRSTREET REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 388;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$KLADRSTREET" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$LEDGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$LEDGER" AFTER INSERT OR UPDATE OR DELETE ON LEDGER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 217;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$LEDGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$LIABILITYCREDENTIAL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$LIABILITYCREDENTIAL" AFTER INSERT OR UPDATE OR DELETE ON LIABILITYCREDENTIAL REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 123;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$LIABILITYCREDENTIAL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$LIABILITYEXPENSE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$LIABILITYEXPENSE" AFTER INSERT OR UPDATE OR DELETE ON LIABILITYEXPENSE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 124;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$LIABILITYEXPENSE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$LIABILITYEXPENSE_DOCLINES
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$LIABILITYEXPENSE_DOCLINES" AFTER INSERT OR UPDATE OR DELETE ON LIABILITYEXPENSE_DOCLINES REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 125;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$LIABILITYEXPENSE_DOCLINES" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$LIABILITYGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$LIABILITYGROUP" AFTER INSERT OR UPDATE OR DELETE ON LIABILITYGROUP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 122;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$LIABILITYGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$LICTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$LICTYPE" AFTER INSERT OR UPDATE OR DELETE ON LICTYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 34;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$LICTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$MAIL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$MAIL" AFTER INSERT OR UPDATE OR DELETE ON MAIL REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 65;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$MAIL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$MAILATTACH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$MAILATTACH" AFTER INSERT OR UPDATE OR DELETE ON MAILATTACH REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 66;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$MAILATTACH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$MAILRECEIVERGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$MAILRECEIVERGROUP" AFTER INSERT OR UPDATE OR DELETE ON MAILRECEIVERGROUP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 309;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$MAILRECEIVERGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$MAILRECEIVERGROUP_RECEIVER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$MAILRECEIVERGROUP_RECEIVER" AFTER INSERT OR UPDATE OR DELETE ON MAILRECEIVERGROUP_RECEIVER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 310;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$MAILRECEIVERGROUP_RECEIVER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$MENU
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$MENU" AFTER INSERT OR UPDATE OR DELETE ON MENU REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 40;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$MENU" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$MENUITEM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$MENUITEM" AFTER INSERT OR UPDATE OR DELETE ON MENUITEM REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 41;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.MENU_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.MENU_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.MENU_ID=:old.MENU_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.MENU_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$MENUITEM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$MENUITEMWEB
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$MENUITEMWEB" AFTER INSERT OR UPDATE OR DELETE ON MENUITEMWEB REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 110;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.MENU_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.MENU_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.MENU_ID=:old.MENU_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.MENU_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$MENUITEMWEB" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$METACONSTRAINT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$METACONSTRAINT" AFTER INSERT OR UPDATE OR DELETE ON METACONSTRAINT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 92;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$METACONSTRAINT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$METAOBJECT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$METAOBJECT" AFTER INSERT OR UPDATE OR DELETE ON METAOBJECT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 93;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$METAOBJECT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$MSG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$MSG" AFTER INSERT OR UPDATE OR DELETE ON MSG REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 29;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$MSG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$MSGLINKTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$MSGLINKTYPE" AFTER INSERT OR UPDATE OR DELETE ON MSGLINKTYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 27;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$MSGLINKTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$MSGQUEUE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$MSGQUEUE" AFTER INSERT OR UPDATE OR DELETE ON MSGQUEUE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 30;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$MSGQUEUE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$MSGSITE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$MSGSITE" AFTER INSERT OR UPDATE OR DELETE ON MSGSITE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 28;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$MSGSITE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$NECESSITY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$NECESSITY" AFTER INSERT OR UPDATE OR DELETE ON NECESSITY REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 183;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$NECESSITY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$NOTICEDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$NOTICEDOC" AFTER INSERT OR UPDATE OR DELETE ON NOTICEDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 239;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$NOTICEDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$NOTICEEMAILORG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$NOTICEEMAILORG" AFTER INSERT OR UPDATE OR DELETE ON NOTICEEMAILORG REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 240;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$NOTICEEMAILORG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$NOTIFYMSG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$NOTIFYMSG" AFTER INSERT OR UPDATE OR DELETE ON NOTIFYMSG REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 106;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$NOTIFYMSG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$NOTIFYMSGEVENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$NOTIFYMSGEVENT" AFTER INSERT OR UPDATE OR DELETE ON NOTIFYMSGEVENT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 105;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$NOTIFYMSGEVENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$NOTIFYMSGGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$NOTIFYMSGGROUP" AFTER INSERT OR UPDATE OR DELETE ON NOTIFYMSGGROUP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 104;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$NOTIFYMSGGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$NOTIFYMSGRULE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$NOTIFYMSGRULE" AFTER INSERT OR UPDATE OR DELETE ON NOTIFYMSGRULE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 107;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$NOTIFYMSGRULE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$NUMGENERATOR
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$NUMGENERATOR" AFTER INSERT OR UPDATE OR DELETE ON NUMGENERATOR REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 15;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$NUMGENERATOR" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$NUMPREFIX
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$NUMPREFIX" AFTER INSERT OR UPDATE OR DELETE ON NUMPREFIX REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 88;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$NUMPREFIX" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$NUMSEQUENCE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$NUMSEQUENCE" AFTER INSERT OR UPDATE OR DELETE ON NUMSEQUENCE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 14;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$NUMSEQUENCE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$OFFERDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$OFFERDOC" AFTER INSERT OR UPDATE OR DELETE ON OFFERDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 224;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$OFFERDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$OFRREQREASON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$OFRREQREASON" AFTER INSERT OR UPDATE OR DELETE ON OFRREQREASON REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 157;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$OFRREQREASON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$OFRRETREASON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$OFRRETREASON" AFTER INSERT OR UPDATE OR DELETE ON OFRRETREASON REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 223;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$OFRRETREASON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$OIDREF
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$OIDREF" AFTER INSERT OR UPDATE OR DELETE ON OIDREF REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 77;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$OIDREF" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$OKTMO
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$OKTMO" AFTER INSERT OR UPDATE OR DELETE ON OKTMO REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 383;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$OKTMO" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$OLAPQUERY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$OLAPQUERY" AFTER INSERT OR UPDATE OR DELETE ON OLAPQUERY REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 269;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$OLAPQUERY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$OOSORGROLE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$OOSORGROLE" AFTER INSERT OR UPDATE OR DELETE ON OOSORGROLE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 151;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$OOSORGROLE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$OOS223PURCHASENOTICEINFO
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$OOS223PURCHASENOTICEINFO" AFTER INSERT OR UPDATE OR DELETE ON OOS223PURCHASENOTICEINFO REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 389;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$OOS223PURCHASENOTICEINFO" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$OOS223PURCHNOTICELOTINFO
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$OOS223PURCHNOTICELOTINFO" AFTER INSERT OR UPDATE OR DELETE ON OOS223PURCHNOTICELOTINFO REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 390;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$OOS223PURCHNOTICELOTINFO" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$OPERTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$OPERTYPE" AFTER INSERT OR UPDATE OR DELETE ON OPERTYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 16;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$OPERTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ORDERDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ORDERDOC" AFTER INSERT OR UPDATE OR DELETE ON ORDERDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 171;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, :old.DOCUMENTCLASS_ID, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, :new.DOCUMENTCLASS_ID, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID)and (:new.DOCUMENTCLASS_ID=:old.DOCUMENTCLASS_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, :old.DOCUMENTCLASS_ID, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ORDERDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ORDERSUMMARY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ORDERSUMMARY" AFTER INSERT OR UPDATE OR DELETE ON ORDERSUMMARY REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 173;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ORDERSUMMARY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ORG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ORG" AFTER INSERT OR UPDATE OR DELETE ON ORG REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 33;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.ISCONTRACTOR, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.ISCONTRACTOR, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.ISCONTRACTOR=:old.ISCONTRACTOR))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.ISCONTRACTOR, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ORG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ORGACCOUNT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ORGACCOUNT" AFTER INSERT OR UPDATE OR DELETE ON ORGACCOUNT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 38;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.ISCONTRACTOR, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.ISCONTRACTOR, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.ISCONTRACTOR=:old.ISCONTRACTOR))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.ISCONTRACTOR, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ORGACCOUNT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ORGACCTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ORGACCTYPE" AFTER INSERT OR UPDATE OR DELETE ON ORGACCTYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 37;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ORGACCTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ORGADDKPP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ORGADDKPP" AFTER INSERT OR UPDATE OR DELETE ON ORGADDKPP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 391;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ORGADDKPP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ORGCONCCONT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ORGCONCCONT" AFTER INSERT OR UPDATE OR DELETE ON ORGCONCCONT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 152;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ORGCONCCONT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ORGETP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ORGETP" AFTER INSERT OR UPDATE OR DELETE ON ORGETP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 196;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ORGETP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ORGFORM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ORGFORM" AFTER INSERT OR UPDATE OR DELETE ON ORGFORM REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 150;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ORGFORM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ORGOOS223FZUSER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ORGOOS223FZUSER" AFTER INSERT OR UPDATE OR DELETE ON ORGOOS223FZUSER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 321;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ORGOOS223FZUSER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ORGROLE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ORGROLE" AFTER INSERT OR UPDATE OR DELETE ON ORGROLE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 35;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ORGROLE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ORGSTATUS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ORGSTATUS" AFTER INSERT OR UPDATE OR DELETE ON ORGSTATUS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 143;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ORGSTATUS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ORGUNFAIR
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ORGUNFAIR" AFTER INSERT OR UPDATE OR DELETE ON ORGUNFAIR REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 144;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ORGUNFAIR" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PACKTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PACKTYPE" AFTER INSERT OR UPDATE OR DELETE ON PACKTYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 139;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PACKTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PANEL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PANEL" AFTER INSERT OR UPDATE OR DELETE ON PANEL REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 61;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PANEL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PANELITEM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PANELITEM" AFTER INSERT OR UPDATE OR DELETE ON PANELITEM REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 62;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.PANEL_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.PANEL_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.PANEL_ID=:old.PANEL_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.PANEL_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PANELITEM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PAYCONDITION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PAYCONDITION" AFTER INSERT OR UPDATE OR DELETE ON PAYCONDITION REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 182;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PAYCONDITION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PERSON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PERSON" AFTER INSERT OR UPDATE OR DELETE ON PERSON REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 103;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PERSON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PERSONAL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PERSONAL" AFTER INSERT OR UPDATE OR DELETE ON PERSONAL REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 242;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PERSONAL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLACEMENTFEATURE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLACEMENTFEATURE" AFTER INSERT OR UPDATE OR DELETE ON PLACEMENTFEATURE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 163;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLACEMENTFEATURE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLACEMENTFEATUREPM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLACEMENTFEATUREPM" AFTER INSERT OR UPDATE OR DELETE ON PLACEMENTFEATUREPM REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 164;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLACEMENTFEATUREPM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLACINGWAY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLACINGWAY" AFTER INSERT OR UPDATE OR DELETE ON PLACINGWAY REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 160;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLACINGWAY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLANDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLANDOC" AFTER INSERT OR UPDATE OR DELETE ON PLANDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 235;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLANDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLANPOSITIONCHANGEREASON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLANPOSITIONCHANGEREASON" AFTER INSERT OR UPDATE OR DELETE ON PLANPOSITIONCHANGEREASON REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 199;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLANPOSITIONCHANGEREASON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLAN2ARRANGEMENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLAN2ARRANGEMENT" AFTER INSERT OR UPDATE OR DELETE ON PLAN2ARRANGEMENT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 202;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLAN2ARRANGEMENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLAN2CHANGEREASON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLAN2CHANGEREASON" AFTER INSERT OR UPDATE OR DELETE ON PLAN2CHANGEREASON REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 212;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLAN2CHANGEREASON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLAN2DOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLAN2DOC" AFTER INSERT OR UPDATE OR DELETE ON PLAN2DOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 200;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLAN2DOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLAN2GOODS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLAN2GOODS" AFTER INSERT OR UPDATE OR DELETE ON PLAN2GOODS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 201;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLAN2GOODS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLAN2LEDGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLAN2LEDGER" AFTER INSERT OR UPDATE OR DELETE ON PLAN2LEDGER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 204;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLAN2LEDGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLAN2OOSEXTNUMBER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLAN2OOSEXTNUMBER" AFTER INSERT OR UPDATE OR DELETE ON PLAN2OOSEXTNUMBER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 211;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLAN2OOSEXTNUMBER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLAN2OOSFEATURE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLAN2OOSFEATURE" AFTER INSERT OR UPDATE OR DELETE ON PLAN2OOSFEATURE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 210;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLAN2OOSFEATURE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLAN2OOSKBK
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLAN2OOSKBK" AFTER INSERT OR UPDATE OR DELETE ON PLAN2OOSKBK REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 207;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLAN2OOSKBK" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLAN2OOSKBKYEAR
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLAN2OOSKBKYEAR" AFTER INSERT OR UPDATE OR DELETE ON PLAN2OOSKBKYEAR REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 208;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLAN2OOSKBKYEAR" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLAN2OOSOKVED
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLAN2OOSOKVED" AFTER INSERT OR UPDATE OR DELETE ON PLAN2OOSOKVED REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 206;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLAN2OOSOKVED" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLAN2OOSPOSITION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLAN2OOSPOSITION" AFTER INSERT OR UPDATE OR DELETE ON PLAN2OOSPOSITION REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 205;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLAN2OOSPOSITION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLAN2OOSPRODUCT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLAN2OOSPRODUCT" AFTER INSERT OR UPDATE OR DELETE ON PLAN2OOSPRODUCT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 209;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLAN2OOSPRODUCT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLAN3DOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLAN3DOC" AFTER INSERT OR UPDATE OR DELETE ON PLAN3DOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 252;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLAN3DOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PLAN3PURCHASEDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PLAN3PURCHASEDOC" AFTER INSERT OR UPDATE OR DELETE ON PLAN3PURCHASEDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 251;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PLAN3PURCHASEDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PREFERENCEGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PREFERENCEGROUP" AFTER INSERT OR UPDATE OR DELETE ON PREFERENCEGROUP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 165;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PREFERENCEGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PREFERENCEGROUPFEATURE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PREFERENCEGROUPFEATURE" AFTER INSERT OR UPDATE OR DELETE ON PREFERENCEGROUPFEATURE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 166;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PREFERENCEGROUPFEATURE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PROCTREE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PROCTREE" AFTER INSERT OR UPDATE OR DELETE ON PROCTREE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 26;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PROCTREE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PROCUREMENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PROCUREMENT" AFTER INSERT OR UPDATE OR DELETE ON PROCUREMENT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 401;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PROCUREMENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PROPTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PROPTYPE" AFTER INSERT OR UPDATE OR DELETE ON PROPTYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 131;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PROPTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PURCHASECARRY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PURCHASECARRY" AFTER INSERT OR UPDATE OR DELETE ON PURCHASECARRY REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 237;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PURCHASECARRY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PURCHASEMETHOD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PURCHASEMETHOD" AFTER INSERT OR UPDATE OR DELETE ON PURCHASEMETHOD REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 361;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PURCHASEMETHOD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PURCHASEMODE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PURCHASEMODE" AFTER INSERT OR UPDATE OR DELETE ON PURCHASEMODE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 159;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PURCHASEMODE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PURCHASEPLAN
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PURCHASEPLAN" AFTER INSERT OR UPDATE OR DELETE ON PURCHASEPLAN REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 236;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PURCHASEPLAN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$PURCHASEPLANDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$PURCHASEPLANDOC" AFTER INSERT OR UPDATE OR DELETE ON PURCHASEPLANDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 234;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$PURCHASEPLANDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$QUALREQ
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$QUALREQ" AFTER INSERT OR UPDATE OR DELETE ON QUALREQ REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 246;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$QUALREQ" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$RECOILDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$RECOILDOC" AFTER INSERT OR UPDATE OR DELETE ON RECOILDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 238;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$RECOILDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$REFATTACH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$REFATTACH" AFTER INSERT OR UPDATE OR DELETE ON REFATTACH REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 253;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$REFATTACH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$REFERENCECLASS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$REFERENCECLASS" AFTER INSERT OR UPDATE OR DELETE ON REFERENCECLASS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 48;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$REFERENCECLASS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$REFINANCINGRATE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$REFINANCINGRATE" AFTER INSERT OR UPDATE OR DELETE ON REFINANCINGRATE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 216;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$REFINANCINGRATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$REFUSALFACTFOUNDATION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$REFUSALFACTFOUNDATION" AFTER INSERT OR UPDATE OR DELETE ON REFUSALFACTFOUNDATION REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 181;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$REFUSALFACTFOUNDATION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$REPDOCUMENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$REPDOCUMENT" AFTER INSERT OR UPDATE OR DELETE ON REPDOCUMENT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 187;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$REPDOCUMENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$REPFIELD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$REPFIELD" AFTER INSERT OR UPDATE OR DELETE ON REPFIELD REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 57;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$REPFIELD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$REPFORM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$REPFORM" AFTER INSERT OR UPDATE OR DELETE ON REPFORM REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 56;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$REPFORM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$REPFRAGMENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$REPFRAGMENT" AFTER INSERT OR UPDATE OR DELETE ON REPFRAGMENT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 186;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$REPFRAGMENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$REPFRAGMENTCHILD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$REPFRAGMENTCHILD" AFTER INSERT OR UPDATE OR DELETE ON REPFRAGMENTCHILD REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 188;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$REPFRAGMENTCHILD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$REPORT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$REPORT" AFTER INSERT OR UPDATE OR DELETE ON REPORT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 86;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$REPORT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$REPPROFILE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$REPPROFILE" AFTER INSERT OR UPDATE OR DELETE ON REPPROFILE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 64;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$REPPROFILE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$REPSOURCE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$REPSOURCE" AFTER INSERT OR UPDATE OR DELETE ON REPSOURCE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 185;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$REPSOURCE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$REPTEMPLATEATTACH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$REPTEMPLATEATTACH" AFTER INSERT OR UPDATE OR DELETE ON REPTEMPLATEATTACH REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 189;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$REPTEMPLATEATTACH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$REQUESTDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$REQUESTDOC" AFTER INSERT OR UPDATE OR DELETE ON REQUESTDOC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 161;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.BUDGET_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.BUDGET_ID=:old.BUDGET_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.BUDGET_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$REQUESTDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$REQUIREMENTTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$REQUIREMENTTYPE" AFTER INSERT OR UPDATE OR DELETE ON REQUIREMENTTYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 306;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$REQUIREMENTTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$REQUIREMENTTYPEPM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$REQUIREMENTTYPEPM" AFTER INSERT OR UPDATE OR DELETE ON REQUIREMENTTYPEPM REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 307;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$REQUIREMENTTYPEPM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$RESERVEDBUDGETLINE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$RESERVEDBUDGETLINE" AFTER INSERT OR UPDATE OR DELETE ON RESERVEDBUDGETLINE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 172;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$RESERVEDBUDGETLINE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$RESPONSIBILITY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$RESPONSIBILITY" AFTER INSERT OR UPDATE OR DELETE ON RESPONSIBILITY REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 245;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$RESPONSIBILITY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$RNP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$RNP" AFTER INSERT OR UPDATE OR DELETE ON RNP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 153;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$RNP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$ROLEREGISTER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$ROLEREGISTER" AFTER INSERT OR UPDATE OR DELETE ON ROLEREGISTER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 89;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$ROLEREGISTER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$RPL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$RPL" AFTER INSERT OR UPDATE OR DELETE ON RPL REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 308;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$RPL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$RPLOBJECT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$RPLOBJECT" AFTER INSERT OR UPDATE OR DELETE ON RPLOBJECT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 32;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$RPLOBJECT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$RPLRULE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$RPLRULE" AFTER INSERT OR UPDATE OR DELETE ON RPLRULE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 3;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$RPLRULE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$RPLSITE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$RPLSITE" AFTER INSERT OR UPDATE OR DELETE ON RPLSITE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 4;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$RPLSITE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$RPLTABLE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$RPLTABLE" AFTER INSERT OR UPDATE OR DELETE ON RPLTABLE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 31;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$RPLTABLE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$RPLTABLEPLUGIN
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$RPLTABLEPLUGIN" AFTER INSERT OR UPDATE OR DELETE ON RPLTABLEPLUGIN REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 1;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$RPLTABLEPLUGIN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$RULEREQUISITE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$RULEREQUISITE" AFTER INSERT OR UPDATE OR DELETE ON RULEREQUISITE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 109;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$RULEREQUISITE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$RULESCRIPT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$RULESCRIPT" AFTER INSERT OR UPDATE OR DELETE ON RULESCRIPT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 111;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$RULESCRIPT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$SCHEXPDOCS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$SCHEXPDOCS" AFTER INSERT OR UPDATE OR DELETE ON SCHEXPDOCS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 76;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$SCHEXPDOCS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$SCHPLAN
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$SCHPLAN" AFTER INSERT OR UPDATE OR DELETE ON SCHPLAN REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 51;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$SCHPLAN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$SCHTASK
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$SCHTASK" AFTER INSERT OR UPDATE OR DELETE ON SCHTASK REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 50;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$SCHTASK" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$SERVERACTION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$SERVERACTION" AFTER INSERT OR UPDATE OR DELETE ON SERVERACTION REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 11;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$SERVERACTION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$SERVERERROR
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$SERVERERROR" AFTER INSERT OR UPDATE OR DELETE ON SERVERERROR REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 12;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$SERVERERROR" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$SERVERPROCESSOR
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$SERVERPROCESSOR" AFTER INSERT OR UPDATE OR DELETE ON SERVERPROCESSOR REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 10;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$SERVERPROCESSOR" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$SERVERPROVIDER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$SERVERPROVIDER" AFTER INSERT OR UPDATE OR DELETE ON SERVERPROVIDER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 9;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$SERVERPROVIDER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$SIGNEXPORTLOG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$SIGNEXPORTLOG" AFTER INSERT OR UPDATE OR DELETE ON SIGNEXPORTLOG REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 75;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$SIGNEXPORTLOG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$SIGNFORMAT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$SIGNFORMAT" AFTER INSERT OR UPDATE OR DELETE ON SIGNFORMAT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 260;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$SIGNFORMAT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$SIGNTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$SIGNTYPE" AFTER INSERT OR UPDATE OR DELETE ON SIGNTYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 261;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$SIGNTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$STATISTICSSOURCE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$STATISTICSSOURCE" AFTER INSERT OR UPDATE OR DELETE ON STATISTICSSOURCE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 190;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$STATISTICSSOURCE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$STOREDDOCUMENTS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$STOREDDOCUMENTS" AFTER INSERT OR UPDATE OR DELETE ON STOREDDOCUMENTS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 227;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$STOREDDOCUMENTS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$SUPPORTCRYPTOLIB
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$SUPPORTCRYPTOLIB" AFTER INSERT OR UPDATE OR DELETE ON SUPPORTCRYPTOLIB REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 262;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$SUPPORTCRYPTOLIB" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$SUPPORTCRYPTOLIBFORMAT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$SUPPORTCRYPTOLIBFORMAT" AFTER INSERT OR UPDATE OR DELETE ON SUPPORTCRYPTOLIBFORMAT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 264;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$SUPPORTCRYPTOLIBFORMAT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$SUPPORTCRYPTOLIBPARAM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$SUPPORTCRYPTOLIBPARAM" AFTER INSERT OR UPDATE OR DELETE ON SUPPORTCRYPTOLIBPARAM REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 263;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$SUPPORTCRYPTOLIBPARAM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$SYSEVENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$SYSEVENT" AFTER INSERT OR UPDATE OR DELETE ON SYSEVENT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 84;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$SYSEVENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$SYSPARAM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$SYSPARAM" AFTER INSERT OR UPDATE OR DELETE ON SYSPARAM REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 8;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$SYSPARAM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$SYSRIGHT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$SYSRIGHT" AFTER INSERT OR UPDATE OR DELETE ON SYSRIGHT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 46;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$SYSRIGHT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$SYSUSER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$SYSUSER" AFTER INSERT OR UPDATE OR DELETE ON SYSUSER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 7;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$SYSUSER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$TASKJOURNAL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$TASKJOURNAL" AFTER INSERT OR UPDATE OR DELETE ON TASKJOURNAL REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 44;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$TASKJOURNAL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$TENDER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$TENDER" AFTER INSERT OR UPDATE OR DELETE ON TENDER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 231;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$TENDER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$TENDERCRITERION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$TENDERCRITERION" AFTER INSERT OR UPDATE OR DELETE ON TENDERCRITERION REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 228;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$TENDERCRITERION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$TENDERCRITERIONCHILD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$TENDERCRITERIONCHILD" AFTER INSERT OR UPDATE OR DELETE ON TENDERCRITERIONCHILD REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 230;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$TENDERCRITERIONCHILD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$TENDERCRITERIONPM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$TENDERCRITERIONPM" AFTER INSERT OR UPDATE OR DELETE ON TENDERCRITERIONPM REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 229;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$TENDERCRITERIONPM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$TENDERLINE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$TENDERLINE" AFTER INSERT OR UPDATE OR DELETE ON TENDERLINE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 232;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$TENDERLINE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$TENDERLINECOMM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$TENDERLINECOMM" AFTER INSERT OR UPDATE OR DELETE ON TENDERLINECOMM REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 233;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$TENDERLINECOMM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$TERRITORY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$TERRITORY" AFTER INSERT OR UPDATE OR DELETE ON TERRITORY REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 147;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$TERRITORY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$TERTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$TERTYPE" AFTER INSERT OR UPDATE OR DELETE ON TERTYPE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 146;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$TERTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$TYPEDOCREQGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$TYPEDOCREQGROUP" AFTER INSERT OR UPDATE OR DELETE ON TYPEDOCREQGROUP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 248;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$TYPEDOCREQGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$TYPEREQCRIT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$TYPEREQCRIT" AFTER INSERT OR UPDATE OR DELETE ON TYPEREQCRIT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 249;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$TYPEREQCRIT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$UNIT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$UNIT" AFTER INSERT OR UPDATE OR DELETE ON UNIT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 130;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$UNIT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$UPDPACKAGE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$UPDPACKAGE" AFTER INSERT OR UPDATE OR DELETE ON UPDPACKAGE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 85;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$UPDPACKAGE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$USERBUDGET
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$USERBUDGET" AFTER INSERT OR UPDATE OR DELETE ON USERBUDGET REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 81;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$USERBUDGET" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$USERCERT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$USERCERT" AFTER INSERT OR UPDATE OR DELETE ON USERCERT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 74;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, :old.SYSUSER_ID, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, :new.SYSUSER_ID, 0, 0, 0, 0);    if (updating and not(1=1 and (:new.SYSUSER_ID=:old.SYSUSER_ID))) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, :old.SYSUSER_ID, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$USERCERT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$USERORG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$USERORG" AFTER INSERT OR UPDATE OR DELETE ON USERORG REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 6;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$USERORG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$USERROLE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$USERROLE" AFTER INSERT OR UPDATE OR DELETE ON USERROLE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 45;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$USERROLE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$USERSESSION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$USERSESSION" AFTER INSERT OR UPDATE OR DELETE ON USERSESSION REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 42;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$USERSESSION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$USESCRYPTOLIB
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$USESCRYPTOLIB" AFTER INSERT OR UPDATE OR DELETE ON USESCRYPTOLIB REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 265;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$USESCRYPTOLIB" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$USESCRYPTOLIBPARAM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$USESCRYPTOLIBPARAM" AFTER INSERT OR UPDATE OR DELETE ON USESCRYPTOLIBPARAM REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 266;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$USESCRYPTOLIBPARAM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$WEBSTATCACHE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$WEBSTATCACHE" AFTER INSERT OR UPDATE OR DELETE ON WEBSTATCACHE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 191;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$WEBSTATCACHE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RPL$WEBSTATCACHEVAL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."RPL$WEBSTATCACHEVAL" AFTER INSERT OR UPDATE OR DELETE ON WEBSTATCACHEVAL REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW declare ltable_id numeric(15); mutation_index numeric; begin   ltable_id := 192;  if (deleting) then     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :old.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);  else   begin     insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )       values (ltable_id, :new.ID, current_transaction_id,999999999999999, 0, 0, 0, 0, 0);    if (updating and not(1=1 )) then       insert into RPLLOG (rpltable_id, record_id, transaction_id,generation, FIELD1_VALUE, FIELD2_VALUE, FIELD3_VALUE, FIELD4_VALUE, FIELD5_VALUE )         values (ltable_id, :old.ID, current_transaction_id, 999999999999999, 0, 0, 0, 0, 0);    end if;   end;  end if;end;
/
ALTER TRIGGER "GZVLG"."RPL$WEBSTATCACHEVAL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPD_CASC_GOODSPROP_SEQORDER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."UPD_CASC_GOODSPROP_SEQORDER" 
  after update on groupprop
  for each row
  WHEN (new.seqorder<>old.seqorder or new.group_id<>old.group_id) begin
  execute immediate 'update goodsprop set group_id=' || :new.group_id
    || ', seqorder=' || :new.seqorder
    || ' where group_id=' || :old.group_id 
    || ' and seqorder=' || :old.seqorder;
end;

/
ALTER TRIGGER "GZVLG"."UPD_CASC_GOODSPROP_SEQORDER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPD_DOCATTACHEX
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."UPD_DOCATTACHEX" AFTER UPDATE ON DOCATTACHEX FOR EACH ROW
BEGIN
  update document d set d.attach_cnt = d.attach_cnt + 1 
    where d.id=:new.document_id;
  update document d set d.attach_cnt = d.attach_cnt - 1 
    where d.id=:old.document_id;
END;

/
ALTER TRIGGER "GZVLG"."UPD_DOCATTACHEX" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPD_GOODSGROUP_TREE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."UPD_GOODSGROUP_TREE" after update
 on goodsgroup referencing old as old new as new
 for each row
declare
 vtree varchar(255);
 otree varchar(255);
begin
  vtree := '/';
  begin
    select tree into vtree
      from goodsgroup_tree where group_id=:new.parent_id;
  exception
    when no_data_found then
      vtree := '/';
  end;
  vtree := vtree||:new.code||'/';
  otree := '/';
  begin
    select tree into otree
      from goodsgroup_tree where group_id=:old.parent_id;
  exception
    when no_data_found then
      otree := '/';
  end;
  otree := otree||:old.code||'/';
  FOR vr IN ( select group_id, substr(tree,length(otree)+1) as tree
   from goodsgroup_tree where tree like otree||'%')
  LOOP
    update goodsgroup_tree set tree = vtree||vr.tree where group_id = vr.group_id;
  END LOOP;
end;

/
ALTER TRIGGER "GZVLG"."UPD_GOODSGROUP_TREE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPD_ISCONTRACTOR_ORG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."UPD_ISCONTRACTOR_ORG" 
 after update on Org for each row
begin
  update OrgAccount oa set oa.IsContractor=:new.IsContractor
    where oa.ORG_ID=:new.ID and oa.IsContractor<>:new.IsContractor;
end;

/
ALTER TRIGGER "GZVLG"."UPD_ISCONTRACTOR_ORG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPD_ORGCHILD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."UPD_ORGCHILD" AFTER UPDATE
 ON org FOR EACH ROW 
DECLARE 
  topid numeric;
BEGIN
  IF (:new.parent_id IS NOT NULL) THEN
    IF (:old.parent_id IS NOT NULL) THEN
      IF (:new.parent_id <> :old.parent_id) THEN
        SELECT DISTINCT org_id INTO topid FROM orgchild 
          WHERE org_id NOT IN (SELECT child_id FROM orgchild);  
        DELETE FROM orgchild 
          WHERE org_id IN (SELECT org_id FROM orgchild WHERE child_id = :old.parent_id AND org_id <> topid)
            AND ((child_id = :new.id) OR child_id IN (SELECT child_id FROM orgchild WHERE org_id = :new.id));
        IF (:new.parent_id = topid) THEN
          DELETE FROM orgchild WHERE 
            org_id = :old.parent_id AND (child_id = :new.id OR child_id IN
              (SELECT child_id FROM orgchild WHERE org_id = :new.id));
        ELSE
          IF (:old.parent_id = topid) THEN
            INSERT INTO orgchild(org_id, child_id)
              SELECT (SELECT :new.parent_id FROM dual), child_id FROM orgchild
              WHERE org_id = :old.parent_id AND (child_id = :new.id OR child_id IN
                (SELECT child_id FROM orgchild WHERE org_id = :new.id));
          ELSE
            UPDATE orgchild SET org_id = :new.parent_id WHERE 
              org_id = :old.parent_id AND (child_id = :new.id OR child_id IN
                (SELECT child_id FROM orgchild WHERE org_id = :new.id));
          END IF;
        END IF;
        INSERT INTO orgchild(org_id, child_id)
          SELECT par.org_id, ch.child_id FROM 
           (SELECT org_id FROM orgchild WHERE child_id = :new.parent_id AND org_id <> topid) par,
           (SELECT child_id FROM orgchild WHERE org_id = :new.id UNION SELECT :new.id FROM dual) ch;
      END IF;
    ELSE
      IF (:new.parent_id <> :new.id) THEN
        INSERT INTO orgchild(org_id, child_id)
          VALUES(:new.parent_id, :new.id);
        FOR cur IN (SELECT child_id FROM orgchild
          WHERE org_id = :new.id)
        LOOP
          INSERT INTO orgchild(org_id, child_id)
            VALUES (:new.parent_id, cur.child_id);
        END LOOP;
        FOR cur IN (SELECT org_id FROM orgchild
                    WHERE child_id = :new.parent_id)
        LOOP
          INSERT INTO orgchild(org_id, child_id)
            VALUES (cur.org_id, :new.id);
          FOR cur1 IN (SELECT child_id FROM orgchild
            WHERE org_id = :new.id)
          LOOP
            INSERT INTO orgchild(org_id, child_id)
              VALUES (cur.org_id, cur1.child_id);
          END LOOP;
        END LOOP;
      END IF;
    END IF;
  ELSE
    IF (:old.parent_id IS NOT NULL) THEN
      DELETE FROM orgchild WHERE org_id = :new.id OR child_id = :new.id;
    END IF;
  END IF;
END;

/
ALTER TRIGGER "GZVLG"."UPD_ORGCHILD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPD_TER_TREE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."UPD_TER_TREE" after update
 on territory referencing old as old new as new
 for each row
declare
 vtree varchar(255);
 vpath varchar(512);
 otree varchar(255);
 opath varchar(512);
begin
  vtree := '/';
  begin
    select tree, path into vtree, vpath
      from ter_tree where ter_id=:new.parent_id;
    vpath := vpath||', '||:new.caption;
  exception
    when no_data_found then
      vtree := '/';
      vpath := :new.caption;
  end;
  vtree := vtree||:new.code||'/';
  otree := '/';
  begin
    select tree, path into otree, opath
      from ter_tree where ter_id=:old.parent_id;
    opath := opath||', '||:old.caption;
  exception
    when no_data_found then
      otree := '/';
      opath := :old.caption;
  end;
  otree := otree||:old.code||'/';
  FOR vr IN ( select ter_id, substr(tree,length(otree)+1) as tree, substr(path,length(opath)+1) as path
   from ter_tree where tree like otree||'%')
  LOOP
    update ter_tree set tree = vtree||vr.tree, path = vpath||vr.path where ter_id = vr.ter_id;
  END LOOP;
end;

/
ALTER TRIGGER "GZVLG"."UPD_TER_TREE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ABANDONEDREASON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ABANDONEDREASON" before insert or update on ABANDONEDREASON
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ABANDONEDREASON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ALTGOODSGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ALTGOODSGROUP" before insert or update on ALTGOODSGROUP
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ALTGOODSGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ALTGOODSGROUPTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ALTGOODSGROUPTYPE" before insert or update on ALTGOODSGROUPTYPE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ALTGOODSGROUPTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ANYDATA
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ANYDATA" before insert or update on ANYDATA
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ANYDATA" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_APPMODULE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_APPMODULE" before insert or update on APPMODULE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_APPMODULE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_APPOBJ
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_APPOBJ" before insert or update on APPOBJ
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_APPOBJ" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_APPOBJPROP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_APPOBJPROP" before insert or update on APPOBJPROP
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_APPOBJPROP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_APPOINTMENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_APPOINTMENT" before insert or update on APPOINTMENT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_APPOINTMENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_AUCTIONBID
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_AUCTIONBID" before insert or update on AUCTIONBID
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_AUCTIONBID" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_AUCTIONLOG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_AUCTIONLOG" before insert or update on AUCTIONLOG
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_AUCTIONLOG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_BANK
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_BANK" before insert or update on BANK
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_BANK" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_BANKGUARANTEEDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_BANKGUARANTEEDOC" before insert or update on BANKGUARANTEEDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_BANKGUARANTEEDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_BANKGUARANTEEREFDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_BANKGUARANTEEREFDOC" before insert or update on BANKGUARANTEEREFDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_BANKGUARANTEEREFDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_BANKGUARANTEEREFREASON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_BANKGUARANTEEREFREASON" before insert or update on BANKGUARANTEEREFREASON
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_BANKGUARANTEEREFREASON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_BUDGCODE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_BUDGCODE" before insert or update on BUDGCODE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_BUDGCODE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_BUDGET
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_BUDGET" before insert or update on BUDGET
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_BUDGET" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_BUDGETLINE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_BUDGETLINE" before insert or update on BUDGETLINE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_BUDGETLINE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_BUDGETSTAGE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_BUDGETSTAGE" before insert or update on BUDGETSTAGE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_BUDGETSTAGE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CACHELIST
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CACHELIST" before insert or update on CACHELIST
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CACHELIST" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CAVILDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CAVILDOC" before insert or update on CAVILDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CAVILDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CAVILTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CAVILTYPE" before insert or update on CAVILTYPE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CAVILTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CERTINTERCHANGEREQUEST
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CERTINTERCHANGEREQUEST" before insert or update on CERTINTERCHANGEREQUEST
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CERTINTERCHANGEREQUEST" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CERTREQUEST
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CERTREQUEST" before insert or update on CERTREQUEST
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CERTREQUEST" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CERTREVOKEREQUEST
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CERTREVOKEREQUEST" before insert or update on CERTREVOKEREQUEST
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CERTREVOKEREQUEST" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CLAIMDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CLAIMDOC" before insert or update on CLAIMDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CLAIMDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CLAIMPAYFACT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CLAIMPAYFACT" before insert or update on CLAIMPAYFACT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CLAIMPAYFACT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CLAIMPENALTYCHANGEDOCINFO
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CLAIMPENALTYCHANGEDOCINFO" before insert or update on CLAIMPENALTYCHANGEDOCINFO
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CLAIMPENALTYCHANGEDOCINFO" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CLASSOPER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CLASSOPER" before insert or update on CLASSOPER
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CLASSOPER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CLIENTOBJECT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CLIENTOBJECT" before insert or update on CLIENTOBJECT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CLIENTOBJECT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CLIENTOBJECTCOMMENTS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CLIENTOBJECTCOMMENTS" before insert or update on CLIENTOBJECTCOMMENTS
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CLIENTOBJECTCOMMENTS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CLNDDAY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CLNDDAY" before insert or update on CLNDDAY
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CLNDDAY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CLNDDAYTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CLNDDAYTYPE" before insert or update on CLNDDAYTYPE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CLNDDAYTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CLNDTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CLNDTYPE" before insert or update on CLNDTYPE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CLNDTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CODETYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CODETYPE" before insert or update on CODETYPE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CODETYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_COMMEMBER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_COMMEMBER" before insert or update on COMMEMBER
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_COMMEMBER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_COMMISSION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_COMMISSION" before insert or update on COMMISSION
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_COMMISSION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_COMPLAINTDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_COMPLAINTDOC" before insert or update on COMPLAINTDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_COMPLAINTDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CONFCONCLUSIONCONTRACT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CONFCONCLUSIONCONTRACT" before insert or update on CONFCONCLUSIONCONTRACT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CONFCONCLUSIONCONTRACT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CONPAYFACT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CONPAYFACT" before insert or update on CONPAYFACT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CONPAYFACT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CONSOLIDDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CONSOLIDDOC" before insert or update on CONSOLIDDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CONSOLIDDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CONSTRUCTION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CONSTRUCTION" before insert or update on CONSTRUCTION
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CONSTRUCTION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CONTRACTCARDDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CONTRACTCARDDOC" before insert or update on CONTRACTCARDDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CONTRACTCARDDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CONTRACTDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CONTRACTDOC" before insert or update on CONTRACTDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CONTRACTDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CONTRACTEXECDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CONTRACTEXECDOC" before insert or update on CONTRACTEXECDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CONTRACTEXECDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CONTRACTREASON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CONTRACTREASON" before insert or update on CONTRACTREASON
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CONTRACTREASON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CONTRACTREASON_DOCLINES
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CONTRACTREASON_DOCLINES" before insert or update on CONTRACTREASON_DOCLINES
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CONTRACTREASON_DOCLINES" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CONTRACTTEMPLATEDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CONTRACTTEMPLATEDOC" before insert or update on CONTRACTTEMPLATEDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CONTRACTTEMPLATEDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CONTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CONTYPE" before insert or update on CONTYPE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CONTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CONTYPEATTACH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CONTYPEATTACH" before insert or update on CONTYPEATTACH
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CONTYPEATTACH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_COUNTRY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_COUNTRY" before insert or update on COUNTRY
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_COUNTRY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CRLFILE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CRLFILE" before insert or update on CRLFILE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CRLFILE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CRLPOINT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CRLPOINT" before insert or update on CRLPOINT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CRLPOINT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CURHISTORY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CURHISTORY" before insert or update on CURHISTORY
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CURHISTORY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_CURRENCY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_CURRENCY" before insert or update on CURRENCY
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_CURRENCY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DATAOBJECTCHANGELOG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DATAOBJECTCHANGELOG" before insert or update on DATAOBJECTCHANGELOG
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DATAOBJECTCHANGELOG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DATASOURCE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DATASOURCE" before insert or update on DATASOURCE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DATASOURCE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DBCONNECT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DBCONNECT" before insert or update on DBCONNECT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DBCONNECT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DBCONSTRAINT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DBCONSTRAINT" before insert or update on DBCONSTRAINT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DBCONSTRAINT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DECREASON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DECREASON" before insert or update on DECREASON
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DECREASON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DELIVERYBASIS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DELIVERYBASIS" before insert or update on DELIVERYBASIS
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DELIVERYBASIS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DESCGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DESCGROUP" before insert or update on DESCGROUP
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DESCGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DESCRIPTION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DESCRIPTION" before insert or update on DESCRIPTION
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DESCRIPTION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DESCRIPTIONCACHE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DESCRIPTIONCACHE" before insert or update on DESCRIPTIONCACHE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DESCRIPTIONCACHE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DEVIATIONFACTFOUNDATION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DEVIATIONFACTFOUNDATION" before insert or update on DEVIATIONFACTFOUNDATION
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DEVIATIONFACTFOUNDATION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DIGEST
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DIGEST" before insert or update on DIGEST
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DIGEST" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DIGESTSIGN
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DIGESTSIGN" before insert or update on DIGESTSIGN
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DIGESTSIGN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DISPSTATUS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DISPSTATUS" before insert or update on DISPSTATUS
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DISPSTATUS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCACTION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCACTION" before insert or update on DOCACTION
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCACTION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCATTACH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCATTACH" before insert or update on DOCATTACH
FOR EACH ROW 
declare
  TaskJournalId number(15,0);
  RecordAction number(1,0);
begin
 if inserting then 
 begin 
   if (:new.version is null or (:new.version < 1)) then 
     :new.version := 1;
 end if; 
end; 
else 
  if (:new.version IS NULL or (:new.version <= :old.version)) then 
    :new.version := coalesce(:old.version, 0) + 1;
  end if;
 end if; 
  if inserting then 
    RecordAction := 0;
  else 
    RecordAction := 1;
  end if;
  TaskJournalId := RPLTRANSACTION.get_task_journal_id; 
  if TaskJournalId is not null then 
    insert into RplVersionLog (Ver, Num_Transaction, RplTable_Id, TaskJournal_Id, Record_Id, Record_Action) 
    values (:new.version, dbms_transaction.local_transaction_id, 49, TaskJournalId, :new.id, RecordAction); 
  end if;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCATTACH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCATTACHEX
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCATTACHEX" before insert or update on DOCATTACHEX
FOR EACH ROW 
declare
  TaskJournalId number(15,0);
  RecordAction number(1,0);
begin
 if inserting then 
 begin 
   if (:new.version is null or (:new.version < 1)) then 
     :new.version := 1;
 end if; 
end; 
else 
  if (:new.version IS NULL or (:new.version <= :old.version)) then 
    :new.version := coalesce(:old.version, 0) + 1;
  end if;
 end if; 
  if inserting then 
    RecordAction := 0;
  else 
    RecordAction := 1;
  end if;
  TaskJournalId := RPLTRANSACTION.get_task_journal_id;
  if TaskJournalId is not null then
    insert into RplVersionLog (Ver, Num_Transaction, RplTable_Id, TaskJournal_Id, Record_Id, Record_Action) 
    values (:new.version, dbms_transaction.local_transaction_id, 2, TaskJournalId, :new.id, RecordAction); 
  end if;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCATTACHEX" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCCATEGORY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCCATEGORY" before insert or update on DOCCATEGORY
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCCATEGORY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCCLASS_DISPSTATUS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCCLASS_DISPSTATUS" before insert or update on DOCCLASS_DISPSTATUS
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCCLASS_DISPSTATUS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCCOMMENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCCOMMENT" before insert or update on DOCCOMMENT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCCOMMENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCCUSTOMFIELDS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCCUSTOMFIELDS" before insert or update on DOCCUSTOMFIELDS
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCCUSTOMFIELDS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCDIGESTRULE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCDIGESTRULE" before insert or update on DOCDIGESTRULE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCDIGESTRULE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCEVENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCEVENT" before insert or update on DOCEVENT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCEVENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCEVERRLOG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCEVERRLOG" before insert or update on DOCEVERRLOG
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCEVERRLOG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCEXCHANGESCHEME
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCEXCHANGESCHEME" before insert or update on DOCEXCHANGESCHEME
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCEXCHANGESCHEME" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCFLAGCATEGORY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCFLAGCATEGORY" before insert or update on DOCFLAGCATEGORY
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCFLAGCATEGORY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCFLAGTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCFLAGTYPE" before insert or update on DOCFLAGTYPE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCFLAGTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCGROUP" before insert or update on DOCGROUP
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCREQ
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCREQ" before insert or update on DOCREQ
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCREQ" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCRETENTION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCRETENTION" before insert or update on DOCRETENTION
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCRETENTION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCRETENTIONSTATITEMS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCRETENTIONSTATITEMS" before insert or update on DOCRETENTIONSTATITEMS
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCRETENTIONSTATITEMS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCRETENTIONSTATUS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCRETENTIONSTATUS" before insert or update on DOCRETENTIONSTATUS
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCRETENTIONSTATUS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCSTATUS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCSTATUS" before insert or update on DOCSTATUS
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCSTATUS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCUMENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCUMENT" before insert or update on DOCUMENT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCUMENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCUMENTCLASS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCUMENTCLASS" before insert or update on DOCUMENTCLASS
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCUMENTCLASS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOCUMENTREPORTS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOCUMENTREPORTS" before insert or update on DOCUMENTREPORTS
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOCUMENTREPORTS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_DOMEN
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_DOMEN" before insert or update on DOMEN
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_DOMEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_EQUALITY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_EQUALITY" before insert or update on EQUALITY
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_EQUALITY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_EQUALITYCODES
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_EQUALITYCODES" before insert or update on EQUALITYCODES
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_EQUALITYCODES" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ESCHECKRULE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ESCHECKRULE" before insert or update on ESCHECKRULE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ESCHECKRULE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ESTIMATE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ESTIMATE" before insert or update on ESTIMATE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ESTIMATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ETP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ETP" before insert or update on ETP
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ETP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ETPATTACH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ETPATTACH" before insert or update on ETPATTACH
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ETPATTACH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ETPTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ETPTYPE" before insert or update on ETPTYPE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ETPTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_FACTDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_FACTDOC" before insert or update on FACTDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_FACTDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_FACTDOCTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_FACTDOCTYPE" before insert or update on FACTDOCTYPE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_FACTDOCTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_FETCHMODE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_FETCHMODE" before insert or update on FETCHMODE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_FETCHMODE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_FGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_FGROUP" before insert or update on FGROUP
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_FGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_FGROUPATTACH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_FGROUPATTACH" before insert or update on FGROUPATTACH
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_FGROUPATTACH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_FGROUPHEADER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_FGROUPHEADER" before insert or update on FGROUPHEADER
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_FGROUPHEADER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_FINSRC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_FINSRC" before insert or update on FINSRC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_FINSRC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_FINSRCSATISFY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_FINSRCSATISFY" before insert or update on FINSRCSATISFY
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_FINSRCSATISFY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_FORMATCONVERTER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_FORMATCONVERTER" before insert or update on FORMATCONVERTER
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_FORMATCONVERTER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_FUNCAT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_FUNCAT" before insert or update on FUNCAT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_FUNCAT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_FUNUNIT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_FUNUNIT" before insert or update on FUNUNIT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_FUNUNIT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GCREGISTER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GCREGISTER" before insert or update on GCREGISTER
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GCREGISTER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GOODS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GOODS" before insert or update on GOODS
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GOODS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GOODSBAN
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GOODSBAN" before insert or update on GOODSBAN
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GOODSBAN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GOODSBANGOODSOKPD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GOODSBANGOODSOKPD" before insert or update on GOODSBANGOODSOKPD
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GOODSBANGOODSOKPD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GOODSBANPURCHASEMODE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GOODSBANPURCHASEMODE" before insert or update on GOODSBANPURCHASEMODE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GOODSBANPURCHASEMODE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GOODSBRANCH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GOODSBRANCH" before insert or update on GOODSBRANCH
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GOODSBRANCH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GOODSGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GOODSGROUP" before insert or update on GOODSGROUP
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GOODSGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GOODSGROUPDOCDETAIL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GOODSGROUPDOCDETAIL" before insert or update on GOODSGROUPDOCDETAIL
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GOODSGROUPDOCDETAIL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GOODSGROUPPURCHASEMODE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GOODSGROUPPURCHASEMODE" before insert or update on GOODSGROUPPURCHASEMODE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GOODSGROUPPURCHASEMODE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GOODSOKDP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GOODSOKDP" before insert or update on GOODSOKDP
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GOODSOKDP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GOODSOKDPCOUNTRYPREF
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GOODSOKDPCOUNTRYPREF" before insert or update on GOODSOKDPCOUNTRYPREF
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GOODSOKDPCOUNTRYPREF" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GOODSOKDPPURCHASEMODE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GOODSOKDPPURCHASEMODE" before insert or update on GOODSOKDPPURCHASEMODE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GOODSOKDPPURCHASEMODE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GOODSOKPD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GOODSOKPD" before insert or update on GOODSOKPD
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GOODSOKPD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GOODSOKPDCOUNTRYPREF
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GOODSOKPDCOUNTRYPREF" before insert or update on GOODSOKPDCOUNTRYPREF
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GOODSOKPDCOUNTRYPREF" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GOODSOKPDPURCHASEMODE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GOODSOKPDPURCHASEMODE" before insert or update on GOODSOKPDPURCHASEMODE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GOODSOKPDPURCHASEMODE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GOODSOKVED
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GOODSOKVED" before insert or update on GOODSOKVED
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GOODSOKVED" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GOODSPRICE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GOODSPRICE" before insert or update on GOODSPRICE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GOODSPRICE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GRANTINVESTMENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GRANTINVESTMENT" before insert or update on GRANTINVESTMENT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GRANTINVESTMENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_GROUPPROP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_GROUPPROP" before insert or update on GROUPPROP
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_GROUPPROP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_HISTORYMODIFY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_HISTORYMODIFY" before insert or update on HISTORYMODIFY
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_HISTORYMODIFY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_INDUSTRYCODE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_INDUSTRYCODE" before insert or update on INDUSTRYCODE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_INDUSTRYCODE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_INSTITUTIONLINE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_INSTITUTIONLINE" before insert or update on INSTITUTIONLINE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_INSTITUTIONLINE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_INTERBUDGET
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_INTERBUDGET" before insert or update on INTERBUDGET
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_INTERBUDGET" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_INVOICEDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_INVOICEDOC" before insert or update on INVOICEDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_INVOICEDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_JAVACLASS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_JAVACLASS" before insert or update on JAVACLASS
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_JAVACLASS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_KBKLINEFIT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_KBKLINEFIT" before insert or update on KBKLINEFIT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_KBKLINEFIT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_KLADR
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_KLADR" before insert or update on KLADR
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_KLADR" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_KLADRSTREET
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_KLADRSTREET" before insert or update on KLADRSTREET
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_KLADRSTREET" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_LEDGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_LEDGER" before insert or update on LEDGER
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_LEDGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_LIABILITYCREDENTIAL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_LIABILITYCREDENTIAL" before insert or update on LIABILITYCREDENTIAL
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_LIABILITYCREDENTIAL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_LIABILITYEXPENSE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_LIABILITYEXPENSE" before insert or update on LIABILITYEXPENSE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_LIABILITYEXPENSE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_LIABILITYEXPENSE_DOCLINES
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_LIABILITYEXPENSE_DOCLINES" before insert or update on LIABILITYEXPENSE_DOCLINES
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_LIABILITYEXPENSE_DOCLINES" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_LIABILITYGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_LIABILITYGROUP" before insert or update on LIABILITYGROUP
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_LIABILITYGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_LICTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_LICTYPE" before insert or update on LICTYPE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_LICTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_MAIL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_MAIL" before insert or update on MAIL
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_MAIL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_MAILATTACH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_MAILATTACH" before insert or update on MAILATTACH
FOR EACH ROW 
declare
  TaskJournalId number(15,0);
  RecordAction number(1,0);
begin
 if inserting then 
 begin 
   if (:new.version is null or (:new.version < 1)) then 
     :new.version := 1;
 end if; 
end; 
else 
  if (:new.version IS NULL or (:new.version <= :old.version)) then 
    :new.version := coalesce(:old.version, 0) + 1;
  end if;
 end if; 
  if inserting then 
    RecordAction := 0; 
  else 
    RecordAction := 1; 
  end if;
  TaskJournalId := RPLTRANSACTION.get_task_journal_id; 
  if TaskJournalId is not null then 
    insert into RplVersionLog (Ver, Num_Transaction, RplTable_Id, TaskJournal_Id, Record_Id, Record_Action) 
    values (:new.version, dbms_transaction.local_transaction_id, 66, TaskJournalId, :new.id, RecordAction); 
  end if;
end;
/
ALTER TRIGGER "GZVLG"."VER_MAILATTACH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_MAILRECEIVERGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_MAILRECEIVERGROUP" before insert or update on MAILRECEIVERGROUP
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_MAILRECEIVERGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_MAILRECEIVERGROUP_RECEIVER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_MAILRECEIVERGROUP_RECEIVER" before insert or update on MAILRECEIVERGROUP_RECEIVER
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_MAILRECEIVERGROUP_RECEIVER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_MENU
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_MENU" before insert or update on MENU
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_MENU" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_MENUITEM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_MENUITEM" before insert or update on MENUITEM
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_MENUITEM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_MENUITEMWEB
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_MENUITEMWEB" before insert or update on MENUITEMWEB
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_MENUITEMWEB" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_METACONSTRAINT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_METACONSTRAINT" before insert or update on METACONSTRAINT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_METACONSTRAINT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_METAOBJECT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_METAOBJECT" before insert or update on METAOBJECT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_METAOBJECT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_MSG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_MSG" before insert or update on MSG
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_MSG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_MSGLINKTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_MSGLINKTYPE" before insert or update on MSGLINKTYPE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_MSGLINKTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_MSGQUEUE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_MSGQUEUE" before insert or update on MSGQUEUE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_MSGQUEUE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_MSGSITE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_MSGSITE" before insert or update on MSGSITE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_MSGSITE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_NECESSITY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_NECESSITY" before insert or update on NECESSITY
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_NECESSITY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_NOTICEDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_NOTICEDOC" before insert or update on NOTICEDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_NOTICEDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_NOTICEEMAILORG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_NOTICEEMAILORG" before insert or update on NOTICEEMAILORG
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_NOTICEEMAILORG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_NOTIFYMSG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_NOTIFYMSG" before insert or update on NOTIFYMSG
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_NOTIFYMSG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_NOTIFYMSGEVENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_NOTIFYMSGEVENT" before insert or update on NOTIFYMSGEVENT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_NOTIFYMSGEVENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_NOTIFYMSGGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_NOTIFYMSGGROUP" before insert or update on NOTIFYMSGGROUP
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_NOTIFYMSGGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_NOTIFYMSGRULE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_NOTIFYMSGRULE" before insert or update on NOTIFYMSGRULE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_NOTIFYMSGRULE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_NUMGENERATOR
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_NUMGENERATOR" before insert or update on NUMGENERATOR
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_NUMGENERATOR" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_NUMPREFIX
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_NUMPREFIX" before insert or update on NUMPREFIX
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_NUMPREFIX" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_NUMSEQUENCE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_NUMSEQUENCE" before insert or update on NUMSEQUENCE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_NUMSEQUENCE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_OFFERDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_OFFERDOC" before insert or update on OFFERDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_OFFERDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_OFRREQREASON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_OFRREQREASON" before insert or update on OFRREQREASON
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_OFRREQREASON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_OFRRETREASON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_OFRRETREASON" before insert or update on OFRRETREASON
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_OFRRETREASON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_OIDREF
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_OIDREF" before insert or update on OIDREF
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_OIDREF" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_OKTMO
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_OKTMO" before insert or update on OKTMO
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_OKTMO" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_OLAPQUERY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_OLAPQUERY" before insert or update on OLAPQUERY
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_OLAPQUERY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_OOSORGROLE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_OOSORGROLE" before insert or update on OOSORGROLE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_OOSORGROLE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_OOS223PURCHASENOTICEINFO
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_OOS223PURCHASENOTICEINFO" before insert or update on OOS223PURCHASENOTICEINFO
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_OOS223PURCHASENOTICEINFO" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_OOS223PURCHNOTICELOTINFO
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_OOS223PURCHNOTICELOTINFO" before insert or update on OOS223PURCHNOTICELOTINFO
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_OOS223PURCHNOTICELOTINFO" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_OPERTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_OPERTYPE" before insert or update on OPERTYPE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_OPERTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ORDERDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ORDERDOC" before insert or update on ORDERDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ORDERDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ORDERSUMMARY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ORDERSUMMARY" before insert or update on ORDERSUMMARY
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ORDERSUMMARY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ORG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ORG" before insert or update on ORG
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ORG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ORGACCOUNT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ORGACCOUNT" before insert or update on ORGACCOUNT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ORGACCOUNT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ORGACCTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ORGACCTYPE" before insert or update on ORGACCTYPE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ORGACCTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ORGADDKPP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ORGADDKPP" before insert or update on ORGADDKPP
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ORGADDKPP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ORGCONCCONT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ORGCONCCONT" before insert or update on ORGCONCCONT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ORGCONCCONT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ORGETP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ORGETP" before insert or update on ORGETP
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ORGETP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ORGFORM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ORGFORM" before insert or update on ORGFORM
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ORGFORM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ORGOOS223FZUSER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ORGOOS223FZUSER" before insert or update on ORGOOS223FZUSER
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ORGOOS223FZUSER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ORGROLE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ORGROLE" before insert or update on ORGROLE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ORGROLE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ORGSTATUS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ORGSTATUS" before insert or update on ORGSTATUS
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ORGSTATUS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ORGUNFAIR
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ORGUNFAIR" before insert or update on ORGUNFAIR
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ORGUNFAIR" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PACKTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PACKTYPE" before insert or update on PACKTYPE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PACKTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PANEL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PANEL" before insert or update on PANEL
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PANEL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PANELITEM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PANELITEM" before insert or update on PANELITEM
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PANELITEM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PAYCONDITION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PAYCONDITION" before insert or update on PAYCONDITION
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PAYCONDITION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PERSON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PERSON" before insert or update on PERSON
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PERSON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PERSONAL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PERSONAL" before insert or update on PERSONAL
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PERSONAL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLACEMENTFEATURE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLACEMENTFEATURE" before insert or update on PLACEMENTFEATURE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLACEMENTFEATURE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLACEMENTFEATUREPM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLACEMENTFEATUREPM" before insert or update on PLACEMENTFEATUREPM
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLACEMENTFEATUREPM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLACINGWAY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLACINGWAY" before insert or update on PLACINGWAY
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLACINGWAY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLANDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLANDOC" before insert or update on PLANDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLANDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLANPOSITIONCHANGEREASON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLANPOSITIONCHANGEREASON" before insert or update on PLANPOSITIONCHANGEREASON
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLANPOSITIONCHANGEREASON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLAN2ARRANGEMENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLAN2ARRANGEMENT" before insert or update on PLAN2ARRANGEMENT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLAN2ARRANGEMENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLAN2CHANGEREASON
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLAN2CHANGEREASON" before insert or update on PLAN2CHANGEREASON
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLAN2CHANGEREASON" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLAN2DOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLAN2DOC" before insert or update on PLAN2DOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLAN2DOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLAN2GOODS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLAN2GOODS" before insert or update on PLAN2GOODS
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLAN2GOODS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLAN2LEDGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLAN2LEDGER" before insert or update on PLAN2LEDGER
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLAN2LEDGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLAN2OOSEXTNUMBER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLAN2OOSEXTNUMBER" before insert or update on PLAN2OOSEXTNUMBER
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLAN2OOSEXTNUMBER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLAN2OOSFEATURE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLAN2OOSFEATURE" before insert or update on PLAN2OOSFEATURE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLAN2OOSFEATURE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLAN2OOSKBK
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLAN2OOSKBK" before insert or update on PLAN2OOSKBK
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLAN2OOSKBK" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLAN2OOSKBKYEAR
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLAN2OOSKBKYEAR" before insert or update on PLAN2OOSKBKYEAR
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLAN2OOSKBKYEAR" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLAN2OOSOKVED
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLAN2OOSOKVED" before insert or update on PLAN2OOSOKVED
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLAN2OOSOKVED" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLAN2OOSPOSITION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLAN2OOSPOSITION" before insert or update on PLAN2OOSPOSITION
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLAN2OOSPOSITION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLAN2OOSPRODUCT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLAN2OOSPRODUCT" before insert or update on PLAN2OOSPRODUCT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLAN2OOSPRODUCT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLAN3DOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLAN3DOC" before insert or update on PLAN3DOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLAN3DOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PLAN3PURCHASEDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PLAN3PURCHASEDOC" before insert or update on PLAN3PURCHASEDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PLAN3PURCHASEDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PREFERENCEGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PREFERENCEGROUP" before insert or update on PREFERENCEGROUP
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PREFERENCEGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PREFERENCEGROUPFEATURE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PREFERENCEGROUPFEATURE" before insert or update on PREFERENCEGROUPFEATURE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PREFERENCEGROUPFEATURE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PROCTREE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PROCTREE" before insert or update on PROCTREE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PROCTREE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PROCUREMENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PROCUREMENT" before insert or update on PROCUREMENT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PROCUREMENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PROPTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PROPTYPE" before insert or update on PROPTYPE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PROPTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PURCHASECARRY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PURCHASECARRY" before insert or update on PURCHASECARRY
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PURCHASECARRY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PURCHASEMETHOD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PURCHASEMETHOD" before insert or update on PURCHASEMETHOD
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PURCHASEMETHOD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PURCHASEMODE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PURCHASEMODE" before insert or update on PURCHASEMODE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PURCHASEMODE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PURCHASEPLAN
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PURCHASEPLAN" before insert or update on PURCHASEPLAN
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PURCHASEPLAN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_PURCHASEPLANDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_PURCHASEPLANDOC" before insert or update on PURCHASEPLANDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_PURCHASEPLANDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_QUALREQ
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_QUALREQ" before insert or update on QUALREQ
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_QUALREQ" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_RECOILDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_RECOILDOC" before insert or update on RECOILDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_RECOILDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_REFATTACH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_REFATTACH" before insert or update on REFATTACH
FOR EACH ROW 
declare
  TaskJournalId number(15,0);
  RecordAction number(1,0);
begin
 if inserting then 
 begin 
   if (:new.version is null or (:new.version < 1)) then 
     :new.version := 1; 
 end if; 
end; 
else 
  if (:new.version IS NULL or (:new.version <= :old.version)) then 
    :new.version := coalesce(:old.version, 0) + 1;
  end if;
 end if; 
  if inserting then 
    RecordAction := 0; 
  else 
    RecordAction := 1; 
  end if;
  TaskJournalId := RPLTRANSACTION.get_task_journal_id; 
  if TaskJournalId is not null then 
    insert into RplVersionLog (Ver, Num_Transaction, RplTable_Id, TaskJournal_Id, Record_Id, Record_Action) 
    values (:new.version, dbms_transaction.local_transaction_id, 253, TaskJournalId, :new.id, RecordAction); 
  end if;
end;
/
ALTER TRIGGER "GZVLG"."VER_REFATTACH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_REFERENCECLASS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_REFERENCECLASS" before insert or update on REFERENCECLASS
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_REFERENCECLASS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_REFINANCINGRATE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_REFINANCINGRATE" before insert or update on REFINANCINGRATE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_REFINANCINGRATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_REFUSALFACTFOUNDATION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_REFUSALFACTFOUNDATION" before insert or update on REFUSALFACTFOUNDATION
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_REFUSALFACTFOUNDATION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_REPDOCUMENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_REPDOCUMENT" before insert or update on REPDOCUMENT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_REPDOCUMENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_REPFIELD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_REPFIELD" before insert or update on REPFIELD
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_REPFIELD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_REPFORM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_REPFORM" before insert or update on REPFORM
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_REPFORM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_REPFRAGMENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_REPFRAGMENT" before insert or update on REPFRAGMENT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_REPFRAGMENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_REPFRAGMENTCHILD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_REPFRAGMENTCHILD" before insert or update on REPFRAGMENTCHILD
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_REPFRAGMENTCHILD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_REPORT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_REPORT" before insert or update on REPORT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_REPORT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_REPPROFILE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_REPPROFILE" before insert or update on REPPROFILE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_REPPROFILE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_REPSOURCE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_REPSOURCE" before insert or update on REPSOURCE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_REPSOURCE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_REPTEMPLATEATTACH
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_REPTEMPLATEATTACH" before insert or update on REPTEMPLATEATTACH
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_REPTEMPLATEATTACH" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_REQUESTDOC
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_REQUESTDOC" before insert or update on REQUESTDOC
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_REQUESTDOC" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_REQUIREMENTTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_REQUIREMENTTYPE" before insert or update on REQUIREMENTTYPE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_REQUIREMENTTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_REQUIREMENTTYPEPM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_REQUIREMENTTYPEPM" before insert or update on REQUIREMENTTYPEPM
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_REQUIREMENTTYPEPM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_RESERVEDBUDGETLINE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_RESERVEDBUDGETLINE" before insert or update on RESERVEDBUDGETLINE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_RESERVEDBUDGETLINE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_RESPONSIBILITY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_RESPONSIBILITY" before insert or update on RESPONSIBILITY
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_RESPONSIBILITY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_RNP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_RNP" before insert or update on RNP
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_RNP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_ROLEREGISTER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_ROLEREGISTER" before insert or update on ROLEREGISTER
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_ROLEREGISTER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_RPL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_RPL" before insert or update on RPL
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_RPL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_RPLOBJECT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_RPLOBJECT" before insert or update on RPLOBJECT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_RPLOBJECT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_RPLRULE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_RPLRULE" before insert or update on RPLRULE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_RPLRULE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_RPLSITE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_RPLSITE" before insert or update on RPLSITE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_RPLSITE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_RPLTABLE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_RPLTABLE" before insert or update on RPLTABLE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_RPLTABLE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_RPLTABLEPLUGIN
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_RPLTABLEPLUGIN" before insert or update on RPLTABLEPLUGIN
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_RPLTABLEPLUGIN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_RULEREQUISITE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_RULEREQUISITE" before insert or update on RULEREQUISITE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_RULEREQUISITE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_RULESCRIPT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_RULESCRIPT" before insert or update on RULESCRIPT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_RULESCRIPT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_SCHEXPDOCS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_SCHEXPDOCS" before insert or update on SCHEXPDOCS
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_SCHEXPDOCS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_SCHPLAN
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_SCHPLAN" before insert or update on SCHPLAN
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_SCHPLAN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_SCHTASK
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_SCHTASK" before insert or update on SCHTASK
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_SCHTASK" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_SERVERACTION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_SERVERACTION" before insert or update on SERVERACTION
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_SERVERACTION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_SERVERERROR
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_SERVERERROR" before insert or update on SERVERERROR
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_SERVERERROR" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_SERVERPROCESSOR
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_SERVERPROCESSOR" before insert or update on SERVERPROCESSOR
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_SERVERPROCESSOR" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_SERVERPROVIDER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_SERVERPROVIDER" before insert or update on SERVERPROVIDER
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_SERVERPROVIDER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_SIGNEXPORTLOG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_SIGNEXPORTLOG" before insert or update on SIGNEXPORTLOG
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_SIGNEXPORTLOG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_SIGNFORMAT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_SIGNFORMAT" before insert or update on SIGNFORMAT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_SIGNFORMAT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_SIGNTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_SIGNTYPE" before insert or update on SIGNTYPE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_SIGNTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_STATISTICSSOURCE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_STATISTICSSOURCE" before insert or update on STATISTICSSOURCE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_STATISTICSSOURCE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_STOREDDOCUMENTS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_STOREDDOCUMENTS" before insert or update on STOREDDOCUMENTS
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_STOREDDOCUMENTS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_SUPPORTCRYPTOLIB
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_SUPPORTCRYPTOLIB" before insert or update on SUPPORTCRYPTOLIB
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_SUPPORTCRYPTOLIB" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_SUPPORTCRYPTOLIBFORMAT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_SUPPORTCRYPTOLIBFORMAT" before insert or update on SUPPORTCRYPTOLIBFORMAT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_SUPPORTCRYPTOLIBFORMAT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_SUPPORTCRYPTOLIBPARAM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_SUPPORTCRYPTOLIBPARAM" before insert or update on SUPPORTCRYPTOLIBPARAM
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_SUPPORTCRYPTOLIBPARAM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_SYSEVENT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_SYSEVENT" before insert or update on SYSEVENT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_SYSEVENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_SYSPARAM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_SYSPARAM" before insert or update on SYSPARAM
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_SYSPARAM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_SYSRIGHT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_SYSRIGHT" before insert or update on SYSRIGHT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_SYSRIGHT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_SYSUSER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_SYSUSER" before insert or update on SYSUSER
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_SYSUSER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_TASKJOURNAL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_TASKJOURNAL" before insert or update on TASKJOURNAL
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_TASKJOURNAL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_TENDER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_TENDER" before insert or update on TENDER
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_TENDER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_TENDERCRITERION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_TENDERCRITERION" before insert or update on TENDERCRITERION
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_TENDERCRITERION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_TENDERCRITERIONCHILD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_TENDERCRITERIONCHILD" before insert or update on TENDERCRITERIONCHILD
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_TENDERCRITERIONCHILD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_TENDERCRITERIONPM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_TENDERCRITERIONPM" before insert or update on TENDERCRITERIONPM
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_TENDERCRITERIONPM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_TENDERLINE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_TENDERLINE" before insert or update on TENDERLINE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_TENDERLINE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_TENDERLINECOMM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_TENDERLINECOMM" before insert or update on TENDERLINECOMM
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_TENDERLINECOMM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_TERRITORY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_TERRITORY" before insert or update on TERRITORY
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_TERRITORY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_TERTYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_TERTYPE" before insert or update on TERTYPE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_TERTYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_TYPEDOCREQGROUP
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_TYPEDOCREQGROUP" before insert or update on TYPEDOCREQGROUP
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_TYPEDOCREQGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_TYPEREQCRIT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_TYPEREQCRIT" before insert or update on TYPEREQCRIT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_TYPEREQCRIT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_UNIT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_UNIT" before insert or update on UNIT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_UNIT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_UPDPACKAGE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_UPDPACKAGE" before insert or update on UPDPACKAGE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_UPDPACKAGE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_USERBUDGET
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_USERBUDGET" before insert or update on USERBUDGET
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_USERBUDGET" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_USERCERT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_USERCERT" before insert or update on USERCERT
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_USERCERT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_USERORG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_USERORG" before insert or update on USERORG
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_USERORG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_USERROLE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_USERROLE" before insert or update on USERROLE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_USERROLE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_USERSESSION
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_USERSESSION" before insert or update on USERSESSION
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_USERSESSION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_USESCRYPTOLIB
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_USESCRYPTOLIB" before insert or update on USESCRYPTOLIB
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_USESCRYPTOLIB" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_USESCRYPTOLIBPARAM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_USESCRYPTOLIBPARAM" before insert or update on USESCRYPTOLIBPARAM
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_USESCRYPTOLIBPARAM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_WEBSTATCACHE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_WEBSTATCACHE" before insert or update on WEBSTATCACHE
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_WEBSTATCACHE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VER_WEBSTATCACHEVAL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GZVLG"."VER_WEBSTATCACHEVAL" before insert or update on WEBSTATCACHEVAL
FOR EACH ROW  WHEN (new.version IS NULL or (new.version <= old.version)) begin
    :new.version := coalesce(:old.version, 0) + 1;
end;
/
ALTER TRIGGER "GZVLG"."VER_WEBSTATCACHEVAL" ENABLE;
