CREATE GLOBAL TEMPORARY TABLE NT1_P_Expr_Bounds (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    VAL VARCHAR(20)
);

CREATE GLOBAL TEMPORARY TABLE NT2_P_Expr_Bounds (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    VAL VARCHAR(20)
);

CREATE GLOBAL TEMPORARY TABLE NT1_MULTUNION_NT2_P_Expr_Bounds (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    VAL VARCHAR(20)
);

CREATE PROCEDURE P_Expr_Bounds
AS
  DECLARE reslt INTEGER = 0; 
  /* TYPE nested_typ IS TABLE OF varchar2(20); */
  /* nt1 nested_typ := nested_typ('альфа','бета','гамма'); */
  /* nt2 nested_typ := nested_typ('бета','гамма','альфа'); */
  DECLARE i_FOR1 INTEGER;
  DECLARE j_FOR1 varchar(20);
BEGIN
   INSERT INTO NT1_P_Expr_Bounds(VAL) VALUES ('alfa');
   INSERT INTO NT1_P_Expr_Bounds(VAL) VALUES ('betta');
   INSERT INTO NT1_P_Expr_Bounds(VAL) VALUES ('gamma');
   INSERT INTO NT2_P_Expr_Bounds(VAL) VALUES ('betta');
   INSERT INTO NT2_P_Expr_Bounds(VAL) VALUES ('gamma');
   INSERT INTO NT2_P_Expr_Bounds(VAL) VALUES ('alfa');
   INSERT INTO NT1_MULTUNION_NT2_P_Expr_Bounds (VAL)
   SELECT VAL FROM NT1_P_Expr_Bounds UNION ALL SELECT VAL FROM NT2_P_Expr_Bounds;
   FOR SELECT ID, VAL FROM NT1_MULTUNION_NT2_P_Expr_Bounds
   ORDER BY ID ASC
   INTO :i_FOR1, :j_FOR1
   DO
   BEGIN
     reslt = :reslt + i_FOR1; 
   END
END; 