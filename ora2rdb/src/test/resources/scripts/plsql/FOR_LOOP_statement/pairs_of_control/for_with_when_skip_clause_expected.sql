/* Процедура */
CREATE GLOBAL TEMPORARY TABLE VEC_P_For_With_When (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VAL VARCHAR(15)
);

CREATE PROCEDURE P_For_With_When
AS
  /* TYPE nesttabl_t IS TABLE OF VARCHAR2(15); */
   /* vec nesttabl_t := nesttabl_t('John', 'Mary', 'Alberto', 'Juanita'); */
   DECLARE summa INTEGER = 0;
   DECLARE i_FOR1 INTEGER;
   DECLARE j_FOR1 VARCHAR(15);
BEGIN
   INSERT INTO VEC_P_For_With_When(VAL) VALUES ('John');
   INSERT INTO VEC_P_For_With_When(VAL) VALUES ('Mary');
   INSERT INTO VEC_P_For_With_When(VAL) VALUES ('Alberto');
   INSERT INTO VEC_P_For_With_When(VAL) VALUES ('Juanita');
   FOR SELECT ID, VAL FROM VEC_P_For_With_When
   ORDER BY ID ASC
   INTO :i_FOR1, :j_FOR1
   DO
   BEGIN
     IF (NOT(i_FOR1 != 2)) THEN CONTINUE;
     summa = :summa + i_FOR1; 
   END
END;

/* Функция */
CREATE GLOBAL TEMPORARY TABLE VEC_F_For_With_When (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VAL VARCHAR(15)
);

CREATE FUNCTION F_For_With_When
RETURNS VARCHAR(100)
AS
   /* TYPE nesttabl_t IS TABLE OF VARCHAR2(15); */
   /* vec nesttabl_t := nesttabl_t('John', 'Mary', 'Alberto', 'Juanita'); */
   DECLARE summa INTEGER = 0;
   DECLARE i_FOR1 INTEGER;
   DECLARE j_FOR1 VARCHAR(15);
BEGIN
   INSERT INTO VEC_F_For_With_When(VAL) VALUES ('John');
   INSERT INTO VEC_F_For_With_When(VAL) VALUES ('Mary');
   INSERT INTO VEC_F_For_With_When(VAL) VALUES ('Alberto');
   INSERT INTO VEC_F_For_With_When(VAL) VALUES ('Juanita');
   FOR SELECT ID, VAL FROM VEC_F_For_With_When
   ORDER BY ID ASC
   INTO :i_FOR1, :j_FOR1
   DO
   BEGIN
     IF (NOT(i_FOR1 != 2)) THEN CONTINUE;
     summa = :summa + i_FOR1; 
   END
END;

/* Пакет */
CREATE GLOBAL TEMPORARY TABLE VEC_Pack_For_With_When_PF_For_With_When (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VAL VARCHAR(15)
);

CREATE GLOBAL TEMPORARY TABLE VEC_Pack_For_With_When_PP_For_With_When (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VAL VARCHAR(15)
);

CREATE OR ALTER PACKAGE Pack_For_With_When
AS BEGIN
   FUNCTION PF_For_With_When
   RETURNS VARCHAR(100);
   PROCEDURE PP_For_With_When; 
END; 

/* Тело пакета */
RECREATE PACKAGE BODY Pack_For_With_When
AS BEGIN
   FUNCTION PF_For_With_When
   RETURNS VARCHAR(100)
   AS
     /* TYPE nesttabl_t IS TABLE OF VARCHAR2(15); */
     /* vec nesttabl_t := nesttabl_t('John', 'Mary', 'Alberto', 'Juanita'); */
     DECLARE summa INTEGER = 0;
     DECLARE i_FOR1 INTEGER;
     DECLARE j_FOR1 VARCHAR(15);
   BEGIN
     INSERT INTO VEC_Pack_For_With_When_PF_For_With_When(VAL) VALUES ('John');
     INSERT INTO VEC_Pack_For_With_When_PF_For_With_When(VAL) VALUES ('Mary');
     INSERT INTO VEC_Pack_For_With_When_PF_For_With_When(VAL) VALUES ('Alberto');
     INSERT INTO VEC_Pack_For_With_When_PF_For_With_When(VAL) VALUES ('Juanita');
     FOR SELECT ID, VAL FROM VEC_Pack_For_With_When_PF_For_With_When
     ORDER BY ID ASC
     INTO :i_FOR1, :j_FOR1
     DO
     BEGIN
       IF (NOT(i_FOR1 != 2)) THEN CONTINUE;
       summa = :summa + i_FOR1; 
     END
     RETURN summa;
   END

   PROCEDURE PP_For_With_When
   AS
     /* TYPE nesttabl_t IS TABLE OF VARCHAR2(15); */
     /* vec nesttabl_t := nesttabl_t('John', 'Mary', 'Alberto', 'Juanita'); */
     DECLARE summa INTEGER = 0;
     DECLARE i_FOR1 INTEGER;
     DECLARE j_FOR1 VARCHAR(15);
   BEGIN
     INSERT INTO VEC_Pack_For_With_When_PP_For_With_When(VAL) VALUES ('John');
     INSERT INTO VEC_Pack_For_With_When_PP_For_With_When(VAL) VALUES ('Mary');
     INSERT INTO VEC_Pack_For_With_When_PP_For_With_When(VAL) VALUES ('Alberto');
     INSERT INTO VEC_Pack_For_With_When_PP_For_With_When(VAL) VALUES ('Juanita');
     FOR SELECT ID, VAL FROM VEC_Pack_For_With_When_PP_For_With_When
     ORDER BY ID ASC
     INTO :i_FOR1, :j_FOR1
     DO
     BEGIN
       IF (NOT(i_FOR1 != 2)) THEN CONTINUE;
       summa = :summa + i_FOR1; 
     END
   END  
END;  

/* Триггер DML */
CREATE GLOBAL TEMPORARY TABLE VEC_T_For_With_When (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VAL VARCHAR(15)
);

CREATE OR ALTER TRIGGER T_For_With_When
  AFTER INSERT 
  ON students
AS
   /* TYPE nesttabl_t IS TABLE OF VARCHAR2(15); */
   /* vec nesttabl_t := nesttabl_t('John', 'Mary', 'Alberto', 'Juanita'); */
   DECLARE summa INTEGER = 0;
   DECLARE i_FOR1 INTEGER;
   DECLARE j_FOR1 VARCHAR(15);
BEGIN
   INSERT INTO VEC_T_For_With_When(VAL) VALUES ('John');
   INSERT INTO VEC_T_For_With_When(VAL) VALUES ('Mary');
   INSERT INTO VEC_T_For_With_When(VAL) VALUES ('Alberto');
   INSERT INTO VEC_T_For_With_When(VAL) VALUES ('Juanita');
   FOR SELECT ID, VAL FROM VEC_T_For_With_When
   ORDER BY ID ASC
   INTO :i_FOR1, :j_FOR1
   DO
   BEGIN
     IF (NOT(i_FOR1 != 2)) THEN CONTINUE;
     summa = :summa + i_FOR1; 
   END
END;

/* Анонимный блок */
CREATE GLOBAL TEMPORARY TABLE VEC_NestTable_1 (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VAL VARCHAR(15)
);

EXECUTE BLOCK 
AS
   /* TYPE nesttabl_t IS TABLE OF VARCHAR2(15); */
   /* vec nesttabl_t := nesttabl_t('John', 'Mary', 'Alberto', 'Juanita'); */
   DECLARE summa INTEGER = 0;
   DECLARE i_FOR1 INTEGER;
   DECLARE j_FOR1 VARCHAR(15);
BEGIN
   INSERT INTO VEC_NestTable_1(VAL) VALUES ('John');
   INSERT INTO VEC_NestTable_1(VAL) VALUES ('Mary');
   INSERT INTO VEC_NestTable_1(VAL) VALUES ('Alberto');
   INSERT INTO VEC_NestTable_1(VAL) VALUES ('Juanita');
   FOR SELECT ID, VAL FROM VEC_NestTable_1
   ORDER BY ID ASC
   INTO :i_FOR1, :j_FOR1
   DO
   BEGIN
     IF (NOT(i_FOR1 != 2)) THEN CONTINUE;
     summa = :summa + i_FOR1; 
   END
END;


