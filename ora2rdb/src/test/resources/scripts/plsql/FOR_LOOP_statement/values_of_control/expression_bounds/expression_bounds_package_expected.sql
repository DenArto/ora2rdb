CREATE GLOBAL TEMPORARY TABLE NT1_Pack_Expr_Bounds_PF_Expr_Bounds (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    VAL VARCHAR(20)
);

CREATE GLOBAL TEMPORARY TABLE NT2_Pack_Expr_Bounds_PF_Expr_Bounds (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    VAL VARCHAR(20)
);

CREATE GLOBAL TEMPORARY TABLE NT1_MULTUNION_NT2_Pack_Expr_Bounds_PF_Expr_Bounds (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    VAL VARCHAR(20)
);

CREATE GLOBAL TEMPORARY TABLE NT1_Pack_Expr_Bounds_PP_Expr_Bounds (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    VAL VARCHAR(20)
);

CREATE GLOBAL TEMPORARY TABLE NT2_Pack_Expr_Bounds_PP_Expr_Bounds (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    VAL VARCHAR(20)
);

CREATE GLOBAL TEMPORARY TABLE NT1_MULTUNION_NT2_Pack_Expr_Bounds_PP_Expr_Bounds (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    VAL VARCHAR(20)
);

CREATE OR ALTER PACKAGE Pack_Expr_Bounds
AS BEGIN 
   FUNCTION PF_Expr_Bounds
   RETURNS varchar(100);
   PROCEDURE PP_Expr_Bounds; 
END; 

RECREATE PACKAGE BODY Pack_Expr_Bounds
AS BEGIN
   FUNCTION PF_Expr_Bounds
   RETURNS varchar(100)
   AS
     DECLARE reslt varchar(100) = ''; 
     /* TYPE nested_typ IS TABLE OF varchar2(20); */
     /* nt1 nested_typ := nested_typ('альфа','бета','гамма'); */
     /* nt2 nested_typ := nested_typ('бета','гамма','альфа'); */
     DECLARE i_FOR1 VARCHAR(20);
   BEGIN
     INSERT INTO NT1_Pack_Expr_Bounds_PF_Expr_Bounds(VAL) VALUES ('alfa');
     INSERT INTO NT1_Pack_Expr_Bounds_PF_Expr_Bounds(VAL) VALUES ('betta');
     INSERT INTO NT1_Pack_Expr_Bounds_PF_Expr_Bounds(VAL) VALUES ('gamma');
     INSERT INTO NT2_Pack_Expr_Bounds_PF_Expr_Bounds(VAL) VALUES ('betta');
     INSERT INTO NT2_Pack_Expr_Bounds_PF_Expr_Bounds(VAL) VALUES ('gamma');
     INSERT INTO NT2_Pack_Expr_Bounds_PF_Expr_Bounds(VAL) VALUES ('alfa');
     INSERT INTO NT1_MULTUNION_NT2_Pack_Expr_Bounds_PF_Expr_Bounds (VAL)
     SELECT VAL FROM NT1_Pack_Expr_Bounds_PF_Expr_Bounds UNION ALL SELECT VAL FROM NT2_Pack_Expr_Bounds_PF_Expr_Bounds;
     FOR SELECT VAL FROM NT1_MULTUNION_NT2_Pack_Expr_Bounds_PF_Expr_Bounds
     ORDER BY ID ASC
     INTO :i_FOR1
     DO
     BEGIN
       reslt = :reslt || i_FOR1; 
     END
     RETURN reslt;
   END

   PROCEDURE PP_Expr_Bounds
   AS
     DECLARE reslt varchar(100) = ''; 
     /* TYPE nested_typ IS TABLE OF varchar2(20); */
     /* nt1 nested_typ := nested_typ('альфа','бета','гамма'); */
     /* nt2 nested_typ := nested_typ('бета','гамма','альфа'); */
     DECLARE i_FOR1 VARCHAR(20);
   BEGIN
     INSERT INTO NT1_Pack_Expr_Bounds_PP_Expr_Bounds(VAL) VALUES ('alfa');
     INSERT INTO NT1_Pack_Expr_Bounds_PP_Expr_Bounds(VAL) VALUES ('betta');
     INSERT INTO NT1_Pack_Expr_Bounds_PP_Expr_Bounds(VAL) VALUES ('gamma');
     INSERT INTO NT2_Pack_Expr_Bounds_PP_Expr_Bounds(VAL) VALUES ('betta');
     INSERT INTO NT2_Pack_Expr_Bounds_PP_Expr_Bounds(VAL) VALUES ('gamma');
     INSERT INTO NT2_Pack_Expr_Bounds_PP_Expr_Bounds(VAL) VALUES ('alfa');
     INSERT INTO NT1_MULTUNION_NT2_Pack_Expr_Bounds_PP_Expr_Bounds (VAL)
     SELECT VAL FROM NT1_Pack_Expr_Bounds_PP_Expr_Bounds UNION ALL SELECT VAL FROM NT2_Pack_Expr_Bounds_PP_Expr_Bounds;
     FOR SELECT VAL FROM NT1_MULTUNION_NT2_Pack_Expr_Bounds_PP_Expr_Bounds
     ORDER BY ID ASC
     INTO :i_FOR1
     DO
     BEGIN
       reslt = :reslt || i_FOR1; 
     END
   END
END; 