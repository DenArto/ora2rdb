/* Процедура */
CREATE GLOBAL TEMPORARY TABLE VEC1_P_Few_Fors (
    K INTEGER,
    VAL INTEGER,
    CONSTRAINT PK_P_Few_Fors  PRIMARY KEY (K)
);

CREATE GLOBAL TEMPORARY TABLE VEC2_P_Few_Fors (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VAL VARCHAR(15)
);

CREATE PROCEDURE P_Few_Fors
AS
  /* TYPE intvec_t IS TABLE OF PLS_INTEGER INDEX BY PLS_INTEGER; */
  /* vec1 intvec_t := intvec_t(3 => 10, 1 => 11, 100 => 34); */
  /* TYPE varray_t IS VARRAY(4) OF VARCHAR2(15); */
  /* vec2 varray_t := varray_t('John', 'Mary', 'Alberto', 'Juanita'); */
  DECLARE i_FOR1 INTEGER;
  DECLARE i_FOR2 INTEGER;
BEGIN
  UPDATE OR INSERT INTO VEC1_P_Few_Fors VALUES (3, 10);
  UPDATE OR INSERT INTO VEC1_P_Few_Fors VALUES (1, 11);
  UPDATE OR INSERT INTO VEC1_P_Few_Fors VALUES (100, 34);
  INSERT INTO VEC2_P_Few_Fors(VAL) VALUES ('John');
  INSERT INTO VEC2_P_Few_Fors(VAL) VALUES ('Mary');
  INSERT INTO VEC2_P_Few_Fors(VAL) VALUES ('Alberto');
  INSERT INTO VEC2_P_Few_Fors(VAL) VALUES ('Juanita');
  FOR SELECT K FROM VEC1_P_Few_Fors
  ORDER BY K ASC
  INTO :i_FOR1
  DO
  BEGIN
  END
  FOR SELECT ID FROM VEC2_P_Few_Fors
  ORDER BY ID ASC
  INTO :i_FOR2
  DO
  BEGIN
  END
END; 

/* Функция */
CREATE GLOBAL TEMPORARY TABLE VEC1_F_Few_Fors (
    K INTEGER,
    VAL INTEGER,
    CONSTRAINT PK_F_Few_Fors  PRIMARY KEY (K)
);

CREATE GLOBAL TEMPORARY TABLE VEC2_F_Few_Fors (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VAL VARCHAR(15)
);

CREATE FUNCTION F_Few_Fors
RETURNS INTEGER
AS
  /* TYPE intvec_t IS TABLE OF PLS_INTEGER INDEX BY PLS_INTEGER; */
  /* vec1 intvec_t := intvec_t(3 => 10, 1 => 11, 100 => 34); */
  /* TYPE varray_t IS VARRAY(4) OF VARCHAR2(15); */
  /* vec2 varray_t := varray_t('John', 'Mary', 'Alberto', 'Juanita'); */
  DECLARE i_FOR1 INTEGER;
  DECLARE i_FOR2 INTEGER;
BEGIN
  UPDATE OR INSERT INTO VEC1_F_Few_Fors VALUES (3, 10);
  UPDATE OR INSERT INTO VEC1_F_Few_Fors VALUES (1, 11);
  UPDATE OR INSERT INTO VEC1_F_Few_Fors VALUES (100, 34);
  INSERT INTO VEC2_F_Few_Fors(VAL) VALUES ('John');
  INSERT INTO VEC2_F_Few_Fors(VAL) VALUES ('Mary');
  INSERT INTO VEC2_F_Few_Fors(VAL) VALUES ('Alberto');
  INSERT INTO VEC2_F_Few_Fors(VAL) VALUES ('Juanita');
  FOR SELECT K FROM VEC1_F_Few_Fors
  ORDER BY K ASC
  INTO :i_FOR1
  DO
  BEGIN
  END
  FOR SELECT ID FROM VEC2_F_Few_Fors
  ORDER BY ID ASC
  INTO :i_FOR2
  DO
  BEGIN
  END
  RETURN 0;
END; 

/* Пакет */
CREATE GLOBAL TEMPORARY TABLE VEC1_Pack_Few_Fors_PF_Few_Fors (
    K INTEGER,
    VAL INTEGER,
    CONSTRAINT PK_VEC1_Pack_Few_Fors_PF_Few_Fors  PRIMARY KEY (K)
);

CREATE GLOBAL TEMPORARY TABLE VEC2_Pack_Few_Fors_PF_Few_Fors (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VAL VARCHAR(15)
);

CREATE GLOBAL TEMPORARY TABLE VEC1_Pack_Few_Fors_PP_Few_Fors (
    K INTEGER,
    VAL INTEGER,
    CONSTRAINT PK_VEC1_Pack_Few_Fors_PP_Few_Fors PRIMARY KEY (K)
);

CREATE GLOBAL TEMPORARY TABLE VEC2_Pack_Few_Fors_PP_Few_Fors (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VAL VARCHAR(15)
);


CREATE OR ALTER PACKAGE Pack_Few_Fors
AS BEGIN
   FUNCTION PF_Few_Fors
   RETURNS INTEGER;
   PROCEDURE PP_Few_Fors; 
END; 

/* Тело пакета */
RECREATE PACKAGE BODY Pack_Few_Fors
AS BEGIN
   FUNCTION PF_Few_Fors
   RETURNS INTEGER
   AS
     /* TYPE intvec_t IS TABLE OF PLS_INTEGER INDEX BY PLS_INTEGER; */
     /* vec1 intvec_t := intvec_t(3 => 10, 1 => 11, 100 => 34); */
     /* TYPE varray_t IS VARRAY(4) OF VARCHAR2(15); */
     /* vec2 varray_t := varray_t('John', 'Mary', 'Alberto', 'Juanita'); */
     DECLARE i_FOR1 INTEGER;
     DECLARE i_FOR2 INTEGER;
   BEGIN
     UPDATE OR INSERT INTO VEC1_Pack_Few_Fors_PF_Few_Fors VALUES (3, 10);
     UPDATE OR INSERT INTO VEC1_Pack_Few_Fors_PF_Few_Fors VALUES (1, 11);
     UPDATE OR INSERT INTO VEC1_Pack_Few_Fors_PF_Few_Fors VALUES (100, 34);
     INSERT INTO VEC2_Pack_Few_Fors_PF_Few_Fors(VAL) VALUES ('John');
     INSERT INTO VEC2_Pack_Few_Fors_PF_Few_Fors(VAL) VALUES ('Mary');
     INSERT INTO VEC2_Pack_Few_Fors_PF_Few_Fors(VAL) VALUES ('Alberto');
     INSERT INTO VEC2_Pack_Few_Fors_PF_Few_Fors(VAL) VALUES ('Juanita');
     FOR SELECT K FROM VEC1_Pack_Few_Fors_PF_Few_Fors
     ORDER BY K ASC
     INTO :i_FOR1
     DO
     BEGIN
     END
     FOR SELECT ID FROM VEC2_Pack_Few_Fors_PF_Few_Fors
     ORDER BY ID ASC
     INTO :i_FOR2
     DO
     BEGIN
     END
     RETURN 0;
   END

   PROCEDURE PP_Few_Fors
   AS
     /* TYPE intvec_t IS TABLE OF PLS_INTEGER INDEX BY PLS_INTEGER; */
     /* vec1 intvec_t := intvec_t(3 => 10, 1 => 11, 100 => 34); */
     /* TYPE varray_t IS VARRAY(4) OF VARCHAR2(15); */
     /* vec2 varray_t := varray_t('John', 'Mary', 'Alberto', 'Juanita'); */
     DECLARE i_FOR1 INTEGER;
     DECLARE i_FOR2 INTEGER;
   BEGIN
     UPDATE OR INSERT INTO VEC1_Pack_Few_Fors_PP_Few_Fors VALUES (3, 10);
     UPDATE OR INSERT INTO VEC1_Pack_Few_Fors_PP_Few_Fors VALUES (1, 11);
     UPDATE OR INSERT INTO VEC1_Pack_Few_Fors_PP_Few_Fors VALUES (100, 34);
     INSERT INTO VEC2_Pack_Few_Fors_PP_Few_Fors(VAL) VALUES ('John');
     INSERT INTO VEC2_Pack_Few_Fors_PP_Few_Fors(VAL) VALUES ('Mary');
     INSERT INTO VEC2_Pack_Few_Fors_PP_Few_Fors(VAL) VALUES ('Alberto');
     INSERT INTO VEC2_Pack_Few_Fors_PP_Few_Fors(VAL) VALUES ('Juanita');
     FOR SELECT K FROM VEC1_Pack_Few_Fors_PP_Few_Fors
     ORDER BY K ASC
     INTO :i_FOR1
     DO
     BEGIN
     END
     FOR SELECT ID FROM VEC2_Pack_Few_Fors_PP_Few_Fors
     ORDER BY ID ASC
     INTO :i_FOR2
     DO
     BEGIN
     END
   END
END; 

/* Триггер DML */
CREATE GLOBAL TEMPORARY TABLE VEC1_T_Few_Fors (
    K INTEGER,
    VAL INTEGER,
    CONSTRAINT PK_VEC1_T_Few_Fors PRIMARY KEY (K)
);

CREATE GLOBAL TEMPORARY TABLE VEC2_T_Few_Fors (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VAL VARCHAR(15)
);

CREATE OR ALTER TRIGGER T_Few_Fors
  AFTER INSERT 
  ON students
AS
  /* TYPE intvec_t IS TABLE OF PLS_INTEGER INDEX BY PLS_INTEGER; */
  /* vec1 intvec_t := intvec_t(3 => 10, 1 => 11, 100 => 34); */
  /* TYPE varray_t IS VARRAY(4) OF VARCHAR2(15); */
  /* vec2 varray_t := varray_t('John', 'Mary', 'Alberto', 'Juanita'); */
  DECLARE i_FOR1 INTEGER;
  DECLARE i_FOR2 INTEGER;
BEGIN
  UPDATE OR INSERT INTO VEC1_T_Few_Fors VALUES (3, 10);
  UPDATE OR INSERT INTO VEC1_T_Few_Fors VALUES (1, 11);
  UPDATE OR INSERT INTO VEC1_T_Few_Fors VALUES (100, 34);
  INSERT INTO VEC2_T_Few_Fors(VAL) VALUES ('John');
  INSERT INTO VEC2_T_Few_Fors(VAL) VALUES ('Mary');
  INSERT INTO VEC2_T_Few_Fors(VAL) VALUES ('Alberto');
  INSERT INTO VEC2_T_Few_Fors(VAL) VALUES ('Juanita');
  FOR SELECT K FROM VEC1_T_Few_Fors
  ORDER BY K ASC
  INTO :i_FOR1
  DO
  BEGIN
  END
  FOR SELECT ID FROM VEC2_T_Few_Fors
  ORDER BY ID ASC
  INTO :i_FOR2
  DO
  BEGIN
  END
END;

/* Анонимный блок */
CREATE GLOBAL TEMPORARY TABLE VEC1_AssArr_1 (
    K INTEGER,
    VAL INTEGER,
    CONSTRAINT PK_VEC1_AssArr_1 PRIMARY KEY (K)
);

CREATE GLOBAL TEMPORARY TABLE VEC2_Varray_1 (
    ID  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VAL VARCHAR(15)
);

EXECUTE BLOCK 
AS
   /* TYPE intvec_t IS TABLE OF PLS_INTEGER INDEX BY PLS_INTEGER; */
   /* vec1 intvec_t := intvec_t(3 => 10, 1 => 11, 100 => 34); */
   /* TYPE varray_t IS VARRAY(4) OF VARCHAR2(15); */
   /* vec2 varray_t := varray_t('John', 'Mary', 'Alberto', 'Juanita'); */
   DECLARE i_FOR1 INTEGER;
   DECLARE i_FOR2 INTEGER;
BEGIN
   UPDATE OR INSERT INTO VEC1_AssArr_1 VALUES (3, 10);
   UPDATE OR INSERT INTO VEC1_AssArr_1 VALUES (1, 11);
   UPDATE OR INSERT INTO VEC1_AssArr_1 VALUES (100, 34);
   INSERT INTO VEC2_Varray_1(VAL) VALUES ('John');
   INSERT INTO VEC2_Varray_1(VAL) VALUES ('Mary');
   INSERT INTO VEC2_Varray_1(VAL) VALUES ('Alberto');
   INSERT INTO VEC2_Varray_1(VAL) VALUES ('Juanita');
   FOR SELECT K FROM VEC1_AssArr_1
   ORDER BY K ASC
   INTO :i_FOR1
   DO
   BEGIN
   END
   FOR SELECT ID FROM VEC2_Varray_1
   ORDER BY ID ASC
   INTO :i_FOR2
   DO
   BEGIN
   END
END;


